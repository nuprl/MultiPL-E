language: java
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a<b) \n            if (b<c) \n                return\
    \ (b-c)>=(a-b);\n            else \n                return (a-c)>=(b-b);\n   \
    \     else if (b<a) \n            if (a<c) \n                return (a-c)>=(b-b);\n\
    \            else \n                return (b-c)>=(a-b);\n        else \n    \
    \        if (a<c) \n                return (b-c)>=(a-b);\n            else \n\
    \                return (a-c)>=(b-b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdxv8yi5.java:37)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean ret = true;\n        if (((b - a) * (b - c)) <= 0)\n\
    \            return ret;\n        if (((c - a) * (c - b)) <= 0)\n            return\
    \ ret;\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp319mhp04.java:28)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long angle1 = Math.toDegrees(Math.atan2(a - b, c - a));\n\
    \        long angle2 = Math.toDegrees(Math.atan2(b, a));\n        return angle1\
    \ < angle2 || angle2 < angle1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbhrnr2m_.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long angle1 = Math.toDegrees(Math.atan2(a - b,\
    \ c - a));\n                                    ^\n/tmp/tmpbhrnr2m_.java:20: error:\
    \ incompatible types: possible lossy conversion from double to long\n        long\
    \ angle2 = Math.toDegrees(Math.atan2(b, a));\n                               \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(Math.atan2(c, b) - Math.atan2(a, b)) < 0.00001;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpipg04hg0.java:22)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long deltaA = Math.abs(b - c);\n        long deltaB = Math.abs(a\
    \ - c);\n        long deltaC = Math.abs(b - a);\n        if (deltaA == 0 || deltaB\
    \ == 0 || deltaC == 0) {\n            return false;\n        }\n        if (deltaA\
    \ > deltaB && deltaA > deltaC) {\n            return true;\n        }\n      \
    \  if (deltaB > deltaC) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpauhye4s9.java:35)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if(b==0)\n            return c==0;\n        if(Math.abs(a-b)<Math.abs(c-b))\n\
    \            return c>b;\n        else\n            return a>c;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqyj12q7.java:27)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if((a>b) && (b>c)) {\n            return true;\n        }\
    \ else if((a>b) && (a>c)) {\n            return true;\n        } else if((b>a)\
    \ && (b>c)) {\n            return true;\n        } else if((c>a) && (c>b)) {\n\
    \            return true;\n        } else if((a>b) && (a>c)) {\n            return\
    \ true;\n        } else if((b<a) && (b>c)) {\n            return true;\n     \
    \   } else if((c<a) && (c>b)) {\n            return true;\n        } else {\n\
    \            return false;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ba3788y.java:39)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a1, b1, c1, a2, b2, c2;\n        a1 = Math.min(a, b);\n\
    \        b1 = Math.max(a, b);\n        c1 = Math.min(c, b);\n        a2 = Math.min(c,\
    \ c);\n        b2 = Math.max(c, c);\n        c2 = Math.min(a, b);\n        if\
    \ (a2 > b2 && a2 > c2)\n            return true;\n        if (b2 > a2 && b2 >\
    \ c2)\n            return true;\n        if (c2 > a2 && c2 > b2)\n           \
    \ return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqa5ks9iz.java:35)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean result = false;\n        if (a == b || a == c ||\
    \ b == c) {\n            result = true;\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxwvckc28.java:26)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (b > c && b > a) return true;\n        if (c > a && c\
    \ > b) return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rtn0fpz.java:25)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean ret = false;\n        long ac = a + c;\n        long\
    \ bc = b + c;\n        long ac2 = ac * ac;\n        long bc2 = bc * bc;\n    \
    \    long ab = b * b;\n        long ac3 = ac2 * ac;\n        long bc3 = bc2 *\
    \ bc;\n        long abc3 = abc * abc;\n        long ac4 = ac2 * b;\n        long\
    \ bc4 = bc2 * a;\n        long abc4 = abc2 * c;\n        long ac5 = ac3 * b;\n\
    \        long bc5 = bc3 * a;\n        long abc5 = abc3 * c;\n        long ac6\
    \ = ac3 * c;\n        long bc6 = bc3 * b;\n        long abc6 = abc3 * a;\n   \
    \     long ac7 = ac4 * b;\n        long bc7 = bc4 * a;\n        long abc7 = abc4\
    \ * c;\n        long ac8 = ac4 * c;\n        long bc8 = bc4 * b;\n        long\
    \ abc8 = abc4 * a;\n        long ac9 = ac5 * b;\n        long bc9 = bc5 * a;\n\
    \        long abc9 = abc5 * c;\n        long ac10 = ac5 * c;\n        long bc10\
    \ = bc5 * b;\n        long abc10 = abc5 * a;\n        long ac11 = ac6 * b;\n \
    \       long bc11 = bc6 * a;\n        long abc11 = abc6 * c;\n        long ac12\
    \ = ac6 * c;\n        long bc12 = bc6 * b;\n        long abc12 = abc6 * a;\n \
    \       long ac13 = ac7 * b;\n        long bc13 = bc7 * a;\n        long abc13\
    \ = abc7 * c;\n        long ac14 = ac7 * c;\n        long bc14 = bc7 * b;\n  \
    \      long abc14 = abc7 * a;\n        long ac15 = ac8 * b;\n        long bc15\
    \ = bc8 * a;\n        long abc15 = abc8 * c;\n        long ac16 = ac8 * c;\n \
    \       long bc16 = bc8 * b;\n        long abc16 = abc8 * a;\n        long ac17\
    \ = ac9 * b;\n        long bc17 = bc9 * a;\n        long abc17 = abc9 * c;\n \
    \       long ac18 = ac9 * c;\n        long bc18 = bc9 * b;\n        long abc18\
    \ = abc9 * a;\n        long ac19 = ac10 * b;\n        long bc19 = bc10 * a;\n\
    \        long abc19 = abc10 * c;\n        long ac20 = ac10 * c;\n        long\
    \ bc20 = bc10 * b;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgos165hb.java:27: error: cannot find symbol\n        long abc3\
    \ = abc * abc;\n                    ^\n  symbol:   variable abc\n  location: class\
    \ Problem\n/tmp/tmpgos165hb.java:27: error: cannot find symbol\n        long abc3\
    \ = abc * abc;\n                          ^\n  symbol:   variable abc\n  location:\
    \ class Problem\n/tmp/tmpgos165hb.java:30: error: cannot find symbol\n       \
    \ long abc4 = abc2 * c;\n                    ^\n  symbol:   variable abc2\n  location:\
    \ class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        long[] arr = new long[3];\n\
    \        long side1 = (long)Math.sqrt(a*a + b*b);\n        long side2 = (long)\
    \ Math.sqrt(c*c + a*a);\n        long side3 = (long) Math.sqrt(b*b + c*c);\n \
    \       long side4 = side1 + side2 + side3;\n        arr[0]= side1;\n        arr[1]=\
    \ side2;\n        arr[2]= side3;\n        long sum = 0;\n        for(int i = 1;\
    \ i < arr.length; i++){\n            sum += arr[i];\n            if(sum == side4){\n\
    \                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxccvjtsp.java:38)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((b - a) * (c - b) == (c-a) * (b-a)) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpij4sb_f4.java:26)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long s1 = Math.abs(a), s2 = Math.abs(b), s3 = Math.abs(c);\n\
    \        return (((s1*s2) - (s1*s3)) <= (s1*s3)*((s2/s1) + (s3/s1)));\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsqm63qlj.java:24)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long rad = a * Math.PI / 180;\n        long deg = (long)\
    \ Math.sin(rad);\n        long rad_2 = b * Math.PI / 180;\n        long deg_2\
    \ = (long)Math.sin(rad_2);\n        long rad_3 = c * Math.PI / 180;\n        long\
    \ deg_3 = (long)Math.sin(rad_3);\n        if (Math.abs(deg_3 - deg_2) < 0.0001)\
    \ {\n            deg = (long)Math.sin(deg_3);\n            return deg == rad_2;\n\
    \        } else {\n            deg = (long)Math.sin(deg_2) - Math.sin(deg_3);\n\
    \            return deg == rad_3;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps3_u6toi.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long rad = a * Math.PI / 180;\n               \
    \                ^\n/tmp/tmps3_u6toi.java:21: error: incompatible types: possible\
    \ lossy conversion from double to long\n        long rad_2 = b * Math.PI / 180;\n\
    \                                 ^\n/tmp/tmps3_u6toi.java:23: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long rad_3 = c\
    \ * Math.PI / 180;\n                                 ^\n/tmp/tmps3_u6toi.java:29:\
    \ error: incompatible types: possible lossy conversion from double to long\n \
    \           deg = (long)Math.sin(deg_2) - Math.sin(deg_3);\n                 \
    \                       ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Return true if a + b + c is odd.\n        return ((a +\
    \ b + c) % 2) == 1;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmv39m32g.java:23)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long abc = Math.abs(a + b + c);\n        long bca = Math.abs(b\
    \ + c + a);\n        long cab = Math.abs(c + a + b);\n        long aac = Math.abs(a\
    \ + a + c);\n        return abc == bca && abc == cab && abc == aac;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqi8jllzu.java:26)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = b - a; long ac = c - a; long bc = c - b;\n    \
    \    // the difference of the two adjacent sides is the hypotenuse\n        long\
    \ hypotenuse = Math.sqrt(ab * ab + ac * ac);\n        long adjacentSideA = ab\
    \ + ac > 0 ? ab : 0;\n        long adjacentSideB = ab + bc > 0 ? bc : 0;\n   \
    \     long adjacentSideC = ac + bc > 0 ? ac : 0;\n        // the difference of\
    \ the two adjacent sides is also the area of parallelogram.\n        long areaOfParallellogram\
    \ = hypotenuse * adjacentSideA * adjacentSideB;\n        long isRightAngle = Math.abs(b\
    \ - c) == hypotenuse && Math.abs(a - c) == adjacentSideA * adjacentSideC * isSame;\n\
    \        return isRightAngle;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsgzx08te.java:21: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long hypotenuse = Math.sqrt(ab * ab + ac * ac);\n\
    \                                   ^\n/tmp/tmpsgzx08te.java:27: error: cannot\
    \ find symbol\n        long isRightAngle = Math.abs(b - c) == hypotenuse && Math.abs(a\
    \ - c) == adjacentSideA * adjacentSideC * isSame;\n                          \
    \                                                                            \
    \          ^\n  symbol:   variable isSame\n  location: class Problem\n/tmp/tmpsgzx08te.java:28:\
    \ error: incompatible types: long cannot be converted to boolean\n        return\
    \ isRightAngle;\n               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((LongMath.gcd(a, LongMath.gcd(b, c))) == 1)\n       \
    \     return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6d9m5u1g.java:19: error: cannot find symbol\n        if ((LongMath.gcd(a,\
    \ LongMath.gcd(b, c))) == 1)\n             ^\n  symbol:   variable LongMath\n\
    \  location: class Problem\n/tmp/tmp6d9m5u1g.java:19: error: cannot find symbol\n\
    \        if ((LongMath.gcd(a, LongMath.gcd(b, c))) == 1)\n                   \
    \          ^\n  symbol:   variable LongMath\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      long ab = a - b;\n      long ac = c - a;\n      long bc = b\
    \ - c;\n      long abc = ab - bc;\n      long acb = ac - ab;\n      long bca =\
    \ bc - ab;\n      long abcd = abc + acb;\n      if (abcd == 0) return false;\n\
    \      long r = bca / abcd;\n      if (Math.abs(r) == 1) return true;\n      if\
    \ (r > 0 || Math.abs(abcd - r) == 1) return false;\n      return true;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgtkfbpht.java:34)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        int a1 = Math.abs(a);\n        int b1 = Math.abs(b);\n  \
    \      int c1 = Math.abs(c);\n        int temp = (int) (Math.sqrt(a1 * b1 + c1));\n\
    \        if (a1 == b1) {\n            if ((b == 0) || (b == c)) {\n          \
    \      return true;\n            }\n            if ((a == 0) || (a == c)) {\n\
    \                return true;\n            }\n            if ((temp % 2) == 0)\
    \ {\n                return false;\n            }\n            if ((temp % 2)\
    \ == 1) {\n                return true;\n            }\n        }\n        if\
    \ (b1 == c1) {\n            if ((b == 0) || (b == c)) {\n                return\
    \ true;\n            }\n            if ((a == 0) || (a == c)) {\n            \
    \    return true;\n            }\n            if ((temp % 2) == 0) {\n       \
    \         return true;\n            }\n            if ((temp % 2) == 1) {\n  \
    \              return false;\n            }\n        }\n        if (c1 == a1)\
    \ {\n            if ((b == 0) || (b == c)) {\n                return true;\n \
    \           }\n            if ((a == 0) || (a == c)) {\n                return\
    \ true;\n            }\n            if ((temp % 2) == 0) {\n                return\
    \ false;\n            }\n            if ((temp % 2) == 1) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1j3z_10v.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int a1 = Math.abs(a);\n                         ^\n\
    /tmp/tmp1j3z_10v.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int b1 = Math.abs(b);\n                         ^\n\
    /tmp/tmp1j3z_10v.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int c1 = Math.abs(c);\n                         ^\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        \n        \n        if (a == Long.MIN_VALUE || b == Long.MIN_VALUE\
    \ || c == Long.MIN_VALUE) {\n            \n            return false;\n       \
    \ }\n        long temp;\n        boolean right = false;\n        boolean counter\
    \ = false;\n        \n        if (a * a + b * b == c * c) {\n            return\
    \ true;\n        }\n        \n        if (a * a + b * b < c * c) {\n         \
    \   temp = a - b;\n            temp = temp * temp;\n            temp = temp +\
    \ c;\n            if (temp < 0) {\n                right = true;\n           \
    \ } else {\n                right = false;\n            }\n        } else if (a\
    \ * a + c * c < b * b) {\n            temp = b - c;\n            temp = temp *\
    \ temp;\n            temp = temp + a;\n            if (temp < 0) {\n         \
    \       right = true;\n            } else {\n                right = false;\n\
    \            }\n        } else {\n            temp = c - a;\n            temp\
    \ = temp * temp;\n            temp = temp + b;\n            if (temp < 0) {\n\
    \                right = true;\n            } else {\n                right =\
    \ false;\n            }\n        }\n        return right;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4lyg3mgh.java:66)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((b - a) * (b - c) >= 0)\n            return false;\n\
    \        else if ((a - b) * (c - b) >= 0)\n            return false;\n       \
    \ else if ((b - a) * (c - b) >= 0)\n            return false;\n        else return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxp523c4.java:28)\n"
  stdout: ''
  timestamp: 1660011213
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code goes here\n        boolean aRight = a == (Math.sqrt(a\
    \ * a + b * b));\n        boolean bRight = b == (Math.sqrt(a * a + c * c));\n\
    \        boolean cRight = a == (Math.sqrt(b * b + c * c));\n        if ((aRight\
    \ && bRight && cRight) || (!aRight && !bRight && !cRight)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5bm59lsn.java:30)\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here.\n        if (b > a && b > c) {\n\
    \            if (a == 0 || a == c || a == (b - c))\n                return true;\n\
    \            else\n                return false;\n        }\n\n        else if\
    \ (b > c && c > a) {\n            if (b == 0 || b == c || b == (b - a))\n    \
    \            return true;\n            else\n                return false;\n \
    \       }\n        else if (b > a && c > b) {\n            if (c == 0 || c ==\
    \ a || c == (b - a))\n                return true;\n            else\n       \
    \         return false;\n        }\n        else if (c > a && c > b) {\n     \
    \       if (a == 0 || a == c || a == (b - c))\n                return true;\n\
    \            else\n                return false;\n        }\n        else if (a\
    \ == 0 || a == b || a == c)\n            return true;\n        else\n        \
    \    return false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyp25t1nv.java:51)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.abs(b - a) >= (Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2)) / 2.0))\n            && (Math.abs(b - c) >= (Math.sqrt(Math.pow(b, 2) +\
    \ Math.pow(c, 2)) / 2.0))\n            && (Math.abs(a - c) >= (Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2)) / 2.0))\n            && ((b + c) - (a + b) * ((b + c) -\
    \ (a + b)) / 2 >= 0));\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ggm03sc.java:25)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2) - Math.pow(c,\
    \ 2)) != 0))\n            return false;\n        else\n            return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig13ww12.java:27)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // write your logic here\n        return (a+b>c && a+c>b\
    \ && b+c>a) ? true : false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lu2ezke.java:26)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(b - a, 2) <= Math.pow(c, 2);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyye8hur.java:23)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        long l1 = Math.abs(a), l2 = Math.abs(b),\
    \ l3 = Math.abs(c);\n        long ab = (l1-l2+l3) / 2;\n        long ac = ab/2;\n\
    \        long bc = ac*ac-l3*bc;\n        long bd = ab/2;\n        return (Math.sqrt(bc)*Math.sqrt(bc)-Math.sqrt(bd)*Math.sqrt(bd))\
    \ > 0;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjgf9sgaz.java:23: error: variable bc might not have been initialized\n\
    \        long bc = ac*ac-l3*bc;\n                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean x = a + b + c < 0;\n        return x != (a == b &&\
    \ b == c && a == -c);\n    }\n    public static void main(String[] args) {\n \
    \   assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80f2lxql.java:23)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long abc = Math.pow(a, 2) + Math.pow(b, 2);\n        long\
    \ acb = Math.pow(c, 2) + Math.pow(a, 2);\n        return abc > acb;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcwofk30d.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long abc = Math.pow(a, 2) + Math.pow(b, 2);\n \
    \                                 ^\n/tmp/tmpcwofk30d.java:20: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long acb = Math.pow(c,\
    \ 2) + Math.pow(a, 2);\n                                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a + b + c) == 0)\n            return false;\n      \
    \  if ((a * b) == 0)\n            return false;\n        if ((b * c) == 0)\n \
    \           return false;\n        if ((a * b * c) == 0)\n            return false;\n\
    \        long d = Math.sqrt((a + b) * (a + b) + (c * b) + (c * b));\n        long\
    \ e = Math.sqrt((b * c) * (b * c) + (a * a) + (d * b));\n        if (e == 0)\n\
    \            return true;\n        if (d < e * 0.5)\n            return true;\n\
    \        else\n            return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyrwqiny.java:27: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long d = Math.sqrt((a + b) * (a + b) + (c * b)\
    \ + (c * b));\n                          ^\n/tmp/tmpmyrwqiny.java:28: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long e = Math.sqrt((b\
    \ * c) * (b * c) + (a * a) + (d * b));\n                          ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long x = (a + b + c) % 4; // sum of the three sides\n   \
    \     return ((b * c) % 4 - (a * c) % 4 == 0) && ((b * c) % 4 - ((a + b) * c)\
    \ % 4 == 0);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzqs0dyv5.java:23)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long deltaA = b - a;\n        long deltaB = b - c;\n    \
    \    long deltaC - deltaB;\n        long deltaC = a;\n        long deltaA = a;\n\
    \        long deltaB = b;\n        return deltaA < deltaB && deltaB < deltaC &&\
    \ deltaC >= 0;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo4tj949a.java:21: error: ';' expected\n        long deltaC - deltaB;\n\
    \                   ^\n/tmp/tmpo4tj949a.java:21: error: not a statement\n    \
    \    long deltaC - deltaB;\n                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long angle = (long) Math.acos((c * c - b * b) / (2 * c *\
    \ b));\n        if ((b * b * angle) > 0)\n            return true;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjtvoozyz.java:26)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(b - c) == Math.abs(a - b) || Math.abs(b -\
    \ c) == 90;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ujooqq7.java:23)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      long[] sides = { a, b, c };\n      long[] sumOfAngles = new\
    \ long[sides.length];\n      Arrays.fill(sumOfAngles, 0l);\n      for (long s\
    \ : sides) {\n        double angle = Math.toDegrees(Math.atan(s / Math.sqrt(3)\
    \ / 2));\n        sumOfAngles[sides.length - 1 - Integer.parseInt(String.valueOf(angle))]\
    \ += s;\n      }\n      return sumOfAngles[0] == sumOfAngles[1] && sumOfAngles[1]\
    \ == sumOfAngles[2];\n    }\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"40.89339464913091\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.rightAngleTriangle(tmpgosj4e6e.java:24)\n\tat Problem.main(tmpgosj4e6e.java:29)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Calculate the three sides and the area of the triangle.\n\
    \        long s = (a + b + c) / 2;\n        long area = (Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))) / 2;\n        if (area <= 0)\n            return false;\n\
    \        // If the triangle is right angled return true\n        if (Math.abs(area\
    \ - Math.sqrt(a * b * c)) > 0.01) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9at8ud7v.java:21: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long area = (Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))) / 2;\n                                                           \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (b * b) - 4 * a * c >= 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilkco297.java:22)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (Math.sqrt(a * b * c) <= Math.toRadians(3)) {\n      \
    \      return true;\n        } else {\n            return false;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_jthi_c9.java:26)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = (a+b+c)/2;\n        long side2 = (a-c+b)/2;\n\
    \        long side3 = (b-a+c)/2;\n        return !(side1+side2+side3) == (side1-side2-side3)\
    \ >= 0;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrg801in.java:22: error: bad operand type long for unary operator\
    \ '!'\n        return !(side1+side2+side3) == (side1-side2-side3) >= 0;\n    \
    \           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a + b > c || c + b > a || a + c > b || b + c > a) {\n\
    \            return false;\n        } else {\n            return true;\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9ys6w_u.java:26)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return sidesAngle(a, b, c) == 180 || sidesAngle(a, b, c)\
    \ == 90;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4kpgk23w.java:19: error: cannot find symbol\n        return sidesAngle(a,\
    \ b, c) == 180 || sidesAngle(a, b, c) == 90;\n               ^\n  symbol:   method\
    \ sidesAngle(long,long,long)\n  location: class Problem\n/tmp/tmp4kpgk23w.java:19:\
    \ error: cannot find symbol\n        return sidesAngle(a, b, c) == 180 || sidesAngle(a,\
    \ b, c) == 90;\n                                             ^\n  symbol:   method\
    \ sidesAngle(long,long,long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long discriminant = b * b - 4 * a * c;\n        if (discriminant\
    \ < 0) {\n            return false;\n        }\n        double a1 = Math.sqrt((Math.pow(b,2)\
    \ + 4 * a * c) / 2);\n        double a2 = Math.sqrt((Math.pow(b,2) - 4 * a * c)\
    \ / 2);\n        double a3 = Math.sqrt((Math.pow(b,2) - 4 * a * c) / 2);\n   \
    \     if ((Math.pow(a1,2) > Math.pow(a2,2))) {\n            return true;\n   \
    \     }\n        if ((Math.pow(a1,2) > Math.pow(a3,2))) {\n            return\
    \ false;\n        }\n        if ((Math.pow(a2,2) > Math.pow(a3,2))) {\n      \
    \      return true;\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08tz5bjs.java:38)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.sqrt((a * a) + (b * b)) - (Math.sqrt((a * a)\
    \ + (c * c)))) <= 0.0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmhnxbpom.java:19: error: ')' expected\n        return ((Math.sqrt((a\
    \ * a) + (b * b)) - (Math.sqrt((a * a) + (c * c)))) <= 0.0;\n                \
    \                                                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011214
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long d = (b - c);\n        long p = (a + b + c);\n      \
    \  long q = (b + c + a);\n        long r = (c + a + b);\n        \n        if\
    \ (((p*q) - (r*p)) > 0) {\n            // a = p, b = q, c = r\n            return\
    \ true;\n        }\n        if (((p*r) - (q*p)) > 0) {\n            // a = p,\
    \ b = r, c = q\n            return true;\n        }\n        if (((p*q) - (r*p))\
    \ < 0) {\n            // a = q, b = p, c = r\n            return true;\n     \
    \   }\n        if (((p*r) - (q*p)) < 0) {\n            // a = r, b = q, c = p\n\
    \            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdcfr5qpn.java:43)\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long abSq = a*a;\n        long bcSq = b*b;\n        long\
    \ acSq = c*c;\n        long s = acSq + bcSq - abSq;\n        if (s >= 0) {\n \
    \           long root = Math.sqrt(s);\n            long root1 = root*root;\n \
    \           long root2 = root1*root;\n            long root3 = root2*root;\n \
    \           if (a == root3 && b == root1 && c == root2) {\n                return\
    \ true;\n            }\n            if (b == root3 && c == root1 && a == root2)\
    \ {\n                return true;\n            }\n            if (c == root3 &&\
    \ a == root1 && b == root2) {\n                return true;\n            }\n \
    \       }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ox23p1g.java:24: error: incompatible types: possible lossy conversion\
    \ from double to long\n            long root = Math.sqrt(s);\n               \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        int aSqr = intMath.pow(a, 2);\n        int bSqr = intMath.pow(b,\
    \ 2);\n        int cSqr = intMath.pow(c, 2);\n        int sum = a + b + c;\n \
    \       int sumSqrA = intMath.pow(sum, 2);\n        int sumSqrB = intMath.pow(sum,\
    \ 2);\n        int sumSqrC = intMath.pow(sum, 2);\n        int ninety = 90 * 90;\n\
    \        return (aSqr + bSqr + cSqr) == (sumSqrA + sumSqrB + sumSqrC + ninety)\n\
    \                && (aSqr + bSqr + cSqr <= sumSqrA || sumSqrA <= aSqr + ninety\n\
    \                        || aSqr + cSqr <= sumSqrB || sumSqrB <= aSqr + ninety\n\
    \                        || sumSqrC <= aSqr + ninety);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyvyt610c.java:19: error: cannot find symbol\n        int aSqr =\
    \ intMath.pow(a, 2);\n                   ^\n  symbol:   variable intMath\n  location:\
    \ class Problem\n/tmp/tmpyvyt610c.java:20: error: cannot find symbol\n       \
    \ int bSqr = intMath.pow(b, 2);\n                   ^\n  symbol:   variable intMath\n\
    \  location: class Problem\n/tmp/tmpyvyt610c.java:21: error: cannot find symbol\n\
    \        int cSqr = intMath.pow(c, 2);\n                   ^\n  symbol:   variable\
    \ intMath\n  location: class Problem\n/tmp/tmpyvyt610c.java:22: error: incompatible\
    \ types: possible lossy conversion from long to int\n        int sum = a + b +\
    \ c;\n                        ^\n/tmp/tmpyvyt610c.java:23: error: cannot find\
    \ symbol\n        int sumSqrA = intMath.pow(sum, 2);\n                      ^\n\
    \  symbol:   variable intMath\n  location: class Problem\n/tmp/tmpyvyt610c.java:24:\
    \ error: cannot find symbol\n        int sumSqrB = intMath.pow(sum, 2);\n    \
    \                  ^\n  symbol:   variable intMath\n  location: class Problem\n\
    /tmp/tmpyvyt610c.java:25: error: cannot find symbol\n        int sumSqrC = intMath.pow(sum,\
    \ 2);\n                      ^\n  symbol:   variable intMath\n  location: class\
    \ Problem\n7 errors\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double d = ((b * b) - (4 * a * c));\n        double d1 =\
    \ Math.abs(d / Math.sqrt(a * a * a - 4 * a * b));\n        return d1 >= 0.0d &&\
    \ d1 < 1.0d;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpirbr9v02.java:24)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long delta = Math.abs(a - b) * Math.sqrt(Math.abs(a * a +\
    \ b * b));\n        if (delta > c * c)\n            return false;\n        long\
    \ angle1 = (long) Math.sqrt((a + b) * (a + b + c) * (c + a) * (c + a + b) * (b\
    \ + c + a));\n        long angle2 = (long) Math.sqrt((a + c) * (a + b + c) * (c\
    \ + b) * (c + a + b) * (b + c + a));\n        long angle = angle1;\n        if\
    \ (angle1 < angle2) {\n            angle += 360;\n        }\n        boolean isRightAngle\
    \ = Math.abs(a - angle) == Math.abs(b - angle);\n        return isRightAngle;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppw5lks22.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long delta = Math.abs(a - b) * Math.sqrt(Math.abs(a\
    \ * a + b * b));\n                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        if((a == b && b == c) ||\
    \ (a == c && b == c) || (a == c && c == b)) {\n            return true;\n    \
    \    }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vowyuqi.java:26)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Check that the arguments are valid\n        if (a == Long.MIN_VALUE\
    \ || b == Long.MIN_VALUE || c == Long.MIN_VALUE) {\n            return false;\n\
    \        }\n        // Check that the sides are all positive\n        if (a <\
    \ 0 || b < 0 || c < 0) {\n            return false;\n        }\n        // Get\
    \ the side's lengths\n        long aSideLength = a.longValue();\n        long\
    \ bSideLength = b.longValue();\n        long cSideLength = c.longValue();\n  \
    \      if (aSideLength * bSideLength * cSideLength >= Long.MAX_VALUE) {\n    \
    \        return false;\n        }\n        // If the sides are equal, they form\
    \ a right-angle triangle\n        if (aSideLength == bSideLength || aSideLength\
    \ == cSideLength) {\n            return true;\n        }\n        // If the sides\
    \ are equal, they form a right-angle triangle\n        if (aSideLength * bSideLength\
    \ > cSideLength) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_0tdu42c.java:28: error: long cannot be dereferenced\n        long\
    \ aSideLength = a.longValue();\n                            ^\n/tmp/tmp_0tdu42c.java:29:\
    \ error: long cannot be dereferenced\n        long bSideLength = b.longValue();\n\
    \                            ^\n/tmp/tmp_0tdu42c.java:30: error: long cannot be\
    \ dereferenced\n        long cSideLength = c.longValue();\n                  \
    \          ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((Math.atan2(b,a) >= 0 && Math.atan2(c,b) >= 0 && Math.atan2(c,a)\
    \ >= 0) || (Math.atan2(b,a) >= 0 && Math.atan2(c,b) >= 0 && Math.atan2(c,a) <=\
    \ 0)){\n            return true;\n        }\n        else{\n            return\
    \ false;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcl5z9hol.java:28)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a - b;\n        long ac = a - c;\n        long\
    \ bc = b - c;\n\n        return ((ab * ac) <= (bc * ab));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_uw8hwf.java:26)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = Math.toRadians(Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2)));\n        long side2 = Math.toRadians(Math.sqrt(Math.pow(c, 2) + Math.pow(a,\
    \ 2)));\n        long side3 = Math.toRadians(Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2)));\n        long side4 = Math.toRadians(Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2)));\n        double angle = (double) (Math.acos((Math.pow(Math.sin(side1),\
    \ 2) + Math.pow(Math.sin(side2), 2) + Math.pow(Math.sin(side3), 2)) / (Math.pow(Math.sin(side1),\
    \ 2) * Math.pow(Math.sin(side2), 2) * Math.pow(Math.sin(side3), 2)));\n      \
    \  return (Math.abs(side1 - side4) < Math.PI && Math.abs(side3 - side2) < Math.PI\
    \ && Math.abs(side1 - side3) < Math.PI);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq3mpedjc.java:23: error: ')' expected\n        double angle = (double)\
    \ (Math.acos((Math.pow(Math.sin(side1), 2) + Math.pow(Math.sin(side2), 2) + Math.pow(Math.sin(side3),\
    \ 2)) / (Math.pow(Math.sin(side1), 2) * Math.pow(Math.sin(side2), 2) * Math.pow(Math.sin(side3),\
    \ 2)));\n                                                                    \
    \                                                                            \
    \                                                                            \
    \           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011215
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a + b;\n        long bc = b + c;\n        long\
    \ ac = a + c;\n        return ((bc >= ab) && (ac >= ab));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6njon1er.java:26)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        List<Long> l1 = Arrays.stream(new long[] {a, b, c}).sorted().collect(Collectors.toList());\n\
    \        List<Long> l2 = Arrays.stream(new long[] {a, b, c}).sorted().reverse().collect(Collectors.toList());\n\
    \        List<Long> l3 = Arrays.stream(new long[] {a, b, c}).sorted().reverse().collect(Collectors.toList());\n\
    \        System.out.println(l1);\n        System.out.println(l2);\n        System.out.println(l3);\n\
    \        return l1.equals(l2) || l1.equals(l3);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgd39c2ap.java:19: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        List<Long> l1 = Arrays.stream(new\
    \ long[] {a, b, c}).sorted().collect(Collectors.toList());\n                 \
    \                                                   ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n\
    \  found:    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmpgd39c2ap.java:19: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        List<Long> l1 = Arrays.stream(new long[] {a, b, c}).sorted().collect(Collectors.toList());\n\
    \                                                                            ^\n\
    \    (argument mismatch; no instance(s) of type variable(s) CAP#1,T exist so that\
    \ Collector<T,?,List<T>> conforms to Supplier<R>)\n  where R,T are type-variables:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n/tmp/tmpgd39c2ap.java:20:\
    \ error: cannot find symbol\n        List<Long> l2 = Arrays.stream(new long[]\
    \ {a, b, c}).sorted().reverse().collect(Collectors.toList());\n              \
    \                                                      ^\n  symbol:   method reverse()\n\
    \  location: interface LongStream\n/tmp/tmpgd39c2ap.java:21: error: cannot find\
    \ symbol\n        List<Long> l3 = Arrays.stream(new long[] {a, b, c}).sorted().reverse().collect(Collectors.toList());\n\
    \                                                                    ^\n  symbol:\
    \   method reverse()\n  location: interface LongStream\n4 errors\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long x1 = a + b, x2 = c + a;\n        long y1 = b + c, y2\
    \ = c + b;\n        long z1 = a + b, z2 = c + a;\n        long w1 = a + c, w2\
    \ = b + c;\n        if (a==0 && b==c && c==0)\n            return true;\n    \
    \    if ((x1*y2-z1*w2)==0)\n            return false;\n        if ((y1*x2-w1*z2)==0)\n\
    \            return false;\n        if ((z1*x2-w1*y2)==0)\n            return\
    \ false;\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjp4el6_a.java:34)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Find length of side 1\n        long d1 = a - b;\n    \
    \    // Find length of side 2\n        long d2 = b - c;\n        // Find length\
    \ of side 3\n        long d3 = c - a;\n        // Find hypotenuse (length of sides\
    \ 1 and 2)\n        long h = Math.sqrt(Math.pow(d1, 2) + Math.pow(d2, 2));\n \
    \       // Find area of triangle (side 1 x side 2)\n        double area = Math.pow(d1,\
    \ 2) * Math.pow(d2, 2) / 2;\n        // Find area of triangle (side 2 x side 3)\n\
    \        double a1 = Math.pow(d2, 2) * Math.pow(d3, 2) / 2;\n        // Find area\
    \ of triangle (side 3 x side 1)\n        double a2 = Math.pow(d3, 2) * Math.pow(d1,\
    \ 2) / 2;\n        // Find area of triangle (side 1 x side 3)\n        double\
    \ a3 = Math.pow(d1, 2) * Math.pow(d3, 2) / 2;\n        // Check if area of triangle\
    \ is equal to hypotenuse\n        return Math.toDegrees(Math.acos((a1 + a2 + a3)\
    \ / h))\n                == Math.toDegrees(Math.acos((a2 + a3 + a1) / h));\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjq8ykrjb.java:26: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long h = Math.sqrt(Math.pow(d1, 2) + Math.pow(d2,\
    \ 2));\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long d = (a + b + c) / 2;\n        long e = (d - a) * (d\
    \ - b) * (d - c);\n        return (e == 0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj1m83654.java:24)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // TODO: implement this function\n        return 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6d84vaex.java:20: error: incompatible types: int cannot be converted\
    \ to boolean\n        return 0;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a - b;\n        long ac = a - c;\n        long\
    \ bc = b - c;\n        if (ab != ac) {\n            return false;\n        }\n\
    \        if (bc != ab) {\n            return false;\n        }\n        return\
    \ Math.abs(bc - Math.round(bc)) < Math.abs(ab - Math.round(ab));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv92zn8as.java:31)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = Math.sqrt(a * a + b * b);\n        long side2\
    \ = Math.sqrt(c * c + a * a);\n        return (side1 == side2) || (side1 == side2\
    \ || side1 == side2 / 2 );\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ib1c28m.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long side1 = Math.sqrt(a * a + b * b);\n      \
    \                        ^\n/tmp/tmp_ib1c28m.java:20: error: incompatible types:\
    \ possible lossy conversion from double to long\n        long side2 = Math.sqrt(c\
    \ * c + a * a);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        Triangle t1 = new Triangle(a, b, c);\n        Triangle t2\
    \ = new Triangle(b, c, a);\n        Triangle t3 = new Triangle(c, a, b);\n   \
    \     return t1.isRightAngle() && t2.isRightAngle() && t3.isRightAngle();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpew4t1ps6.java:19: error: cannot find symbol\n        Triangle t1\
    \ = new Triangle(a, b, c);\n        ^\n  symbol:   class Triangle\n  location:\
    \ class Problem\n/tmp/tmpew4t1ps6.java:19: error: cannot find symbol\n       \
    \ Triangle t1 = new Triangle(a, b, c);\n                          ^\n  symbol:\
    \   class Triangle\n  location: class Problem\n/tmp/tmpew4t1ps6.java:20: error:\
    \ cannot find symbol\n        Triangle t2 = new Triangle(b, c, a);\n        ^\n\
    \  symbol:   class Triangle\n  location: class Problem\n/tmp/tmpew4t1ps6.java:20:\
    \ error: cannot find symbol\n        Triangle t2 = new Triangle(b, c, a);\n  \
    \                        ^\n  symbol:   class Triangle\n  location: class Problem\n\
    /tmp/tmpew4t1ps6.java:21: error: cannot find symbol\n        Triangle t3 = new\
    \ Triangle(c, a, b);\n        ^\n  symbol:   class Triangle\n  location: class\
    \ Problem\n/tmp/tmpew4t1ps6.java:21: error: cannot find symbol\n        Triangle\
    \ t3 = new Triangle(c, a, b);\n                          ^\n  symbol:   class\
    \ Triangle\n  location: class Problem\n6 errors\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long square = (a + b) * (a + b) + (c + a) * (c + a) + (b\
    \ + c) * (b + c);\n        boolean result = square == (a + b + c) * (a + b + c);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp98dx6daz.java:24)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(Math.sin(a) * Math.sin(b) * Math.sin(c) +\
    \ Math.cos(a)\n                        * Math.cos(b) * Math.cos(c)) < 1;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq3feu8sm.java:24)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      long AB = Long.signum(a-b);\n      long BC = Long.signum(b-c);\n\
    \      long AC = Long.signum(a-c);\n      long A = (long) (Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2)));\n      long B = (long) (Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2)));\n      long C = (long) (Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2)));\n\
    \      long d = (long) (Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2)));\n\n     \
    \ if (AB==0 && BC==0) {\n        return true;\n      }\n\n      if ((AB==AB &&\
    \ BC==BC)|| (AB==BC && BC==AC)|| (AB==AC && BC==AB)) {\n        return true;\n\
    \      }\n\n      return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7l_2z0li.java:39)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = (long) Math.sqrt(a * b - c * a * c);\n     \
    \   long side2 = (long) Math.sqrt(a * c + b * a);\n        long side3 = (long)\
    \ Math.sqrt(b * c - a * b);\n\n        if (Math.abs(side1 - side2) < 0.000001\
    \ &&\n            Math.abs(side2 - side3) < 0.000001 &&\n            Math.abs(side3\
    \ - side1) < 0.000001)\n            return true;\n\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4cnvzmtu.java:31)\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean result = false;\n        if (a==b && b==c){\n   \
    \         result = true;\n        }\n        else if (a==c || b==c){\n       \
    \     if (((b - a) % (2 * Math.PI) == 0)) {\n                result = true;\n\
    \            }\n        }\n        else {\n            if (((Math.sqrt((a * a)\
    \ - ((b * b) - (c * c))) / (2 * Math.PI)) % 1 ==\n                    0) {\n \
    \               result = true;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4btfhhj.java:30: error: ')' expected\n                    0) {\n\
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a-b;\n        long ac = a-c;\n        long bc =\
    \ b-c;\n\n        return (ab > 0 && ac > 0 && bc > 0) || (ab > 0 && ac < 0 &&\
    \ bc > 0) || (ab < 0 && ac > 0 && bc > 0) || (ab < 0 && ac < 0 && bc > 0);\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4mken1x.java:26)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long delta = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\
    \        long s = Long.parseLong(String.valueOf(delta));\n        double x = 3\
    \ * (a / delta) + b / delta;\n        double y = 2 * (b / delta) - a / delta;\n\
    \        double deltaX = 3 * (b / delta) - (a / delta);\n        double deltaY\
    \ = 2 * (a / delta) - (b / delta);\n        double deltaY2 = 2 * a / delta;\n\
    \        double deltaX2 = 2 * b / delta;\n        double deltaX3 = -2 * a / delta;\n\
    \        double deltaY3 = -2 * b / delta;\n        double deltaX31 = (-2 * b)\
    \ / delta;\n        double deltaY31 = (-2 * a) / delta;\n        double deltaY32\
    \ = 2 * a / delta;\n        double deltaX32 = 2 * b / delta;\n        double deltaY322\
    \ = 2 * a / delta;\n        double deltaX323 = -2 * a / delta;\n        double\
    \ deltaY323 = (-2 * b) / delta;\n        double deltaX4 = 3 * (a / delta) + (b\
    \ / delta);\n        double deltaY4 = (b / delta) - (a / delta);\n        double\
    \ deltaY42 = 2 * (a / delta) - (b / delta);\n        double deltaX43 = -2 * (a\
    \ / delta) + (b / delta);\n        double deltaY43 = (-b / delta) + (a / delta);\n\
    \        double deltaY423 = 2 * (a / delta) - (b / delta);\n        double deltaX43\
    \ = -2 * (a / delta) - (b / delta);\n        double deltaY432 = -2 * (a / delta)\
    \ + (b / delta);\n        double deltaX432 = 2 * (b / delta) + (a / delta);\n\
    \        double deltaY4322 = 2 * b / delta;\n        double deltaX4323 = -2 *\
    \ b / delta;\n        double deltaY4323 = (-2 * a) / delta;\n        double deltaY4324\
    \ = (-2 * b) / delta;\n        double deltaX5 = 3 * (b / delta) + (a / delta);\n\
    \        double deltaY5 = (a / delta) - (b / delta);\n        double deltaY52\
    \ = 2 * (b / delta) - (a / delta);\n        double deltaX53 = -2 * (b / delta)\
    \ + (a / delta);\n        double deltaY53 = (-a / delta) + (b / delta);\n    \
    \    double deltaY523 = 2 * (b / delta) - (a / delta);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp10mowy8s.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long delta = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n                              ^\n/tmp/tmp10mowy8s.java:42: error: variable\
    \ deltaX43 is already defined in method rightAngleTriangle(long,long,long)\n \
    \       double deltaX43 = -2 * (a / delta) - (b / delta);\n               ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      double area = 0;\n      double x = (a * b) / 2;\n      double\
    \ y = (b * c) / 2;\n      double z = (a * c) / 2;\n      \n      area = Math.sqrt(x\
    \ * x + y * y + z * z);\n      \n      return Double.compare(area, 3.14159265358979)\
    \ < 0;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecm_4mqz.java:29)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long sab = Math.toRadians(b - a),\n                scb =\
    \ Math.toRadians(c - b),\n                sac = Math.toRadians(a - c);\n     \
    \   boolean isRightAngle = Math.abs(sab - sac) < Math.toRadians(90);\n       \
    \ if (isRightAngle) {\n            boolean isNotRightAngle = !(Math.abs(sab +\
    \ scb - sac) < Math.toRadians(90));\n            return isRightAngle == isNotRightAngle;\n\
    \        } else {\n            return false;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48r_l7gx.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long sab = Math.toRadians(b - a),\n           \
    \                      ^\n/tmp/tmp48r_l7gx.java:20: error: incompatible types:\
    \ possible lossy conversion from double to long\n                scb = Math.toRadians(c\
    \ - b),\n                                    ^\n/tmp/tmp48r_l7gx.java:21: error:\
    \ incompatible types: possible lossy conversion from double to long\n        \
    \        sac = Math.toRadians(a - c);\n                                    ^\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((((long)Math.sqrt(\n                ((a*a) + (b*b))))\
    \ > (((long)Math.sqrt(\n                        ((c*c) + (a*a))))))\n        \
    \        || (((long)Math.sqrt(\n                        ((c*c) + (b*b)))) > (((long)Math.sqrt(\n\
    \                                ((a*a) + (c*c))));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjb3e1vgb.java:24: error: ')' expected\n                       \
    \         ((a*a) + (c*c))));\n                                               \
    \  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011216
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long sideA = (long) Math.sqrt((b * b) - ((a * a) - (c * c)));\n\
    \        long sideB = (long) Math.sqrt((b * b) - ((a * a) - (c * c)));\n     \
    \   long sideC = (long) Math.sqrt((b * b) - ((a * a) - (c * c)));\n        if\
    \ (sideA == sideB || sideA == sideC) {\n            return false;\n        }\n\
    \        return true;\n    }\n    public static void main(String[] args) {\n \
    \   assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjxzb7c1.java:28)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if((a == 0) || (b == 0) || (c == 0)) {\n            return\
    \ false;\n        }\n        long s = a + b + c;\n        return ((s <= Long.MAX_VALUE)\
    \ && (Math.abs(a - b) <= Math.abs(s - c))\n                && (Math.abs(a - c)\
    \ <= Math.abs(s - b)));\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynfjzfox.java:28)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a1 = Math.abs(a);\n        long b1 = Math.abs(b);\n\
    \        long c1 = Math.abs(c);\n        long d = (a1 + b1 + c1) / 2;\n\n    \
    \    if (d > b1) return false;\n        if (d > c1) return false;\n        if\
    \ (d == b1 || d == c1) return false;\n\n        boolean a = b1 < c1;\n       \
    \ boolean b = c1 < b1;\n        boolean c = b < a;\n        return ((a && b) &&\
    \ c) || (!a && !b && !c);\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6xmtehlu.java:28: error: variable a is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        boolean a = b1 < c1;\n         \
    \       ^\n/tmp/tmp6xmtehlu.java:29: error: variable b is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        boolean b = c1 < b1;\n         \
    \       ^\n/tmp/tmp6xmtehlu.java:30: error: variable c is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        boolean c = b < a;\n           \
    \     ^\n/tmp/tmp6xmtehlu.java:30: error: bad operand types for binary operator\
    \ '<'\n        boolean c = b < a;\n                      ^\n  first type:  boolean\n\
    \  second type: boolean\n4 errors\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (b == Long.MIN_VALUE) {\n            if (a == Long.MIN_VALUE)\
    \ return true;\n            else return false;\n        } else if (a == Long.MIN_VALUE)\
    \ {\n            if (b == Long.MIN_VALUE) return true;\n            else return\
    \ false;\n        } else if (c == Long.MIN_VALUE) {\n            return false;\n\
    \        }\n        long d = (b - a) * (b - c);\n        long e = (c - a) * (c\
    \ - b);\n        return (Math.sqrt(d*d + e*e) < Long.MIN_VALUE);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp164i2c7e.java:33)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long x = 3.1415926535;\n        double cy = Math.sqrt(Math.pow(b,\
    \ 2) + (Math.pow(c, 2)));\n        double a2 = a*a;\n        double b2 = b*b;\n\
    \        double c2 = c*c;\n        double delta = Math.pow(a2, 2) - (Math.pow(b2,\
    \ 2)) - (Math.pow(c2, 2));\n        double det = Math.sqrt(Math.pow(delta, 2)\
    \ + (Math.pow(c, 2)));\n        if (det > 0) {\n            double xy = (a2 -\
    \ b2) / det;\n            double y2 = (c2 + b2) / det;\n            double y1\
    \ = (y2 - cy) / det;\n            if (Math.abs(xy) < Math.abs(y1))\n         \
    \       return true;\n            else\n                return false;\n      \
    \  }\n        else\n            return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr74d2uts.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long x = 3.1415926535;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      if((a*a + b*b == c*c) && (a*a - b*b == -c*c)) {\n        return\
    \ true;\n      } else {\n        return false;\n      }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6tsv19a8.java:26)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Calculate the area of a triangle with sides a, b, c\n\
    \        double area = Math.pow(a, b) + Math.pow(c, c);\n        // Calculate\
    \ the hypotenuse of the triangle with sides a, b, and c\n        double hyp =\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n        // Calculate\
    \ an angle for the triangle with sides a, b, and c\n        double angle = Math.atan(Math.abs((a\
    \ * b) / hyp));\n        // If an angle is greater than 90 degrees then the triangle\
    \ is NOT a right angle triangle\n        if (angle >= Math.PI / 2) return false;\n\
    \        // Otherwise it IS\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rdygvw7.java:32)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ad = abs((a - b) * (a + b));\n        long bd = abs((b\
    \ - a) * (b + a));\n        long cd = abs((c - a) * (c + a));\n        return\
    \ (ad + bd + cd) == 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8i21rkpe.java:19: error: cannot find symbol\n        long ad =\
    \ abs((a - b) * (a + b));\n                  ^\n  symbol:   method abs(long)\n\
    \  location: class Problem\n/tmp/tmp8i21rkpe.java:20: error: cannot find symbol\n\
    \        long bd = abs((b - a) * (b + a));\n                  ^\n  symbol:   method\
    \ abs(long)\n  location: class Problem\n/tmp/tmp8i21rkpe.java:21: error: cannot\
    \ find symbol\n        long cd = abs((c - a) * (c + a));\n                  ^\n\
    \  symbol:   method abs(long)\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long angle = (Math.atan(c / (b - a))) / Math.toRadians;\n\
    \        boolean isRightAngle = Math.abs(angle) <= (0.5 * Math.PI);\n        return\
    \ isRightAngle;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkd2amzdt.java:19: error: cannot find symbol\n        long angle\
    \ = (Math.atan(c / (b - a))) / Math.toRadians;\n                             \
    \                       ^\n  symbol:   variable toRadians\n  location: class Math\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Using Java8 stream\n        return IntStream.range(1,a).allMatch(x\
    \ -> IntStream.range(1,b).allMatch(y -> IntStream.range(1,c).allMatch(z -> a==b+c+z\
    \ && b==c-a+z && c==a+b-z)));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5nxmoyz0.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return IntStream.range(1,a).allMatch(x -> IntStream.range(1,b).allMatch(y\
    \ -> IntStream.range(1,c).allMatch(z -> a==b+c+z && b==c-a+z && c==a+b-z)));\n\
    \                                 ^\n/tmp/tmp5nxmoyz0.java:20: error: incompatible\
    \ types: possible lossy conversion from long to int\n        return IntStream.range(1,a).allMatch(x\
    \ -> IntStream.range(1,b).allMatch(y -> IntStream.range(1,c).allMatch(z -> a==b+c+z\
    \ && b==c-a+z && c==a+b-z)));\n                                              \
    \                      ^\n/tmp/tmp5nxmoyz0.java:20: error: incompatible types:\
    \ possible lossy conversion from long to int\n        return IntStream.range(1,a).allMatch(x\
    \ -> IntStream.range(1,b).allMatch(y -> IntStream.range(1,c).allMatch(z -> a==b+c+z\
    \ && b==c-a+z && c==a+b-z)));\n                                              \
    \                                                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      double rad = Math.sqrt((b*b) - (4*a*c));\n      double angle\
    \ = Math.toDegrees(Math.acos((b*b)/(4*a*c)));\n      if(angle < 180) {\n     \
    \   return (true);\n      }\n      return (false);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4q3baubx.java:28)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a+b+c == long) (a*b*c);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpow7xgw_c.java:19: error: '.class' expected\n        return (a+b+c\
    \ == long) (a*b*c);\n                             ^\n/tmp/tmpow7xgw_c.java:19:\
    \ error: ';' expected\n        return (a+b+c == long) (a*b*c);\n             \
    \                 ^\n/tmp/tmpow7xgw_c.java:19: error: not a statement\n      \
    \  return (a+b+c == long) (a*b*c);\n                                   ^\n/tmp/tmpow7xgw_c.java:19:\
    \ error: ';' expected\n        return (a+b+c == long) (a*b*c);\n             \
    \                        ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long s = (a * b) + (c * c);\n        if ( Math.abs( s - ((a\
    \ * b) + (c * c)) ) <= (Math.sqrt( Math.pow( (c*c) - (a*a), 2 ) ) / 2))\n    \
    \        return true;\n        else\n            return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4018jfty.java:27)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = Math.sqrt(a * a + b * b);\n        long side2\
    \ = Math.sqrt(c * c + a * a);\n\n        long hypotenuse = Math.sqrt(side1 * side1\
    \ + side2 * side2);\n        long diff = Math.abs(hypotenuse - Math.sqrt(a * a\
    \ + b * b));\n        long delta = Math.abs(side1 - side2);\n\n        return\
    \ diff <= delta;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdp8ald2x.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long side1 = Math.sqrt(a * a + b * b);\n      \
    \                        ^\n/tmp/tmpdp8ald2x.java:20: error: incompatible types:\
    \ possible lossy conversion from double to long\n        long side2 = Math.sqrt(c\
    \ * c + a * a);\n                              ^\n/tmp/tmpdp8ald2x.java:22: error:\
    \ incompatible types: possible lossy conversion from double to long\n        long\
    \ hypotenuse = Math.sqrt(side1 * side1 + side2 * side2);\n                   \
    \                ^\n/tmp/tmpdp8ald2x.java:23: error: incompatible types: possible\
    \ lossy conversion from double to long\n        long diff = Math.abs(hypotenuse\
    \ - Math.sqrt(a * a + b * b));\n                            ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if((Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) < Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2))) &&\n            (Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2)) < Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2))))\n            return true;\n\
    \        else \n            return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8is2d_b.java:26)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) == Math.pow(c,\
    \ 2)) || (Math.atan2(b, a) == Math.toDegrees(Math.PI)));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ln_egau.java:22)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a+b+c).equals(Math.sqrt(a*a+b*b+c*c));\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpweq3nq3w.java:19: error: long cannot be dereferenced\n        return\
    \ (a+b+c).equals(Math.sqrt(a*a+b*b+c*c));\n                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a * b;\n        long ac = a * c;\n        long\
    \ bc = b * c;\n        long abc = (ab + ac) - (bc + ab);\n        return abc /\
    \ Math.sqrt((ab + ac) * (bc + ab) * (bc + ac)) == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_782uyd.java:26)\n"
  stdout: ''
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean isTrue = true;\n        if((a*a + b*b) == (c*c))\
    \ {\n            isTrue = false;\n        }\n        else if(Math.abs(a-b) > Math.abs(c-b))\
    \ {\n            isTrue = true;\n        }\n        else if(Math.abs(a-c) > Math.abs(b-c))\
    \ {\n            isTrue = false;\n        }\n        else if(Math.abs(b-c) > Math.abs(a-c))\
    \ {\n            isTrue = true;\n        }\n        return isTrue;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_pusao2i.java:35)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double ra = Math.abs(a), rb = Math.abs(b), rc = Math.abs(c);\n\
    \n        double angle1 = Math.atan2(rb, ra), angle2 = Math.atan2(rc, ra);\n\n\
    \        boolean result = angle1 < angle2;\n\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp38uhgwcu.java:29)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long cx = ((long) a + (long) b) / ((long) a + b); // Center\
    \ of the triangle\n        long cy = ((long) b - (long) c) / ((long) b + c); //\
    \ Center of perpendicular line\n        long sx = ((long) c - (long) a) / ((long)\
    \ c + a); // Scaling factor\n        long sy = ((long) a - (long) b) / ((long)\
    \ a + b); // Scaling factor\n\n        // Check if it is a right-angle triangle\n\
    \        if ((cx == (sy) && (cy == (b + c))) || (cx == (b + c) && (cy == (sy))))\
    \ {\n            return true;\n        }\n\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbyt6vv4r.java:32)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long x3 = b * c;\n        long y3 = a * c;\n        long\
    \ z3 = b * b;\n        long t1 = a * b;\n        long t2 = x3;\n        long t3\
    \ = y3;\n        long t4 = z3;\n        // return t1 / t2 * t3 == t4 / t3 || t1\
    \ / t2 * t3 == -t4 / t3;\n        return ((t1 / (t2 * t3)) - (t4 / (t3)) * (t1\
    \ / (t2 * t3)) ==\n                ((t4 / (t3)) - (t1 / (t2 * t3))) * (t4 / (t3)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp25vo9tlk.java:31)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long aSquared = a * a;\n        long bSquared = b * b;\n\
    \        long cSquared = c * c;\n        long d1 = b * b - 4 * a * c;\n      \
    \  long d2 = b * c + 2 * a * b;\n        if (d1 == 0) {\n            if (d2 ==\
    \ 0) {\n                if (a == 0 && b == 0 && c == 0) return true;\n       \
    \         else if (a == 0 && b != 0 || b == 0 && c != 0) return false;\n     \
    \           else if (a != 0 && b == 0 && c != 0) return false;\n             \
    \   else if (a != 0 && b != 0 && c != 0) return false;\n            }\n      \
    \      else if (d2 != 0) return false;\n        } else if (d1 != 0) return false;\n\
    \        long d3 = Math.sqrt((bSquared) + (cSquared));\n        return (d1 > 0\
    \ && d2 > 0 && d3 > 0);\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3gsa801n.java:33: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long d3 = Math.sqrt((bSquared) + (cSquared));\n\
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a2 = b * b;\n        long b2 = c * c;\n        long\
    \ c2 = a * a;\n        long disc = b2 * c2 - a2 * b2;\n        return disc >=\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_2bfz17b.java:26)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Find the length of the sides.\n        long l1 = Math.abs(a)\
    \ + Math.abs(b);\n        long l2 = Math.abs(b) + Math.abs(c);\n\n        // The\
    \ triangles are orthogonal.\n        if ((Math.abs(a) >= Math.abs(b)) && Math.abs(a)\
    \ >= Math.abs(c)) {\n            // The sides are equal.\n            if (Math.abs(a)\
    \ <= l2) return true;\n            else return false;\n        } else if ((Math.abs(b)\
    \ >= Math.abs(a)) && Math.abs(b) >= Math.abs(c)) {\n            // The sides are\
    \ equal.\n            if (Math.abs(b) <= l1) return true;\n            else return\
    \ false;\n        } else if ((Math.abs(c) >= Math.abs(a)) && Math.abs(c) >= Math.abs(b))\
    \ {\n            // The sides are equal.\n            if (Math.abs(c) <= l1) return\
    \ true;\n            else return false;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhcvi9_f.java:37: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean isRightAngle = a + b > c && b + c > a && c + a >\
    \ b;\n        return isRightAngle;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphvk1odt3.java:26)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.sqrt(a * b + c)) - (Math.sqrt(a * a))) == ((Math.sqrt(b\
    \ * b + c)) - (Math.sqrt(b * b)));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1z57697c.java:22)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a + b > c) && (a - b > c) && (a + c > b) && (a -\
    \ c > b));\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfl9mvgee.java:22)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.atan2(b, a) <= Math.PI / 2.0) && (Math.atan2(c,\
    \ b) <= Math.PI / 2.0) && (Math.atan2(c, a) <= Math.PI / 2.0));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ldmos4h.java:23)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ra = Math.abs(a-b);\n        long rb = Math.abs(b-c);\n\
    \        long rc = Math.abs(c-a);\n        long diff = ra-rcb;\n        boolean\
    \ result = false;\n        if(diff >= 0) {\n            if(diff > 90) {\n    \
    \            result = true;\n            } else {\n                long diff =\
    \ ra - rc;\n                if(diff > 0) {\n                    result = true;\n\
    \                }\n            }\n        } else {\n            result = true;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6s0rxmn4.java:22: error: cannot find symbol\n        long diff\
    \ = ra-rcb;\n                       ^\n  symbol:   variable rcb\n  location: class\
    \ Problem\n/tmp/tmp6s0rxmn4.java:28: error: variable diff is already defined in\
    \ method rightAngleTriangle(long,long,long)\n                long diff = ra -\
    \ rc;\n                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sides = new long[] {a, b, c};\n        return areAllRight(sides);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy8k0z_cl.java:20: error: cannot find symbol\n        return areAllRight(sides);\n\
    \               ^\n  symbol:   method areAllRight(long[])\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double angle = Math.sqrt((b * b) - (4 * a * c));\n\n    \
    \    if (angle < 0.000001) {\n            return true;\n        } else {\n   \
    \         return false;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfowf_8au.java:28)\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = b - a;\n        long ac = c - a;\n        if (ab*ac\
    \ >= 0)\n            return false;\n        long bc = c - b;\n        long abc\
    \ = ab*bc;\n        long acb = ac*bc;\n        if (abc == acb)\n            return\
    \ true;\n        if (abc != acb)\n            return false;\n        long aba\
    \ = ab*a;\n        long aca = ac*a;\n        if (aba == aca)\n            return\
    \ true;\n        if (aba != aca)\n            return false;\n        long ac =\
    \ ac*c;\n        if (ac == a)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnzpiy7tq.java:36: error: variable ac is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long ac = ac*c;\n             ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long x = Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2);\n\
    \        double y = Math.sqrt(x);\n        boolean z = (Double.isNaN(y));\n  \
    \      if (z == false) {\n            double xx = a/y;\n            double yy\
    \ = b/y;\n            double zz = c/y;\n            double w = Math.pow(xx, 2)\
    \ + Math.pow(yy, 2) + Math.pow(zz, 2);\n            boolean w1 = (Double.isNaN(w));\n\
    \            if (w1 == false) {\n                double xx = a/w;\n          \
    \      double yy = b/w;\n                double zz = c/w;\n                double\
    \ w = Math.pow(xx, 2) + Math.pow(yy, 2) + Math.pow(zz, 2);\n                boolean\
    \ w1 = (Double.isNaN(w));\n                return w1;\n            } else {\n\
    \                return false;\n            }\n        } else {\n            return\
    \ false;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp19lgb98q.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long x = Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2);\n                                                 ^\n/tmp/tmp19lgb98q.java:29:\
    \ error: variable xx is already defined in method rightAngleTriangle(long,long,long)\n\
    \                double xx = a/w;\n                       ^\n/tmp/tmp19lgb98q.java:30:\
    \ error: variable yy is already defined in method rightAngleTriangle(long,long,long)\n\
    \                double yy = b/w;\n                       ^\n/tmp/tmp19lgb98q.java:31:\
    \ error: variable zz is already defined in method rightAngleTriangle(long,long,long)\n\
    \                double zz = c/w;\n                       ^\n/tmp/tmp19lgb98q.java:32:\
    \ error: variable w is already defined in method rightAngleTriangle(long,long,long)\n\
    \                double w = Math.pow(xx, 2) + Math.pow(yy, 2) + Math.pow(zz, 2);\n\
    \                       ^\n/tmp/tmp19lgb98q.java:33: error: variable w1 is already\
    \ defined in method rightAngleTriangle(long,long,long)\n                boolean\
    \ w1 = (Double.isNaN(w));\n                        ^\n6 errors\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // a\n        // c\n        // b\n        // The area of\
    \ a triangle is the sum of its areas on each side\n        double s = (a+b+c)*0.5;\n\
    \        // If the sum of the two areas is greater than the third area, then the\
    \ \n        // triangle is invalid\n        if(s > a+c) {\n            return\
    \ false;\n        }\n        // If the sum of the two areas is less than the third\
    \ area, then the \n        // triangle is invalid\n        if(s < a+b) {\n   \
    \         return false;\n        }\n        // Two sides are parallel if the third\
    \ side is 0\n        if((c == 0) || (a == 0) || (b == 0)) {\n            return\
    \ false;\n        }\n        // Two sides are perpendicular if the third side\
    \ is 90 degree\n        else if((a+b+c) == Math.sqrt(Math.pow(a,2)+Math.pow(b,2)+Math.pow(c,2)))\
    \ {\n            return false;\n        }\n        // One side is right angle\
    \ if the third side is less than 90 degree\n        else if(a+b < c) {\n     \
    \       return true;\n        }\n        // One side is right angle if the third\
    \ side is more than 90 degree\n        else {\n            return false;\n   \
    \     }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakrwygn4.java:52)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (b ^ c) == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoid9vz79.java:22)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double ad = a*a, bd = b*b, cd = c*c;\n        double det\
    \ = Math.sqrt((ad + bd) * (ad + bd) + 4 * (ad * bd) * (bd + 4));\n        double\
    \ d1 = (ad + bd) / 2, d2 = (bd + 4) / 2;\n        double e = Math.sqrt((ad + b2)\
    \ * Math.sqrt((ad + b2) + (4 * bd * (ad + b2))) );\n        double f1 = 3 * ad\
    \ / 2, f2 = ((4 * ad + bd + 2) * cd - bd) / 2, f3 = ((4 * ad + bd + 2) * cd +\
    \ 2* bd) / 2;\n        double g = a * e / det, h = b * e / det, k = c * e / det,\
    \ l = (ad + bd) / 2 ;\n        return a * Math.pow((Math.pow(d1, 2) + Math.pow(f1,\
    \ 2)) / det, 2) +\n                b * Math.pow((Math.pow(d2, 2) + Math.pow(f2,\
    \ 2)) / det, 2) +\n                c * Math.pow((Math.pow(d3, 2) + Math.pow(f3,\
    \ 2)) / det, 2) == (\n                (Math.pow(e, 2) + Math.pow(f, 2)) / det);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9gby6mi.java:22: error: cannot find symbol\n        double e =\
    \ Math.sqrt((ad + b2) * Math.sqrt((ad + b2) + (4 * bd * (ad + b2))) );\n     \
    \                              ^\n  symbol:   variable b2\n  location: class Problem\n\
    /tmp/tmpv9gby6mi.java:22: error: cannot find symbol\n        double e = Math.sqrt((ad\
    \ + b2) * Math.sqrt((ad + b2) + (4 * bd * (ad + b2))) );\n                   \
    \                                      ^\n  symbol:   variable b2\n  location:\
    \ class Problem\n/tmp/tmpv9gby6mi.java:22: error: cannot find symbol\n       \
    \ double e = Math.sqrt((ad + b2) * Math.sqrt((ad + b2) + (4 * bd * (ad + b2)))\
    \ );\n                                                                       \
    \        ^\n  symbol:   variable b2\n  location: class Problem\n/tmp/tmpv9gby6mi.java:27:\
    \ error: cannot find symbol\n                c * Math.pow((Math.pow(d3, 2) + Math.pow(f3,\
    \ 2)) / det, 2) == (\n                                       ^\n  symbol:   variable\
    \ d3\n  location: class Problem\n/tmp/tmpv9gby6mi.java:28: error: cannot find\
    \ symbol\n                (Math.pow(e, 2) + Math.pow(f, 2)) / det);\n        \
    \                                   ^\n  symbol:   variable f\n  location: class\
    \ Problem\n5 errors\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a1 = a - b;\n        long a2 = a - c;\n        long\
    \ b2 = b - c;\n        return Math.abs(a2 - a1) > Math.abs(b2 - b1);\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg6g32__k.java:22: error: cannot find symbol\n        return Math.abs(a2\
    \ - a1) > Math.abs(b2 - b1);\n                                               \
    \  ^\n  symbol:   variable b1\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (Math.abs(180l - (Math.atan2(b, a)) / Math.PI) > 0.1);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7qmdvhl.java:23)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Design an algorithm to determine if a triangle is a right-angled\
    \ triangle. \n        // The input will be the lengths of the three sides of a\
    \ triangle.\n\n        // Triangle sides are in units of meters\n        double\
    \ a = a * 100.0;\n        double b = b * 100.0;\n        double c = c * 100.0;\n\
    \n        double side1 = (Math.sqrt(a * a + b * b) + Math.sqrt(a * b + b * b))\
    \ * 100.0;\n        double side2 = Math.sqrt(a * a + c * c);\n        double side3\
    \ = Math.sqrt(b * b + c * c);\n        double sine1 = Math.sin(a);\n        double\
    \ sine2 = Math.sin(b);\n        double sine3 = Math.sin(c);\n        double cosine1\
    \ = Math.cos(a);\n        double cosine2 = Math.cos(b);\n        double cosine3\
    \ = Math.cos(c);\n\n        double result = (\n            (side1 * cosine2 +\
    \ side2 * cosine3) * (sine1 * cosine3 - sine2 * cosine1)\n            - (side1\
    \ * cosine3 - side2 * cosine1) * (sine1 * cosine2 + sine2 * cosine3)\n       \
    \     + (side1 * sine2 + side2 * sine3) * (cosine1 * cosine3 - cosine2 * cosine1)\n\
    \            + (side1 * sine3 - side2 * sine1) * (cosine1 * cosine2 + cosine2\
    \ * cosine3)\n            - (side1 * cosine1 * cosine2 + side2 * cosine1 * cosine3)\
    \ * (sine1 * sine2 + sine2 * sine3)\n            - (side1 * cosine1 * sine3 -\
    \ side2 * cosine1 * sine1) * (sine1 * sine3 - sine2 * sine1)\n        );\n\n \
    \       if (result >= 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp07bmmsyg.java:23: error: variable a is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        double a = a * 100.0;\n        \
    \       ^\n/tmp/tmp07bmmsyg.java:24: error: variable b is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        double b = b * 100.0;\n        \
    \       ^\n/tmp/tmp07bmmsyg.java:25: error: variable c is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        double c = c * 100.0;\n        \
    \       ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (((b - a) * (b - c)) - ((c-a) * (c - b)) < 0);\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzszqnhlm.java:23)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] a = new long[]{a, b, c};\n        Arrays.sort(a);\n\
    \        return ((a[1] * a[2]) - (a[2] * a[0])) >= 0 ? ((a[0] * a[2]) - (a[2]\
    \ * a[0])) >= 0 ? ((a[2] * a[1]) - (a[1] * a[2])) >= 0 ? (a[0] * a[1]) - (a[1]\
    \ * a[0]) >= 0 ? (a[1] * a[2]) - (a[2] * a[1]) >= 0 ? (a[0] * a[2]) - (a[2] *\
    \ a[0]) >= 0 ? ((a[0] * a[2]) - (a[2] * a[0])) >= 0 ? ((a[2] * a[1]) - (a[1] *\
    \ a[2])) >= 0 ? (a[0] * a[1]) - (a[1] * a[0]) >= 0 ? ((a[1] * a[2]) - (a[2] *\
    \ a[1])) >= 0 : true\n    }\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmjrx6ulo.java:21: error: : expected\n        return ((a[1] * a[2])\
    \ - (a[2] * a[0])) >= 0 ? ((a[0] * a[2]) - (a[2] * a[0])) >= 0 ? ((a[2] * a[1])\
    \ - (a[1] * a[2])) >= 0 ? (a[0] * a[1]) - (a[1] * a[0]) >= 0 ? (a[1] * a[2]) -\
    \ (a[2] * a[1]) >= 0 ? (a[0] * a[2]) - (a[2] * a[0]) >= 0 ? ((a[0] * a[2]) - (a[2]\
    \ * a[0])) >= 0 ? ((a[2] * a[1]) - (a[1] * a[2])) >= 0 ? (a[0] * a[1]) - (a[1]\
    \ * a[0]) >= 0 ? ((a[1] * a[2]) - (a[2] * a[1])) >= 0 : true\n               \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \      ^\n/tmp/tmpmjrx6ulo.java:22: error: illegal start of expression\n    }\n\
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011218
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long one = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\
    \        long two = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n        return\
    \ Math.sqrt(Math.pow(one, 2) + Math.pow(two, 2)) == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqf7tt5fv.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long one = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n                            ^\n/tmp/tmpqf7tt5fv.java:20: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long two = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long delta = b * b - 4 * a * c;\n        if (delta < 0)\n\
    \            return false;\n        if (Math.sqrt(delta) < 0)\n            return\
    \ false;\n        return (b * b + a * a * c + b * b - a * a * c) / delta > 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xjieav4.java:27)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Define the side lengths and side angle\n        double\
    \ sideA = Math.sqrt(a * a + b * b); // side length\n        double sideB = Math.sqrt(c\
    \ * c + a * a); // side length\n        double sideC = Math.sqrt(c * c + b * b);\
    \ // side length\n        double angle = atan(sideA / sideB); // angle in radians\n\
    \        if (sideA == sideB || sideA == sideC || sideB == sideC) { // check whether\
    \ angle is right\n            return true; // return true if it's right angle\n\
    \        } else {\n            return false; // return false if not\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmf3lpga.java:23: error: cannot find symbol\n        double angle\
    \ = atan(sideA / sideB); // angle in radians\n                       ^\n  symbol:\
    \   method atan(double)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a == b) || (a == c)) {\n            if (b == c) {\n\
    \                return true;\n            } else {\n                return false;\n\
    \            }\n        } else {\n            // Now to check whether the angle\
    \ b is greater than c\n            // If it is then we know that the two angles\
    \ are equal and hence it is not a right angle\n            // If it is greater\
    \ than c then it must be greater than or equal to b\n            if (b > (c >\
    \ a ? b : c)) {\n                return false;\n            } else {\n       \
    \         return true;\n            }\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx7quedpm.java:38)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your implementation goes here.\n        double d = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n        if (d == 0){\n            return false;\n   \
    \     }\n        double x1 = (-b + Math.sqrt(Math.pow(-b + a, 2) - Math.pow(b,\
    \ 2)) / d).toDouble();\n        double x2 = (-b - Math.sqrt(Math.pow(-b + a, 2)\
    \ - Math.pow(b, 2)) / d).toDouble();\n        double x3 = (-b - Math.sqrt(Math.pow(-b\
    \ + a, 2) - Math.pow(b, 2)) / d).toDouble();\n        double y = (-a + Math.sqrt(Math.pow(-a\
    \ + b, 2) - Math.pow(a, 2)) / d).toDouble();\n        double y = (-a - Math.sqrt(Math.pow(-a\
    \ + b, 2) - Math.pow(a, 2)) / d).toDouble();\n        double z1 = (-c + Math.sqrt(Math.pow(-c\
    \ + a, 2) - Math.pow(c, 2)) / d).toDouble();\n        double z2 = (-c - Math.sqrt(Math.pow(-c\
    \ + a, 2) - Math.pow(c, 2)) / d).toDouble();\n        double z3 = (-c - Math.sqrt(Math.pow(-c\
    \ + a, 2) - Math.pow(c, 2)) / d).toDouble();\n        if ((x1 == y) && (x1 ==\
    \ z) && (x2 == y) && (x2 == z) && (x3 == y) && (x3 == z)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxxd2iogs.java:24: error: double cannot be dereferenced\n      \
    \  double x1 = (-b + Math.sqrt(Math.pow(-b + a, 2) - Math.pow(b, 2)) / d).toDouble();\n\
    \                                                                            \
    \  ^\n/tmp/tmpxxd2iogs.java:25: error: double cannot be dereferenced\n       \
    \ double x2 = (-b - Math.sqrt(Math.pow(-b + a, 2) - Math.pow(b, 2)) / d).toDouble();\n\
    \                                                                            \
    \  ^\n/tmp/tmpxxd2iogs.java:26: error: double cannot be dereferenced\n       \
    \ double x3 = (-b - Math.sqrt(Math.pow(-b + a, 2) - Math.pow(b, 2)) / d).toDouble();\n\
    \                                                                            \
    \  ^\n/tmp/tmpxxd2iogs.java:27: error: double cannot be dereferenced\n       \
    \ double y = (-a + Math.sqrt(Math.pow(-a + b, 2) - Math.pow(a, 2)) / d).toDouble();\n\
    \                                                                            \
    \ ^\n/tmp/tmpxxd2iogs.java:28: error: variable y is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        double y = (-a - Math.sqrt(Math.pow(-a\
    \ + b, 2) - Math.pow(a, 2)) / d).toDouble();\n               ^\n/tmp/tmpxxd2iogs.java:28:\
    \ error: double cannot be dereferenced\n        double y = (-a - Math.sqrt(Math.pow(-a\
    \ + b, 2) - Math.pow(a, 2)) / d).toDouble();\n                               \
    \                                              ^\n/tmp/tmpxxd2iogs.java:29: error:\
    \ double cannot be dereferenced\n        double z1 = (-c + Math.sqrt(Math.pow(-c\
    \ + a, 2) - Math.pow(c, 2)) / d).toDouble();\n                               \
    \                                               ^\n/tmp/tmpxxd2iogs.java:30: error:\
    \ double cannot be dereferenced\n        double z2 = (-c - Math.sqrt(Math.pow(-c\
    \ + a, 2) - Math.pow(c, 2)) / d).toDouble();\n                               \
    \                                               ^\n/tmp/tmpxxd2iogs.java:31: error:\
    \ double cannot be dereferenced\n        double z3 = (-c - Math.sqrt(Math.pow(-c\
    \ + a, 2) - Math.pow(c, 2)) / d).toDouble();\n                               \
    \              "
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        long area = ((b*b)/2) +\
    \ Math.abs((a*a) - (b*b));\n        double ang = ((Math.sqrt(Math.abs((a*a) -\
    \ (b*b))))/(area));\n        \n        double a1 = ((Math.sqrt(Math.abs((a*a)\
    \ - (b*b))))/(area));\n        double a2 = ((Math.sqrt(Math.abs((a*a) - (c*c))))/(area));\n\
    \        \n        double b1 = ((Math.sqrt(Math.abs((b*b) - (c*c))))/(area));\n\
    \        double b2 = ((Math.sqrt(Math.abs((b*b) - (a*a))))/(area));\n        \n\
    \        double c1 = ((Math.sqrt(Math.abs((c*c) - (a*a))))/(area));\n        double\
    \ c2 = ((Math.sqrt(Math.abs((c*c) - (b*b))))/(area));\n        \n        boolean\
    \ flag = false;\n        if (a1 == b1 && b1 == c1) {\n            flag = true;\n\
    \        }\n        if (ang > 0 && ang <= 90) {\n            flag = true;\n  \
    \      }\n        if (a2 == b2 && b2 == c2) {\n            flag = true;\n    \
    \    }\n        return flag;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyck49_f.java:46)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (((b * b) - (4 * a * c)) < (0l * b * c));\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3l3yfew.java:23)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean test = (a * b) == (a + b + c);\n        System.out.println(\"\
    test=\" + test);\n        return test;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpitaf0b92.java:26)\n"
  stdout: 'test=true

    test=false

    test=false

    '
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (Math.sqrt((a*a) + (b*b) + (c*c)) % 360 == 360);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgcnw9b1l.java:22)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = b * b - a * c;\n        long ac = b * c - a * b;\n\
    \        long cb = c * c - b * b;\n        long det = ac * cb - ab;\n        if\
    \ (det == 0) return false;\n        double a1 = a / det;\n        double b1 =\
    \ b / det;\n        double c1 = c / det;\n        double d = Math.abs(a1 * b1\
    \ - b1 * a1);\n        double e = Math.abs(a1 * c1 - c1 * a1);\n        return\
    \ d <= e;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc1lhu303.java:33)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = Math.abs(a);\n        long side2 = Math.abs(b);\n\
    \        long side3 = Math.abs(c);\n        if (side1 < side2 && side1 < side3)\
    \ {\n            return true;\n        } else if (side1 < side2 && side2 < side3)\
    \ {\n            return false;\n        } else if (side2 < side1 && side1 < side3)\
    \ {\n            return false;\n        } else if (side2 < side1 && side2 < side3)\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nio3v66.java:36)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        int a1 = (int) Math.sqrt(a\
    \ * a + b * b);\n        int b1 = (int) Math.sqrt(b * a + c * b);\n        int\
    \ c1 = (int) Math.sqrt(c * a + a * b);\n        return a1 == b1 && b1 == c1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrpeq75d.java:27)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(b - c) < Math.toRadians(Math.min(a, b));\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2rsjjpjr.java:22)\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double d1 = (Math.sqrt(a*a + b*b));\n        double d2 =\
    \ (Math.sqrt(c*c + a*a));\n        double d3 = d1 + d2;\n        double theta1\
    \ = Math.acos((d2/d3));\n        double theta2 = Math.acos((b/a));\n        double\
    \ theta3 = Math.acos((c/a));\n        if (Math.abs(theta1 - theta2) > Math.abs(theta1\
    \ - theta3)) {\n            return true;\n        } else {\n            return\
    \ false;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0tqbqqu.java:32)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long sides = Math.sqrt(a * a + b * b + c * c);\n        return\
    \ (sides == 0) || (sides == Math.min(a, b, c));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuza01n7u.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long sides = Math.sqrt(a * a + b * b + c * c);\n\
    \                              ^\n/tmp/tmpuza01n7u.java:20: error: no suitable\
    \ method found for min(long,long,long)\n        return (sides == 0) || (sides\
    \ == Math.min(a, b, c));\n                                             ^\n   \
    \ method Math.min(int,int) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.min(long,long) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.min(float,float)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.min(double,double) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n2 errors\n"
  stdout: ''
  timestamp: 1660011219
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double triangleArea = (a + b + c) / 2;\n        double sideA\
    \ = Math.sqrt(Math.pow(a, 2) + (b * b) - ((a * a + c * c) * b));\n        double\
    \ sideB = Math.sqrt(Math.pow(b, 2) + (c * c) - ((b * b) + (a * a) * c));\n   \
    \     double sideC = Math.sqrt(Math.pow(c, 2) + (a * a) - ((b * b) + (c * c) *\
    \ a));\n        double angle = Math.acos((a * a + c * c - b * b * b) / (2.0 *\
    \ a * a));\n        return (Math.abs(angle) < Math.PI / 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxluje628.java:27)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // The angle formed by the three sides is equal to 90 degree.\n\
    \        if ((b - c) == 0) {\n            return true;\n        }\n        //\
    \ Find out if one of the sides is 90.\n        double a1 = a * Math.sqrt(a * a\
    \ + b * b);\n        double a2 = a * Math.sqrt(a * a + c * c);\n        double\
    \ b1 = b * Math.sqrt(b * b + c * c);\n        double b2 = b * Math.sqrt(b * b\
    \ + a1 * a);\n        double c1 = c * Math.sqrt(c * c + a1 * a);\n        double\
    \ c2 = c * Math.sqrt(c * c + b1 * b);\n        if (a1 == a2 && b1 == b2 && c1\
    \ == c2) return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8c5z5mu.java:34)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return areSame(a, b, c) || isRightAngle(a, b, c);\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpybz19fyj.java:19: error: cannot find symbol\n        return areSame(a,\
    \ b, c) || isRightAngle(a, b, c);\n               ^\n  symbol:   method areSame(long,long,long)\n\
    \  location: class Problem\n/tmp/tmpybz19fyj.java:19: error: cannot find symbol\n\
    \        return areSame(a, b, c) || isRightAngle(a, b, c);\n                 \
    \                  ^\n  symbol:   method isRightAngle(long,long,long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = Math.max(a, b);\n        long side2 = Math.min(a,\
    \ b);\n        long side3 = Math.min(b, c);\n        if (side1 < (side2 + side3))\
    \ return false;\n        long side4 = Math.max(side1, side3);\n        long side5\
    \ = Math.max(side2, side3);\n        return side4 != side5;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphm2xw0sc.java:28)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a + b > c) && Math.abs((b - a) * (c - b)) > (b -\
    \ a));\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdbvbyolp.java:22)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if(b > c){\n            long t = c;\n            c = b;\n\
    \            b = t;\n        }\n        long d = c - b;\n        long s = Math.sqrt(Math.pow(a\
    \ + b, 2) + Math.pow(c + b, 2)) - Math.sqrt(Math.pow(a - b, 2) + Math.pow(c -\
    \ b, 2));\n        double d = Math.sqrt(Math.pow(a + b, 2) + Math.pow(c + b, 2))\
    \ - Math.sqrt(Math.pow(a - b, 2) + Math.pow(c - b, 2));\n        double e = Math.sqrt(Math.pow(a\
    \ + b, 2) + Math.pow(c + b, 2)) - Math.sqrt(Math.pow(a - b, 2) + Math.pow(c -\
    \ b, 2));\n        if(d == 0){\n            return false;\n        }\n       \
    \ long angle = (long) Math.atan((double)d / (double)s);\n        if (angle < 0){\n\
    \            angle += 2 * Math.PI;\n        }\n        if (Math.abs(angle - Math.PI)\
    \ < 1e-12) {\n            return true;\n        }\n        if(Math.sqrt(Math.pow(s\
    \ + b, 2)) < Math.sqrt(Math.pow(a - b, 2))){\n            return true;\n     \
    \   }\n        if(Math.sqrt(Math.pow(s + b, 2)) < Math.sqrt(Math.pow(c + b, 2))){\n\
    \            return true;\n        }\n        long result = (long) Math.acos((a\
    \ + b + c) / 3.0);\n        if (result < 0){\n            result += 2 * Math.PI;\n\
    \        }\n        if (Math.abs(result - Math.PI) < 1e-12) {\n            return\
    \ true;\n        }\n        long angle2 = (long)Math.acos((a + b + c) / 3.0);\n\
    \        double result = Math.acos((a + b + c) / 3.0);\n        if (result < 0){\n\
    \            result += 2 * Math.PI;\n        }\n        if (Math.abs(result -\
    \ Math.PI) < 1e-12) {\n            return true;\n        }\n        double angle3\
    \ = Math.acos((a + b + c) / 3.0);\n        if (angle2 < angle3){\n           \
    \ return true;\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuxgijhiw.java:25: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long s = Math.sqrt(Math.pow(a + b, 2) + Math.pow(c\
    \ + b, 2)) - Math.sqrt(Math.pow(a - b, 2) + Math.pow(c - b, 2));\n           \
    \                                                         ^\n/tmp/tmpuxgijhiw.java:26:\
    \ error: variable d is already defined in method rightAngleTriangle(long,long,long)\n\
    \        double d = Math.sqrt(Math.pow(a + b, 2) + Math.pow(c + b, 2)) - Math.sqrt(Math.pow(a\
    \ - b, 2) + Math.pow(c - b, 2));\n               ^\n/tmp/tmpuxgijhiw.java:52:\
    \ error: variable result is already defined in method rightAngleTriangle(long,long,long)\n\
    \        double result = Math.acos((a + b + c) / 3.0);\n               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a * b) % 360 != (180 * (a + b)) % 360;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_meumrq9.java:23)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((Math.sqrt((b*b) - 4*a*c)) < 0.0) {\n            return\
    \ false;\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpww2y99cx.java:26)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a - b;\n        long bc = b - c;\n        long\
    \ ac = a - c;\n        long ans = Math.sqrt((ab * ab) + (bc * bc) + (ac * ac));\n\
    \        return ans == ab * bc;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp178zyk2l.java:22: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long ans = Math.sqrt((ab * ab) + (bc * bc) + (ac\
    \ * ac));\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ra = Math.toRadians(90);\n        long rb = Math.toRadians(180);\n\
    \        long rc = Math.toRadians(90);\n        long p1 = a*b*c;\n        long\
    \ p2 = b*c*a;\n        long p3 = c*a*b;\n        long p4 = (b*c+a*a)*c;\n    \
    \    long p5 = (a*b+a*a)*c;\n        long p6 = (a*b*c+b*c*a)*c;\n        long\
    \ p7 = (a*b*c+a*c*b)*c;\n        long p8 = (b*c*a-a*b*c+a*a*b)*c;\n        long\
    \ p9 = (a*a*b+b*b*a)*c;\n        long p10 = (a*c*b-a*b*c+b*b*b)*c;\n        long\
    \ p11 = (a*b*c+b*a*b)*c;\n        long p12 = (a*a*c+a*b*c)*c;\n        long p13\
    \ = (a*c*b+b*a*b)*c;\n        long p14 = (b*c*a+a*c*b)*c;\n        long p15 =\
    \ (a*b*c+a*c*b)*c;\n        long p16 = (a*c*b-a*b*c+a*a*b)*c;\n        long p17\
    \ = (a*b*c+a*c*b)*c;\n        long p18 = (a*b*c+a*c*b)*c;\n        long p19 =\
    \ (a*c*b+a*b*c)*c;\n        long p20 = (a*b*c+a*c*b)*c;\n        long p21 = (b*c*a+a*b*c)*c;\n\
    \        long p22 = (a*c*b-a*b*c+a*a*b)*c;\n        long p23 = (a*b*c+a*c*b)*c;\n\
    \        long p24 = (a*b*c+a*c*b)*c;\n        long p25 = (a*c*b+a*b*c)*c;\n  \
    \      long p26 = (a*b*c+a*c*b)*c;\n        long p27 = (a*b*c+a*c*b)*c;\n    \
    \    long p28 = (a*c*b-a*b*c+a*a*b)*c;\n        long p29 = (a*b*c+a*c*b)*c;\n\
    \        long p30 = (a*c*b-a*b*c+a*a*b)*c;\n        long p31 = (b*c*a+\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphhj5ala8.java:53: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long side1 = Math.abs(a);\n        long side2 = Math.abs(b);\n\
    \        long side3 = Math.abs(c);\n\n        long s = a + b + c;\n        long\
    \ d = Math.abs(s);\n\n        boolean rightAngle = (Math.abs(a - b) == Math.abs(a\
    \ - c))\n                && (Math.abs(b - a) == Math.abs(c - b))\n           \
    \     && (Math.abs(c - a) == Math.abs(b - a));\n        return rightAngle;\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe0d623px.java:32)\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long sideA = Math.abs(a - b);\n        long sideB = Math.abs(b\
    \ - c);\n        long sideC = Math.abs(c - a);\n        long oneAngle = sideA\
    \ + sideB + sideC;\n        long twoAngles = sideA + sideB - sideC;\n        return\
    \ (oneAngle >= twoAngles) ? true : false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuuwsbrgt.java:28)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return b > a && b > c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybnqtlpc.java:22)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // The three sides are the lengths of the three sides of\
    \ the triangle.\n        long s = (a + b + c) / 2;\n        long t1 = (a + s)\
    \ / 2;\n        long t2 = (c + s) / 2;\n\n        // The hypotenuse of triangle\
    \ is the hypotenuse of the longest\n        // side.\n        long h = Math.max((t1\
    \ + t2), Math.max(a, b, c));\n\n        // Since the hypotenuse is a positive\
    \ number, the area of the triangle\n        // is equal to the sum of the two\
    \ sides times the hypotenuse.\n        long area = (a + b) * (c + h) / 2;\n  \
    \      return Math.round(area) == Math.round(b + h + s);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvfk6umxq.java:26: error: no suitable method found for max(long,long,long)\n\
    \        long h = Math.max((t1 + t2), Math.max(a, b, c));\n                  \
    \                       ^\n    method Math.max(int,int) is not applicable\n  \
    \    (actual and formal argument lists differ in length)\n    method Math.max(long,long)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(float,float) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n    method Math.max(double,double) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Get the length of each side.\n        double sA = Math.sqrt(a\
    \ * a);\n        double sB = Math.sqrt(b * b);\n        double sC = Math.sqrt(c\
    \ * c);\n        // Check for 90\xB0 angles, if any.\n        if (Math.abs(a -\
    \ b) < EPSILON) {\n            if (Math.abs(a - c) < EPSILON)\n              \
    \  return true;\n            else\n                return false;\n        } else\
    \ if (Math.abs(b - c) < EPSILON) {\n            return false;\n        } else\
    \ {\n            // Check for right angles.\n            return Math.abs(Math.atan2(sB\
    \ / sA, sC / sA)) - Math.PI / 2 >= 0\n                    && Math.abs(Math.atan2(sA\
    \ / sB, sC / sB)) - Math.PI / 2 >= 0\n                    && Math.abs(Math.atan2(sA\
    \ / sA, sB / sC)) - Math.PI / 2 <= 0;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9svdhxco.java:24: error: cannot find symbol\n        if (Math.abs(a\
    \ - b) < EPSILON) {\n                              ^\n  symbol:   variable EPSILON\n\
    \  location: class Problem\n/tmp/tmp9svdhxco.java:25: error: cannot find symbol\n\
    \            if (Math.abs(a - c) < EPSILON)\n                                \
    \  ^\n  symbol:   variable EPSILON\n  location: class Problem\n/tmp/tmp9svdhxco.java:29:\
    \ error: cannot find symbol\n        } else if (Math.abs(b - c) < EPSILON) {\n\
    \                                     ^\n  symbol:   variable EPSILON\n  location:\
    \ class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        List<Long> numberList = new ArrayList<>();\n        numberList.add(a);\n\
    \        numberList.add(b);\n        numberList.add(c);\n        Collections.sort(numberList);\n\
    \        // Check all possible combinations\n        for (long i : numberList)\
    \ {\n            if (a + b == c || a + c == b || b + c == a)\n               \
    \ return true;\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11wzude2.java:32)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      return true;\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp25dl9dpf.java:28)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a = (a);\n        long b = (b);\n        long c = (c);\n\
    \        long x = Math.abs(a-b);\n        long y = Math.abs(c-b);\n        long\
    \ z = Math.abs(a-c);\n        long w = (b*b*c)/((b*b) + c);\n        long e =\
    \ (b*x) + (c*y) + (a*z);\n        return (e == x && x == z && y == w);\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0w6a07gr.java:19: error: variable a is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long a = (a);\n             ^\n\
    /tmp/tmp0w6a07gr.java:20: error: variable b is already defined in method rightAngleTriangle(long,long,long)\n\
    \        long b = (b);\n             ^\n/tmp/tmp0w6a07gr.java:21: error: variable\
    \ c is already defined in method rightAngleTriangle(long,long,long)\n        long\
    \ c = (c);\n             ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Calculate the hypotenuse (sqrt(a^2 + b^2))\n        double\
    \ hyp = (Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)));\n        \n        // Calculate\
    \ the length of each side\n        double sideA = Math.abs((a + b) / 2);\n   \
    \     double sideB = Math.abs((b + c) / 2);\n        double sideC = Math.abs((a\
    \ + c) / 2);\n        \n        // If sides A, B, and C are all equal\n      \
    \  if(sideA == sideB && sideA == sideC) {\n            // return true if they\
    \ are equal\n            return true;\n        }\n        \n        // If sides\
    \ A, B, and C are all greater than hypotenuse\n        if(sideA > hyp && sideB\
    \ > hyp && sideC > hyp) {\n            // return false if any are greater than\
    \ (hypotenuse)\n            return false;\n        }\n        \n        // If\
    \ sides A, B, and C are all less than hypotenuse\n        if(sideA < hyp && sideB\
    \ < hyp && sideC < hyp) {\n            // return true if any are less than (hypotenuse)\n\
    \            return true;\n        }\n        \n        // If none of the sides\
    \ are equal to hypotenuse\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xbe2k2v.java:50)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double ad = a - Double.parseDouble(String.format(\"%.1f\"\
    , a));\n        double bd = b - Double.parseDouble(String.format(\"%.1f\", b));\n\
    \        double cd = c - Double.parseDouble(String.format(\"%.1f\", c));\n   \
    \     double de = ad*bd;\n        double fd = cd*ad;\n        double gd = cd*bd;\n\
    \        double hd = ad*cd;\n        double de2 = de*de;\n        double fd2 =\
    \ fd*fd;\n        double gd2 = gd*gd;\n        double hd2 = hd*hd;\n        double\
    \ de3 = (de2*ad)/(fd2*hd2);\n        double fd3 = (fd2*bd)/(gd2*hd2);\n      \
    \  double gd3 = (gd2*cd)/(hd2*hd2);\n        double hd3 = (hd2*ad)/(gd2*fd2);\n\
    \        return (Double.parseDouble(String.format(\"%.1f\", de)) == Double.parseDouble(String.format(\"\
    %.1f\", de3))\n                && Double.parseDouble(String.format(\"%.1f\", fd))\
    \ == Double.parseDouble(String.format(\"%.1f\", fd3))\n                && Double.parseDouble(String.format(\"\
    %.1f\", gd)) == Double.parseDouble(String.format(\"%.1f\", gd3))\n           \
    \     && Double.parseDouble(String.format(\"%.1f\", hd)) == Double.parseDouble(String.format(\"\
    %.1f\", hd3));\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmvb5bxfm.java:37: error: ')' expected\n                && Double.parseDouble(String.format(\"\
    %.1f\", hd)) == Double.parseDouble(String.format(\"%.1f\", hd3));\n          \
    \                                                                            \
    \                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011220
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long d1 = (b - a) * (b - c);\n        long d2 = (c - a) *\
    \ (c - b);\n        return (d1 > 0) && (d2 > 0);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2n938u7c.java:24)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return Math.sqrt(a * a+b * b+c\
    \ * c) >= 0;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32omp7od.java:24)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a == b) || (b == c) || (c == a);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7gnwlce.java:22)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long d = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      return Math.abs(a - b) == d &&\n            Math.abs(a - c) == d &&\n \
    \           Math.abs(b - c) == d;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqxy0c7u.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long d = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (b * b) - (4 * a * c) < (2 * a * a);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpow_4xb19.java:23)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (Math.abs(Math.sqrt(a * a + b * b) - c) <= 0.000001) {\n\
    \            return true;\n        } else {\n            return false;\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2s75xd8n.java:28)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a * b > c) && (c * c > a * b); \n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a+b+c) %180 == 0l; // Triangles whose sides are a,\
    \ b, c are right-angled.\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqz7fx7g.java:22)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        //write your code here\n        if (a == 0 || b == 0 || c\
    \ == 0)\n            return false;\n\n        long x1 = Math.abs(a - b);\n   \
    \     long y1 = Math.abs(b - c);\n        long z1 = Math.abs(c - a);\n\n     \
    \   long x2 = Math.abs(b - a);\n        long y2 = Math.abs(c - b);\n        long\
    \ z2 = Math.abs(a - c);\n\n        return (((x1 == y1) || (x2 == y2)) && ((x1\
    \ == z2) || (x2 == z1)));\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7ywp9ia.java:34)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Check if any of them is NaN.\n        if (Double.isNaN(a)\
    \ || Double.isNaN(b) || Double.isNaN(c)) {\n            return false;\n      \
    \  }\n        // If either of the three sides is zero, they form a right-angled\
    \ triangle.\n        if (a == 0 || b == 0 || c == 0){\n            return true;\n\
    \        }\n        double ax = a, ay = b, az = c;\n        double bx = b, by\
    \ = c, bz = a;\n        double cx = a, cy = b, cz = c;\n        // Compute the\
    \ sum of all three sides.\n        double sx = ax+by+cz;\n        double sy =\
    \ ay+bz+cx;\n        double sz = ax+by+cx;\n        // Compute the area of triangle\
    \ ABC\n        double ab = ax*by+ay*bz+az*cx;\n        double ac = ax*cz+ay*bx+az*cy;\n\
    \        double bc = bz*cx+bz*cy+bz*ax;\n        double cc = ax*cy+ay*cz+az*bx;\n\
    \        // Find the minimum of all three sides\n        double min = Math.min(ab,ac,bc,cc);\n\
    \        // Check if minimum is zero\n        if (min == 0){\n            return\
    \ false;\n        }\n        // Compute square of minimum area\n        double\
    \ min2 = Math.pow(ab,2)+Math.pow(ac,2)+Math.pow(bc,2)+Math.pow(cc,2);\n      \
    \  // Check if minimum is double of triangle ABC\n        if (min2 != Math.pow(min,2)){\n\
    \            return false;\n        }\n        // If all sides lie on the same\
    \ side of the triangle, they are right angled.\n        if (Math.abs(ax - min)\
    \ <= Math.abs(ay - min) && Math.abs(ay - min) <= Math.abs(az - min)) {\n     \
    \       return true;\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzc_25rhs.java:40: error: no suitable method found for min(double,double,double,double)\n\
    \        double min = Math.min(ab,ac,bc,cc);\n                         ^\n   \
    \ method Math.min(int,int) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.min(long,long) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.min(float,float)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.min(double,double) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Code here\n        long length = Math.sqrt(Math.pow(b,2)\
    \ +Math.pow(c,2));\n        if(length==0)\n            return false;\n       \
    \ long side1 = b / length;\n        long side2 = c / length;\n        long side3\
    \ = Math.sqrt((a*a) + (b*b));\n        boolean ret = (side1+side2+side3) == (side1+side3);\n\
    \        if(!ret)\n            return false;\n        return true;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvzf69dhj.java:20: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long length = Math.sqrt(Math.pow(b,2) +Math.pow(c,2));\n\
    \                               ^\n/tmp/tmpvzf69dhj.java:25: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long side3 = Math.sqrt((a*a)\
    \ + (b*b));\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.sqrt((a*a) + (b*b) + (c*c)) % 1 == 0.0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08a86df6.java:22)\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Long.compare(Math.sqrt(a * a + b * b), Math.sqrt(c\
    \ * c + a * a)) > 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpry_tszl8.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        return Long.compare(Math.sqrt(a * a + b * b), Math.sqrt(c\
    \ * c + a * a)) > 0;\n                                     ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long d1 = b - a;\n        long d2 = c - b;\n        long\
    \ d3 = c - a;\n\n        double d1 = Math.sqrt(d1);\n        double d2 = Math.sqrt(d2);\n\
    \        double d3 = Math.sqrt(d3);\n\n        double angle = Math.acos((Math.pow(d1,\
    \ 2) + Math.pow(d2, 2) + Math.pow(d3, 2)) / Math.pow(d1 * d2 * d3, 1.5));\n\n\
    \        if (angle > 90) {\n            return false;\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1uod9l2k.java:23: error: variable d1 is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        double d1 = Math.sqrt(d1);\n   \
    \            ^\n/tmp/tmp1uod9l2k.java:24: error: variable d2 is already defined\
    \ in method rightAngleTriangle(long,long,long)\n        double d2 = Math.sqrt(d2);\n\
    \               ^\n/tmp/tmp1uod9l2k.java:25: error: variable d3 is already defined\
    \ in method rightAngleTriangle(long,long,long)\n        double d3 = Math.sqrt(d3);\n\
    \               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        double a1 = Math.sqrt(Math.pow(a,\
    \ 2));\n        double a2 = Math.sqrt(Math.pow(b, 2));\n        double a3 = Math.sqrt(Math.pow(c,\
    \ 2));\n        double b1 = Math.sqrt(Math.pow(b, 2));\n        double b2 = Math.sqrt(Math.pow(c,\
    \ 2));\n        double b3 = Math.sqrt(Math.pow(b, 2));\n        double c1 = Math.sqrt(Math.pow(c,\
    \ 2));\n        double c2 = Math.sqrt(Math.pow(c, 2));\n        double c3 = Math.sqrt(Math.pow(c,\
    \ 2));\n        double a22 = c2 * a2;\n        double b32 = b3 * b2;\n       \
    \ double c12 = c2 * c2;\n        double a32 = a3 * a3;\n        double b12 = b3\
    \ * b3;\n        double c32 = c3 * c3;\n        double a12 = a3 * a2;\n      \
    \  double b13 = b3 * b1;\n        double c13 = c3 * c1;\n        double a23 =\
    \ a3 * a1;\n        double b23 = b3 * b1;\n        double c23 = c3 * c1;\n   \
    \     double a13 = a3 * a1;\n        double b12 = b3 * b2;\n        double c13\
    \ = c3 * c2;\n        double a22 = a2 * a2;\n        double b32 = b2 * b2;\n \
    \       double c12 = c2 * c2;\n        double a32 = a2 * a3;\n        double b12\
    \ = b2 * b3;\n        double c32 = c2 * c3;\n        double a12 = a2 * a2;\n \
    \       double b13 = b2 * b2;\n        double c13 = c2 * c3;\n        double a23\
    \ = a2 * a3;\n        double b23 = b2 * b3;\n        double c23 = c2 * c3;\n \
    \       double a13 = a2 * a3;\n        double b12 = b2 * b3;\n        double c13\
    \ = c2 * c3;\n        if (a22 * b33 <= 0) {\n            return false;\n     \
    \   }\n        if (a12 * b33 <= 0) {\n            return false;\n        }\n \
    \       if (a32 * b12 <= 0) {\n            return false;\n        }\n        if\
    \ (a12 * b13 < 0) {\n            return false;\n        }\n        if (a13 * b12\
    \ < 0) {\n            return false;\n        }\n        if (a13 * b13 < 0) {\n\
    \            return false;\n        }\n        if (a23 * b23 < 0) {\n        \
    \    return false;\n        }\n        if (a23 * b32 < 0) {\n            return\
    \ false;\n        }\n        if (a23 * b12 < 0) {\n            return false;\n\
    \        }\n        if (a23 * b13 < 0) {\n            return false;\n        }\n\
    \        if (a13 * b23 < 0) {\n            return false;\n        }\n        if\
    \ (a13\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6t8pkpvi.java:92: error: ')' expected\n        if (a13\n      \
    \         ^\n/tmp/tmp6t8pkpvi.java:93: error: illegal start of statement\n   \
    \ }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a1 = Math.abs(a);\n        long b1 = Math.abs(b);\n\
    \        long c1 = Math.abs(c);\n        long a2 = a1 * a1;\n        long b2 =\
    \ b1 * b1;\n        long c2 = c1 * c1;\n        long a3 = a2 * a2;\n        long\
    \ b3 = b2 * b2;\n        long c3 = c3 * c2;\n        long an = a3 * b2 - a2 *\
    \ b3;\n        long bn = a2 * c3 - b2 * a3;\n        long cn = c1 * c3 - c2 *\
    \ c1;\n        return (an + bn + cn) == 0 && (a1 + b1 + c1) == 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2xv9onna.java:27: error: variable c3 might not have been initialized\n\
    \        long c3 = c3 * c2;\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a = Math.abs(a);\n        long b = Math.abs(b);\n  \
    \      long c = Math.abs(c);\n        long s = (a + b + c) / 2;\n        long\
    \ t = (a + b) * (a + c) * (b + c);\n        boolean isTriangle = t >= s * s &&\
    \ t <= (s * c) && b > c;\n        return isTriangle;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm8qqnhj9.java:19: error: variable a is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long a = Math.abs(a);\n        \
    \     ^\n/tmp/tmpm8qqnhj9.java:20: error: variable b is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long b = Math.abs(b);\n        \
    \     ^\n/tmp/tmpm8qqnhj9.java:21: error: variable c is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long c = Math.abs(c);\n        \
    \     ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011221
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long abSqrSum = (b * b) - (4 * a * c);\n        long bcSqrSum\
    \ = (b * b) - (2 * a * c);\n        return abSqrSum >= 0 && bcSqrSum >= 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp11a_lrpw.java:24)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long bsq = b * b, b2sq = b * b;\n        long ac = acc(a\
    \ + c), bc = bc(a + c), ac2 = acc(ac), bc2 = bc(bc);\n        long ac3 = acc(ac),\
    \ bc3 = bc(bc);\n        if (a > c && b > c) {\n            return (b2 * ac3 -\
    \ bc * ac2 > 0);\n        }\n        if (a > c && b < c) {\n            return\
    \ (b2 * ac3 - bc * ac2 > 0);\n        }\n        if (b > c && a < c) {\n     \
    \       return (ac2 * bc3 - ac3 * bc2 > 0);\n        }\n        if (b > c && a\
    \ > c) {\n            return (ac2 * bc3 - ac3 * bc2 > 0);\n        }\n       \
    \ return (b2sq - 4 * a2(bc) - a2(bc2) > 0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5lualp16.java:20: error: cannot find symbol\n        long ac =\
    \ acc(a + c), bc = bc(a + c), ac2 = acc(ac), bc2 = bc(bc);\n                 \
    \ ^\n  symbol:   method acc(long)\n  location: class Problem\n/tmp/tmp5lualp16.java:20:\
    \ error: cannot find symbol\n        long ac = acc(a + c), bc = bc(a + c), ac2\
    \ = acc(ac), bc2 = bc(bc);\n                                   ^\n  symbol:  \
    \ method bc(long)\n  location: class Problem\n/tmp/tmp5lualp16.java:20: error:\
    \ cannot find symbol\n        long ac = acc(a + c), bc = bc(a + c), ac2 = acc(ac),\
    \ bc2 = bc(bc);\n                                                    ^\n  symbol:\
    \   method acc(long)\n  location: class Problem\n/tmp/tmp5lualp16.java:20: error:\
    \ cannot find symbol\n        long ac = acc(a + c), bc = bc(a + c), ac2 = acc(ac),\
    \ bc2 = bc(bc);\n                                                            \
    \       ^\n  symbol:   method bc(long)\n  location: class Problem\n/tmp/tmp5lualp16.java:21:\
    \ error: cannot find symbol\n        long ac3 = acc(ac), bc3 = bc(bc);\n     \
    \              ^\n  symbol:   method acc(long)\n  location: class Problem\n/tmp/tmp5lualp16.java:21:\
    \ error: cannot find symbol\n        long ac3 = acc(ac), bc3 = bc(bc);\n     \
    \                             ^\n  symbol:   method bc(long)\n  location: class\
    \ Problem\n/tmp/tmp5lualp16.java:23: error: cannot find symbol\n            return\
    \ (b2 * ac3 - bc * ac2 > 0);\n                    ^\n  symbol:   variable b2\n\
    \  location: class Problem\n/tmp/tmp5lualp16.java:26: error: cannot find symbol\n\
    \            return (b2 * ac3 - bc * ac2 > 0);\n                    ^\n  symbol:\
    \   variable b2\n  location: class Problem\n/tmp/tmp5lualp16.java:34: error: cannot\
    \ find symbol\n        return (b2sq - 4 * a2(bc) - a2(bc2) > 0);\n           \
    \                ^\n  symbol:   method a2(long)\n  location: class Problem\n/tmp/tmp5lualp16.java:34:\
    \ error: cannot find symbol\n        return (b2sq - 4 * a2(bc) - a2(bc2) > 0);\n\
    \                                    ^\n  symbol:   method a2(long)\n  location:\
    \ class Problem\n10 errors\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double angle = Math.abs((b - a) * (c - a) / (b - a));\n \
    \       return angle <= 1.0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqwerj2_.java:23)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = b - a; \n        long ac = c - a;\n        long\
    \ abc = ab * ac;\n        long abd = b * c - a * b;\n        long acd = c * c\
    \ - a * c;\n        long b = acd / abd;\n        long a = abc / abc;\n       \
    \ boolean isRight = Math.abs(b) > Math.abs(a);\n        return (isRight && a *\
    \ a + b * b - ac * ac == 0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpun7nwlwf.java:24: error: variable b is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long b = acd / abd;\n          \
    \   ^\n/tmp/tmpun7nwlwf.java:25: error: variable a is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        long a = abc / abc;\n          \
    \   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a - b;\n        long ac = a - c;\n        long\
    \ bc = b - c;\n\n        long sum = Math.abs(ab + bc + ac);\n        double ah\
    \ = Math.abs((ab + bc) / sum);\n        double bh = Math.abs((bc + ac) / sum);\n\
    \n        if (ah >= bh) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mu00jvf.java:34)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a + b) > c || (a + c) > b || (b + c) > a) return true;\n\
    \        else return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyrfcq0xt.java:24)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a > b)&&(b > c) || (b > a)&&(b > c) || (a > b)&&(b\
    \ > c);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5p883roy.java:22)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double sideA = Math.abs(a), sideB = Math.abs(b), sideC =\
    \ Math.abs(c);\n        double sideAC = Math.sqrt(sideA * sideA + sideB * sideB),\
    \ sideBC = Math.sqrt(sideB * sideB + sideC * sideC);\n        return (sideAC ==\
    \ sideBC) ? sideAC > 0 : sideAC < sideBC;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg9256izs.java:25)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a * b * c == a * b * c);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpex6dq8su.java:23)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long angle1 = Math.sqrt((b * b) - (4 * a * c));\n       \
    \ long angle2 = Math.sqrt((3 * a * c) - (b * b));\n        return angle1 > (angle2\
    \ ? angle1 : angle2);\n    }\n    public static void main(String[] args) {\n \
    \   assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ogubu0q.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long angle1 = Math.sqrt((b * b) - (4 * a * c));\n\
    \                               ^\n/tmp/tmp1ogubu0q.java:20: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long angle2 =\
    \ Math.sqrt((3 * a * c) - (b * b));\n                               ^\n/tmp/tmp1ogubu0q.java:21:\
    \ error: incompatible types: long cannot be converted to boolean\n        return\
    \ angle1 > (angle2 ? angle1 : angle2);\n                         ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = a-b;\n        long ac = c-a;\n        long bc =\
    \ b-c;\n        if (ab==ac && ab==bc)\n            return true;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcio0pd8b.java:27)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long sideOne = getSidneOf(a, b, c, true);\n        long sideTwo\
    \ = getSidneOf(a, b, c, false);\n        long sideThree = getSidneOf(a, b, c,\
    \ false);\n        return (sideOne == sideTwo || sideOne == sideThree);\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2dr3_aeo.java:19: error: cannot find symbol\n        long sideOne\
    \ = getSidneOf(a, b, c, true);\n                       ^\n  symbol:   method getSidneOf(long,long,long,boolean)\n\
    \  location: class Problem\n/tmp/tmp2dr3_aeo.java:20: error: cannot find symbol\n\
    \        long sideTwo = getSidneOf(a, b, c, false);\n                       ^\n\
    \  symbol:   method getSidneOf(long,long,long,boolean)\n  location: class Problem\n\
    /tmp/tmp2dr3_aeo.java:21: error: cannot find symbol\n        long sideThree =\
    \ getSidneOf(a, b, c, false);\n                         ^\n  symbol:   method\
    \ getSidneOf(long,long,long,boolean)\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a>b+c || b>a+c || c>a+b);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpw0_mda.java:22)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (b != 0) {\n            long ab = b - a;\n           \
    \ long ac = c - a;\n            long bc = b - c;\n            long abc = ab -\
    \ bc;\n            long acb = ac - bc;\n\n            if (abc > acb) {\n     \
    \           return true;\n            }\n        }\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo6uodgd0.java:33)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(b * b - a * c - a) < Double.Epsilon;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3249add6.java:19: error: cannot find symbol\n        return Math.abs(b\
    \ * b - a * c - a) < Double.Epsilon;\n                                       \
    \            ^\n  symbol:   variable Epsilon\n  location: class Double\n1 error\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.sqrt(a * a + b * b) == Math.sqrt(c * c + a\
    \ * a)) || (Math.sqrt(a * a + b * b) == Math.sqrt(c * c + b * b)));\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32zmse69.java:22)\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean a = Math.abs(a) > Math.abs(b) && Math.abs(b) > Math.abs(c)\
    \ && Math.abs(c) > Math.abs(a);\n        boolean b = Math.abs(a) > Math.abs(b)\
    \ && Math.abs(b) > Math.abs(c) && Math.abs(c) > Math.abs(a);\n        boolean\
    \ c = Math.abs(a) > Math.abs(b) && Math.abs(b) > Math.abs(c) && Math.abs(c) >\
    \ Math.abs(a);\n        return a && b && c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnoyc_6zz.java:19: error: variable a is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        boolean a = Math.abs(a) > Math.abs(b)\
    \ && Math.abs(b) > Math.abs(c) && Math.abs(c) > Math.abs(a);\n               \
    \ ^\n/tmp/tmpnoyc_6zz.java:19: error: no suitable method found for abs(boolean)\n\
    \        boolean a = Math.abs(a) > Math.abs(b) && Math.abs(b) > Math.abs(c) &&\
    \ Math.abs(c) > Math.abs(a);\n                        ^\n    method Math.abs(int)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ int)\n    method Math.abs(long) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to long)\n    method Math.abs(float) is not applicable\n\
    \      (argument mismatch; boolean cannot be converted to float)\n    method Math.abs(double)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ double)\n/tmp/tmpnoyc_6zz.java:19: error: no suitable method found for abs(boolean)\n\
    \        boolean a = Math.abs(a) > Math.abs(b) && Math.abs(b) > Math.abs(c) &&\
    \ Math.abs(c) > Math.abs(a);\n                                               \
    \                                                 ^\n    method Math.abs(int)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ int)\n    method Math.abs(long) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to long)\n    method Math.abs(float) is not applicable\n\
    \      (argument mismatch; boolean cannot be converted to float)\n    method Math.abs(double)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ double)\n/tmp/tmpnoyc_6zz.java:20: error: variable b is already defined in method\
    \ rightAngleTriangle(long,long,long)\n        boolean b = Math.abs(a) > Math.abs(b)\
    \ && Math.abs(b) > Math.abs(c) && Math.abs(c) > Math.abs(a);\n               \
    \ ^\n/tmp/tmpnoyc_6zz.java:20: error: no suitable method found for abs(boolean)\n\
    \        boolean b = Math.abs(a) > Math.abs(b) && Math.abs(b) > Math.abs(c) &&\
    \ Math.abs(c) > Math.abs(a);\n                        ^\n    method Math.abs(int)\
    \ is not "
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a == b) \n            return (c > a); \n        if (a\
    \ == c) \n            return (c > b); \n        if (b == c) \n            return\
    \ (c > a); \n\n        if (b > c) {\n            long temp = a;\n            a\
    \ = b;\n            b = temp;\n            temp = c;\n            c = temp;\n\
    \        }\n\n        if ((a + b) <= c && c < (a + b + c)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz8ahs23e.java:40)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        if (Math.abs(a) > Math.max(Math.abs(b),\
    \ Math.abs(c))) {\n            throw new IllegalArgumentException(\"Sides must\
    \ be greater than the length of common side.\");\n        }\n        long common\
    \ = Math.abs(Math.min(a, b, c));\n        if (a==common && b==common && c==common)\
    \ {\n            return true;\n        } else if (a==common || b==common || c==common)\
    \ {\n            return false;\n        } else {\n            return true;\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplpk0bpeo.java:23: error: no suitable method found for min(long,long,long)\n\
    \        long common = Math.abs(Math.min(a, b, c));\n                        \
    \           ^\n    method Math.min(int,int) is not applicable\n      (actual and\
    \ formal argument lists differ in length)\n    method Math.min(long,long) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n    method\
    \ Math.min(float,float) is not applicable\n      (actual and formal argument lists\
    \ differ in length)\n    method Math.min(double,double) is not applicable\n  \
    \    (actual and formal argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if((b - c) == 0) {\n            return (true);\n        }\n\
    \        if((a*a + b*b) >= (c*c)) {\n            if(((b-a)*(c-b)) > 0) {\n   \
    \             return (true);\n            }\n        }\n        return (false);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuiiookgd.java:32)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long sideA = Math.abs(a);\n        long sideB = Math.abs(b);\n\
    \        long sideC = Math.abs(c);\n        double angleA, angleB, angleC;\n \
    \       double angle = 0;\n        boolean isRightAngle = false;\n\n        //\
    \ We need to check if any side is 0 length\n        if ((a == 0) || (b == 0) ||\
    \ (c == 0)) {\n            return false;\n        }\n\n        // If any side\
    \ is greater than 360, we cannot determine if it is right angle or not\n     \
    \   if ((sideA > 360) || (sideB > 360) || (sideC > 360)) {\n            return\
    \ false;\n        }\n\n        // Get the difference of sides\n        long differenceA\
    \ = (sideA - sideB);\n        long differenceB = (sideB - sideC);\n        long\
    \ differenceC = (sideC - sideA);\n\n        // Calculate the angle of difference\
    \ between sides\n        angleA = Math.toDegrees(Math.acos((differenceA * differenceA)\
    \ / Math.pow(sideA, 2)));\n        angleB = Math.toDegrees(Math.acos((differenceB\
    \ * differenceB) / Math.pow(sideB, 2)));\n        angleC = Math.toDegrees(Math.acos((differenceC\
    \ * differenceC) / Math.pow(sideC, 2)));\n\n        angle += angleA;\n       \
    \ angle += angleB;\n        angle += angleC;\n        // If any of 3 angles is\
    \ a right angle, we have our solution\n        if ((angleA < 180 && angleB > 180)\
    \ || (angleA > 180 && angleC > 180) || (angleA < 180 && angleC > 180)) {\n   \
    \         isRightAngle = true;\n        }\n        return isRightAngle;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgx50h_sn.java:56)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = abSquare(b);\n        long ac = acSquare(c);\n\
    \        long abc = abSquare(c);\n        return abSquare(a) - abSquare(abc) ==\
    \ acSquare(abc) - acSquare(ab);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3sjhuugg.java:19: error: cannot find symbol\n        long ab =\
    \ abSquare(b);\n                  ^\n  symbol:   method abSquare(long)\n  location:\
    \ class Problem\n/tmp/tmp3sjhuugg.java:20: error: cannot find symbol\n       \
    \ long ac = acSquare(c);\n                  ^\n  symbol:   method acSquare(long)\n\
    \  location: class Problem\n/tmp/tmp3sjhuugg.java:21: error: cannot find symbol\n\
    \        long abc = abSquare(c);\n                   ^\n  symbol:   method abSquare(long)\n\
    \  location: class Problem\n/tmp/tmp3sjhuugg.java:22: error: cannot find symbol\n\
    \        return abSquare(a) - abSquare(abc) == acSquare(abc) - acSquare(ab);\n\
    \               ^\n  symbol:   method abSquare(long)\n  location: class Problem\n\
    /tmp/tmp3sjhuugg.java:22: error: cannot find symbol\n        return abSquare(a)\
    \ - abSquare(abc) == acSquare(abc) - acSquare(ab);\n                         \
    \    ^\n  symbol:   method abSquare(long)\n  location: class Problem\n/tmp/tmp3sjhuugg.java:22:\
    \ error: cannot find symbol\n        return abSquare(a) - abSquare(abc) == acSquare(abc)\
    \ - acSquare(ab);\n                                              ^\n  symbol:\
    \   method acSquare(long)\n  location: class Problem\n/tmp/tmp3sjhuugg.java:22:\
    \ error: cannot find symbol\n        return abSquare(a) - abSquare(abc) == acSquare(abc)\
    \ - acSquare(ab);\n                                                          \
    \    ^\n  symbol:   method acSquare(long)\n  location: class Problem\n7 errors\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a == b) || (c == b)) {\n            return false;\n\
    \        }\n        if ((a < c) && (b < c)) {\n            return false;\n   \
    \     }\n        long side1Diagonal = (a + b + c) * (b - a);\n        long side2Diagonal\
    \ = (b + c + a) * (c - b);\n        long side3Diagonal = (c + a + b) * (a - c);\n\
    \        return ((side1Diagonal > side2Diagonal) &&\n                (side1Diagonal\
    \ > side3Diagonal));\n    }\n    public static void main(String[] args) {\n  \
    \  assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56ksmcw4.java:32)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.min(a, b), Math.max(a, b), Math.min(c, b))\
    \ < \n                (Math.max(a), Math.min(a), Math.max(a)));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1gzaomdy.java:19: error: ')' expected\n        return ((Math.min(a,\
    \ b), Math.max(a, b), Math.min(c, b)) < \n                               ^\n/tmp/tmp1gzaomdy.java:19:\
    \ error: ';' expected\n        return ((Math.min(a, b), Math.max(a, b), Math.min(c,\
    \ b)) < \n                                               ^\n/tmp/tmp1gzaomdy.java:19:\
    \ error: ';' expected\n        return ((Math.min(a, b), Math.max(a, b), Math.min(c,\
    \ b)) < \n                                                               ^\n/tmp/tmp1gzaomdy.java:20:\
    \ error: illegal start of type\n                (Math.max(a), Math.min(a), Math.max(a)));\n\
    \                ^\n/tmp/tmp1gzaomdy.java:20: error: ';' expected\n          \
    \      (Math.max(a), Math.min(a), Math.max(a)));\n                           \
    \ ^\n/tmp/tmp1gzaomdy.java:20: error: ';' expected\n                (Math.max(a),\
    \ Math.min(a), Math.max(a)));\n                                         ^\n/tmp/tmp1gzaomdy.java:20:\
    \ error: ';' expected\n                (Math.max(a), Math.min(a), Math.max(a)));\n\
    \                                                      ^\n7 errors\n"
  stdout: ''
  timestamp: 1660011222
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Return true if a right angle triangle\n        // If the\
    \ first three sides are equal then it is a right angle triangle \n        if ((a==b)\
    \ && (b==c))\n            return true;\n        // If the first three sides are\
    \ not equal then we are dealing with \n        // a right angle triangle\n   \
    \     if ((a!=b) && (b!=c))\n            return false;\n        // Now the tricky\
    \ part, we need to check if the first two sides are \n        // 90 degree\n \
    \       if (a==0l && b==0l && c==0l)\n            return true;\n        // If\
    \ any of the three sides are 90 degree then it is not \n        // right angle\
    \ triangle\n        if ((a!=0l) && (b!=0l) && (c!=0l))\n            return false;\n\
    \        // So now we need to check if the sides are parallel, if they are \n\
    \        // parallel then it is not right angle triangle\n        if (a==0l ||\
    \ b==0l || c==0l)\n            return false;\n        // All the above checks\
    \ are passed, now we check the angle\n        if ((a>b) && (b>c))\n          \
    \  return true;\n        if ((a>b) && (b>c))\n            return true;\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7h6aeqgt.java:47)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double l = (double)Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n        double u = (double)Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n\
    \        double d= (u / l);\n\n        double f= ((Math.sqrt(Math.pow(a, 2) -\
    \ Math.pow(b, 2)) / l) - (Math.sqrt(Math.pow(c, 2) - Math.pow(a, 2)) / l));\n\n\
    \        if(Math.abs(d) < 0.000000001) {\n            if((Math.pow(f, 2)) == ((Math.pow(a,\
    \ 2) + Math.pow(b, 2)))){\n                return true;\n            } else {\n\
    \                return false;\n            }\n        } else {\n            return\
    \ false;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1fxf8bq.java:36)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Get the length of the sides of the triangle\n        double\
    \ d0 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        double d1 = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n        double d2 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n\n        // Return true if the lengths of the sides are equal\n     \
    \   return (Math.abs(d1 - d0) < 0.00001) && (Math.abs(d2 - d0) < 0.00001);\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpannvj58s.java:28)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (((a + b > c) || (b + c > a)) && !(((a + c > b) ||\
    \ (b + a > c))) && !(Math.sqrt((a * a) + (b * b) + (c * c)) < 1.0));\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0lxainhy.java:22)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long s = (a*a + b*b - c*c)/2l;\n        if (s > 0l)\n   \
    \         return true;\n        return ((-b + Math.sqrt(s))/(2 * a)) > ((-b -\
    \ Math.sqrt(s))/(2 * a));\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zb52uwb.java:25)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        Long aInt = new Long(a);\n        Long bInt = new Long(b);\n\
    \        Long cInt = new Long(c);\n        Long aLong = aInt.longValue();\n  \
    \      Long bLong = bInt.longValue();\n        Long cLong = cInt.longValue();\n\
    \n        if (aLong * bLong != cLong * aLong) {\n            return false;\n \
    \       }\n\n        BigDecimal aDecimal = new BigDecimal(aLong);\n        BigDecimal\
    \ bDecimal = new BigDecimal(bLong);\n        BigDecimal cDecimal = new BigDecimal(cLong);\n\
    \        BigDecimal aDecimalBig = (aDecimal).divide(BigDecimal.ONE);\n       \
    \ BigDecimal bDecimalBig = (bDecimal).divide(BigDecimal.ONE);\n        BigDecimal\
    \ cDecimalBig = (cDecimal).divide(BigDecimal.ONE);\n\n        if (aDecimalBig.compareTo(bDecimalBig)\
    \ != 0) {\n            return false;\n        }\n\n        if (aDecimalBig.compareTo(cDecimalBig)\
    \ != 0) {\n            return false;\n        }\n\n        BigDecimal aBigDec\
    \ = aDecimalBig.multiply(BigDecimal.ONE);\n        BigDecimal bBigDec = bDecimalBig.multiply(BigDecimal.ONE);\n\
    \        BigDecimal cBigDec = cDecimalBig.multiply(BigDecimal.ONE);\n\n      \
    \  if (aBigDec.compareTo(bBigDec) == 0) {\n            if (cBigDec.compareTo(bBigDec)\
    \ == 0) {\n                if (bBigDec.compareTo(cBigDec) == 0) {\n          \
    \          return true;\n                }\n            }\n        }\n\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kz9uqwy.java:60)\n"
  stdout: ''
  timestamp: 1660011223
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long ab = Math.hypot(a,b);\n        long bc = Math.hypot(b,c);\n\
    \        long ac = Math.hypot(a,c);\n        return (ab>bc)&&(ab>ac);\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbaojjpwd.java:19: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long ab = Math.hypot(a,b);\n                  \
    \          ^\n/tmp/tmpbaojjpwd.java:20: error: incompatible types: possible lossy\
    \ conversion from double to long\n        long bc = Math.hypot(b,c);\n       \
    \                     ^\n/tmp/tmpbaojjpwd.java:21: error: incompatible types:\
    \ possible lossy conversion from double to long\n        long ac = Math.hypot(a,c);\n\
    \                            ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011223

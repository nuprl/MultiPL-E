language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // TODO Auto-generated\
    \ method stub\n        int i=0,j=0;\n        long sum=0;\n        for(i=0;i<nums.size();i++){\n\
    \            for(j=i;j<nums.size();j++){\n                if(nums.get(i)>10&&(nums.get(j)%2==0&&nums.get(j)%2==0)){\n\
    \                    sum=sum+nums.get(j);\n                }\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7_o6mfs.java:32)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            count += getSumOfDigits(num);\n\
    \            count += getSumOfOddAndFirstOdd(num);\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxyj9gukg.java:20: error: cannot find symbol\n            count\
    \ += getSumOfDigits(num);\n                     ^\n  symbol:   method getSumOfDigits(Long)\n\
    \  location: class Problem\n/tmp/tmpxyj9gukg.java:21: error: cannot find symbol\n\
    \            count += getSumOfOddAndFirstOdd(num);\n                     ^\n \
    \ symbol:   method getSumOfOddAndFirstOdd(Long)\n  location: class Problem\n2\
    \ errors\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Initialize\
    \ a variable to hold the number of odd first and last digits\n        long oddFirst\
    \ = 0, oddLast = 0, numsCount = 0;\n        // Initialize the number of elements\
    \ in nums\n        long numElements = nums.size();\n        // Iterate over each\
    \ element of nums\n        for (int i = 0; i < numElements; i++) {\n         \
    \   // Get the number in nums at position i\n            long num = nums.get(i);\n\
    \            // Determine if num is greater than 10 and if the first and last\
    \ digits\n            // are odd.\n            if (num > 10 && oddFirst % 2 ==\
    \ 1 && oddLast % 2 == 1) {\n                // If so, increment the number of\
    \ odd first and last digits\n                oddFirst++;\n                oddLast++;\n\
    \                // Increment the number of even first and last digits\n     \
    \           numsCount++;\n            }\n        }\n        // Return the number\
    \ of odd first and last digits\n        return numsCount;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpginnl1t6.java:41)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long odd\
    \ = (Long) nums.stream()\n                .filter(i -> i % 2 == 1)\n         \
    \       .count();\n        Long even = (Long) nums.stream()\n                .filter(i\
    \ -> i % 2 == 0)\n                .count();\n        return (odd==2 & even==1)\
    \ ? nums.stream().filter( i -> i%2 == 1 & i%2 == 0).count() : nums.stream().filter(\
    \ i -> i%2 == 0 & i%2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp165ljje7.java:28)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long i : nums) {\n            if (i > 10 && i % 2 == 0 &&\
    \ i % 2 != 0 && i % 2 != 1) {\n                result++;\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7hj0hvj.java:28)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total=0;\n\
    \        for(Long num: nums) {\n            if(num>10 && num%2!=0 && num%2!=1)\
    \ total++;\n        }\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdexlyi4.java:26)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = nums.stream().filter(x -> x > 10).filter(x -> isOdd(x) && isOdd(x-1)).count();\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ppuv5bq.java:18: error: cannot find symbol\n        long count\
    \ = nums.stream().filter(x -> x > 10).filter(x -> isOdd(x) && isOdd(x-1)).count();\n\
    \                                                                   ^\n  symbol:\
    \   method isOdd(Long)\n  location: class Problem\n/tmp/tmp5ppuv5bq.java:18: error:\
    \ cannot find symbol\n        long count = nums.stream().filter(x -> x > 10).filter(x\
    \ -> isOdd(x) && isOdd(x-1)).count();\n                                      \
    \                                         ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long numberCount\
    \ = 1;\n        for (long number: nums) {\n            int firstDigit = number\
    \ % 10;\n            int lastDigit = number / 10;\n\n            // check if both\
    \ digits are odd\n            if (firstDigit % 2 != lastDigit % 2) {\n       \
    \         numberCount++;\n            }\n\n            // check if first digit\
    \ odd\n            if (firstDigit % 2 == 1) {\n                // check if last\
    \ digit odd\n                if (lastDigit % 2 == 1) {\n                    numberCount++;\n\
    \                }\n            }\n        }\n        return numberCount;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa26fy_ds.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int firstDigit = number % 10;\n              \
    \                      ^\n/tmp/tmpa26fy_ds.java:21: error: incompatible types:\
    \ possible lossy conversion from long to int\n            int lastDigit = number\
    \ / 10;\n                                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        ArrayList<Long>\
    \ newNums = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            Long num = nums.get(i);\n            if (num > 10 && num.getFirstDigit()\
    \ % 2 != 0 && num.getLastDigit() % 2 != 0) {\n                newNums.add(num);\n\
    \            }\n        }\n        if (newNums.size() == 0) {\n            return\
    \ 0;\n        }\n        return newNums.get(newNums.size() - 1);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2k_20768.java:21: error: cannot find symbol\n            if (num\
    \ > 10 && num.getFirstDigit() % 2 != 0 && num.getLastDigit() % 2 != 0) {\n   \
    \                            ^\n  symbol:   method getFirstDigit()\n  location:\
    \ variable num of type Long\n/tmp/tmp2k_20768.java:21: error: cannot find symbol\n\
    \            if (num > 10 && num.getFirstDigit() % 2 != 0 && num.getLastDigit()\
    \ % 2 != 0) {\n                                                              \
    \ ^\n  symbol:   method getLastDigit()\n  location: variable num of type Long\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int size\
    \ = nums.size();\n        long result = 0;\n        for(int i = 0; i<size; i++)\
    \ {\n            if (nums.get(i) > 10 && nums.get(i) % 2 == 1 && nums.get(i%2)\
    \ == 1) {\n                result += nums.get(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0wwrn1k.java:29)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long numsWithNumbersGreaterThan10\
    \ = 0;\n        long lastOddDigitsOfNum = 0;\n        for (Long num : nums) {\n\
    \            if (num > 10) {\n                numsWithNumbersGreaterThan10++;\n\
    \                lastOddDigitsOfNum = num % 10;\n            }\n        }\n  \
    \      if (numsWithNumbersGreaterThan10 == nums.size() && lastOddDigitsOfNum %\
    \ 2 != 0) {\n            return numsWithNumbersGreaterThan10;\n        } else\
    \ {\n            return 0;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_knk3qts.java:34)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // write\
    \ your code here\n        long result = 0;\n        for (long num : nums) {\n\
    \            if(num > 10 && num % 2 != 0 && num % 2 != 1 && num % 2 != 3 && num\
    \ % 2 != 5 && num % 2 != 7 && num % 2 != 9) {\n                result++;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi5nh2g7g.java:29)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long oddFirst\
    \ = 0;\n        long oddLast = 0;\n        for(int i = 0; i < nums.size(); i++)\
    \ {\n            long firstDigit = nums.get(i);\n            long lastDigit =\
    \ nums.get(i-1);\n            int firstIsOdd = (firstDigit & 0x01) != 0;\n   \
    \         int lastIsOdd = (lastDigit & 0x01) != 0;\n            if(firstIsOdd\
    \ && lastIsOdd) {\n                oddFirst++;\n                oddLast++;\n \
    \           }\n        }\n        long oddCount = (oddFirst * 2) + (oddLast *\
    \ 2);\n        long oddPercent = ((double) oddCount) / nums.size();\n        return\
    \ oddCount;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3mlg_emz.java:23: error: incompatible types: boolean cannot be\
    \ converted to int\n            int firstIsOdd = (firstDigit & 0x01) != 0;\n \
    \                                                ^\n/tmp/tmp3mlg_emz.java:24:\
    \ error: incompatible types: boolean cannot be converted to int\n            int\
    \ lastIsOdd = (lastDigit & 0x01) != 0;\n                                     \
    \          ^\n/tmp/tmp3mlg_emz.java:25: error: bad operand types for binary operator\
    \ '&&'\n            if(firstIsOdd && lastIsOdd) {\n                          ^\n\
    \  first type:  int\n  second type: int\n/tmp/tmp3mlg_emz.java:31: error: incompatible\
    \ types: possible lossy conversion from double to long\n        long oddPercent\
    \ = ((double) oddCount) / nums.size();\n                                     \
    \         ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream()\n\
    \            .filter(x -> x > 10l)\n            .filter(x -> {\n             \
    \   int first = (int) (x % 10l);\n                int last = (int) (x / 10l);\n\
    \                return ((first * last) % 2) != 0;\n            })\n         \
    \   .count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55yqlj4h.java:30)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int oddNumberCounter\
    \ = 0;\n        int evenNumberCounter = 0;\n        long sum = 0;\n        for\
    \ (Long num : nums) {\n            if (num % 2 != 0) {\n                evenNumberCounter++;\n\
    \            } else {\n                oddNumberCounter++;\n            }\n  \
    \          sum += num;\n        }\n        return oddNumberCounter + evenNumberCounter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdxmr5f08.java:32)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long numsLen\
    \ = nums.size();\n        if (numsLen < 1 || numsLen > 100000000) return 0;\n\
    \        \n        // write code here\n        \n        return 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz9uv7x2x.java:27)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return nums.stream().filter(a -> a>10).filter(a -> a%2==1&&a%10==1).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_pc9c95.java:23)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long evenNums\
    \ = 0;\n        long oddNums = 0;\n        for (long num : nums) {\n         \
    \   if (num > 10) {\n                if (num % 2 != 0) {\n                   \
    \ evenNums++;\n                }\n                if (num % 2 != 1) {\n      \
    \              oddNums++;\n                }\n            }\n        }\n     \
    \   return (evenNums * 2 +\n                oddNums) / 2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8rrp30q.java:36)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            Long intNum = Long.valueOf(num.toString());\n\
    \            if(intNum > 10l && intNum.getLeastSignificantBits() & 1l == 1l &&\
    \ num.getLeastSignificantBits() & 1l == 1l) {\n                ++count;\n    \
    \        }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_0zmxvgd.java:21: error: cannot find symbol\n            if(intNum\
    \ > 10l && intNum.getLeastSignificantBits() & 1l == 1l && num.getLeastSignificantBits()\
    \ & 1l == 1l) {\n                                     ^\n  symbol:   method getLeastSignificantBits()\n\
    \  location: variable intNum of type Long\n/tmp/tmp_0zmxvgd.java:21: error: cannot\
    \ find symbol\n            if(intNum > 10l && intNum.getLeastSignificantBits()\
    \ & 1l == 1l && num.getLeastSignificantBits() & 1l == 1l) {\n                \
    \                                                                 ^\n  symbol:\
    \   method getLeastSignificantBits()\n  location: variable num of type Long\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int count\
    \ = 0;\n        for (Long number : nums) {\n            if (number > 10) {\n \
    \               boolean odd = number % 2 != 0;\n                boolean firstOdd\
    \ = number / 1000 % 2 != 0;\n                boolean lastOdd = number / 100 %\
    \ 2 != 0;\n                if (odd && firstOdd && lastOdd) {\n               \
    \     count++;\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19sf6khn.java:33)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long l : nums) {\n            if (l > 10 && ((l / 10) % 2\
    \ == 1)) {\n                sum += l;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_csk2dw.java:28)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0l;\n        for(int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10l && nums.get(i) % 2 == 0 && nums.get(i) / 2 % 2 != 0) {\n             \
    \   result ++;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc265cn1e.java:29)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long x : nums) {\n            int firstOdd = (int) (x / 10);\n\
    \            int lastOdd = (int) (x % 10);\n            if (firstOdd != lastOdd)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp77o01kfr.java:29)\n"
  stdout: ''
  timestamp: 1660011647
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10l && ((n % 10) % 2 != 0) && ((n % 100) % 2 == 1)).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhswoijp.java:23)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0l;\n        for (long num : nums) {\n            if (num > 10 && num % 2\
    \ == 1 && num % 2 == 0) {\n                total++;\n            }\n        }\n\
    \        return total;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xg_n3an.java:28)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Set<Long>\
    \ numbers = new HashSet<Long>();\n        for (Long num : nums) {\n          \
    \  long first = num / 10;\n            long last = num % 10;\n            if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                numbers.add(num);\n          \
    \  }\n        }\n        return numbers.size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32w0xjkv.java:30)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        if (nums.isEmpty()) return result;\n        boolean isAllOdd =\
    \ true;\n        for (Long num : nums) {\n            if (num%2 == 0) isAllOdd\
    \ = false;\n        }\n        if (isAllOdd && nums.get(0)%2 == 0 && nums.get(nums.size()-1)%2\
    \ == 1) {\n            result = nums.size();\n        } else {\n            for\
    \ (Long num : nums) {\n                if (num > 10 && num%2 == 0 && nums.get(0)\
    \ % 2 == 1 && nums.get(nums.size()-1) % 2 == 1) {\n                    result\
    \ += 1;\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzskg4i1.java:37)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0L;\n        for (long num : nums) {\n            if (num > 10 && num % 2\
    \ == 1 && num % 2 != 0) {\n                result = result + 1L;\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3sh17e6w.java:29)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int n = nums.size();\n\
    \        long total = 0;\n        for(int i = 0; i < n; ++i) {\n            long\
    \ num = nums.get(i);\n            long first = num;\n            long last = num;\n\
    \            int j;\n            while(true) {\n                num = num * 10;\n\
    \                j = 0;\n                while(num > 0) {\n                  \
    \  long digit = num % 10;\n                    last = digit;\n               \
    \     num = num / 10;\n                    ++j;\n                }\n         \
    \       if(last % 2 == 1 && j > 1) {\n                    break;\n           \
    \     }\n            }\n            total += j;\n        }\n        return total;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        boolean oddEven = true;\n        for(long num : nums) {\n    \
    \        oddEven = oddEven && num % 2 == 0;\n            sum = sum + num;\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2bcnt5w.java:27)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0L;\n        for(long num : nums) {\n            if(num > 10 && num % 2 !=\
    \ 0 && num % 2 != 1 && num % 2 != 3) {\n                count++;\n           \
    \ }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanapm0_b.java:28)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            double val = num.doubleValue();\n\
    \            double firstVal = (val % 10);\n            double secondVal = (val\
    \ / 10);\n            if (firstVal % 2 != 0 && secondVal % 2 != 0) {\n       \
    \         result++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpygewqnv4.java:20: error: long cannot be dereferenced\n        \
    \    double val = num.doubleValue();\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011648
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1 && num % 100 != 0) {\n                count++;\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_wmkbma.java:28)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        ArrayList<Long>\
    \ newList = new ArrayList<Long>();\n        for (Long i : nums) {\n          \
    \  int firstHalf = (int) (i / 10000);\n            int secondHalf = (int) (i %\
    \ 10000);\n            boolean isOdd1 = firstHalf % 2 == 1;\n            boolean\
    \ isOdd2 = secondHalf % 2 == 1;\n            if ((isOdd1 && isOdd2) || (!isOdd1\
    \ && !isOdd2)) {\n                newList.add(i);\n            }\n        }\n\
    \        return newList.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpt1wqn5.java:31)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num/10 % 2\
    \ == 1 && num%10%2 == 1) {\n                result++;\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuw1vqvha.java:29)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        ArrayList<Long>\
    \ filtered = new ArrayList<Long>();\n        for (long i: nums) {\n          \
    \  if (i >= 10 && i % 2 != 0 && i % 10 == 1) {\n                filtered.add(i);\n\
    \            }\n        }\n        return filtered.size();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jcefb3z.java:28)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long count\
    \ = 0;\n        if (nums.isEmpty()) return count;\n        // check first and\
    \ last element\n        if (nums.get(0) % 2 == 0 && nums.get(nums.size() - 1)\
    \ % 2 == 0) {\n            Long digitOne = nums.get(0);\n            Long digitTwo\
    \ = nums.get(nums.size() - 1);\n            long firstDigit = digitOne % 10;\n\
    \            long lastDigit = digitTwo % 10;\n            boolean oddFirst = (firstDigit\
    \ % 2 == 1);\n            boolean oddLast = (lastDigit % 2 == 1);\n          \
    \  if (oddFirst && oddLast) {\n                count++;\n            }\n     \
    \       if (firstDigit != lastDigit && oddFirst && !oddLast) {\n             \
    \   count++;\n            }\n            if (firstDigit != lastDigit && !oddFirst\
    \ && oddLast) {\n                count++;\n            }\n        }\n        //\
    \ check all elements\n        else {\n            for (Long num : nums) {\n  \
    \              Long digitOne = num % 10;\n                Long digitTwo = num\
    \ / 10;\n                long firstDigit = digitOne % 10;\n                long\
    \ lastDigit = digitTwo % 10;\n                boolean oddFirst = (firstDigit %\
    \ 2 == 1);\n                boolean oddLast = (lastDigit % 2 == 1);\n        \
    \        if (oddFirst && oddLast) {\n                    count++;\n          \
    \      }\n                if (firstDigit != lastDigit && oddFirst && !oddLast)\
    \ {\n                    count++;\n                }\n                if (firstDigit\
    \ != lastDigit && !oddFirst && oddLast) {\n                    count++;\n    \
    \            }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4jr54qbo.java:18: error: incompatible types: int cannot be converted\
    \ to Long\n        Long count = 0;\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // write\
    \ your logic here\n        long count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                long first = nums.get(i)\
    \ % (10 * 10 + 1);\n                long last = nums.get(i) % (10 * 10 + 9);\n\
    \                if (first % 2 == 0 && last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv5fq8k96.java:33)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        \n        // use streams to get your result easily\n        result\
    \ = nums.stream().filter(num -> num > 10l && num.get(0)%2l && num.get((num.size()-1)%2l)\
    \ == 1).count() + \n            nums.stream().filter(num -> num > 10l && num.get(0)%2l\
    \ && num.get((num.size()-1)%2l) == 1).count();\n        \n        // if you can't\
    \ use streams, do it manually like you did in your code\n        // loop through\
    \ each element of your input array list\n        for (Long i : nums) {\n     \
    \       if (i > 10l && i.get(0)%2l && i.get(i.size() - 1) % 2l == 1l) {\n    \
    \            result++;\n            }\n        }\n        \n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwebqg3c0.java:21: error: cannot find symbol\n        result = nums.stream().filter(num\
    \ -> num > 10l && num.get(0)%2l && num.get((num.size()-1)%2l) == 1).count() +\
    \ \n                                                             ^\n  symbol:\
    \   method get(int)\n  location: variable num of type Long\n/tmp/tmpwebqg3c0.java:21:\
    \ error: cannot find symbol\n        result = nums.stream().filter(num -> num\
    \ > 10l && num.get(0)%2l && num.get((num.size()-1)%2l) == 1).count() + \n    \
    \                                                                            \
    \       ^\n  symbol:   method size()\n  location: variable num of type Long\n\
    /tmp/tmpwebqg3c0.java:22: error: cannot find symbol\n            nums.stream().filter(num\
    \ -> num > 10l && num.get(0)%2l && num.get((num.size()-1)%2l) == 1).count();\n\
    \                                                        ^\n  symbol:   method\
    \ get(int)\n  location: variable num of type Long\n/tmp/tmpwebqg3c0.java:22: error:\
    \ cannot find symbol\n            nums.stream().filter(num -> num > 10l && num.get(0)%2l\
    \ && num.get((num.size()-1)%2l) == 1).count();\n                             \
    \                                                     ^\n  symbol:   method size()\n\
    \  location: variable num of type Long\n/tmp/tmpwebqg3c0.java:27: error: cannot\
    \ find symbol\n            if (i > 10l && i.get(0)%2l && i.get(i.size() - 1) %\
    \ 2l == 1l) {\n                            ^\n  symbol:   method get(int)\n  location:\
    \ variable i of type Long\n/tmp/tmpwebqg3c0.java:27: error: cannot find symbol\n\
    \            if (i > 10l && i.get(0)%2l && i.get(i.size() - 1) % 2l == 1l) {\n\
    \                                                 ^\n  symbol:   method size()\n\
    \  location: variable i of type Long\n6 errors\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream()\n\
    \                .filter(i -> i > 10l && i%2l == 0 && i%2l == 1)\n           \
    \     .count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08_ulsjw.java:24)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(item\
    \ -> {\n            if(item.longValue() > 10 &&\n                    Integer.parseInt(Long.toString(item).substring(0,\
    \ 1)) % 2 != 0 &&\n                    Integer.parseInt(Long.toString(item).substring(0,\
    \ nums.size())) % 2 != 0) return true;\n            return false;\n        }).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 4, length 2\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.lambda$specialFilter$0(tmpkyedeo3p.java:21)\n\
    \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.specialFilter(tmpkyedeo3p.java:23)\n\tat Problem.main(tmpkyedeo3p.java:27)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        \n      \
    \  ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : nums)\
    \ {\n            if (i > 10) {\n                if (i % 2 == 0) {\n          \
    \          if (i % 2 != 0) {\n                        if (i % 2 != 0) {\n    \
    \                        if (i % 2 != 0) {\n                                result.add(i);\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        \n        if (result.isEmpty())\
    \ {\n            return 0;\n        } else {\n            return result.size();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzepkjik.java:42)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.size()\
    \ == 0) return 0;\n        long count = 0;\n        for (Long l : nums) {\n  \
    \          if (l.longValue() > 10 && l.longValue() % 2 != 0 && l.longValue() %\
    \ 2 != 1) count++;\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dy3wvmo.java:27)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(l\
    \ -> {\n            boolean odd = l%10%2;\n            boolean firstOdd = l%100%2;\n\
    \            return l>10 && odd == firstOdd;\n        }).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6dtyqses.java:19: error: incompatible types: long cannot be converted\
    \ to boolean\n            boolean odd = l%10%2;\n                            \
    \  ^\n/tmp/tmp6dtyqses.java:20: error: incompatible types: long cannot be converted\
    \ to boolean\n            boolean firstOdd = l%100%2;\n                      \
    \              ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        boolean odd\
    \ = false;\n        boolean firstOdd = false;\n        boolean lastOdd = false;\n\
    \        boolean firstAndLastOdd = false;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) % 2 == 0) {\n                odd = true;\n\
    \            }\n            if (nums.get(i) % 2 != 0 && odd && !firstOdd && !lastOdd)\
    \ {\n                firstOdd = true;\n            }\n            if (nums.get(i)\
    \ % 2 != 0 && odd && !firstOdd && !lastOdd && firstAndLastOdd) {\n           \
    \     firstAndLastOdd = true;\n            }\n            if (nums.get(i) % 2\
    \ != 0 && odd && !firstOdd && !lastOdd && !firstAndLastOdd) {\n              \
    \  lastOdd = true;\n            }\n        }\n        if (odd) {\n           \
    \ return 1;\n        } else if (firstOdd && firstAndLastOdd) {\n            return\
    \ 2;\n        } else {\n            return 0;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph70eon09.java:45)\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int sum =\
    \ 0;\n        for (Long number : nums) {\n            if (number > 10 && nums.get(sum\
    \ % 10).isOdd() && nums.get(sum % 10).isOdd()) {\n                sum += 1;\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjpjye4q9.java:20: error: cannot find symbol\n            if (number\
    \ > 10 && nums.get(sum % 10).isOdd() && nums.get(sum % 10).isOdd()) {\n      \
    \                                           ^\n  symbol:   method isOdd()\n  location:\
    \ class Long\n/tmp/tmpjpjye4q9.java:20: error: cannot find symbol\n          \
    \  if (number > 10 && nums.get(sum % 10).isOdd() && nums.get(sum % 10).isOdd())\
    \ {\n                                                                        \
    \       ^\n  symbol:   method isOdd()\n  location: class Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011649
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Add your\
    \ code here\n        long oddNum=0;\n        for(long num : nums) {\n        \
    \    oddNum+=num;\n        }\n        int firstOdd=nums.get(0)%10;\n        int\
    \ lastOdd=nums.get(nums.size()-1)%10;\n        if (oddNum>10&&firstOdd%2&&lastOdd%2)\
    \ {\n            return oddNum;\n        } else {\n            return 0;\n   \
    \     }\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuw9wa89n.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int firstOdd=nums.get(0)%10;\n                   \
    \             ^\n/tmp/tmpuw9wa89n.java:24: error: incompatible types: possible\
    \ lossy conversion from long to int\n        int lastOdd=nums.get(nums.size()-1)%10;\n\
    \                                           ^\n/tmp/tmpuw9wa89n.java:25: error:\
    \ bad operand types for binary operator '&&'\n        if (oddNum>10&&firstOdd%2&&lastOdd%2)\
    \ {\n                     ^\n  first type:  boolean\n  second type: int\n3 errors\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Filter\
    \ the array list to contain only those elements that are greater than 10 and \n\
    \        // the first and last digits are odd.\n        // Return only those elements\
    \ in the array list that are greater than 10 and \n        // both first and last\
    \ digits are odd.\n        // If this does not answer the question, return null.\n\
    \        ArrayList<Long> newNums = new ArrayList<Long>();\n        for (Long num\
    \ : nums) {\n            if (num > 10l && num % 10l % 2l == 1) {\n           \
    \     newNums.add(num);\n            }\n        }\n        if (newNums.size()\
    \ > 0) {\n            return newNums.get(0).longValue();\n        } else {\n \
    \           return null;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2gujg73s.java:32: error: incompatible types: <null> cannot be converted\
    \ to long\n            return null;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for (long num : nums) {\n            String str = String.valueOf(num);\n\
    \            if(str.contains(\"-\")) {\n                counter++;\n         \
    \       continue;\n            }\n            if (str.contains(\"+\")) {\n   \
    \             counter++;\n                continue;\n            }\n         \
    \   long first = (long) str.substring(0, 1);\n            long last = (long) str.substring(str.length()\
    \ - 1);\n            if (first % 2 != 0) {\n                if (last % 2 != 0)\
    \ {\n                    counter++;\n                }\n            }\n      \
    \  }\n        return counter;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt_25rkwu.java:29: error: incompatible types: String cannot be converted\
    \ to long\n            long first = (long) str.substring(0, 1);\n            \
    \                                 ^\n/tmp/tmpt_25rkwu.java:30: error: incompatible\
    \ types: String cannot be converted to long\n            long last = (long) str.substring(str.length()\
    \ - 1);\n                                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).count() \n                         + nums.stream().filter(x -> x\
    \ == 10).count()\n                         + nums.stream().filter(x -> x == x).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcy78azu.java:23)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0L;\n        for (int i = 0; i < nums.size(); i++) {\n            Long num\
    \ = nums.get(i);\n            Long first = Math.abs(num.longValue()/100);\n  \
    \          Long last = Math.abs(num.longValue()/10%10);\n            long digit1\
    \ = first%10;\n            long digit2 = last%10;\n            long sum = 0;\n\
    \            for (int j = 0; j < num.size(); j++) {\n                sum += num.get(j);\n\
    \            }\n            if (sum > 10 && sum % 10 == 0 && digit1 == 1 && digit2\
    \ == 1) {\n                total += 1;\n            }\n        }\n        return\
    \ total;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhazqgog.java:26: error: cannot find symbol\n            for (int\
    \ j = 0; j < num.size(); j++) {\n                                   ^\n  symbol:\
    \   method size()\n  location: variable num of type Long\n/tmp/tmpkhazqgog.java:27:\
    \ error: cannot find symbol\n                sum += num.get(j);\n            \
    \              ^\n  symbol:   method get(int)\n  location: variable num of type\
    \ Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count=0;\n\
    \        for (long num : nums) {\n            if(num>10 && num%2==0 && num%100!=0)\
    \ count++;\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjmio8i1c.java:27)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long[] arrNums\
    \ = new long[nums.size()];\n        arrNums = nums.stream().mapToLong(l -> l).toArray();\n\
    \n        // int count = Arrays.asList(arrNums).stream().filter(n -> n > 10).filter(n\
    \ -> n % 2 != 0).collect(Collectors.toList()).size();\n        long count = Arrays.stream(arrNums).filter(n\
    \ -> n > 10).filter(n -> n % 2 != 0).collect(Collectors.toList()).size();\n\n\
    \        long first = arrNums[0] % 10;\n        long last = arrNums[arrNums.length\
    \ - 1] % 10;\n\n        return count + Math.max(0, first % 2 == 0 || last % 2\
    \ == 0) ? 1 : 0;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphpueu51g.java:22: error: method collect in interface LongStream\
    \ cannot be applied to given types;\n        long count = Arrays.stream(arrNums).filter(n\
    \ -> n > 10).filter(n -> n % 2 != 0).collect(Collectors.toList()).size();\n  \
    \                                                                            \
    \         ^\n  required: Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>\n  found:\
    \    Collector<Object,CAP#1,List<Object>>\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R is a type-variable:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ?\n/tmp/tmphpueu51g.java:22: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        long count = Arrays.stream(arrNums).filter(n -> n > 10).filter(n\
    \ -> n % 2 != 0).collect(Collectors.toList()).size();\n                      \
    \                                                                         ^\n\
    \    (argument mismatch; no instance(s) of type variable(s) CAP#1,T exist so that\
    \ Collector<T,?,List<T>> conforms to Supplier<R>)\n  where R,T are type-variables:\n\
    \    R extends Object declared in method <R>collect(Supplier<R>,ObjLongConsumer<R>,BiConsumer<R,R>)\n\
    \    T extends Object declared in method <T>toList()\n  where CAP#1 is a fresh\
    \ type-variable:\n    CAP#1 extends Object from capture of ?\n/tmp/tmphpueu51g.java:27:\
    \ error: no suitable method found for max(int,boolean)\n        return count +\
    \ Math.max(0, first % 2 == 0 || last % 2 == 0) ? 1 : 0;\n                    \
    \       ^\n    method Math.max(int,int) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to int)\n    method Math.max(long,long) is not applicable\n\
    \      (argument mismatch; boolean cannot be converted to long)\n    method Math.max(float,float)\
    \ is not applicable\n      (argument mismatch; boolean cannot be converted to\
    \ float)\n    method Math.max(double,double) is not applicable\n      (argument\
    \ mismatch; boolean "
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long[] numsCopy\
    \ = new long[nums.size()];\n        System.arraycopy(nums.toArray(), 0, numsCopy,\
    \ 0, nums.size());\n        Arrays.sort(numsCopy);\n        long result = 0l;\n\
    \        long sum = 0l;\n        for (long i : numsCopy) {\n            if (i\
    \ > 10l && i >= 10l % 2 && i % 2 != 0l) {\n                sum++;\n          \
    \  }\n        }\n        result = sum;\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayStoreException: arraycopy:\
    \ type mismatch: can not copy object array[] into long[]\n\tat java.base/java.lang.System.arraycopy(Native\
    \ Method)\n\tat Problem.specialFilter(tmpav6plucr.java:19)\n\tat Problem.main(tmpav6plucr.java:32)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && (num / 10)\
    \ % 2 == 0 && num % 10 % 2 == 1)\n                result += num;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmv571xwd.java:27)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long numCount\
    \ = nums.size();\n        long oddCount = 0;\n        long oddSum = 0;\n     \
    \   for (long num: nums) {\n            int digit = Math.abs(num / 10);\n    \
    \        if (num % 10 >= 1) {\n                oddCount++;\n                oddSum\
    \ += digit;\n            }\n        }\n        // Count only odd numbers which\
    \ are multiple of 9.\n        boolean evenNums = numCount % 9 == 0;\n        if\
    \ (evenNums) {\n            oddSum += numCount / 9;\n        }\n        return\
    \ oddCount * 2 + oddSum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx1y2il1x.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = Math.abs(num / 10);\n            \
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num.getFirst()\
    \ % 2 == 1 && num.getLast() % 2 == 1) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptzwr8ia8.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && num.getFirst() % 2 == 1 && num.getLast() % 2 == 1) {\n             \
    \                  ^\n  symbol:   method getFirst()\n  location: variable num\
    \ of type Long\n/tmp/tmptzwr8ia8.java:20: error: cannot find symbol\n        \
    \    if (num > 10 && num.getFirst() % 2 == 1 && num.getLast() % 2 == 1) {\n  \
    \                                                        ^\n  symbol:   method\
    \ getLast()\n  location: variable num of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9it41ads.java:28)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        long count = 0;\n        for(Long num : nums) {\n            if(num\
    \ > 10l && num % 2 == 1l && num % 2 == 1l){\n                count = num;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ncm4xs3.java:29)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long ans\
    \ = 0;\n        long count = 0;\n        \n        for (int i = 0; i < nums.size();\
    \ i++) {\n            long num = nums.get(i);\n            long first = (num /\
    \ 10) % 10;\n            long last = (num / 100) % 10;\n            \n       \
    \     if (num >= 10) {\n                if (last % 2 == 1) {\n               \
    \     if (first % 2 == 1) {\n                        count++;\n              \
    \      }\n                }\n            }\n            \n            if (num\
    \ % 2 == 0) {\n                if (last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        \n        ans = count;\n\
    \        \n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiv3orz0j.java:47)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 10l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6w_dsp0k.java:28)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0;\n        for (long n : nums) {\n            if (n % 2 != 0 && n % 10 ==\
    \ 1 && n % 10 == -1) {\n                total += n;\n            }\n        }\n\
    \        return total;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppest3dw4.java:28)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Filter\
    \ out numbers greater than 10\n        ArrayList<Long> evenNums = nums.stream().filter(n\
    \ -> n%2==0).collect(Collectors.toCollection(ArrayList::new));\n        ArrayList<Long>\
    \ oddNums = nums.stream().filter(n -> n%2==1).collect(Collectors.toCollection(ArrayList::new));\n\
    \        \n        // Filter out first and last digits of numbers\n        ArrayList<Long>\
    \ oddFirst = oddNums.stream().filter(n -> n%10%2==1).collect(Collectors.toCollection(ArrayList::new));\n\
    \        ArrayList<Long> oddLast = oddNums.stream().filter(n -> n%10%2==0).collect(Collectors.toCollection(ArrayList::new));\n\
    \        \n        // Filter out first and last digits of odd numbers\n      \
    \  ArrayList<Long> evenFirst = evenNums.stream().filter(n -> n%10%2==1).collect(Collectors.toCollection(ArrayList::new));\n\
    \        ArrayList<Long> evenLast = evenNums.stream().filter(n -> n%10%2==0).collect(Collectors.toCollection(ArrayList::new));\n\
    \n        // Calculate the sum of all odd first digits\n        long sumOddFirst\
    \ = oddFirst.stream().mapToLong(Number::longValue).sum();\n\n        // Calculate\
    \ the sum of all odd last digits\n        long sumOddLast = oddLast.stream().mapToLong(Number::longValue).sum();\n\
    \n        // Calculate the sum of all even first digits\n        long sumEvenFirst\
    \ = evenFirst.stream().mapToLong(Number::longValue).sum();\n\n        // Calculate\
    \ the sum of all even last digits\n        long sumEvenLast = evenLast.stream().mapToLong(Number::longValue).sum();\n\
    \n        // Check if any odd numbers are greater than 10\n        boolean hasOddNums\
    \ = (sumOddFirst+sumOddLast)>10;\n\n        // Check if any even numbers are greater\
    \ than 10\n        boolean hasEvenNums = (sumEvenFirst+sumEvenLast)>10;\n\n  \
    \      // If any odd numbers or even numbers are greater than 10\n        if (hasOddNums\
    \ || hasEvenNums) {\n            // Return the number of even numbers\n      \
    \      return sumEvenFirst+sumEvenLast;\n        }\n        // If no odd or even\
    \ numbers are greater than 10, return 0\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpas6i1ejk.java:58)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long[] digits;\n\
    \        long lastNum = nums.get(nums.size()-1);\n        long firstNum = nums.get(0);\n\
    \        digits = new long[nums.size()];\n        for(int i=0; i<nums.size();\
    \ i++) {\n            digits[i] = nums.get(i);\n        }\n        Arrays.sort(digits);\n\
    \        for(int i=0; i<digits.length; i++) {\n            if((digits[i] & 1)\
    \ == 1) {\n                if((digits[i]*10)%2 == 1) {\n                    if((digits[i]*10)%2\
    \ == 1) {\n                        if((digits[i]*10)%2 == 1) {\n             \
    \               if((digits[i]*10)%2 == 0) {\n                                if((digits[i]*10)%2\
    \ != 1) {\n                                    return 1;\n                   \
    \             }\n                            }\n                        }\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfooi5o5.java:45)\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long odd\
    \ = 0, even = 0;\n        for (int i = 0; i < nums.size(); i++) {\n          \
    \  odd += nums.get(i);\n        }\n        for (int i = nums.size() - 1; i >=\
    \ 0; i--) {\n            even += nums.get(i);\n        }\n        if (odd > 10\
    \ && even % 2 != 1) {\n            return odd;\n        } else if (even > 10 &&\
    \ even % 2 == 1) {\n            return even;\n        } else {\n            return\
    \ 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08z35fjh.java:35)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.size()\
    \ == 0) {\n            return 0;\n        }\n        int count = 0;\n        for\
    \ (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10) {\n \
    \               boolean isOdd = true;\n                int firstOdd = (int)nums.get(i)\
    \ >>> 1;\n                for (int j = i; j < nums.size(); j++) {\n          \
    \          if (isOdd) {\n                        int lastOdd = (int)nums.get(j)\
    \ >>> 1;\n                        if (firstOdd && lastOdd) {\n               \
    \             isOdd = false;\n                        }\n                    }\
    \ else {\n                        if (firstOdd && !lastOdd) {\n              \
    \              isOdd = true;\n                        }\n                    }\n\
    \                }\n                if (isOdd) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl_ilvloa.java:25: error: incompatible types: Long cannot be converted\
    \ to int\n                int firstOdd = (int)nums.get(i) >>> 1;\n           \
    \                                 ^\n/tmp/tmpl_ilvloa.java:28: error: incompatible\
    \ types: Long cannot be converted to int\n                        int lastOdd\
    \ = (int)nums.get(j) >>> 1;\n                                                \
    \   ^\n/tmp/tmpl_ilvloa.java:29: error: bad operand types for binary operator\
    \ '&&'\n                        if (firstOdd && lastOdd) {\n                 \
    \                    ^\n  first type:  int\n  second type: int\n/tmp/tmpl_ilvloa.java:33:\
    \ error: cannot find symbol\n                        if (firstOdd && !lastOdd)\
    \ {\n                                         ^\n  symbol:   variable lastOdd\n\
    \  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011650
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num >= 10l && num % 10l\
    \ == 1l && num % 2 == 1l) {\n                result += num;\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcetj3g2o.java:28)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num.intValue()\
    \ % 2 == 1 && num.intValue() % 2 == 1) {\n                result++;\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_h6tigzk.java:29)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            sum += num;\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnq6q_q9.java:25)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Complete\
    \ the function\n        return specialFilter(nums, new ArrayList<Long>(), new\
    \ ArrayList<Long>());\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8jo_7j0n.java:19: error: method specialFilter in class Problem\
    \ cannot be applied to given types;\n        return specialFilter(nums, new ArrayList<Long>(),\
    \ new ArrayList<Long>());\n               ^\n  required: ArrayList<Long>\n  found:\
    \    ArrayList<Long>,ArrayList<Long>,ArrayList<Long>\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n       long result\
    \ = nums.stream().filter(l -> l%10 > 10 && l % 10 == (l%10&1) && l % 10%2 == (l%10-1)).count();\n\
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdt196mxi.java:23)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 != 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptk_2l6sb.java:29)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int l=nums.size();\n\
    \        long num=0;\n        for(int i=0;i<l;i++)\n        {\n            if(nums.get(i)>10\
    \ && nums.get(i)%2==1)\n            {\n                if(nums.get(i)%10%2==1)\n\
    \                {\n                    num++;\n                }\n          \
    \  }\n        }\n        return num;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcnpfn2i.java:35)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // code here\n\
    \        return nums.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0e8knct8.java:22)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        for(long\
    \ num : nums) {\n            int firstDigit = (int) Math.floor(num/Math.pow(10,\
    \ num.intValue()));\n            int lastDigit = (int) num % Math.pow(10, num.intValue());\n\
    \            if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n              \
    \  return num;\n            }\n        }\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_0k6hb54.java:19: error: long cannot be dereferenced\n        \
    \    int firstDigit = (int) Math.floor(num/Math.pow(10, num.intValue()));\n  \
    \                                                                ^\n/tmp/tmp_0k6hb54.java:20:\
    \ error: long cannot be dereferenced\n            int lastDigit = (int) num %\
    \ Math.pow(10, num.intValue());\n                                            \
    \            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // write\
    \ code here\n        long count = 0;\n        for(Long i : nums) {\n         \
    \   int digit1 = (int) Math.round(i/10d);\n            int digit2 = (int) Math.round(i-(digit1*10d));\n\
    \            if(digit1%2 == 0 && digit2%2 == 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjs_av785.java:30)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int n = nums.size();\n\
    \        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            long\
    \ n = nums.get(i);\n            if (n > 10) {\n                sum += n;\n   \
    \         }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppyd4l7t1.java:21: error: variable n is already defined in method\
    \ specialFilter(ArrayList<Long>)\n            long n = nums.get(i);\n        \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        long count = 0;\n        long num = 0;\n        long\
    \ firstEven, firstOdd, lastEven, lastOdd;\n        for(Long i : nums) {\n    \
    \        num = i;\n            firstEven = num / 10;\n            firstOdd = num\
    \ % 10;\n            lastEven = num / 10;\n            lastOdd = num % 10;\n \
    \           if((firstEven == lastEven) && (firstOdd == 1)) {\n               \
    \ count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_sdv76f8.java:35)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        List<Long>\
    \ filteredList = new ArrayList<>();\n        for(Long num : nums) {\n        \
    \    if(num > 10 && num.getFirstDigit() % 2 == 1 && num.getLastDigit() % 2 ==\
    \ 1)\n                filteredList.add(num);\n        }\n        return filteredList.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7g47a8ee.java:20: error: cannot find symbol\n            if(num\
    \ > 10 && num.getFirstDigit() % 2 == 1 && num.getLastDigit() % 2 == 1)\n     \
    \                         ^\n  symbol:   method getFirstDigit()\n  location: variable\
    \ num of type Long\n/tmp/tmp7g47a8ee.java:20: error: cannot find symbol\n    \
    \        if(num > 10 && num.getFirstDigit() % 2 == 1 && num.getLastDigit() % 2\
    \ == 1)\n                                                              ^\n  symbol:\
    \   method getLastDigit()\n  location: variable num of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 1;\n        for(long num : nums) {\n            if(!((num / 10) % 2) && !(num\
    \ % 10)) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuk1gqcvk.java:20: error: bad operand type long for unary operator\
    \ '!'\n            if(!((num / 10) % 2) && !(num % 10)) {\n               ^\n\
    /tmp/tmpuk1gqcvk.java:20: error: bad operand type long for unary operator '!'\n\
    \            if(!((num / 10) % 2) && !(num % 10)) {\n                        \
    \            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = nums.size();\n        long result = 0;\n        for (long i : nums) {\n  \
    \          if (i >= 10 && i % 2 == 1 && i % 2 != 0) {\n                result\
    \ += i;\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmz1on6n3.java:29)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n       long sum =\
    \ 0;\n       long count = 0;\n       for(Long num : nums) {\n           if(num\
    \ > 10) {\n               if(num % 2 == 0) {\n                   if(num % 11 !=\
    \ 0 && num % 3 != 0) {\n                       count++;\n                   }\n\
    \               }\n           }\n           sum+=num;\n       }\n       return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz05w2fg1.java:33)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long i : nums) {\n            if(i.intValue() > 10 && i.intValue()\
    \ % 2 == 1 && i.intValue() % 2 == 1)\n                result++;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ljtjab_.java:28)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        //if (nums\
    \ == null || nums.isEmpty()) return 0;\n\n        long count = 1;\n\n        for\
    \ (Long l : nums) {\n            if (l > 10) {\n                count += 1;\n\
    \            }\n        }\n\n        for (Long l : nums) {\n            if (l\
    \ > 10 && l % 2 == 1) {\n                count += 1;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsvefgwbk.java:36)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        long ans = 0;\n        for(long n : nums) {\n            if (n>10\
    \ && n.%2==1 && n.lastDigit()==1) {\n                ans += 1;\n            }\n\
    \        }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2e7gv7q.java:21: error: <identifier> expected\n            if\
    \ (n>10 && n.%2==1 && n.lastDigit()==1) {\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(i\
    \ -> i.longValue() > 10l && i.getDigit() == 1l && i.getDigit() == (Integer.reverse(i.intValue())\
    \ % 2).longValue()).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfzmf77j7.java:18: error: cannot find symbol\n        return nums.stream().filter(i\
    \ -> i.longValue() > 10l && i.getDigit() == 1l && i.getDigit() == (Integer.reverse(i.intValue())\
    \ % 2).longValue()).count();\n                                               \
    \                  ^\n  symbol:   method getDigit()\n  location: variable i of\
    \ type Long\n/tmp/tmpfzmf77j7.java:18: error: cannot find symbol\n        return\
    \ nums.stream().filter(i -> i.longValue() > 10l && i.getDigit() == 1l && i.getDigit()\
    \ == (Integer.reverse(i.intValue()) % 2).longValue()).count();\n             \
    \                                                                          ^\n\
    \  symbol:   method getDigit()\n  location: variable i of type Long\n/tmp/tmpfzmf77j7.java:18:\
    \ error: int cannot be dereferenced\n        return nums.stream().filter(i ->\
    \ i.longValue() > 10l && i.getDigit() == 1l && i.getDigit() == (Integer.reverse(i.intValue())\
    \ % 2).longValue()).count();\n                                               \
    \                                                                            \
    \              ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long number : nums) {\n            if (number > 10 && number\
    \ % 2 == 1 && number % 2 == 1) {\n                sum = sum + 1;\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0x170we2.java:29)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(int i = 0; i < nums.size(); i++) {\n            boolean firstDiv\
    \ = nums.get(i) / 10 > 1;\n            boolean lastDiv = nums.get(i) % 10 > 1;\n\
    \            boolean firstOdd = (nums.get(i) / 10) % 2 == 1;\n            boolean\
    \ lastOdd = nums.get(i) % 10 > 0;\n            if(firstDiv && lastDiv && firstOdd\
    \ && lastOdd) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4av3esgd.java:32)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long n : nums) {\n            sum += n;\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9bmt7q4.java:25)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // TODO:\
    \ Complete this method\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw91pk3f7.java:23)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long[] arr\
    \ = nums.toArray(new Long[nums.size()]);\n        Arrays.sort(arr);\n        long\
    \ count = 0;\n        for(int i = 0; i < arr.length; i++) {\n            if((arr[i]\
    \ > 10L) && (arr[i] % 2L == 1L) && (arr[i] - arr[i-1] & 1L == 1)) {\n        \
    \        count++;\n            }\n        }\n        return count;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz27uxy_l.java:22: error: bad operand types for binary operator\
    \ '&'\n            if((arr[i] > 10L) && (arr[i] % 2L == 1L) && (arr[i] - arr[i-1]\
    \ & 1L == 1)) {\n                                                            \
    \               ^\n  first type:  long\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // write\
    \ your logic here\n        return nums.stream().filter(num -> num.longValue()\
    \ >= 10l && num.longValue() % 2 == 1 && num.longValue() % 3 == 1).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwvk4va7z.java:23)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return specialFilter(nums,\
    \ 0, nums.size());\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptn8mai3b.java:18: error: method specialFilter in class Problem\
    \ cannot be applied to given types;\n        return specialFilter(nums, 0, nums.size());\n\
    \               ^\n  required: ArrayList<Long>\n  found:    ArrayList<Long>,int,int\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long ans\
    \ = 0L;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10L) ans += 1;\n            if (nums.get(i).signum() != 1L) ans += 1;\n  \
    \          if (nums.get(i).signum() != 1L) ans += 1;\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyqo96eh7.java:21: error: method signum in class Long cannot be\
    \ applied to given types;\n            if (nums.get(i).signum() != 1L) ans +=\
    \ 1;\n                           ^\n  required: long\n  found:    no arguments\n\
    \  reason: actual and formal argument lists differ in length\n/tmp/tmpyqo96eh7.java:22:\
    \ error: method signum in class Long cannot be applied to given types;\n     \
    \       if (nums.get(i).signum() != 1L) ans += 1;\n                          \
    \ ^\n  required: long\n  found:    no arguments\n  reason: actual and formal argument\
    \ lists differ in length\n2 errors\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0;\n        for(Long i : nums) {\n            if(i>10 && (i % 2 == 0 || i%10\
    \ == 1)) {\n                total++;\n            }\n        }\n        return\
    \ total;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5lh07ptu.java:29)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ code here\n        Long firstOdd = new Long(1);\n        Long lastOdd = new\
    \ Long(1);\n        Long even = new Long(2);\n        Long odd = new Long(2);\n\
    \        Long temp = new Long(0);\n        long count = 0;\n        for(Long i\
    \ : nums){\n            if(i.intValue() >= 10 && i.intValue() % 2 != 0 && i.intValue()\
    \ % 2 != 1){\n                temp = firstOdd;\n                firstOdd = odd;\n\
    \                odd = temp;\n                if(i.intValue() % 2 == 1){\n   \
    \                 lastOdd = odd;\n                }\n            }\n         \
    \   if(i.intValue() >= 10 && i.intValue() % 2 == 1 && i.intValue() % 2 != 0 &&\
    \ lastOdd.intValue() % 2 != 1){\n                temp = firstOdd;\n          \
    \      firstOdd = even;\n                even = temp;\n                if(i.intValue()\
    \ % 2 == 0){\n                    lastOdd = even;\n                }\n       \
    \     }\n            if(i.intValue() >= 10 && i.intValue() % 2 != 0 && i.intValue()\
    \ % 2 != 1 && lastOdd.intValue() % 2 == 1){\n                temp = firstOdd;\n\
    \                firstOdd = odd;\n                odd = temp;\n              \
    \  if(i.intValue() % 2 == 1){\n                    lastOdd = odd;\n          \
    \      }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsnfxj41x.java:55)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums){\n            int a = num % 10, b = num /\
    \ 10;\n            if(a > 10 && b%2 == 1) count += 1;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt6e1r1io.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int a = num % 10, b = num / 10;\n            \
    \            ^\n/tmp/tmpt6e1r1io.java:20: error: incompatible types: possible\
    \ lossy conversion from long to int\n            int a = num % 10, b = num / 10;\n\
    \                                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long answer\
    \ = 0;\n        for(Long num: nums) {\n            if(num > 10l && num % 2 ==\
    \ 1l && num % 2 == 1l && num % 2 != 0) {\n                answer++;\n        \
    \    }\n        }\n        return answer;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptayk1cj8.java:29)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int oddOnes\
    \ = 0;\n        int oddLast = 0;\n        long sum = 0;\n        int count = 0;\n\
    \        for (Long i : nums) {\n            if (i.intValue() > 10) {\n       \
    \         sum += i;\n                count++;\n                if (i.intValue()\
    \ % 2 == 1) {\n                    oddOnes++;\n                }\n           \
    \     if (i.intValue() % 2 == 0) {\n                    oddLast++;\n         \
    \       }\n            }\n        }\n        return (oddOnes * oddLast);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp702l5yqp.java:39)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        LongStream.of(nums).filter(i\
    \ -> i%10 > 10 && i%10%2 != 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv7m1680s.java:18: error: no suitable method found for of(ArrayList<Long>)\n\
    \        LongStream.of(nums).filter(i -> i%10 > 10 && i%10%2 != 0).count();\n\
    \                  ^\n    method LongStream.of(long) is not applicable\n     \
    \ (argument mismatch; ArrayList<Long> cannot be converted to long)\n    method\
    \ LongStream.of(long...) is not applicable\n      (varargs mismatch; ArrayList<Long>\
    \ cannot be converted to long)\n1 error\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        return nums.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h788r1h.java:22)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 1;\n        for (long n : nums) {\n            if (n > 10 && n % 2 == 0 &&\
    \ n % 10 == 1) {\n                result++;\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bt08nhc.java:27)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.isEmpty())\
    \ return 0L;\n        Long first = nums.get(0); // first digit\n        Long last\
    \ = nums.get(nums.size()-1); // last digit\n        if (first % 2 != 0 && last\
    \ % 2 != 0) return 0L; // both first and last digits are odd\n        if (first\
    \ > 10L || last > 10L) return 0L; // only first digit or last digit > 10\n   \
    \     ArrayList<Long> greaterThan10 = new ArrayList<Long>();\n        for (int\
    \ i = 1, j = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10L) {\n\
    \                greaterThan10.add(nums.get(j)); // store current number in new\
    \ list\n                j = i;\n            } else if ((nums.get(i) + nums.get(j))\
    \ % 2 != 0) { // numbers are odd\n                greaterThan10.add(nums.get(j));\n\
    \                j = i;\n            }\n        }\n        return greaterThan10.size();\
    \ // number of numbers greater than 10\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxwkgbm23.java:37)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            long firstLast = num / 100;\n\
    \            if (num % 100 > 0) {\n                firstLast = firstLast % 10;\n\
    \                if (firstLast % 2 != 0) {\n                    sum = sum + 1;\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzi5rz2u.java:32)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums\
    \ == null || nums.isEmpty())\n            throw new RuntimeException(\"invalid\
    \ array list provided\");\n        if (nums.size() < 1)\n            throw new\
    \ RuntimeException(\"invalid array list provided\");\n\n        long count = 0;\n\
    \        for (long l: nums) {\n            if (l > 10) {\n                if (l\
    \ % 2 == 0) {\n                    if (nums.get(nums.size() - 1) % 2 == 0) {\n\
    \                        count++;\n                    }\n                } else\
    \ {\n                    if (nums.get(nums.size() - 1) % 2 == 0) {\n         \
    \               count++;\n                    }\n                }\n         \
    \   }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkf6_wyls.java:41)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.size()\
    \ == 0) return 0;\n        List<Long> nonOdds = new ArrayList<>();\n        for\
    \ (Long n : nums) {\n            boolean isOdd = (n % 2 == 1);\n            boolean\
    \ isFirstOdd = n % 10 == 1;\n            boolean isLastOdd = n % 10 == 0;\n  \
    \          if (isOdd && isFirstOdd && isLastOdd) {\n                nonOdds.add(n);\n\
    \            }\n        }\n        return nonOdds.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndps6nqe.java:32)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 !=\
    \ 0 && num % 10 != 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp5cx0j0o.java:29)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for(Long i : nums) {\n            if(i.intValue() > 10 && i.mod(2L).equals(1L)\
    \ && i.mod(2L).equals(1L)) {\n                sum += i.intValue();\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpssqcz8gm.java:20: error: cannot find symbol\n            if(i.intValue()\
    \ > 10 && i.mod(2L).equals(1L) && i.mod(2L).equals(1L)) {\n                  \
    \                   ^\n  symbol:   method mod(long)\n  location: variable i of\
    \ type Long\n/tmp/tmpssqcz8gm.java:20: error: cannot find symbol\n           \
    \ if(i.intValue() > 10 && i.mod(2L).equals(1L) && i.mod(2L).equals(1L)) {\n  \
    \                                                           ^\n  symbol:   method\
    \ mod(long)\n  location: variable i of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        long odd1 = 0, odd2 = 0, odd3 = 0, odd4 = 0;\n        for (Long\
    \ number : nums) {\n            if (number > 10l && number % 10l == 1) {\n   \
    \             odd1 = number % 10l;\n            }\n            if (number > 10l\
    \ && number % 10l == 3) {\n                odd3 = number % 10l;\n            }\n\
    \            if (number > 10l && number % 10l == 5) {\n                odd5 =\
    \ number % 10l;\n            }\n            if (number > 10l && number % 10l ==\
    \ 7) {\n                odd7 = number % 10l;\n            }\n            if (number\
    \ > 10l && number % 10l == 9) {\n                odd9 = number % 10l;\n      \
    \      }\n            if (odd1 != 0 && odd3 != 0 && odd5 != 0 && odd7 != 0 &&\
    \ odd9 != 0) {\n                break;\n            }\n            sum += number;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbqawyobk.java:28: error: cannot find symbol\n                odd5\
    \ = number % 10l;\n                ^\n  symbol:   variable odd5\n  location: class\
    \ Problem\n/tmp/tmpbqawyobk.java:31: error: cannot find symbol\n             \
    \   odd7 = number % 10l;\n                ^\n  symbol:   variable odd7\n  location:\
    \ class Problem\n/tmp/tmpbqawyobk.java:34: error: cannot find symbol\n       \
    \         odd9 = number % 10l;\n                ^\n  symbol:   variable odd9\n\
    \  location: class Problem\n/tmp/tmpbqawyobk.java:36: error: cannot find symbol\n\
    \            if (odd1 != 0 && odd3 != 0 && odd5 != 0 && odd7 != 0 && odd9 != 0)\
    \ {\n                                          ^\n  symbol:   variable odd5\n\
    \  location: class Problem\n/tmp/tmpbqawyobk.java:36: error: cannot find symbol\n\
    \            if (odd1 != 0 && odd3 != 0 && odd5 != 0 && odd7 != 0 && odd9 != 0)\
    \ {\n                                                       ^\n  symbol:   variable\
    \ odd7\n  location: class Problem\n/tmp/tmpbqawyobk.java:36: error: cannot find\
    \ symbol\n            if (odd1 != 0 && odd3 != 0 && odd5 != 0 && odd7 != 0 &&\
    \ odd9 != 0) {\n                                                             \
    \       ^\n  symbol:   variable odd9\n  location: class Problem\n6 errors\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream()\n\
    \                .filter(n -> n > 10 && n%2==1 && n%5==1)\n                .count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphe8hx6zm.java:24)\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        \n      \
    \  long oddCount = nums.stream().filter(x -> x > 10).count(x -> x % 2 == 1);\n\
    \        long firstOddCount = 0;\n        long lastOddCount = 0;\n        \n \
    \       for(Long num : nums) {\n            if(num % 2 == 0) {\n             \
    \   firstOddCount++;\n                if(num / 2 % 2 != 0) {\n               \
    \     lastOddCount++;\n                }\n            }\n        }\n        \n\
    \        return oddCount - lastOddCount - firstOddCount;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe8q2a4_h.java:19: error: method count in interface Stream<T> cannot\
    \ be applied to given types;\n        long oddCount = nums.stream().filter(x ->\
    \ x > 10).count(x -> x % 2 == 1);\n                                          \
    \               ^\n  required: no arguments\n  found:    (x)->x % 2 == 1\n  reason:\
    \ actual and formal argument lists differ in length\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        long odds = 0;\n        for(long l : nums){\n            if(l\
    \ >= 10){\n                if(l%2 == 0){\n                    sum+=l;\n      \
    \          }\n            }\n            else{\n                if(l%2 == 0){\n\
    \                    odds+=l;\n                }\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyx7qbad6.java:36)\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long number\
    \ = 0;\n        for(long i : nums) {\n            if (i % 2 != 0) {\n        \
    \        if (i % 100 == 0 || i % 10 == 1) {\n                    number += i;\n\
    \                }\n            }\n        }\n        return number;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeyq7l4ec.java:29)\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        for(Long\
    \ i : nums){\n            if (i%2 == 1){\n                return i;\n        \
    \    }\n        }\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgmuhou5.java:26)\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for (Long number : nums) {\n            counter++;\n         \
    \   if (number > 10l) {\n                for (long i = 1; i < 10l; i++) {\n  \
    \                  Long long1 = (long) Math.pow(10, i);\n                    if\
    \ (number % long1 == 1l && number % long1 % 1l == 1l) {\n                    \
    \    counter++;\n                    }\n                }\n            }\n   \
    \     }\n        return counter;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpprs7mwcd.java:33)\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && (num % 2\
    \ == 0 && num % 10 % 2 == 1)) {\n                result++;\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp90lhtwb1.java:28)\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long n : nums) {\n            if (n > 10 && nums.get(nums.size()\
    \ - 1) == (n % 2) == 1) {\n                result ++;\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1y_ucz1.java:20: error: incomparable types: boolean and int\n\
    \            if (n > 10 && nums.get(nums.size() - 1) == (n % 2) == 1) {\n    \
    \                                                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // TODO:\
    \ Complete this function\n        return nums.stream().filter(i -> (i % 2 == 1\
    \ && i % 2 != 0)).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1xpg0f5.java:22)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int count\
    \ = 0;\n        for(Long num : nums) {\n            if (num > 10 && num % 2 !=\
    \ 0 && num / 10 % 2 == 1) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqxrw9ivp.java:29)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long n =\
    \ 0;\n        for (long num : nums) {\n            long first = num / 10l;\n \
    \           long last  = num % 10l;\n            boolean isOdd = first % 2 ==\
    \ 1;\n            boolean isOdd_1 = last % 2 == 1;\n            if (isOdd && isOdd_1)\
    \ {\n                ++n;\n            }\n        }\n        return n;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1tu6sw3j.java:33)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwmqgkrig.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // your code\
    \ goes here\n        int evenCount = 0;\n        int oddCount = 0;\n        int\
    \ evenSum = 0;\n        int oddSum = 0;\n        long sum = 0;\n        int maxNum\
    \ = nums.get(nums.size()-1);\n        int minNum = nums.get(nums.size()-2);\n\
    \        int currNum = 0;\n        for (long num : nums) {\n            currNum\
    \ = num;\n            evenCount += (((currNum % 2) == 0) ? 1 : 0);\n         \
    \   oddCount += (((currNum % 2) != 0) ? 1 : 0);\n            evenSum += currNum\
    \ % 2;\n            oddSum += currNum % 2;\n        }\n        sum = ((evenSum\
    \ * oddCount) + (evenCount * oddSum));\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwv0ev84z.java:24: error: incompatible types: Long cannot be converted\
    \ to int\n        int maxNum = nums.get(nums.size()-1);\n                    \
    \         ^\n/tmp/tmpwv0ev84z.java:25: error: incompatible types: Long cannot\
    \ be converted to int\n        int minNum = nums.get(nums.size()-2);\n       \
    \                      ^\n/tmp/tmpwv0ev84z.java:28: error: incompatible types:\
    \ possible lossy conversion from long to int\n            currNum = num;\n   \
    \                   ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ code here\n        int count = 0;\n        for(long n : nums){\n           \
    \ if(n>10 && Integer.parseInt(String.valueOf(n/10))%2==1){\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7ec71y4.java:29)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // code here\n\
    \        return nums.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0e8knct8.java:22)\n"
  stdout: ''
  timestamp: 1660011652
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num.getFirstDigit()\
    \ % 2 == 1 && num.getLastDigit() % 2 == 1) {\n                count++;\n     \
    \       }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj2ns5yug.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && num.getFirstDigit() % 2 == 1 && num.getLastDigit() % 2 == 1) {\n   \
    \                            ^\n  symbol:   method getFirstDigit()\n  location:\
    \ variable num of type Long\n/tmp/tmpj2ns5yug.java:20: error: cannot find symbol\n\
    \            if (num > 10 && num.getFirstDigit() % 2 == 1 && num.getLastDigit()\
    \ % 2 == 1) {\n                                                              \
    \ ^\n  symbol:   method getLastDigit()\n  location: variable num of type Long\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011654
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long odd\
    \ = 0, even = 0;\n        for (long num : nums) {\n            if (num > 10) {\n\
    \                if (num % 2 != 0) {\n                    odd++;\n           \
    \     }\n                if (num % 2 != 1) {\n                    even++;\n  \
    \              }\n            }\n        }\n        return (odd > even) ? even\
    \ : odd;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw9pxa54.java:34)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        //write your\
    \ code here\n        int count = 0;\n        long lastOne = nums.get(nums.size()-1);\n\
    \        long firstOne = nums.get(0);\n        if(lastOne%2 == 1 && firstOne%2\
    \ != 1){\n            count++;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_r5ixjej.java:29)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long sum\
    \ = 0, lastOdd = 0, firstOdd = 0;\n        for(Long num : nums) {\n          \
    \  if(num>10) {\n                if(num % 2 == 1) {\n                    sum +=\
    \ num;\n                }\n                if(num % 2 == 0) {\n              \
    \      lastOdd = num;\n                }\n            } else {\n             \
    \   if(num % 2 == 1) {\n                    firstOdd = num;\n                }\n\
    \            }\n        }\n        return (sum - lastOdd - firstOdd);\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4gm3jhba.java:18: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0, lastOdd = 0, firstOdd = 0;\n                \
    \   ^\n/tmp/tmp4gm3jhba.java:18: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0, lastOdd = 0, firstOdd = 0;\n                \
    \                ^\n/tmp/tmp4gm3jhba.java:18: error: incompatible types: int cannot\
    \ be converted to Long\n        Long sum = 0, lastOdd = 0, firstOdd = 0;\n   \
    \                                           ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n.longValue() > 10 && n.longValue() % 2 == 1 && \n            n.longValue()\
    \ % 10 == 1).collect(Collectors.toList()).size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8sj6cqy.java:23)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter((e)\
    \ -> e > 10l).mapToLong((e) -> e).filter(e -> {\n            boolean oddFirst\
    \ = e % 2 == 0;\n            boolean oddLast = e % 2 == 0;\n            if (oddFirst\
    \ && oddLast) {\n                return true;\n            }\n            return\
    \ false;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jqcxtik.java:30)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter((num)\
    \ -> num>10l && num.firstDigit()%2==1l && num.lastDigit()%2==1l).count();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4te75xk2.java:18: error: cannot find symbol\n        return nums.stream().filter((num)\
    \ -> num>10l && num.firstDigit()%2==1l && num.lastDigit()%2==1l).count();\n  \
    \                                                         ^\n  symbol:   method\
    \ firstDigit()\n  location: variable num of type Long\n/tmp/tmp4te75xk2.java:18:\
    \ error: cannot find symbol\n        return nums.stream().filter((num) -> num>10l\
    \ && num.firstDigit()%2==1l && num.lastDigit()%2==1l).count();\n             \
    \                                                                        ^\n \
    \ symbol:   method lastDigit()\n  location: variable num of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10) {\n         \
    \       for(long i = num; i > 0; i = i / 10) {\n                    if(i % 2 ==\
    \ 1) {\n                        counter += 1;\n                    }\n       \
    \         }\n                for(long i = num; i > 0; i = i / 10) {\n        \
    \            if(i % 2 != 1) {\n                        counter += 1;\n       \
    \             }\n                }\n            }\n        }\n        return counter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfcubmfp.java:37)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        boolean odd\
    \ = true;\n        int firstOdd = 0;\n        int lastOdd = 0;\n\n        long\
    \ sum = 0l;\n\n        for (long num : nums) {\n            boolean firstOddCheck\
    \ = num / 10 % 2 == 0;\n            boolean lastOddCheck = num % 10 == 0;\n  \
    \          if (firstOddCheck && lastOddCheck) {\n                firstOdd++;\n\
    \                lastOdd++;\n            } else if (firstOddCheck) {\n       \
    \         firstOdd++;\n            } else {\n                lastOdd++;\n    \
    \        }\n            sum += num;\n        }\n\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8h1ouh63.java:41)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long sum\
    \ = 0L;\n        for (Long num : nums) {\n            if (num > 10 && num.charAt(0)\
    \ % 2 == 0 && num.charAt(num.length() - 1) % 2 == 1)\n                sum += num;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb1h2cggo.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && num.charAt(0) % 2 == 0 && num.charAt(num.length() - 1) % 2 == 1)\n \
    \                              ^\n  symbol:   method charAt(int)\n  location:\
    \ variable num of type Long\n/tmp/tmpb1h2cggo.java:20: error: cannot find symbol\n\
    \            if (num > 10 && num.charAt(0) % 2 == 0 && num.charAt(num.length()\
    \ - 1) % 2 == 1)\n                                                           \
    \         ^\n  symbol:   method length()\n  location: variable num of type Long\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            long digit1 = num % 10;\n\
    \            num /= 10;\n            long digit2 = num % 10;\n            num\
    \ /= 10;\n            if(digit1 > 10 || digit2 % 2 != 0) {\n                continue;\n\
    \            }\n            if(digit1 > 10 || digit1 % 2 != 0) {\n           \
    \     continue;\n            }\n            count++;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6ltgmzj.java:35)\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(l\
    \ -> {\n            boolean isFirstOdd = (nums.get(0).mod(10) %2 != 0);\n    \
    \        boolean isLastOdd = (nums.get(nums.size()-1).mod(10) %2 != 0);\n    \
    \        boolean isFirstLastOdd = (nums.get(0).mod(10) %2 != 0 && nums.get(nums.size()-1).mod(10)\
    \ %2 != 0);\n            return isFirstOdd && isLastOdd && isFirstLastOdd;\n \
    \       }).count();\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe7i5706f.java:19: error: cannot find symbol\n            boolean\
    \ isFirstOdd = (nums.get(0).mod(10) %2 != 0);\n                              \
    \               ^\n  symbol:   method mod(int)\n  location: class Long\n/tmp/tmpe7i5706f.java:20:\
    \ error: cannot find symbol\n            boolean isLastOdd = (nums.get(nums.size()-1).mod(10)\
    \ %2 != 0);\n                                                        ^\n  symbol:\
    \   method mod(int)\n  location: class Long\n/tmp/tmpe7i5706f.java:21: error:\
    \ cannot find symbol\n            boolean isFirstLastOdd = (nums.get(0).mod(10)\
    \ %2 != 0 && nums.get(nums.size()-1).mod(10) %2 != 0);\n                     \
    \                            ^\n  symbol:   method mod(int)\n  location: class\
    \ Long\n/tmp/tmpe7i5706f.java:21: error: cannot find symbol\n            boolean\
    \ isFirstLastOdd = (nums.get(0).mod(10) %2 != 0 && nums.get(nums.size()-1).mod(10)\
    \ %2 != 0);\n                                                                \
    \                            ^\n  symbol:   method mod(int)\n  location: class\
    \ Long\n4 errors\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long[] numsArray\
    \ = nums.toArray(new long[nums.size()]);\n        int sum = 0;\n        for (int\
    \ i = 0; i < numsArray.length; i++) {\n            sum += numsArray[i];\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphn7e6ju_.java:18: error: no suitable method found for toArray(long[])\n\
    \        long[] numsArray = nums.toArray(new long[nums.size()]);\n           \
    \                    ^\n    method Collection.<T#1>toArray(IntFunction<T#1[]>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; long[] cannot be converted to IntFunction<T#1[]>))\n    method ArrayList.<T#2>toArray(T#2[])\
    \ is not applicable\n      (inference variable T#2 has incompatible bounds\n \
    \       equality constraints: long\n        lower bounds: Object)\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>toArray(IntFunction<T#1[]>)\n\
    \    T#2 extends Object declared in method <T#2>toArray(T#2[])\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long[] arr\
    \ = nums.toArray(new long[nums.size()]);\n        Arrays.sort(arr);\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.length; i++) {\n            int\
    \ j = i;\n            while (j > 0 && arr[j-1] > arr[j]) {\n                count++;\n\
    \                j--;\n            }\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwajzerff.java:18: error: no suitable method found for toArray(long[])\n\
    \        long[] arr = nums.toArray(new long[nums.size()]);\n                 \
    \        ^\n    method Collection.<T#1>toArray(IntFunction<T#1[]>) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; long[]\
    \ cannot be converted to IntFunction<T#1[]>))\n    method ArrayList.<T#2>toArray(T#2[])\
    \ is not applicable\n      (inference variable T#2 has incompatible bounds\n \
    \       equality constraints: long\n        lower bounds: Object)\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>toArray(IntFunction<T#1[]>)\n\
    \    T#2 extends Object declared in method <T#2>toArray(T#2[])\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for(long num : nums) {\n            sum = sum + num;\n       \
    \     if(sum > 10 && num % 2 == 0 && num % 10 == 1) {\n                return\
    \ sum;\n            }\n        }\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gp3rjh.java:29)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream()\n\
    \                .filter(item -> {\n                    long first = item % 10;\n\
    \                    long last = item % 10;\n                    return ((first\
    \ & 1) == (last & 1));\n                })\n                .count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxq6e1bte.java:27)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for(long num : nums) {\n            int firstDigit = num % 10;\n\
    \            int secondDigit = num / 10;\n            if(firstDigit == 1 && secondDigit\
    \ % 2 == 1) {\n                counter += 1;\n            }\n        }\n     \
    \   return counter;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppi65v1pa.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int firstDigit = num % 10;\n                 \
    \                ^\n/tmp/tmppi65v1pa.java:21: error: incompatible types: possible\
    \ lossy conversion from long to int\n            int secondDigit = num / 10;\n\
    \                                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10l && x.mod(2).equals(1l) && x.mod(2).equals(1l)).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_qsn93jq.java:18: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> x > 10l && x.mod(2).equals(1l) && x.mod(2).equals(1l)).count();\n       \
    \                                              ^\n  symbol:   method mod(int)\n\
    \  location: variable x of type Long\n/tmp/tmp_qsn93jq.java:18: error: cannot\
    \ find symbol\n        return nums.stream().filter(x -> x > 10l && x.mod(2).equals(1l)\
    \ && x.mod(2).equals(1l)).count();\n                                         \
    \                                   ^\n  symbol:   method mod(int)\n  location:\
    \ variable x of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 1;\n        long firstOdd = 0;\n        long lastOdd = 0;\n        for (Long\
    \ number : nums) {\n            if (number > 10 && firstOdd == 0) {\n        \
    \        firstOdd = 1;\n            }\n            if (number > 10 && lastOdd\
    \ == 0) {\n                lastOdd = 1;\n            }\n            if (firstOdd\
    \ == 1 && lastOdd == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpowr4mvv3.java:35)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long evens\
    \ = 0, odds = 0;\n        long sum = 0;\n        for (Long num : nums) {\n   \
    \         boolean firstOdd = num%2==1;\n            boolean lastOdd = num%2==0;\n\
    \            boolean bothOdd = firstOdd && lastOdd;\n            sum += num;\n\
    \            evens += num%2==0;\n            odds += num%2==1;\n        }\n  \
    \      if (sum%10==0) {\n            return (evens+odds);\n        } else {\n\
    \            return (odds);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhkrt9s7.java:25: error: bad operand types for binary operator\
    \ '+'\n            evens += num%2==0;\n                  ^\n  first type:  long\n\
    \  second type: boolean\n/tmp/tmpkhkrt9s7.java:26: error: bad operand types for\
    \ binary operator '+'\n            odds += num%2==1;\n                 ^\n  first\
    \ type:  long\n  second type: boolean\n2 errors\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long oddFirstDigits\
    \ = nums.stream()\n                                .map(Number::longValue)\n \
    \                               .filter(x -> x % 2 != 0)\n                   \
    \             .findFirst().get();\n        Long oddLastDigits = nums.stream()\n\
    \                                .map(Number::longValue)\n                   \
    \             .filter(x -> x % 2 != 0)\n                                .map(x\
    \ -> x / 2)\n                                .findFirst().get();\n\n        //\
    \ now we count how many numbers in the list \n        // are greater than 10\n\
    \        Long sumOfOddDigits = nums.stream()\n                               \
    \ .map(Number::longValue)\n                                .filter(x -> x > 10\
    \ && x % 2 != 0)\n                                .filter(x -> x % 2 != 0 && x\
    \ % 2 != oddFirstDigits % 2)\n                                .filter(x -> x %\
    \ 2 != 0 && x % 2 != oddLastDigits % 2)\n                                .count();\n\
    \n        return sumOfOddDigits;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmz19tby_.java:41)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 0 && num % 2 != 1) {\n                count += num;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzai6xlxt.java:28)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        //your code\
    \ here\n        return nums.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r_emt0r.java:22)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums)\n            if (num > 10 && num.intValue()\
    \ % 2 != 0 && num.intValue() / 2 % 2 != 0)\n                count++;\n       \
    \ return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqsqulaja.java:27)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0l; // how many numbers are greater than 10?\n        for (Long num : nums)\
    \ {\n            if (num > 10) {\n                for (long d = num; d > 10; d\
    \ /= 10) {\n                    if (isOdd(d) && isOdd(num % d)) {\n          \
    \              count++;\n                    }\n                }\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprtgqbqb8.java:22: error: cannot find symbol\n                 \
    \   if (isOdd(d) && isOdd(num % d)) {\n                        ^\n  symbol:  \
    \ method isOdd(long)\n  location: class Problem\n/tmp/tmprtgqbqb8.java:22: error:\
    \ cannot find symbol\n                    if (isOdd(d) && isOdd(num % d)) {\n\
    \                                    ^\n  symbol:   method isOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        long count = 0;\n        for (long l : nums) {\n   \
    \         if (l > 10 && nums.get(nums.size()-1) % 2 == 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp92zgym.java:29)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long number : nums) {\n            if (number > 10 && number.mod()\
    \ % 2 == 0 && number.mod() % 2 == 1) {\n                count++;\n           \
    \ }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxueuyrus.java:20: error: cannot find symbol\n            if (number\
    \ > 10 && number.mod() % 2 == 0 && number.mod() % 2 == 1) {\n                \
    \                     ^\n  symbol:   method mod()\n  location: variable number\
    \ of type Long\n/tmp/tmpxueuyrus.java:20: error: cannot find symbol\n        \
    \    if (number > 10 && number.mod() % 2 == 0 && number.mod() % 2 == 1) {\n  \
    \                                                            ^\n  symbol:   method\
    \ mod()\n  location: variable number of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long n : nums)\n            if (n > 10l && n.intValue() %\
    \ 2 == 0 && n.intValue() % 2 != 0 && n.intValue() < 100l) \n                sum\
    \ += n;\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu8hda93n.java:26)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ goes here\n        long filter = 0;\n        for(Long num : nums) {\n      \
    \      long firstHalf = num / 10000000000l;\n            long lastHalf = num /\
    \ 1000000000000000000l; \n            if(firstHalf == lastHalf) {\n          \
    \      if(firstHalf % 2 == 1 && lastHalf % 2 == 1)\n                    filter++;\n\
    \            }\n        }\n        return filter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp383v5_p5.java:32)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        \n      \
    \  long answer = 0;\n        \n        // Loop through the list of numbers stored\
    \ in nums\n        for (Long val: nums) {\n            // The first digit of val\
    \ is stored in firstD\n            long firstD = val%10;\n            // The last\
    \ digit of val is stored in lastD\n            long lastD = val/10;\n        \
    \    // If firstD and lastD are both odd\n            if (firstD % 2 == 0 && lastD\
    \ % 2 == 1) {\n                // Add 1 to answer if we have a number that is\
    \ both odd and also \n                // the first and last digits are odd\n \
    \               answer++;\n            }\n        }\n        \n        return\
    \ answer;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6m_szi_i.java:40)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for(Long number : nums) {\n            if(isOdd(number) && isOdd(number,\
    \ 1, nums.size())){\n                counter++;\n            }\n        }\n  \
    \      return counter;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1og103jg.java:20: error: cannot find symbol\n            if(isOdd(number)\
    \ && isOdd(number, 1, nums.size())){\n               ^\n  symbol:   method isOdd(Long)\n\
    \  location: class Problem\n/tmp/tmp1og103jg.java:20: error: cannot find symbol\n\
    \            if(isOdd(number) && isOdd(number, 1, nums.size())){\n           \
    \                     ^\n  symbol:   method isOdd(Long,int,int)\n  location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(p\
    \ -> {\n            long first = (p%10000000000l) % 10;\n            long last\
    \ = (p%10000000000l)/100;\n            return (p%10000000000l%10000000000l) %\
    \ 10 % 2 == 0 && first % 2 == 1 && last % 2 == 1;\n        }).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozm2rtjm.java:26)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        return nums.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2h788r1h.java:22)\n"
  stdout: ''
  timestamp: 1660011653
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long i : nums) {\n            if (i > 10 && i%2 != 0) {\n\
    \                if (i%2 != 0 && i%2 != 1) {\n                    result += i;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpff0tez29.java:30)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num.mod(2l).equals(1l) && num.mod(2l).equals(1l))\n         \
    \       .count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj62qfpqx.java:18: error: cannot find symbol\n        return nums.stream().filter(num\
    \ -> num > 10 && num.mod(2l).equals(1l) && num.mod(2l).equals(1l))\n         \
    \                                                 ^\n  symbol:   method mod(long)\n\
    \  location: variable num of type Long\n/tmp/tmpj62qfpqx.java:18: error: cannot\
    \ find symbol\n        return nums.stream().filter(num -> num > 10 && num.mod(2l).equals(1l)\
    \ && num.mod(2l).equals(1l))\n                                               \
    \                                     ^\n  symbol:   method mod(long)\n  location:\
    \ variable num of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        long firstOdd = 0;\n        long lastOdd = 0;\n        \n    \
    \    for (Long num : nums) {\n            if (num > 10) {\n                if\
    \ (num % 2 != 0) {\n                    count++;\n                }\n        \
    \        else {\n                    if (firstOdd % 2 != 0) {\n              \
    \          firstOdd++;\n                    }\n                    else {\n  \
    \                      lastOdd++;\n                    }\n                }\n\
    \            }\n            else {\n                count++;\n            }\n\
    \        }\n        \n        return (count == 1 ? count : count - 1);\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7bfrolac.java:44)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long totalNum\
    \ = 1;\n        for (Long num : nums) {\n            totalNum *= num;\n      \
    \  }\n\n        long firstOdd = 0, lastOdd = 0;\n        for (Long num : nums)\
    \ {\n            firstOdd *= num;\n            lastOdd *= num;\n        }\n\n\
    \        long finalOdd = totalNum - (firstOdd - lastOdd);\n\n        Arrays.sort(nums);\n\
    \        int first = 0;\n        int last = nums.size() - 1;\n\n        for (int\
    \ i = 0; i < nums.size(); i++) {\n            long num = nums.get(i);\n      \
    \      if (num > 10 && firstOdd % 2 == 1 && lastOdd % 2 == 1) {\n            \
    \    return num;\n            } else if (num > 10) {\n                return num;\n\
    \            }\n        }\n        return finalOdd;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpds5bx5t5.java:31: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(nums);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long n =\
    \ nums.size();\n        long result = 0;\n\n        for( long i = 0; i < n; i++){\n\
    \            if( nums.get(i) > 10 ){\n                long lastDigit = nums.get(i)\
    \ % 10;\n                long firstDigit = nums.get(i) / 10;\n               \
    \ if( lastDigit % 2 == 1 && firstDigit % 2 == 1){\n                    result++;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt5l6p5i2.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if( nums.get(i) > 10 ){\n                    \
    \     ^\n/tmp/tmpt5l6p5i2.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n                long lastDigit = nums.get(i) % 10;\n     \
    \                                     ^\n/tmp/tmpt5l6p5i2.java:24: error: incompatible\
    \ types: possible lossy conversion from long to int\n                long firstDigit\
    \ = nums.get(i) / 10;\n                                           ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0L;\n        if (nums == null || nums.size() < 2) {\n            return result;\n\
    \        }\n        for (Long num : nums) {\n            if (num > 10) {\n   \
    \             if (num % 2 == 0 && num % 2 != 0 && num % 2 != 1) {\n          \
    \          result ++;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljyqbc1b.java:33)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Arrays.sort(nums);\n\
    \        long sum = 0;\n        long digitSum = 0;\n        for (long num : nums)\
    \ {\n            digitSum += num % 10;\n        }\n        long evenSum = 0;\n\
    \        long oddSum = 0;\n        for (long num : nums) {\n            evenSum\
    \ += num / 10;\n            oddSum += num % 10;\n        }\n        if (digitSum\
    \ > 9) {\n            sum += 1;\n        }\n        if (evenSum == 2 && oddSum\
    \ == 1) {\n            sum += 1;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvz550jvg.java:18: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(nums);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvofu7ibh.java:21)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = -1;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10) {\n                if (nums.get(i) % (int)Math.pow(10, 2)) > (int)Math.pow(10,\
    \ 2) && nums.get(i) % (int)Math.pow(10, 2) < (int)Math.pow(10, 3)) {\n       \
    \             count += 1;\n                }\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp78fyqj22.java:21: error: illegal start of expression\n        \
    \        if (nums.get(i) % (int)Math.pow(10, 2)) > (int)Math.pow(10, 2) && nums.get(i)\
    \ % (int)Math.pow(10, 2) < (int)Math.pow(10, 3)) {\n                         \
    \                               ^\n/tmp/tmp78fyqj22.java:21: error: not a statement\n\
    \                if (nums.get(i) % (int)Math.pow(10, 2)) > (int)Math.pow(10, 2)\
    \ && nums.get(i) % (int)Math.pow(10, 2) < (int)Math.pow(10, 3)) {\n          \
    \                                                                     ^\n/tmp/tmp78fyqj22.java:21:\
    \ error: ';' expected\n                if (nums.get(i) % (int)Math.pow(10, 2))\
    \ > (int)Math.pow(10, 2) && nums.get(i) % (int)Math.pow(10, 2) < (int)Math.pow(10,\
    \ 3)) {\n                                                                    \
    \                                                                       ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10 && nums.get(i) % (2 * i + 1) > 1) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7mp8r9x.java:29)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        Long count\
    \ = null;\n        \n        for(Long item : nums) {\n            if(item > 10\
    \ && item.getFirstOddDigit() & item.getLastOddDigit() > 0) {\n               \
    \ count = item;\n            }\n        }\n        \n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu8iy30os.java:21: error: cannot find symbol\n            if(item\
    \ > 10 && item.getFirstOddDigit() & item.getLastOddDigit() > 0) {\n          \
    \                      ^\n  symbol:   method getFirstOddDigit()\n  location: variable\
    \ item of type Long\n/tmp/tmpu8iy30os.java:21: error: cannot find symbol\n   \
    \         if(item > 10 && item.getFirstOddDigit() & item.getLastOddDigit() > 0)\
    \ {\n                                                          ^\n  symbol:  \
    \ method getLastOddDigit()\n  location: variable item of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int oddCount\
    \ = 0;\n        int evenCount = 0;\n        for (Long num : nums) {\n        \
    \    int firstEven = num.intValue() % 10;\n            int lastEven = num.intValue()\
    \ / 10;\n            if (firstEven == 1) {\n                oddCount++;\n    \
    \        } else if (lastEven == 1) {\n                oddCount++;\n          \
    \  } else if (lastEven % 2 == 0) {\n                evenCount++;\n           \
    \ }\n        }\n        return oddCount + (evenCount * 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7sxmkql.java:34)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            sum += num;\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnq6q_q9.java:25)\n"
  stdout: ''
  timestamp: 1660011651
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.isEmpty())\
    \ return 0;\n        long sum = 0;\n        boolean lastDivideBy2 = false;\n \
    \       for (Long num : nums) {\n            sum += num;\n            if (num\
    \ % 2 == 0) lastDivideBy2 = true;\n        }\n        if (nums.size() == 1) {\n\
    \            sum += nums.get(0);\n        }\n        boolean firstDivideBy2 =\
    \ nums.get(0) % 2 == 1;\n        for (Long num : nums) {\n            if (num\
    \ > 10 && !lastDivideBy2 && firstDivideBy2) {\n                return sum;\n \
    \           }\n            sum += num;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaegaqg2e.java:38)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream()\n\
    \            .filter(num -> num > 10L) // Filter nums that are greater than 10\n\
    \            .filter(num -> num.getFirst() & num.getLast() % 2 == 1) // Filter\
    \ for first digit odd\n            .count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx69sb9h1.java:20: error: cannot find symbol\n            .filter(num\
    \ -> num.getFirst() & num.getLast() % 2 == 1) // Filter for first digit odd\n\
    \                              ^\n  symbol:   method getFirst()\n  location: variable\
    \ num of type Long\n/tmp/tmpx69sb9h1.java:20: error: cannot find symbol\n    \
    \        .filter(num -> num.getFirst() & num.getLast() % 2 == 1) // Filter for\
    \ first digit odd\n                                               ^\n  symbol:\
    \   method getLast()\n  location: variable num of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums\
    \ == null || nums.size() == 0)\n            return 0L;\n        long numsAsLong\
    \ = nums.stream().mapToLong(Long::longValue).sum();\n        return numsAsLong;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0d_j9q4.java:24)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long n =\
    \ nums.size();\n        long sum = 0;\n        for(int i=0; i < n; i++) {\n  \
    \          long val = nums.get(i);\n            if(val > 10) {\n             \
    \   if(val % 2 == 1 && val % 3 == 1)\n                    sum += val;\n      \
    \      }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwe8i_3z.java:31)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int count\
    \ = nums.size();\n        Long first = nums.get(0); // first element of nums\n\
    \        Long last = nums.get(nums.size()-1); // last element of nums\n\n    \
    \    // count is number of odd numbers in nums\n        if (nums.size() % 2 ==\
    \ 1){\n            count += 1;\n        }\n\n        int firstDigit = first%10;\
    \ // first digit of first num\n        int lastDigit = last%10; // last digit\
    \ of last num\n        if (firstDigit % 2 == 0 && lastDigit % 2 == 0){\n     \
    \       // all odd digits on both ends, return 1\n            return 1l;\n   \
    \     } else {\n            return 0l;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ov8pw61.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int firstDigit = first%10; // first digit of first\
    \ num\n                              ^\n/tmp/tmp2ov8pw61.java:28: error: incompatible\
    \ types: possible lossy conversion from long to int\n        int lastDigit = last%10;\
    \ // last digit of last num\n                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long number : nums) {\n            if (isOdd(number) && isOddFirst(number)\
    \ && isOddLast(number)) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1s9_q9e3.java:20: error: cannot find symbol\n            if (isOdd(number)\
    \ && isOddFirst(number) && isOddLast(number)) {\n                ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmp1s9_q9e3.java:20: error:\
    \ cannot find symbol\n            if (isOdd(number) && isOddFirst(number) && isOddLast(number))\
    \ {\n                                 ^\n  symbol:   method isOddFirst(long)\n\
    \  location: class Problem\n/tmp/tmp1s9_q9e3.java:20: error: cannot find symbol\n\
    \            if (isOdd(number) && isOddFirst(number) && isOddLast(number)) {\n\
    \                                                       ^\n  symbol:   method\
    \ isOddLast(long)\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long ans\
    \ = 0;\n        for(int i = 0; i < nums.size(); i++) {\n            long firstOdd\
    \ = 0;\n            long lastOdd = 0;\n            long firstEven = 0;\n     \
    \       long lastEven = 0;\n            long sum = nums.get(i);\n            if(sum\
    \ > 10) {\n                firstEven = sum % 10;\n                lastEven = sum\
    \ % 10;\n                if(firstEven != 1 && lastEven != 1) {\n             \
    \       firstOdd = firstEven % 2;\n                    lastOdd = lastEven % 2;\n\
    \                    if(firstOdd != 1 && lastOdd != 1) {\n                   \
    \     if(firstEven != lastEven) {\n                            ans += 1;\n   \
    \                     }\n                        if((firstOdd != lastOdd) && (firstEven\
    \ != lastEven)) {\n                            ans += 1;\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jfevcq3.java:46)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10l && n.mod(2l) % 2l == 0l && n.mod(10l) % 2l == 0l).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmjo75422.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> n > 10l && n.mod(2l) % 2l == 0l && n.mod(10l) % 2l == 0l).count();\n    \
    \                                                 ^\n  symbol:   method mod(long)\n\
    \  location: variable n of type Long\n/tmp/tmpmjo75422.java:18: error: cannot\
    \ find symbol\n        return nums.stream().filter(n -> n > 10l && n.mod(2l) %\
    \ 2l == 0l && n.mod(10l) % 2l == 0l).count();\n                              \
    \                                               ^\n  symbol:   method mod(long)\n\
    \  location: variable n of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums\
    \ == null || nums.isEmpty()) {\n            throw new IllegalArgumentException(\"\
    Null or empty list\");\n        }\n        long sum = 0;\n        for (long num\
    \ : nums) {\n            sum += num;\n        }\n        if (sum % 2 == 0) {\n\
    \            return 0;\n        }\n        List<Long> odd = new ArrayList<>();\n\
    \        odd.add(nums.get(nums.size()-1));\n        for (int i = nums.size()-1;\
    \ i > 0; i--) {\n            long first = nums.get(i);\n            long last\
    \ = nums.get(i-1);\n            if (first % 2 == 1 && last % 2 == 1) {\n     \
    \           odd.add(nums.get(i));\n                sum -= first;\n           \
    \ }\n        }\n        return odd.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0rzbwlw.java:41)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        for(Long\
    \ num : nums) {\n            if (num > 10 && (num % 2 == 1) || (num % 2 == -1\
    \ && (num % 100 % 2 == 1))) {\n                return num;\n            }\n  \
    \      }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptj53dqrk.java:26)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        long oddNums = nums.stream().filter(n -> n > 10 && n.firstDigit()\
    \ % 2 == 1 && n.lastDigit() % 2 == 1).count();\n        long evenNums = nums.stream().filter(n\
    \ -> n > 10 && n.firstDigit() % 2 == 0 && n.lastDigit() % 2 == 0).count();\n \
    \       long evenNumsOdd = nums.stream().filter(n -> n > 10 && n.firstDigit()\
    \ % 2 == 0 && n.lastDigit() % 2 == 1).count();\n        if (oddNums > evenNums\
    \ && oddNums > evenNumsOdd)\n            return oddNums;\n        if (evenNums\
    \ > evenNumsOdd)\n            return evenNums;\n        return evenNumsOdd;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdwlkpt6x.java:19: error: cannot find symbol\n        long oddNums\
    \ = nums.stream().filter(n -> n > 10 && n.firstDigit() % 2 == 1 && n.lastDigit()\
    \ % 2 == 1).count();\n                                                       \
    \     ^\n  symbol:   method firstDigit()\n  location: variable n of type Long\n\
    /tmp/tmpdwlkpt6x.java:19: error: cannot find symbol\n        long oddNums = nums.stream().filter(n\
    \ -> n > 10 && n.firstDigit() % 2 == 1 && n.lastDigit() % 2 == 1).count();\n \
    \                                                                            \
    \          ^\n  symbol:   method lastDigit()\n  location: variable n of type Long\n\
    /tmp/tmpdwlkpt6x.java:20: error: cannot find symbol\n        long evenNums = nums.stream().filter(n\
    \ -> n > 10 && n.firstDigit() % 2 == 0 && n.lastDigit() % 2 == 0).count();\n \
    \                                                            ^\n  symbol:   method\
    \ firstDigit()\n  location: variable n of type Long\n/tmp/tmpdwlkpt6x.java:20:\
    \ error: cannot find symbol\n        long evenNums = nums.stream().filter(n ->\
    \ n > 10 && n.firstDigit() % 2 == 0 && n.lastDigit() % 2 == 0).count();\n    \
    \                                                                            \
    \        ^\n  symbol:   method lastDigit()\n  location: variable n of type Long\n\
    /tmp/tmpdwlkpt6x.java:21: error: cannot find symbol\n        long evenNumsOdd\
    \ = nums.stream().filter(n -> n > 10 && n.firstDigit() % 2 == 0 && n.lastDigit()\
    \ % 2 == 1).count();\n                                                       \
    \         ^\n  symbol:   method firstDigit()\n  location: variable n of type Long\n\
    /tmp/tmpdwlkpt6x.java:21: error: cannot find symbol\n        long evenNumsOdd\
    \ = nums.stream().filter(n -> n > 10 && n.firstDigit() % 2 == 0 && n.lastDigit()\
    \ % 2 == 1).count();\n                                                       \
    \                                    ^\n  symbol:   method lastDigit()\n  location:\
    \ variable n of type Long\n6 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if(nums ==\
    \ null || nums.size() == 0) {\n            throw new IllegalArgumentException(\"\
    List is empty\");\n        }\n\n        long count = 0;\n\n        for(Long l\
    \ : nums) {\n            if(l > 10) {\n                if(l.mod(2L) != 1L && l.mod(2L)\
    \ != 3L && l.mod(2L) != 5L && l.mod(2L) != 7L && l.mod(2L) != 9L) {\n        \
    \            count++;\n                }\n            }\n        }\n\n       \
    \ return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeqj336b8.java:26: error: cannot find symbol\n                if(l.mod(2L)\
    \ != 1L && l.mod(2L) != 3L && l.mod(2L) != 5L && l.mod(2L) != 7L && l.mod(2L)\
    \ != 9L) {\n                    ^\n  symbol:   method mod(long)\n  location: variable\
    \ l of type Long\n/tmp/tmpeqj336b8.java:26: error: cannot find symbol\n      \
    \          if(l.mod(2L) != 1L && l.mod(2L) != 3L && l.mod(2L) != 5L && l.mod(2L)\
    \ != 7L && l.mod(2L) != 9L) {\n                                       ^\n  symbol:\
    \   method mod(long)\n  location: variable l of type Long\n/tmp/tmpeqj336b8.java:26:\
    \ error: cannot find symbol\n                if(l.mod(2L) != 1L && l.mod(2L) !=\
    \ 3L && l.mod(2L) != 5L && l.mod(2L) != 7L && l.mod(2L) != 9L) {\n           \
    \                                               ^\n  symbol:   method mod(long)\n\
    \  location: variable l of type Long\n/tmp/tmpeqj336b8.java:26: error: cannot\
    \ find symbol\n                if(l.mod(2L) != 1L && l.mod(2L) != 3L && l.mod(2L)\
    \ != 5L && l.mod(2L) != 7L && l.mod(2L) != 9L) {\n                           \
    \                                                  ^\n  symbol:   method mod(long)\n\
    \  location: variable l of type Long\n/tmp/tmpeqj336b8.java:26: error: cannot\
    \ find symbol\n                if(l.mod(2L) != 1L && l.mod(2L) != 3L && l.mod(2L)\
    \ != 5L && l.mod(2L) != 7L && l.mod(2L) != 9L) {\n                           \
    \                                                                     ^\n  symbol:\
    \   method mod(long)\n  location: variable l of type Long\n5 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.size()\
    \ <= 1) return nums.size();\n        long sum = 0;\n        for (int i = 0; i\
    \ < nums.size(); i++) {\n            if (nums.get(i) > 10 && nums.get(i) % 2 !=\
    \ 0 && nums.get(i) < 1000000 && nums.get(i) > 1000 && nums.get(i) < 100000)\n\
    \                sum += nums.get(i);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxnbry9a6.java:28)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums\
    \ == null || nums.isEmpty()) {\n            return 0;\n        }\n        long\
    \ sum = 0;\n        for (Long num : nums) {\n            if (num > 10 && (num\
    \ % 10) % 2 == 1 && num % 10 % 2 == 1) {\n                sum++;\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kfa10tn.java:32)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0;\n        long temp = nums.get(0) % 2 == 1 ? nums.get(0) : -nums.get(0);\
    \ // first digit odd\n        for (long num : nums) {\n            temp = (num\
    \ % 2 == 1 ? num : -num) % 2 == 1 ? num : -num; // last digit odd\n          \
    \  if (num > 10 && temp % 2 == 1 && num % 10 % 2 != 0) {\n                total++;\n\
    \            }\n        }\n        return total;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zvwdiy3.java:31)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long oddFirst\
    \ = nums.stream().filter(x -> x % 2 == 1).count();\n        long oddLast = nums.stream().filter(x\
    \ -> x % 2 == 0).count();\n        long firstOdd = nums.stream().filter(x -> x\
    \ % 2 != 0).count();\n        long lastOdd = nums.stream().filter(x -> x % 2 !=\
    \ 1).count();\n        if (oddFirst + oddLast > 0 && firstOdd + lastOdd > 0 &&\
    \ oddFirst + oddLast + firstOdd + lastOdd >= 4) {\n            return oddFirst\
    \ * oddLast * firstOdd * lastOdd;\n        }\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00067769.java:28)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long num : nums) {\n            sum += num;\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6rs0n71.java:25)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your solution here\n        long count = 0;\n        int first = nums.get(0).intValue()\
    \ % 10;\n        int last = nums.get(nums.size()-1).intValue() % 10;\n       \
    \ if (nums.size() > 1) {\n            for(int i = 0; i < nums.size()-1; i++) {\n\
    \                if(nums.get(i).intValue() > 10) {\n                    int a\
    \ = nums.get(i).intValue() % 10;\n                    int b = nums.get(i+1).intValue()\
    \ % 10;\n                    if (a > 10 && b > 10 && a % 2 == 1 && b % 2 == 1)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7niyjk3w.java:37)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums\
    \ == null) return 0;\n        long count = 0;\n        for (Long i : nums) {\n\
    \            count++;\n            if (i > (long)1000000000000l) {\n         \
    \       i = i % (long)1000000000000l;\n            }\n            long firstDigit\
    \ = i % 10;\n            i /= 10;\n            long lastDigit = i % 10;\n    \
    \        i /= 10;\n            if (firstDigit % 2 == 1) {\n                if\
    \ (firstDigit == 1 || firstDigit == 3 || firstDigit == 5 || firstDigit == 7 ||\
    \ firstDigit == 9) {\n                    if (lastDigit % 2 == 1) {\n        \
    \                count++;\n                    }\n                }\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gzujxtv.java:40)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // TODO implement\
    \ the function\n        // The array is sorted in descending order\n        long\
    \ sum=0;\n        for(int i=nums.size()-1;i>=0;i--){\n            if((nums.get(i)>10)&&(nums.get(i)/10%2==1)&&(nums.get(i)/10%2==1)){\n\
    \                sum+=nums.get(i);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6aos8s4.java:30)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Filter\
    \ through list\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1\
    \ && (x % 10 == 1) || (x % 10 == 0) && x % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppkmuny2w.java:23)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        long sum = 0;\n        for (long num : nums) {\n            sum\
    \ += num;\n            long temp = sum;\n            long divisor = temp / 10;\n\
    \            if (sum / divisor > 10 && (sum / divisor % 2 == 1)) {\n         \
    \       count++;\n            }\n        }\n        return count;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.specialFilter(tmpnroclh0n.java:24)\n\tat Problem.main(tmpnroclh0n.java:31)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        long l = 0;\n        for(Long num : nums){\n            l = (num\
    \ % 10);\n            if(num > 10){\n                if(num > 100){\n        \
    \            if(num > 1000){\n                        if(num > 10000){\n     \
    \                       if(num > 100000){\n                                if(num\
    \ > 1000000){\n                                    if(num > 10000000){\n     \
    \                                   if(num > 100000000){\n                   \
    \                         if(num > 1000000000){\n                            \
    \                    if(num > 10000000000){\n                                \
    \                    if(num > 100000000000){\n                               \
    \                         if(num > 1000000000000){\n                         \
    \                                   if(num > 10000000000000){\n              \
    \                                                  if(num > 100000000000000){\n\
    \                                                                    if(num >\
    \ 1000000000000000){\n                                                       \
    \                 if(num > 10000000000000000){\n                             \
    \                                               if(num > 100000000000000000){\n\
    \                                                                            \
    \    if(num > 100000000000000000)){\n                                        \
    \                                            if(num > 1000000000000000000){\n\
    \                                                                            \
    \            if(num > 10000000000000000000)){\n                              \
    \                                                              if(num > 100000000000000000000)){\n\
    \                                                                            \
    \                    if(num > 10000000000000000000000)){\n                   \
    \                                                                            \
    \     if(num > 100000000000000000000000)){\n                                 \
    \                                                                       if(num\
    \ > 1000000000000000000000000)){\n                                           \
    \                                                                 if(num > 10000000000000000000000000)){\n\
    \                                                                            \
    \                                    if(num > 100000000000000000000000000)){\n\
    \                                                                            \
    \                                        if(num > 1000000000000000000000000000)){\n\
    \                                                                            \
    \                                            if(num > 10000000000000000000000000000)){\n\
    \                                                                            \
    \                                                if(num > 10000000000000000000000000000000)){\n\
    \                                                                            \
    \                                                    if(num > 100000000000000000000000000000000)){\n\
    \                                                                            \
    \                                                        if(num > 1000000000000000000000000000000000)){\n\
    \                                                                            \
    \                                                            if(num > 10000000000000000000000000000000000)){\n\
    \                                                                            \
    \                                                                if(num > 1000000000000000000000000000000000)){\n\
    \                                                                            \
    \                                                                    count = count\
    \ + 1;\n                                                                     \
    \                                                                       }\n  \
    \                                                                            \
    \                                                          }\n               \
    \                                                                            \
    \                                         }\n                                \
    \                                                                            \
    \                    }\n                                                     \
    \                                                                       }\n  \
    \                                                                            \
    \                                          }\n                               \
    \                                                                            \
    \         }\n                                                                \
    \                                                }\n                         \
    \                                                                            \
    \       }\n                                                                  \
    \                                      }\n                                   \
    \                                                                 }\n        \
    \                                                                            \
    \            }\n                                                             \
    \                               }\n                                          \
    \                              }\n                                           \
    \                         }\n                                                \
    \                }\n                                                         \
    \       }\n                                                            }\n   \
    \                                                     }\n                    \
    \                                }\n                                         \
    \       }\n                                            }\n                   \
    \                     }\n                                    }\n             \
    \                   }\n                            }\n                       \
    \ }\n                    }\n                }\n            }\n        }\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuag4pe18.java:31: error: integer number too large\n           \
    \                                     if(num > 10000000000){\n               \
    \                                          ^\n/tmp/tmpuag4pe18.java:32: error:\
    \ integer number too large\n                                                 \
    \   if(num > 100000000000){\n                                                \
    \             ^\n/tmp/tmpuag4pe18.java:33: error: integer number too large\n \
    \                                                       if(num > 1000000000000){\n\
    \                                                                 ^\n/tmp/tmpuag4pe18.java:34:\
    \ error: integer number too large\n                                          \
    \                  if(num > 10000000000000){\n                               \
    \                                      ^\n/tmp/tmpuag4pe18.java:35: error: integer\
    \ number too large\n                                                         \
    \       if(num > 100000000000000){\n                                         \
    \                                ^\n/tmp/tmpuag4pe18.java:36: error: integer number\
    \ too large\n                                                                \
    \    if(num > 1000000000000000){\n                                           \
    \                                  ^\n/tmp/tmpuag4pe18.java:37: error: integer\
    \ number too large\n                                                         \
    \               if(num > 10000000000000000){\n                               \
    \                                                  ^\n/tmp/tmpuag4pe18.java:38:\
    \ error: integer number too large\n                                          \
    \                                  if(num > 100000000000000000){\n           \
    \                                                                          ^\n\
    /tmp/tmpuag4pe18.java:39: error: integer number too large\n                  \
    \                                                              if(num > 100000000000000000)){\n\
    \                                                                            \
    \             ^\n/tmp/tmpuag4pe18.java:39: error:"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        ArrayList<Long>\
    \ greaterNums = new ArrayList<>();\n        for (Long num : nums) {\n        \
    \    if (num > 10l && num % 2 != 1l && num % 2 != 3l && num % 2 != 5l && num %\
    \ 2 != 7l && num % 2 != 9l) {\n                greaterNums.add(num);\n       \
    \     }\n        }\n        if (greaterNums.size() == 0)\n            return -1l;\n\
    \        return greaterNums.get(greaterNums.size() - 1);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6epifksq.java:29)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for (long i : nums) {\n            int first = (int)i;\n     \
    \       int last = first / 10;\n            int sum = (int)(first % 10);\n   \
    \         if (sum == 2 && first % 2 == 1 && last % 2 == 1) {\n               \
    \ counter++;\n            }\n        }\n        return counter;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyzgettgw.java:31)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(i\
    \ -> i % 10 >= 10 && ((i / 10) % 2 == 1)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqlh7_yfc.java:22)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long ans\
    \ = 0;\n        for (Long num : nums) {\n            if ((num >= 10l) && (num\
    \ % 10l == 0)) {\n                if ((num > 10l) && (num % 2l == 1)) {\n    \
    \                ans = ans + 1l;\n                }\n            }\n        }\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnipkop88.java:30)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        ArrayList<Long> result = new ArrayList<>();\n        for(Long\
    \ i : nums) {\n            if( (i > 10) && (i.intValue() % 2 != 0) && (i.intValue()\
    \ % 2 != 1) ) {\n                result.add(i);\n            }\n        }\n  \
    \      return (long) result.size();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmx2yll0e.java:29)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        if (nums.isEmpty())\n\
    \            return 0l;\n        // First sort all the numbers to ensure O(nlogn)\n\
    \        Collections.sort(nums);\n\n        // Get the first and last number of\
    \ the array\n        long firstNum = nums.get(0l); // first number\n        long\
    \ lastNum = nums.get(nums.size() - 1l); // last number\n\n        // If the first\
    \ and last number are odd, return 0\n        if (lastNum % 2 == 1)\n         \
    \   return 0l;\n        if (firstNum % 2 == 1)\n            return 0l;\n\n   \
    \     // Find the middle of the numbers in the array\n        long middle = (firstNum\
    \ + lastNum) / 2;\n\n        // If the middle value is bigger than 10, then return\
    \ 0\n        if (middle > 10)\n            return 0l;\n\n        // If the middle\
    \ value is between 10 and 99, then return 1\n        if (middle > 99)\n      \
    \      return 1l;\n\n        // Else find the first and last digits of the middle\
    \ number\n        long firstDigit = middle / 10;\n        long lastDigit = middle\
    \ % 10;\n\n        // If the first and last digits of the middle number are odd,\
    \ return 0\n        if (firstDigit % 2 == 1)\n            return 0l;\n       \
    \ if (lastDigit % 2 == 1)\n            return 0l;\n\n        // If both the first\
    \ and last digits are odd, return 0\n        if (firstDigit % 2 == 1 && lastDigit\
    \ % 2 == 1)\n            return 0l;\n\n        // If both are even return 1\n\
    \        if (firstDigit % 2 == 0 && lastDigit % 2 == 0)\n            return 1l;\n\
    \n        // Else return 2\n        return 2l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpay3pbk66.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long firstNum = nums.get(0l); // first number\n  \
    \                               ^\n/tmp/tmpay3pbk66.java:25: error: incompatible\
    \ types: possible lossy conversion from long to int\n        long lastNum = nums.get(nums.size()\
    \ - 1l); // last number\n                                            ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum=0;\n\
    \        for (Long i:nums) {\n            if (i>10 && i%2==1&&(i/10)%2==1) {\n\
    \                sum+=i;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4n24bfv9.java:28)\n"
  stdout: ''
  timestamp: 1660011659

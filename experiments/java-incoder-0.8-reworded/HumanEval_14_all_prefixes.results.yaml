language: java
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<>();\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        for (char character : string.toCharArray())\
    \ {\n            prefixes.add(new String(new char[] {character}));\n        }\n\
    \        for (String prefix : prefixes) {\n            String[] newPrefixes =\
    \ Arrays.copyOf(prefix.split(\"\"), prefix.length + 1);\n            String newPrefix\
    \ = String.valueOf(newPrefixes[newPrefixes.length - 1]);\n            if (newPrefixes.equals(Arrays.copyOf(prefix.split(\"\
    \"), prefix.length + 1))) {\n                continue;\n            }\n      \
    \      for (String newPrefix2 : newPrefixes) {\n                String newPrefix3\
    \ = String.valueOf(newPrefix2);\n                String newPrefix4 = String.valueOf(newPrefix3);\n\
    \                newPrefix3 = newPrefix + newPrefix3;\n                newPrefix4\
    \ = newPrefix4 + newPrefix4;\n                String newPrefix41 = String.valueOf(newPrefix4);\n\
    \                newPrefix41 = newPrefix41 + newPrefix3;\n                newPrefixes\
    \ = Arrays.copyOf(newPrefixes,newPrefixes.length+1);\n                newPrefixes.set(newPrefixes.size()-1,\
    \ newPrefixx41);\n            }\n            list.addAll(Arrays.asList(newPrefixes));\n\
    \        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4qemm_cd.java:19: error: cannot find symbol\n            String[]\
    \ newPrefixes = Arrays.copyOf(prefix.split(\"\"), prefix.length + 1);\n      \
    \                                                                   ^\n  symbol:\
    \   variable length\n  location: variable prefix of type String\n/tmp/tmp4qemm_cd.java:21:\
    \ error: cannot find symbol\n            if (newPrefixes.equals(Arrays.copyOf(prefix.split(\"\
    \"), prefix.length + 1))) {\n                                                \
    \                         ^\n  symbol:   variable length\n  location: variable\
    \ prefix of type String\n/tmp/tmp4qemm_cd.java:32: error: cannot find symbol\n\
    \                newPrefixes.set(newPrefixes.size()-1, newPrefixx41);\n      \
    \                                     ^\n  symbol:   method size()\n  location:\
    \ variable newPrefixes of type String[]\n/tmp/tmp4qemm_cd.java:32: error: cannot\
    \ find symbol\n                newPrefixes.set(newPrefixes.size()-1, newPrefixx41);\n\
    \                                                      ^\n  symbol:   variable\
    \ newPrefixx41\n  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // base case: just return the input string\n        if (string.length()\
    \ == 0) {\n            return new ArrayList<String>();\n        }\n\n        //\
    \ create a stack and push the prefix \n        // of the initial string in the\
    \ stack\n        Stack<String> stack = new Stack<String>();\n        stack.push(string.substring(0,\
    \ 1));\n\n        // iterate over the rest of the input string\n        for (int\
    \ i = 1; i < string.length(); i++) {\n            // iterate over the prefixes\
    \ on the stack\n            for (String prefix : stack) {\n                //\
    \ check if the prefix of the string to be pushed has already been added already\n\
    \                if (!string.startsWith(prefix)) {\n                    // add\
    \ it to the stack\n                    stack.push(prefix + string.charAt(i));\n\
    \                    // if the prefix of the string to be pushed has not been\
    \ added yet,\n                    // then return the stack\n                 \
    \   break;\n                }\n            }\n        }\n\n        // return all\
    \ the prefixes of the string\n        return new ArrayList<String>(stack);\n \
    \   }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr57_ln_k.java:43)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     int n = string.length();\n        for (int i = 0; i < n; i++)\n        \
    \    for (String prefix : allPrefixes(string.substring(0, i)))\n             \
    \   result.add(prefix);\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63gvyviu.java:22)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.isEmpty()) {\n            return new ArrayList<String>(Arrays.asList((String)\"\
    a\"));\n        }\n        ArrayList<String> prefixes = new ArrayList<String>(Arrays.asList((String)\"\
    a\"));\n        int maxLen = string.size();\n        for (int i=2; i<=maxLen;\
    \ i++) {\n            String prefix = prefixes.stream().map(x -> x + string.substring(i,i+1)).collect(Collectors.toList()).get(0);\n\
    \            prefixes.add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzo47fgzj.java:17: error: cannot find symbol\n        int maxLen\
    \ = string.size();\n                           ^\n  symbol:   method size()\n\
    \  location: variable string of type String\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n\n\
    \        int i = 1;\n        while (i < string.length()) {\n            prefixes.add(string.substring(0,\
    \ i));\n            i += 1;\n        }\n\n        return prefixes;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsgqoia9.java:25)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            if (string.charAt(i) != string.charAt(len-1)) {\n               \
    \ prefixes.add(string.substring(0,i+1));\n            }\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahnb0ui0.java:24)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<>();\n        if (string\
    \ == null)\n            return res;\n        if (string.length() == 0)\n     \
    \       return res;\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        for (char c : string.toCharArray()) {\n            prefixes.add(c);\n\
    \            if (string.startsWith(c))\n                prefixes.addAll(allPrefixes(string.substring(c)));\n\
    \        }\n        res.addAll(prefixes);\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpriidhgtu.java:20: error: incompatible types: char cannot be converted\
    \ to String\n            prefixes.add(c);\n                         ^\n/tmp/tmpriidhgtu.java:21:\
    \ error: incompatible types: char cannot be converted to String\n            if\
    \ (string.startsWith(c))\n                                  ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // Write your code here\n        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        if (string.length() > 0)\n            prefixes.add(string.substring(0,\
    \ string.length()-1));\n        while (string.charAt(string.length()-1) != 'z')\
    \ {\n            prefixes.add(string.substring(0, string.length()-1));\n     \
    \       string = string.substring(1);\n        }\n        return prefixes;\n \
    \   }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: -1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmpaz70qrq9.java:17)\n\
    \tat Problem.main(tmpaz70qrq9.java:24)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        //\
    \ Find prefix length and insert into the result array\n        char[] chars =\
    \ string.toCharArray();\n        int prefixLength = chars.length;\n        result.add(new\
    \ String(chars, 0, prefixLength));\n        // Find next prefix length until you\
    \ find an empty string\n        for (int i = prefixLength - 1; i >= 0; i--) {\n\
    \            if (chars[i] == '\\0') {\n                result.add(new String(chars,\
    \ 0, i));\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_c1b5a2.java:28)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ if (string == null) {\n            return prefixes;\n        }\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            String prefix = string.substring(0,\
    \ i);\n            prefixes.add(prefix);\n            if (string.length() > i)\
    \ {\n                prefixes.addAll(allPrefixes(string.substring(i + 1, string.length())));\n\
    \            }\n        }\n        return prefixes;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponh9rbqu.java:28)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<String>();\n  \
    \      ArrayList<String> remaining = new ArrayList<String>();\n        remaining.add(string);\n\
    \        while (!remaining.isEmpty()) {\n            String prefix = remaining.remove(0);\n\
    \            for (int i = 0; i < remaining.size(); i++) {\n                String\
    \ s = remaining.remove(i);\n                String rest = \"\";\n            \
    \    if (i > 0) {\n                    rest = remaining.remove(0);\n         \
    \       }\n                if (s.startsWith(prefix)) {\n                    results.add(prefix\
    \ + rest);\n                }\n            }\n        }\n        return results;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyawr1t0.java:33)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   String prefix = \"\";\n        int len = string.length();\n        for (int\
    \ i = 0; i < len; i++) {\n            prefix = prefix + string.charAt(i);\n  \
    \          list.add(prefix);\n            if (len > i+1) {\n                prefix\
    \ = string.substring(0, i) + string.substring(i+1, len);\n                list.add(prefix);\n\
    \            }\n        }\n        return list;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkk5wt4xi.java:28)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ allPrefixes(\"\", string);\n        return prefixes;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx0s7_e6m.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(\"\", string);\n        ^\n\
    \  required: String\n  found:    String,String\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        String[]\
    \ words = string.split(\" \");\n        Collections.sort(words);\n        Collections.reverse(words);\n\
    \n        for (int i = 1; i < words.length; i++) {\n            String word =\
    \ words[i];\n            if (word != null) {\n                result.add(word\
    \ + \" \");\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp07ghhij.java:15: error: no suitable method found for sort(String[])\n\
    \        Collections.sort(words);\n                   ^\n    method Collections.<T#1>sort(List<T#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; String[] cannot be converted to List<T#1>))\n    method Collections.<T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Comparable<? super T#1> declared in method\
    \ <T#1>sort(List<T#1>)\n    T#2 extends Object declared in method <T#2>sort(List<T#2>,Comparator<?\
    \ super T#2>)\n/tmp/tmpp07ghhij.java:16: error: incompatible types: String[] cannot\
    \ be converted to List<?>\n        Collections.reverse(words);\n             \
    \               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ String longestPrefix  = \"\";\n        for (int i = 0; i < string.length();\
    \ i++) {\n            String prefix = string.substring(0, i);\n            prefixes.add(prefix);\n\
    \            if (prefixes.stream().map(s -> prefix + s).collect(Collectors.toList()).size()\
    \ > longestPrefix.length())\n                longestPrefix = prefix;\n       \
    \ }\n        return prefixes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyv_9jcj7.java:25)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // Base case: input string is empty\n        if (string.equals(\"\
    \")) {\n            return new ArrayList<>();\n        }\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        // Recursion: find the longest prefix\
    \ of the string using recursion\n        prefixes = allPrefixes(string, prefixes);\n\
    \        // Return final prefix list containing all prefixes of input string\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo0isxk3w.java:19: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        prefixes = allPrefixes(string, prefixes);\n\
    \                   ^\n  required: String\n  found:    String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndf17vz7.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.length() == 0) {\n            return new ArrayList<>();\n\
    \        }\n        ArrayList<String> result = new ArrayList<>();\n        for\
    \ (String prefix : allPrefixes(string.substring(1))) {\n            result.add(prefix);\n\
    \            result.add(string.substring(0, prefix.length()));\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sl5tvx9.java:25)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        int len = string.length();\n        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for(int i = 0; i < len; i++) {\n       \
    \     String prefix = string.substring(0, i);\n            result.add(prefix);\n\
    \            if(i < len - 1) {\n                String sub = string.substring(i,\
    \ len + 1);\n                ArrayList<String> newResult = allPrefixes(sub);\n\
    \                result.addAll(newResult);\n            }\n        }\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 7, length 6\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmphb34d5vl.java:19)\n\
    \tat Problem.main(tmphb34d5vl.java:28)\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<>();\n        list.add(\"\
    \");\n        allPrefixes(string, \"\", list);\n        return list;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa3ifkrem.java:15: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", list);\n     \
    \   ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       Arrays.stream(string.toLowerCase().split(\"\")).forEach(\n           \
    \ prefixes -> {\n                Collections.addAll(prefixes, prefixes.stream().map(\n\
    \                    s -> s.substring(0, Math.min(s.length(), s.length()))).collect(Collectors.toList())\n\
    \                );\n            });\n        return prefixes;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr9e7hve4.java:15: error: variable prefixes is already defined in\
    \ method allPrefixes(String)\n            prefixes -> {\n            ^\n/tmp/tmpr9e7hve4.java:16:\
    \ error: cannot find symbol\n                Collections.addAll(prefixes, prefixes.stream().map(\n\
    \                                                     ^\n  symbol:   method stream()\n\
    \  location: variable prefixes of type String\n2 errors\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(new ArrayList<>(Arrays.asList(string.split(\"\
    \\\\s+\"))), 0, string.length());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx3nhzv2b.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(new ArrayList<>(Arrays.asList(string.split(\"\
    \\\\s+\"))), 0, string.length());\n               ^\n  required: String\n  found:\
    \    ArrayList<String>,int,int\n  reason: actual and formal argument lists differ\
    \ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string.toCharArray());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6b_se1e.java:13: error: incompatible types: char[] cannot be converted\
    \ to String\n        return allPrefixes(string.toCharArray());\n             \
    \                                ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     char prev = 'a';\n        for (int i = 0; i < string.length(); i++) {\n\
    \            char ch = string.charAt(i);\n            result.add(prev + ch);\n\
    \            prev = ch;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3digpq87.java:17: error: incompatible types: int cannot be converted\
    \ to String\n            result.add(prev + ch);\n                            ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixesHelper(new ArrayList<String>(Arrays.asList(string)),\"\",result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9721c94d.java:14: error: cannot find symbol\n        allPrefixesHelper(new\
    \ ArrayList<String>(Arrays.asList(string)),\"\",result);\n        ^\n  symbol:\
    \   method allPrefixesHelper(ArrayList<String>,String,ArrayList<String>)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int min = 0;\n        int max = string.length() - 1;\n        while (min<=max)\
    \ {\n            prefixes.add(string.substring(min, max+1));\n            min\
    \ = min + 1;\n            max = max - 1;\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgat04_ld.java:25)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.length() <= 0) return new ArrayList<>();\n   \
    \     String prefix = \"\";\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        prefixes.add(prefix);\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefix = prefix + string.charAt(i);\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplr9b2v2h.java:25)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     char[] chars = string.toCharArray();\n        int currentLength = 0;\n \
    \       for (char ch : chars) {\n            if (currentLength == chars.length)\n\
    \                result.add(new String(new char[]{ch}));\n            else {\n\
    \                if (currentLength > 0)\n                    result.add(new String(new\
    \ char[]{chars[currentLength], ch}));\n                else\n                \
    \    result.add(new String(new char[]{ch}));\n            }\n            currentLength++;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzgdbq19.java:31)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ String prefix = string;\n        int i = 0;\n        while (i < prefix.length())\
    \ {\n            prefixes.add(prefix.substring(0, i));\n            i = i + 1;\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78t1_cgf.java:24)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  allPrefixes(string, ret);\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppc95ftkq.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, ret);\n        ^\n \
    \ required: String\n  found:    String,ArrayList<String>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.isEmpty()) return new ArrayList<String>();\n\n\
    \        // Split the string on every character and remove empty strings\n   \
    \     String[] strings = string.split(\"\");\n        Arrays.stream(strings).filter(\
    \ s -> !s.isEmpty() ).toArray();\n\n        // Use a map to create a list of prefixes\
    \ using a sorted set\n        SortedSet<String> prefixes = new TreeSet<String>();\n\
    \        for (String s : strings) prefixes.add(s);\n\n        // Sort the prefixes\
    \ (descending order)\n        prefixes.descendingIterator();\n\n        // Create\
    \ the list of prefixes\n        ArrayList<String> prefixList = new ArrayList<String>(prefixes);\n\
    \n        // Return the list of prefixes\n        return prefixList;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsod9la1e.java:24: error: cannot find symbol\n        prefixes.descendingIterator();\n\
    \                ^\n  symbol:   method descendingIterator()\n  location: variable\
    \ prefixes of type SortedSet<String>\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (char prefix : string.substring(0, string.length()).split(\"\")) {\n\
    \            prefixes.add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprvqydvyo.java:14: error: incompatible types: String cannot be converted\
    \ to char\n        for (char prefix : string.substring(0, string.length()).split(\"\
    \")) {\n                                                                     ^\n\
    /tmp/tmprvqydvyo.java:15: error: incompatible types: char cannot be converted\
    \ to String\n            prefixes.add(prefix);\n                         ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string, new ArrayList<String>());\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbvyzwz4i.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, new ArrayList<String>());\n\
    \               ^\n  required: String\n  found:    String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        String\
    \ prefix = \"\";\n        for (int i = 0; i < string.length(); i++) {\n      \
    \      prefix = prefix + string.charAt(i);\n            if (string.length() <=\
    \ i) {\n                result.add(prefix);\n            }\n            else if\
    \ (i < string.length() - 1) {\n                if (string.charAt(i) != string.charAt(i\
    \ + 1)) {\n                    result.add(prefix);\n                    prefix\
    \ = \"\";\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkf7o3fc2.java:31)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     result.add((String) null);\n        allPrefixes(\"\", string, result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp37y1hq0n.java:15: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(\"\", string, result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefix = new ArrayList<>();\n        allPrefixes(string,\
    \ prefix, 0, new ArrayList<String>());\n        return prefix;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5lm0dtqh.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, prefix, 0, new ArrayList<String>());\n\
    \        ^\n  required: String\n  found:    String,ArrayList<String>,int,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        int min = string.length();\n        List<String> prefixes\
    \ = new ArrayList<>();\n        for (String prefix : allPrefixesHelper(string,\
    \ 0, min)) {\n            prefixes.add(prefix);\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzyhsxnu2.java:15: error: cannot find symbol\n        for (String\
    \ prefix : allPrefixesHelper(string, 0, min)) {\n                            \
    \ ^\n  symbol:   method allPrefixesHelper(String,int,int)\n  location: class Problem\n\
    /tmp/tmpzyhsxnu2.java:18: error: incompatible types: List<String> cannot be converted\
    \ to ArrayList<String>\n        return prefixes;\n               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ char[] chars = string.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            sb.append(chars[i]);\n            for (int j = i; j < chars.length;\
    \ j++)\n                sb.append(chars[j]);\n            prefixes.add(sb.toString());\n\
    \            sb.setLength(0);\n        }\n        return prefixes;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmparkw0peu.java:28)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n\n     \
    \   // iterate through all characters starting with first character\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            String prefix = string.substring(0,\
    \ i);\n            // If prefix is not empty\n            if (prefix.length()\
    \ > 0) {\n                prefixes.add(prefix);\n            }\n        }\n\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpob1amluq.java:28)\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // This algorithm finds all prefixes in a string of length\
    \ 2 to length n by searching through all possible prefix lengths.\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        if (string.length() < 2) return\
    \ prefixes;\n        char[] chars = string.toCharArray();\n        int n = string.length();\n\
    \        for (int i = 1; i < n; i++) {\n            String prefix = new String(chars,\
    \ 0, i);\n            prefixes.add(prefix);\n            if (i < n) prefixes =\
    \ prefixes.stream()\n                    .flatMap(x -> allPrefixesHelper(prefix,\
    \ chars, i))\n                    .collect(Collectors.toList());\n        }\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjsh5gt_w.java:22: error: cannot find symbol\n                 \
    \   .flatMap(x -> allPrefixesHelper(prefix, chars, i))\n                     \
    \             ^\n  symbol:   method allPrefixesHelper(String,char[],int)\n  location:\
    \ class Problem\n/tmp/tmpjsh5gt_w.java:23: error: incompatible types: inference\
    \ variable R has incompatible bounds\n                    .collect(Collectors.toList());\n\
    \                            ^\n    equality constraints: List<T#2>\n    lower\
    \ bounds: ArrayList<String>,Object\n  where R,A,T#1,T#2 are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    T#1 extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n2 errors\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     Stack<String> stack = new Stack<>();\n        stack.push(string);\n    \
    \    do {\n            String pop = stack.pop();\n            result.add(pop);\n\
    \            int len = pop.length();\n            for (int i = 0; i < len; i++)\
    \ {\n                stack.push(pop.substring(0, i) + pop.substring(i+1));\n \
    \           }\n        } while (!stack.empty());\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2c7ey1a3.java:27)\n"
  stdout: ''
  timestamp: 1660011804
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // Sort string from shortest to longest\n        Arrays.sort(string.chars());\n\
    \        ArrayList<String> prefixes = new ArrayList<>();\n        // Start from\
    \ first character in sorted string\n        for (int i = 0; i < string.charAt(0);\
    \ i++) {\n            String prefix = \"\";\n            // Add all characters\
    \ before current character\n            for (int j = i; j < string.length(); j++)\
    \ {\n                prefix += string.charAt(j);\n            }\n            //\
    \ Add current prefix to list\n            prefixes.add(prefix);\n        }\n \
    \       return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4eokwwty.java:14: error: no suitable method found for sort(IntStream)\n\
    \        Arrays.sort(string.chars());\n              ^\n    method Arrays.sort(int[])\
    \ is not applicable\n      (argument mismatch; IntStream cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ IntStream cannot be converted to long[])\n    method Arrays.sort(short[]) is\
    \ not applicable\n      (argument mismatch; IntStream cannot be converted to short[])\n\
    \    method Arrays.sort(char[]) is not applicable\n      (argument mismatch; IntStream\
    \ cannot be converted to char[])\n    method Arrays.sort(byte[]) is not applicable\n\
    \      (argument mismatch; IntStream cannot be converted to byte[])\n    method\
    \ Arrays.sort(float[]) is not applicable\n      (argument mismatch; IntStream\
    \ cannot be converted to float[])\n    method Arrays.sort(double[]) is not applicable\n\
    \      (argument mismatch; IntStream cannot be converted to double[])\n    method\
    \ Arrays.sort(Object[]) is not applicable\n      (argument mismatch; IntStream\
    \ cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011804
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     char[] charArray = string.toCharArray();\n        Arrays.sort(charArray);\n\
    \        int begin = 0;\n        int end = charArray.length - 1;\n        while(begin\
    \ <= end) {\n            String prefix = String.valueOf(charArray, begin, end);\n\
    \            if(!result.contains(prefix))\n                result.add(prefix);\n\
    \            begin++;\n            end--;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpku7olwk0.java:29)\n"
  stdout: ''
  timestamp: 1660011804
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string, new ArrayList<>());\n    }\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytze8ygy.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, new ArrayList<>());\n\
    \               ^\n  required: String\n  found:    String,ArrayList<Object>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0yd1v38.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        boolean[]\
    \ memo = new boolean[string.length()];\n        for(int i = 0; i < memo.length;\
    \ i++) {\n            memo[i] = true;\n        }\n        result\n           \
    \     .add(\"\")\n                .add(\"\");\n        for(int i = 0; i < memo.length;\
    \ i++) {\n            if(memo[i]) {\n                if(string.length() >= i)\
    \ {\n                    String prefix = string.substring(0, i);\n           \
    \         result.add(prefix);\n                    for(int j = i + 1; j < memo.length;\
    \ j++) {\n                        if(!memo[j]) {\n                           \
    \ memo[j] = true;\n                            prefix = string.substring(0, j);\n\
    \                            result.add(prefix);\n                        }\n\
    \                    }\n                }\n            }\n        }\n        ArrayList<String>\
    \ resultCopy = new ArrayList<>(result);\n        return resultCopy;\n    }\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxq701yu6.java:20: error: boolean cannot be dereferenced\n     \
    \           .add(\"\");\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if(string==null || string.length()==0)\n            return\
    \ new ArrayList<String>();\n        \n        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        \n        int len = string.length();\n       \
    \ \n        // If string is length 1, add string itself\n        if(len==1) return\
    \ new ArrayList<String>(Arrays.asList((String)string));\n        \n        //\
    \ Start with an empty prefix list\n        prefixes.clear();\n        \n     \
    \   // If there are more characters in the string\n        if(len>1) {\n     \
    \       // Add every prefix\n            prefixes.addAll(allPrefixes(string.substring(1)));\n\
    \            // Then add the prefixes of the rest of the string\n            prefixes.addAll(allPrefixes(string.substring(0,len-1)));\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkbz0s2nz.java:37)\n"
  stdout: ''
  timestamp: 1660011804
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ ArrayList<String> tail = new ArrayList<>();\n        for(char c : string.toCharArray())\
    \ {\n            for(String s: prefixes) {\n                if(s.startsWith(String.valueOf(c)))\
    \ tail.add(s);\n            }\n            prefixes.add(String.valueOf(c));\n\
    \            tail.add(c);\n        }\n        prefixes.addAll(tail);\n       \
    \ return prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyy8qc58a.java:20: error: incompatible types: char cannot be converted\
    \ to String\n            tail.add(c);\n                     ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011804
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ StringBuilder builder = new StringBuilder();\n        for (int i = 0; i <= string.length();\
    \ i++) {\n            builder.append(string.charAt(i));\n            prefixes.add(builder.toString());\n\
    \            builder = new StringBuilder();\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmp2zcn3_js.java:16)\n\
    \tat Problem.main(tmp2zcn3_js.java:23)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     ArrayList<String> currentList = new ArrayList<String>();\n        for (String\
    \ current : string.split(\"\")) {\n            currentList.add(current);\n   \
    \         result.addAll(currentList);\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23xo1bog.java:22)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.isEmpty()) return new ArrayList<String>();\n \
    \       ArrayList<String> prefixes = new ArrayList<>();\n        for (String prefix\
    \ : string.split(\"(?<=.)\")) {\n            prefixes.add(prefix);\n        }\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3a22kb3o.java:22)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     ArrayList<String> current = new ArrayList<String>();\n        current.add(string);\n\
    \        while(current.size() > 0) {\n            ArrayList<String> newCurrent\
    \ = new ArrayList<String>();\n            for (String prefix : current) {\n  \
    \              for (int i=0;i<prefix.length();i++) {\n                    newCurrent.add(prefix.substring(0,\
    \ i) + prefix.substring(i+1));\n                }\n            }\n           \
    \ current = newCurrent;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwyuy7o8v.java:29)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); ++i) {\n            String prefix\
    \ = \"\";\n            for (int j = 0; j < i; ++j) {\n                prefix +=\
    \ string.charAt(j);\n            }\n            prefix = prefix.trim();\n    \
    \        prefixes.add(prefix);\n        }\n        return prefixes;\n    }\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpprd67y6j.java:26)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> arrayList = new ArrayList<String>();\n\
    \        int len = string.length();\n        if (len == 0) return arrayList;\n\
    \        // Find minimum length prefix of string\n        int m = len - 1;\n \
    \       int currentIndex = 0;\n        int lastIndex = len - 1;\n        while\
    \ (currentIndex <= lastIndex) {\n            String prefix = \"A\" + string.substring(currentIndex,\
    \ lastIndex);\n            arrayList.add(prefix);\n            currentIndex++;\n\
    \            lastIndex--;\n        }\n        return arrayList;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwevvfn0l.java:30)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        char[]\
    \ charArray = string.toCharArray();\n        int len = charArray.length;\n   \
    \     ArrayList<String> stack = new ArrayList<>(len);\n        for (int i = 0;\
    \ i < len; i++) {\n            if (i < len) {\n                String prefix =\
    \ \"\";\n                for (int j = 0; j < i; j++)\n                    prefix\
    \ += charArray[j];\n                result.add(prefix);\n            }\n     \
    \       stack.add(String.valueOf(charArray[i]));\n        }\n        int count\
    \ = stack.size();\n        while (!stack.isEmpty()) {\n            String current\
    \ = stack.remove(0);\n            for (int i = 1; i < len; i++) {\n          \
    \      char next = charArray[i];\n                boolean match = true;\n    \
    \            for (int j = 0; j < current.length(); j++) {\n                  \
    \  if (current.charAt(j) != next)\n                        match = false;\n  \
    \              }\n                if (match) {\n                    String prefix\
    \ = \"\";\n                    for (int j = 0; j < i; j++)\n                 \
    \       prefix += charArray[j];\n                    result.add(prefix);\n   \
    \             }\n                stack.add(String.valueOf(next));\n          \
    \  }\n            count--;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpndf17vz7.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string.toLowerCase());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.String.toLowerCase(String.java:3391)\n\
    \tat java.base/java.lang.String.toLowerCase(String.java:3415)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\tat Problem.allPrefixes(tmprgcojkwc.java:13)\n\
    \tat Problem.allPrefixes(t"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0yd1v38.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> stringPrefixes = new ArrayList<String>();\n\
    \        ArrayList<String> suffixes = getSuffixes(string);\n\n        for (int\
    \ i = 0; i < suffixes.size(); i++) {\n            String prefix = stringPrefixes.isEmpty()\
    \ ? \"\" : stringPrefixes.get(0);\n\n            if (prefix.equals(suffixes.get(i)))\
    \ {\n                stringPrefixes.add(suffixes.get(i));\n            } else\
    \ if (i > 0 && prefix.compareTo(suffixes.get(i)) > 0) {\n                stringPrefixes.remove(0);\n\
    \                stringPrefixes.add(suffixes.get(i));\n            }\n       \
    \ }\n\n        return stringPrefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjn2b30es.java:14: error: cannot find symbol\n        ArrayList<String>\
    \ suffixes = getSuffixes(string);\n                                     ^\n  symbol:\
    \   method getSuffixes(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // TODO Complete me\n        ArrayList<String> result = new\
    \ ArrayList<String>();\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6r6q5qn9.java:19)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return string.chars()\n            .mapToObj(i -> (char)\
    \ i)\n            .mapToObj(Character.toString)\n            .map(s -> s.substring(0,\
    \ 1))\n            .map(s -> new StringBuilder().append(s))\n            .map(s\
    \ -> new StringBuilder().append(s))\n            .filter(s -> s.startsWith(String.valueOf('0')))\n\
    \            .distinct()\n            .sorted()\n            .map(s -> new StringBuilder().append(s).deleteCharAt(0))\n\
    \            .collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5b7qcvk6.java:15: error: cannot find symbol\n            .mapToObj(Character.toString)\n\
    \                               ^\n  symbol:   variable toString\n  location:\
    \ class Character\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixes(string, 0, new ArrayList<String>(), prefixes);\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptjrjtdro.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, 0, new ArrayList<String>(),\
    \ prefixes);\n        ^\n  required: String\n  found:    String,int,ArrayList<String>,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string.toCharArray());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6b_se1e.java:13: error: incompatible types: char[] cannot be converted\
    \ to String\n        return allPrefixes(string.toCharArray());\n             \
    \                                ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ if (string.length() < 3) {\n            return prefixes;\n        }\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            String newString =\
    \ string.substring(0, i) + string.substring(i + 1);\n            prefixes.addAll(allPrefixes(newString));\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeetjekuo.java:25)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       if (string == null || string.trim().isEmpty())\n            return prefixes;\n\
    \        int minLength = getMinLength(string);\n        String prefix = \"\";\n\
    \        if (minLength > 0) {\n            prefix = string.substring(0, minLength);\n\
    \        }\n        addPrefix(prefixes, prefix);\n        int length = prefix.length();\n\
    \        int index = 0;\n        int length = prefix.length();\n        while\
    \ (index < string.length() - 1) {\n            int nextLength = index + 1;\n \
    \           if (nextLength > string.length() - 1) {\n                nextLength\
    \ = string.length();\n            }\n            if (length + nextLength <= string.length())\
    \ {\n                String nextPrefix = string.substring(index, nextLength);\n\
    \                if (nextPrefix.length() == length) {\n                    addPrefix(prefixes,\
    \ prefix);\n                }\n            }\n            index = nextLength;\n\
    \            length += nextLength;\n        }\n        return prefixes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqv_jjf0q.java:16: error: cannot find symbol\n        int minLength\
    \ = getMinLength(string);\n                        ^\n  symbol:   method getMinLength(String)\n\
    \  location: class Problem\n/tmp/tmpqv_jjf0q.java:21: error: cannot find symbol\n\
    \        addPrefix(prefixes, prefix);\n        ^\n  symbol:   method addPrefix(ArrayList<String>,String)\n\
    \  location: class Problem\n/tmp/tmpqv_jjf0q.java:24: error: variable length is\
    \ already defined in method allPrefixes(String)\n        int length = prefix.length();\n\
    \            ^\n/tmp/tmpqv_jjf0q.java:33: error: cannot find symbol\n        \
    \            addPrefix(prefixes, prefix);\n                    ^\n  symbol:  \
    \ method addPrefix(ArrayList<String>,String)\n  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null || string.isEmpty()) return new ArrayList<String>();\n\
    \        final ArrayList<String> prefix = new ArrayList<String>();\n        for\
    \ (char c : string.toCharArray()) {\n            if (c == '\\0') break;\n    \
    \        prefix.add(String.valueOf(c));\n            prefix.add(String.valueOf(c\
    \ + (Character.MAX_VALUE >> 1)));\n        }\n        return prefix;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2iwp5dyi.java:24)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ // Recursive method to get the prefix of each index\n        prefixRecursive(\"\
    \", string, prefixes);\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxt_5l9jq.java:15: error: cannot find symbol\n        prefixRecursive(\"\
    \", string, prefixes);\n        ^\n  symbol:   method prefixRecursive(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        ArrayList<String>\
    \ prefix = new ArrayList<>();\n        for (String s: string.split(\"\")) {\n\
    \            prefix.add(s);\n            result.addAll(prefix(prefix, result));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpomykhwfe.java:17: error: cannot find symbol\n            result.addAll(prefix(prefix,\
    \ result));\n                          ^\n  symbol:   method prefix(ArrayList<String>,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ allPrefixes(string, \"\", prefixes);\n        return prefixes;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo32oqxr3.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", prefixes);\n \
    \       ^\n  required: String\n  found:    String,String,ArrayList<String>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        List<String> result = new ArrayList<>();\n        allPrefixesHelper(string,\
    \ \"\", result, 0, 0);\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp15mwq492.java:14: error: cannot find symbol\n        allPrefixesHelper(string,\
    \ \"\", result, 0, 0);\n        ^\n  symbol:   method allPrefixesHelper(String,String,List<String>,int,int)\n\
    \  location: class Problem\n/tmp/tmp15mwq492.java:15: error: incompatible types:\
    \ List<String> cannot be converted to ArrayList<String>\n        return result;\n\
    \               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        String[]\
    \ str = string.split(\"\");\n        for (int i = str.length - 1; i >= 0; i--)\
    \ {\n            String prefix = \"\";\n            for (int j = 0; j < i; j++)\n\
    \                prefix += str[j];\n            String suffix = \"\";\n      \
    \      for (int j = i; j < str.length; j++)\n                suffix += str[j];\n\
    \            result.add(prefix + \"/\" + suffix);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnr3erhf1.java:27)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0yd1v38.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> array = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            String prefix =\
    \ string.substring(0, i);\n            if (!array.contains(prefix)) {\n      \
    \          array.add(prefix);\n            }\n        }\n        return array;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmh2a9iw_.java:24)\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes0(string, new ArrayList<String>());\n \
    \   }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpta6d3lw7.java:13: error: cannot find symbol\n        return allPrefixes0(string,\
    \ new ArrayList<String>());\n               ^\n  symbol:   method allPrefixes0(String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011805
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.length() < 2)\n            return new ArrayList<>();\n\
    \        ArrayList<String> prefixList = new ArrayList<>();\n        prefixList.add(string.substring(0,\
    \ 1));\n        prefixList.add(string.substring(1, 2));\n        prefixList.add(string.substring(2,\
    \ 3));\n        prefixList.add(string.substring(3, string.length()));\n      \
    \  return prefixList;\n    }\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_qlcvwp.java:24)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null || string.length() == 0) return new ArrayList<String>();\n\
    \n        ArrayList<String> prefixes = new ArrayList<String>();\n\n        Stack<String>\
    \ suffixes = new Stack<String>();\n\n        // Push prefix of current character\
    \ to stack\n        suffixes.push(string.substring(0, 1));\n\n        while (!suffixes.empty())\
    \ {\n            String prefix = suffixes.pop();\n\n            // Check prefix\
    \ is not empty\n            if (prefix.length() > 0) {\n                prefixes.add(prefix);\n\
    \n                // Add suffix to stack\n                suffixes.push(string.substring(prefix.length(),\
    \ string.length()));\n            }\n        }\n\n        return prefixes;\n \
    \   }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        int n = string.length();\n        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int i = 0; i < n; i++) {\n        \
    \    String prefix = string.substring(0, i);\n            ArrayList<String> sublist\
    \ = allPrefixes(prefix, 1);\n            result.addAll(sublist);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgz_013j3.java:17: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n            ArrayList<String> sublist = allPrefixes(prefix,\
    \ 1);\n                                        ^\n  required: String\n  found:\
    \    String,int\n  reason: actual and formal argument lists differ in length\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        for\
    \ (int i=0; ; i+=string.length()) {\n            if (string.charAt(i) != string.charAt(i+1))\n\
    \                result.add(string.substring(i, i+1));\n            if (i == string.length())\n\
    \                result.add(\"\");\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplq8j6az1.java:20: error: unreachable statement\n        return\
    \ result;\n        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixList = new ArrayList<String>();\n\
    \        if(string == null) {\n            return prefixList;\n        }\n   \
    \     for(int i = 0; i < string.length(); ++i) {\n            prefixList.add(string.substring(0,\
    \ i));\n        }\n        return prefixList;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3ryxrfq.java:24)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(Arrays.asList(string));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcma_ni71.java:13: error: incompatible types: no instance(s) of\
    \ type variable(s) T exist so that List<T> conforms to String\n        return\
    \ allPrefixes(Arrays.asList(string));\n               ^\n  where T is a type-variable:\n\
    \    T extends Object declared in method <T>asList(T...)\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        String firstLetter = string.substring(0, 1);\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n\n        for(int i = 0; i < string.length();\
    \ i++) {\n            String nextLetter = string.substring(i, i + 1);\n\n    \
    \        if(i != 0) {\n                prefixes.add(string.substring(0, i));\n\
    \            }\n\n            if(string.startsWith(firstLetter + nextLetter))\
    \ {\n                prefixes.add(string.substring(i, i + 1));\n            }\n\
    \        }\n\n        prefixes.remove(string.substring(0, 1));\n\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpao1gtt2o.java:13)\n\
    \tat Problem.main(tmpao1gtt2o.java:33)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefix = new ArrayList<String>();\n   \
    \     ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String>\
    \ remain = new ArrayList<String>();\n        ArrayList<String> remaining = new\
    \ ArrayList<String>();\n\n        for (char c : string.toCharArray()) {\n    \
    \        remaining.add(String.valueOf(c));\n        }\n\n        while (!remaining.isEmpty())\
    \ {\n            String word = remain.get(0);\n            prefix.add(word);\n\
    \            remaining.remove(word);\n\n            if (remaining.isEmpty()) {\n\
    \                result.add(prefix);\n            } else {\n                ArrayList<String>\
    \ rest = allPrefixes(remaining);\n                for (int i = 0; i < rest.size();\
    \ i++) {\n                    prefix.add(rest.get(i));\n                }\n  \
    \          }\n        }\n\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp379yk5s0.java:28: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n                result.add(prefix);\n       \
    \                    ^\n/tmp/tmp379yk5s0.java:30: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n                ArrayList<String> rest = allPrefixes(remaining);\n\
    \                                                     ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string, new ArrayList<String>());\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbvyzwz4i.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, new ArrayList<String>());\n\
    \               ^\n  required: String\n  found:    String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        List<String> prefixes = new ArrayList<String>(string.split(\"\
    \"));\n        if (prefixes.isEmpty())\n            return prefixes;\n       \
    \ ArrayList<String> subPrefixes = allPrefixes(prefixes.get(0));\n        for (String\
    \ prefix : prefixes.get(0)) {\n            while (subPrefixes.size() <= prefix)\
    \ {\n                subPrefixes.add(\"\");\n            }\n        }\n      \
    \  return prefixes.stream().flatMap(prefix -> subPrefixes.stream()\n         \
    \   .map(s -> s.substring(prefix))\n            .collect(Collectors.toList())).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgux4agjr.java:13: error: no suitable constructor found for ArrayList(String[])\n\
    \        List<String> prefixes = new ArrayList<String>(string.split(\"\"));\n\
    \                                ^\n    constructor ArrayList.ArrayList(int) is\
    \ not applicable\n      (argument mismatch; String[] cannot be converted to int)\n\
    \    constructor ArrayList.ArrayList(Collection<? extends String>) is not applicable\n\
    \      (argument mismatch; String[] cannot be converted to Collection<? extends\
    \ String>)\n/tmp/tmpgux4agjr.java:15: error: incompatible types: List<String>\
    \ cannot be converted to ArrayList<String>\n            return prefixes;\n   \
    \                ^\n/tmp/tmpgux4agjr.java:17: error: for-each not applicable to\
    \ expression type\n        for (String prefix : prefixes.get(0)) {\n         \
    \                                ^\n  required: array or java.lang.Iterable\n\
    \  found:    String\n/tmp/tmpgux4agjr.java:18: error: bad operand types for binary\
    \ operator '<='\n            while (subPrefixes.size() <= prefix) {\n        \
    \                              ^\n  first type:  int\n  second type: String\n\
    /tmp/tmpgux4agjr.java:23: error: incompatible types: String cannot be converted\
    \ to int\n            .map(s -> s.substring(prefix))\n                       \
    \           ^\n/tmp/tmpgux4agjr.java:22: error: incompatible types: inference\
    \ variable R#1 has incompatible bounds\n        return prefixes.stream().flatMap(prefix\
    \ -> subPrefixes.stream()\n                                        ^\n    equality\
    \ constraints: List<T#2>\n    lower bounds: Stream<? extends R#2>,Object\n  where\
    \ R#1,A,T#1,T#2,R#2 are type-variables:\n    R#1 extends Object declared in method\
    \ <R#1,A>collect(Collector<? super T#1,A,R#1>)\n    A extends Object declared\
    \ in method <R#1,A>collect(Collector<? super T#1,A,R#1>)\n    T#1 extends Object\
    \ declared in interface Stream\n    T#2 extends Object declared in method <T#2>toList()\n\
    \    R#2 extends Object declared in method <R#2>flatMap(Function<? super T#1,?\
    \ extends Stream<? extends R#2>>)\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbo"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int n = string.length();\n        int start = 0;\n        int currentLength\
    \ = n;\n        while (start < n) {\n            while (currentLength >= 0 &&\
    \ !string.charAt(start).equals(\"(\")) {\n                currentLength--;\n \
    \           }\n            while (currentLength >= 0 && !string.charAt(currentLength).equals(\"\
    )\")) {\n                currentLength--;\n            }\n            if (currentLength\
    \ < 1) {\n                prefixes.add(string.substring(start));\n           \
    \     start = currentLength;\n            }\n            currentLength--;\n  \
    \      }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuxqdmwo4.java:18: error: char cannot be dereferenced\n        \
    \    while (currentLength >= 0 && !string.charAt(start).equals(\"(\")) {\n   \
    \                                                           ^\n/tmp/tmpuxqdmwo4.java:21:\
    \ error: char cannot be dereferenced\n            while (currentLength >= 0 &&\
    \ !string.charAt(currentLength).equals(\")\")) {\n                           \
    \                                           ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // TODO implement this function\n        ArrayList<String>\
    \ prefixes = new ArrayList<>();\n        boolean isPresent = false;\n        int\
    \ i = 0;\n        while (isPresent == false) {\n            isPresent = string.substring(i,\
    \ i + 1).equals(\"_\");\n            if (isPresent == true) {\n              \
    \  prefixes.add(string.substring(0,i));\n            }\n            i++;\n   \
    \     }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end 1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpj4trex_1.java:18)\n\
    \tat Problem.main(tmpj4trex_1.java:27)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        for\
    \ (String prefix : prefixes(string)) {\n            if (result.isEmpty())\n  \
    \              result.add(prefix);\n            else\n                result.addAll(allPrefixes(prefix\
    \ + string.charAt(0)));\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplrq195_w.java:14: error: cannot find symbol\n        for (String\
    \ prefix : prefixes(string)) {\n                             ^\n  symbol:   method\
    \ prefixes(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        int\
    \ currentLength = 1;\n        int prefixLength = 1;\n        while(true) {\n \
    \           String prefix = string.substring(currentLength, currentLength+prefixLength);\n\
    \            if(prefix.isEmpty()) break;\n            result.add(prefix);\n  \
    \          currentLength += prefixLength;\n            prefixLength++;\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 2, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpnc__5be3.java:17)\n\
    \tat Problem.main(tmpnc__5be3.java:26)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return Arrays.stream(string.split(\"\")).\n             \
    \   map(String::valueOf).\n                map(String::toUpperCase).\n       \
    \         map(s -> new ArrayList<>(Arrays.asList(s))).\n                map(l\
    \ -> l.subList(0, l.size() - 1)).\n                map(l -> l.get(0)).\n     \
    \           collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6i3b1fa1.java:19: error: incompatible types: inference variable\
    \ R has incompatible bounds\n                collect(Collectors.toList());\n \
    \                      ^\n    equality constraints: List<T#2>\n    lower bounds:\
    \ ArrayList<String>,Object\n  where R,A,T#1,T#2 are type-variables:\n    R extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    A extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    T#1\
    \ extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string.toCharArray());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6b_se1e.java:13: error: incompatible types: char[] cannot be converted\
    \ to String\n        return allPrefixes(string.toCharArray());\n             \
    \                                ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011802
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ if (string.length() == 1) {\n            prefixes.add(string);\n           \
    \ return prefixes;\n        }\n        for (String prefix : allPrefixes(string.substring(0,\
    \ string.length() - 1))) {\n            prefixes.add(prefix + string);\n     \
    \   }\n        return prefixes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpxj_qzq0f.java:18)\n\
    \tat Problem.main(tmpxj_qzq0f.java:24)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        char[]\
    \ chars = string.toCharArray();\n        ArrayList<String> current = new ArrayList<>();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            char ch = chars[i];\n\
    \            if (!current.isEmpty() && ch.isLetter()) {\n                current.add(String.valueOf(ch));\n\
    \                for (int j = 0; j < current.size(); j++) {\n                \
    \    char ch2 = current.get(j).charAt(0);\n                    current.remove(j);\n\
    \                    result.add(String.valueOf(ch2 + ch));\n                }\n\
    \            } else {\n                current.add(String.valueOf(ch));\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj1itau79.java:18: error: char cannot be dereferenced\n        \
    \    if (!current.isEmpty() && ch.isLetter()) {\n                            \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<>();\n\n        for\
    \ (int i = 1; i <= string.length(); i++) {\n            list.add(String.valueOf(string).substring(0,i));\n\
    \        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n\n       \
    \ String last = null;\n\n        // Iterate through each letter\n        for (int\
    \ i = 0; i < string.length(); ++i) {\n            // If current letter is first\
    \ letter\n            if (i == 0) {\n                // Add letter to arraylist\n\
    \                result.add(string.substring(0,i));\n                // Set last\
    \ letter as current letter\n                last = string.substring(0,i);\n  \
    \          } else {\n                // If current letter is not first letter\n\
    \                // Add letter to arraylist\n                result.add(string.substring(0,i)\
    \ + last);\n                // Set last letter as current letter\n           \
    \     last = string.substring(0,i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53io_v6e.java:37)\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            String prefix =\
    \ string.substring(0, i);\n            if (!result.contains(prefix)) {\n     \
    \           result.add(prefix);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp62qcg2dw.java:24)\n"
  stdout: ''
  timestamp: 1660011806
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     // Use stack to store prefix that lead to the shortest input string\n  \
    \      Stack<String> stack = new Stack<String>();\n        // Initialize first\
    \ item in stack\n        stack.push(new StringBuilder().append(string));\n   \
    \     while (stack.size() > 0) {\n            String prefix = stack.pop();\n \
    \           // Check all items in stack for that prefix\n            for (String\
    \ item : stack) {\n                if (item.startsWith(prefix)) {\n          \
    \          // If prefix found for current item, push it on stack\n           \
    \         stack.push(new StringBuilder().append(prefix).append(item));\n     \
    \           }\n            }\n            // Check if prefix is unique on stack\n\
    \            if (result.contains(prefix)) {\n                // If so, skip it,\
    \ because prefix is duplicate\n                result.add(prefix);\n         \
    \       continue;\n            }\n            // If prefix is not unique, add\
    \ prefix to the list\n            result.add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7x__cl94.java:17: error: incompatible types: StringBuilder cannot\
    \ be converted to String\n        stack.push(new StringBuilder().append(string));\n\
    \                                             ^\n/tmp/tmp7x__cl94.java:24: error:\
    \ incompatible types: StringBuilder cannot be converted to String\n          \
    \          stack.push(new StringBuilder().append(prefix).append(item));\n    \
    \                                                                    ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>(Arrays.asList(string));\n\
    \        while(!result.isEmpty())\n            result.remove(0);\n        int\
    \ startIndex = 0;\n        while(startIndex<string.length()-1)\n            if(string.charAt(startIndex+1)!=string.charAt(startIndex+2))\n\
    \            {\n                result.add(string.substring(startIndex, startIndex+2));\n\
    \                startIndex = startIndex+2;\n            }\n            else startIndex\
    \ = startIndex+1;\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 6\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmpzv83mf0h.java:18)\n\
    \tat Problem.main(tmpzv83mf0h.java:28)\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        int\
    \ n = string.length();\n        for (int i = 0; i < n; i++) {\n            result.add(string.substring(0,\
    \ i));\n            ArrayList<String> prefixes = allPrefixes(string.substring(0,\
    \ i));\n            for (String prefix : prefixes)\n                result.add(prefix);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpei0jr917.java:25)\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // Your code goes here\n        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        for(int i = 0; i < string.length(); i++) {\n \
    \           prefixes.add(string.substring(0, i));\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr5yewia.java:22)\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // Base case: if string is empty, return empty array\n  \
    \      if (string.isEmpty()) {\n            return new ArrayList<>();\n      \
    \  }\n\n        ArrayList<String> prefixes = new ArrayList<>();\n\n        //\
    \ Recursively call allPrefixes on remainder of string\n        // >>> allPrefixes(\"\
    abc\")\n        // [new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    ab\", (String)\"abc\"))]\n        prefixes.addAll(allPrefixes(string.substring(0,\
    \ string.length() - 1)));\n\n        // Recursively call allPrefixes on string\
    \ with first element removed\n        // >>> allPrefixes(\"a\")\n        // [new\
    \ ArrayList<String>(Arrays.asList((String)\"a\"))]\n        prefixes.addAll(allPrefixes(string.substring(0,\
    \ string.length())));\n\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.util.Arrays.copyOf(Arrays.java:3481)\n\
    \tat java.base/java.util.ArrayList.toArray(ArrayList.java:369)\n\tat java.base/java.util.ArrayList.addAll(ArrayList.java:670)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:23)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.allPrefixes(tmpgod20khv.java:28)\n\tat Problem.allPrefixes(tmpgod20khv.java:28)\n\
    \tat Problem.a"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixesRecursive(string, \"\", result, 0);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxq0s4_qh.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ \"\", result, 0);\n        ^\n  symbol:   method allPrefixesRecursive(String,String,ArrayList<String>,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     ArrayList<String> temp = new ArrayList<String>();\n        temp = string.split(\"\
    \");\n        for (String letter : temp) {\n            result.addAll(allPrefixes(letter,\
    \ temp));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfoe3vfff.java:15: error: incompatible types: String[] cannot be\
    \ converted to ArrayList<String>\n        temp = string.split(\"\");\n       \
    \                    ^\n/tmp/tmpfoe3vfff.java:17: error: method allPrefixes in\
    \ class Problem cannot be applied to given types;\n            result.addAll(allPrefixes(letter,\
    \ temp));\n                          ^\n  required: String\n  found:    String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n2 errors\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = 0;\n        for(int i = 0; i < string.length(); i++) {\n\
    \            length++;\n            String letter = string.substring(i, length);\n\
    \            prefixes.add(letter);\n            length--;\n        }\n       \
    \ return prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 2, end 1, length 6\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmp4teyyquh.java:17)\n\
    \tat Problem.main(tmp4teyyquh.java:25)\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<String>();\n\n\
    \        // Find longest prefix\n        int longest = 0, start = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == string.charAt(longest)) {\n                longest = i;\n            }\n\
    \        }\n\n        // Find all prefixes of the given string\n        while\
    \ (start < longest) {\n            int current = longest;\n            for (int\
    \ i = start; i < string.length(); i++) {\n                if (string.charAt(i)\
    \ != string.charAt(current)) {\n                    break;\n                }\n\
    \                current = i;\n            }\n            results.add(string.substring(start,\
    \ current));\n            start = current;\n        }\n\n        return results;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpexjp_u4v.java:40)\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixesUtil(string,\
    \ result, new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>());\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8yudpl74.java:14: error: cannot find symbol\n        allPrefixesUtil(string,\
    \ result, new ArrayList<String>(), new ArrayList<String>(), new ArrayList<String>());\n\
    \        ^\n  symbol:   method allPrefixesUtil(String,ArrayList<String>,ArrayList<String>,ArrayList<String>,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        for\
    \ (String prefix : prefixes(string)) {\n            result.add(prefix);\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq9fk2kpz.java:14: error: cannot find symbol\n        for (String\
    \ prefix : prefixes(string)) {\n                             ^\n  symbol:   method\
    \ prefixes(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011807
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       Stack<String> stringStack = new Stack<String>();\n        stringStack.push(string);\n\
    \        while (!stringStack.empty()) {\n            String prefix = stringStack.pop();\n\
    \            for (int i = 0; i < prefix.length(); ++i) {\n                prefixes.add(prefix\
    \ + String.valueOf(prefix.charAt(i)));\n                stringStack.push(prefix.substring(0,\
    \ i) + String.valueOf(prefix.charAt(i)));\n            }\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     int length = (int) Math.ceil(string.length() / 3.0);\n        for(int i\
    \ = 1; i <= length; i++) {\n            String prefix = string.substring(0, i);\n\
    \            result.add(prefix);\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4mp335mf.java:23)\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<>();\n    \
    \    int length = string.length();\n        for (int i = 0; i < length; i++)\n\
    \            for (int j = 0; j < i; j++)\n                allPrefixes.add(string.substring(i));\n\
    \        return allPrefixes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprw0hrw6z.java:22)\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(new ArrayList<String>(Arrays.asList(string.split(\"\
    \"))))\n               .stream().map(e -> new StringBuilder(e).reverse().toString()).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp84_7q3ys.java:13: error: incompatible types: ArrayList<String>\
    \ cannot be converted to String\n        return allPrefixes(new ArrayList<String>(Arrays.asList(string.split(\"\
    \"))))\n                           ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        int longest = 0;\n        int longestIndex = 0;\n       \
    \ ArrayList<String> result = new ArrayList<String>();\n\n        for (int i =\
    \ 0; i <= string.length(); i++) {\n            if (i >= string.length()) return\
    \ result;\n            boolean isSame = true;\n            for (int j = 0; j <=\
    \ longestIndex; j++)\n                if (string.charAt(i) != string.charAt(longestIndex\
    \ + j)) {\n                    isSame = false;\n                    break;\n \
    \               }\n            if (isSame) result.add(string.substring(longestIndex));\n\
    \            if (longest < i) { \n                longest = i;\n             \
    \   longestIndex = i;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzqx6_57j.java:35)\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ int n = string.length();\n        for (int i = 0; i < n; ++i) {\n          \
    \  String prefix = string.substring(0, i);\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk8gl0ier.java:23)\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(new ArrayList(), string);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpco16ybr0.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(new ArrayList(), string);\n\
    \               ^\n  required: String\n  found:    ArrayList,String\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     List<Character> chars = string.codePoints().map(Character::toChars).collect(Collectors.toList());\n\
    \        Stack<Character> stack = new Stack<Character>();\n        for (Character\
    \ c : chars) {\n            stack.push(c);\n            if (c.isLetter()) {\n\
    \                while (stack.peek() != ' ') {\n                    result.add(stack.pop());\n\
    \                }\n                stack.pop();\n            }\n        }\n \
    \       while (!stack.isEmpty()) {\n            result.add(stack.pop());\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp0_zcxq0.java:14: error: incompatible types: bad return type in\
    \ method reference\n        List<Character> chars = string.codePoints().map(Character::toChars).collect(Collectors.toList());\n\
    \                                                        ^\n    char[] cannot\
    \ be converted to int\n/tmp/tmpp0_zcxq0.java:18: error: no suitable method found\
    \ for isLetter(no arguments)\n            if (c.isLetter()) {\n              \
    \   ^\n    method Character.isLetter(char) is not applicable\n      (actual and\
    \ formal argument lists differ in length)\n    method Character.isLetter(int)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    /tmp/tmpp0_zcxq0.java:20: error: incompatible types: Character cannot be converted\
    \ to String\n                    result.add(stack.pop());\n                  \
    \                      ^\n/tmp/tmpp0_zcxq0.java:26: error: incompatible types:\
    \ Character cannot be converted to String\n            result.add(stack.pop());\n\
    \                                ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<>();\n        allPrefixes(string,\
    \ results);\n        return results;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd3yffqbd.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, results);\n        ^\n\
    \  required: String\n  found:    String,ArrayList<String>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     if (string.isEmpty()) return result;\n        ArrayDeque<String> stack =\
    \ new ArrayDeque<>();\n        stack.addLast(string);\n        while (!stack.isEmpty())\
    \ {\n            String prefix = stack.removeFirst();\n            result.add(prefix);\n\
    \            int n = prefix.length();\n            for (int i = 0; i < n; i++)\
    \ {\n                char c = prefix.charAt(i);\n                char d = Character.toLowerCase(c);\n\
    \                if (!stack.isEmpty()) {\n                    String rest = stack.removeFirst();\n\
    \                    stack.offerFirst(rest + d);\n                } else {\n \
    \                   stack.offerFirst(d + \"\");\n                }\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        for\
    \ (String prefix : prefixes(string))\n            result.add(prefix);\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2qky5px4.java:14: error: cannot find symbol\n        for (String\
    \ prefix : prefixes(string))\n                             ^\n  symbol:   method\
    \ prefixes(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return string.length() == 0 ? Collections.EMPTY_LIST : allPrefixes(\n\
    \                string, string.length() - 1);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprb0opix_.java:13: error: incompatible types: bad type in conditional\
    \ expression\n        return string.length() == 0 ? Collections.EMPTY_LIST : allPrefixes(\n\
    \                                                 ^\n    List cannot be converted\
    \ to ArrayList<String>\n/tmp/tmprb0opix_.java:13: error: method allPrefixes in\
    \ class Problem cannot be applied to given types;\n        return string.length()\
    \ == 0 ? Collections.EMPTY_LIST : allPrefixes(\n                             \
    \                                  ^\n  required: String\n  found:    String,int\n\
    \  reason: actual and formal argument lists differ in length\n2 errors\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if(string.isEmpty())\n            return new ArrayList<String>();\n\
    \n        ArrayList<String> prefixes = new ArrayList<String>();\n        int i\
    \ = 0;\n        while(i < string.length()) {\n            String prefix = string.substring(0,\
    \ i);\n            String newPrefix = string.substring(0, i);\n            prefix\
    \ = prefix.replace(\"\\\\\", \"\");\n            newPrefix = newPrefix.replace(\"\
    \\\\\", \"\");\n            while(prefix.equals(newPrefix)) {\n              \
    \  prefix = prefix.substring(0, prefix.length() - 1);\n                prefix\
    \ = prefix.replace(\"\\\\\", \"\");\n                newPrefix = newPrefix.replace(\"\
    \\\\\", \"\");\n            }\n\n            prefixes.add(prefix);\n         \
    \   i = i;\n        }\n\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpdt6bnoub.java:24)\n\
    \tat Problem.main(tmpdt6bnoub.java:37)\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<>();\n        allPrefixesHelper(string,0,\
    \ results, new ArrayList<>());\n        return results;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr9o7ckp9.java:14: error: cannot find symbol\n        allPrefixesHelper(string,0,\
    \ results, new ArrayList<>());\n        ^\n  symbol:   method allPrefixesHelper(String,int,ArrayList<String>,ArrayList<Object>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ prefixes.addAll(Arrays.asList(string.split(\"\")));\n        Collections.reverse(prefixes);\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfpyt3r0.java:19)\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\"));\n        allPrefixes(string, list);\n\
    \        return list;\n    }\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3rtfbnm2.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, list);\n        ^\n\
    \  required: String\n  found:    String,ArrayList<String>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (String prefix: allPrefixesIteration(string, new ArrayList<String>()))\n\
    \            add(prefix, result);\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ro3bf3t.java:14: error: cannot find symbol\n        for (String\
    \ prefix: allPrefixesIteration(string, new ArrayList<String>()))\n           \
    \                 ^\n  symbol:   method allPrefixesIteration(String,ArrayList<String>)\n\
    \  location: class Problem\n/tmp/tmp7ro3bf3t.java:15: error: cannot find symbol\n\
    \            add(prefix, result);\n            ^\n  symbol:   method add(String,ArrayList<String>)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null || string.isEmpty()) {\n            return\
    \ null;\n        }\n        if (string.charAt(0) == string.charAt(1)) {\n    \
    \        return new ArrayList<>(Arrays.asList(string.substring(1, string.length())));\n\
    \        }\n        ArrayList<String> results = new ArrayList<>();\n        for\
    \ (int i = 0; i < string.length(); ++i) {\n            for (String prefix : allPrefixes(string.substring(i,\
    \ string.length()))) {\n                if (prefix.length() > string.length()\
    \ || i == 0) {\n                    continue;\n                }\n           \
    \     results.add(prefix);\n            }\n        }\n        return results;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.allPrefixes(String)\"\
    \ is null\n\tat Problem.main(tmpqtkz7foz.java:31)\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ ArrayList<String> toProcess = new ArrayList<>();\n        // First step is to\
    \ process all of the strings\n        for (char c : string.toCharArray()) {\n\
    \            // Only add prefix to prefix list if we haven't added this prefix\
    \ yet\n            if (!prefixes.contains(\"\" + c)) {\n                prefixes.add(\"\
    \" + c);\n                toProcess.add(\"\" + c);\n            }\n        }\n\
    \        // Now we process the other strings in toProcess\n        while (toProcess.size()\
    \ > 0) {\n            String prefix = toProcess.get(0);\n            toProcess.remove(0);\n\
    \            for (int i = 0; i < prefix.length(); ++i) {\n                // Add\
    \ prefix to prefix list if we can add this prefix to a shorter string\n      \
    \          if (!prefixes.contains(prefix + toProcess.get(0))) {\n            \
    \        prefixes.add(prefix + toProcess.get(0));\n                    toProcess.add(prefix\
    \ + toProcess.get(0));\n                }\n            }\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixesUtil(string,\
    \ \"\", result, 0);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbnivxr0i.java:14: error: cannot find symbol\n        allPrefixesUtil(string,\
    \ \"\", result, 0);\n        ^\n  symbol:   method allPrefixesUtil(String,String,ArrayList<String>,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        if\
    \ (string == null || string.length() == 0) {\n            return result;\n   \
    \     }\n        allPrefixes(string, string, result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy6oh2yku.java:17: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, string, result);\n \
    \       ^\n  required: String\n  found:    String,String,ArrayList<String>\n \
    \ reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixesRec(string, \"\", \"\", result);\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfpdi639i.java:14: error: cannot find symbol\n        allPrefixesRec(string,\
    \ \"\", \"\", result);\n        ^\n  symbol:   method allPrefixesRec(String,String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null || string.length() == 0) {\n         \
    \   return new ArrayList<String>();\n        }\n        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        if (string.startsWith(string.substring(0,\
    \ 1).toString())) {\n            prefixes.add(string.substring(0, 1));\n     \
    \   }\n        for (int i = 1; i < string.length(); i++) {\n            if (string.startsWith(string.substring(0,\
    \ i).toString())) {\n                prefixes.add(string.substring(0, i));\n \
    \           }\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjglewbo7.java:29)\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        List<String> result = new ArrayList<String>(Arrays.asList(string.split(\"\
    \")));\n        return allPrefixes(result, 0, result.size());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp247i_b84.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(result, 0, result.size());\n\
    \               ^\n  required: String\n  found:    List<String>,int,int\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixesHelper(string, result, 0, new String[0]);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxw7syb0j.java:14: error: cannot find symbol\n        allPrefixesHelper(string,\
    \ result, 0, new String[0]);\n        ^\n  symbol:   method allPrefixesHelper(String,ArrayList<String>,int,String[])\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixesRecursive(string, \"\", result);\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8lkhz57i.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesRecursive(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ Queue<Character> q = new LinkedList<>();\n        q.add(string.charAt(0));\n\
    \        while (!q.isEmpty()) {\n            prefixes.add(String.valueOf(q.remove()));\n\
    \            for (int i = 1; i < string.length(); i++) {\n                q.add(string.charAt(i));\n\
    \            }\n        }\n        return prefixes;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmplkl7v0w3.java:15)\n\
    \tat Problem.main(tmplkl7v0w3.java:25)\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       ArrayList<String> currentPrefixes = new ArrayList<String>();\n       \
    \ StringBuilder temp = new StringBuilder(string);\n        while (temp.length()\
    \ > 0) {\n            String prefix = temp.substring(0, temp.length());\n    \
    \        if (!currentPrefixes.contains(prefix)) {\n                currentPrefixes.add(prefix);\n\
    \            }\n            temp.setLength(0);\n        }\n        if (temp.length()\
    \ > 0) {\n            prefixes.addAll(currentPrefixes);\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvso0s5up.java:30)\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>(Arrays.asList());\n\
    \        if (string.equals(\"\")) return prefixes;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            String prefix = string.substring(0, i);\n\
    \            prefixes.add(prefix);\n            ArrayList<String> newPrefixes\
    \ = allPrefixes(string.substring(i + 1, string.length()));\n            for (String\
    \ s: newPrefixes) {\n                prefixes.add(0, s);\n            }\n    \
    \    }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx7bisdvp.java:27)\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.length() < 2) {\n            return new ArrayList<String>();\n\
    \        }\n        ArrayList<String> prefix = new ArrayList<String>();\n    \
    \    prefix.add(\"\");\n        for (int i = 1; i < string.length(); i++) {\n\
    \            prefix.add(string.substring(0, i));\n            prefix.addAll(allPrefixes(string.substring(0,\
    \ i)));\n        }\n        return prefix;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwiypr_b.java:26)\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   allPrefixesRecursive(string, 0, list);\n        return list;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps2f9jgib.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ 0, list);\n        ^\n  symbol:   method allPrefixesRecursive(String,int,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixesRec(string, \"\", prefixes);\n        return prefixes;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3j2dwqoc.java:14: error: cannot find symbol\n        allPrefixesRec(string,\
    \ \"\", prefixes);\n        ^\n  symbol:   method allPrefixesRec(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        String[] strings = string.split(\"\");\n        Arrays.sort(strings);\n\
    \        int size = strings.length;\n\n        ArrayList<String> result = new\
    \ ArrayList<>();\n        Arrays.stream(strings).skip(1).forEach(s -> result.add(String.valueOf(s)));\n\
    \        Arrays.stream(strings).skip(size).forEach(s -> result.add(String.valueOf(s)));\n\
    \n        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0_li1wp.java:25)\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            for (int j = 0;\
    \ j < string.length(); j++) {\n                if (i == j)\n                 \
    \   continue;\n                result.add(string.substring(i + 1, j));\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 2, end 0, length 6\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmpc3bkkc5h.java:18)\n\
    \tat Problem.main(tmpc3bkkc5h.java:25)\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<String>();\n\
    \        if (string.length() > 0) {\n            allPrefixes.add(string.substring(0,\
    \ string.length()-1));\n            String prefix2 = string.substring(string.length()-1);\n\
    \            for (int i = 0; i < string.length()-1; i++) {\n                allPrefixes.add(prefix2);\n\
    \                prefix2 = prefix2.substring(0, prefix2.length()-1);\n       \
    \     }\n        }\n        return allPrefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 0, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.allPrefixes(tmp4sfgf9dz.java:19)\n\
    \tat Problem.main(tmp4sfgf9dz.java:26)\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n\n \
    \       if (string == null || string.equals(\"\")) {\n            result.add(\"\
    \");\n            return result;\n        }\n        \n        // Get length of\
    \ shortest and longest string\n        int shortest = string.substring(0, Math.min(string.length(),\
    \ 20));\n        int longest = string.substring(0, Math.min(string.length(), 100));\n\
    \n        // Iterate through shortest and longest string\n        for (int i =\
    \ 0; i < shortest.length(); i++) {\n            String prefix = shortest.substring(0,\
    \ i) + longest .substring(i);\n            result.add(prefix);\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp39h02a82.java:21: error: incompatible types: String cannot be converted\
    \ to int\n        int shortest = string.substring(0, Math.min(string.length(),\
    \ 20));\n                                       ^\n/tmp/tmp39h02a82.java:22: error:\
    \ incompatible types: String cannot be converted to int\n        int longest =\
    \ string.substring(0, Math.min(string.length(), 100));\n                     \
    \                 ^\n/tmp/tmp39h02a82.java:25: error: int cannot be dereferenced\n\
    \        for (int i = 0; i < shortest.length(); i++) {\n                     \
    \               ^\n/tmp/tmp39h02a82.java:26: error: int cannot be dereferenced\n\
    \            String prefix = shortest.substring(0, i) + longest .substring(i);\n\
    \                                    ^\n/tmp/tmp39h02a82.java:26: error: int cannot\
    \ be dereferenced\n            String prefix = shortest.substring(0, i) + longest\
    \ .substring(i);\n                                                           \
    \    ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     int n = string.length();\n        Map<Character, Integer> map = new HashMap<Character,\
    \ Integer>();\n        for (int i=0; i<n; i++) {\n            char c = string.charAt(i);\n\
    \            int count = map.get(c);\n            if (count == null) count = 0;\n\
    \            map.put(c, count+1);\n        }\n        Set<Entry<Character, Integer>>\
    \ set = map.entrySet();\n        set.stream().forEach(e -> {\n            if (e.getValue()\
    \ > 1) result.add(e.getKey());\n        });\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3fgotxov.java:19: error: bad operand types for binary operator\
    \ '=='\n            if (count == null) count = 0;\n                      ^\n \
    \ first type:  int\n  second type: <null>\n/tmp/tmp3fgotxov.java:22: error: cannot\
    \ find symbol\n        Set<Entry<Character, Integer>> set = map.entrySet();\n\
    \            ^\n  symbol:   class Entry\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            String prefix = string.substring(0,\
    \ i);\n            list.add(prefix);\n        }\n        return list;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84s8lwj2.java:22)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        String[]\
    \ chars = string.toCharArray();\n        for (String prefix: allPrefixes(chars))\n\
    \            result.add(prefix);\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpry8sqgqc.java:14: error: incompatible types: char[] cannot be converted\
    \ to String[]\n        String[] chars = string.toCharArray();\n              \
    \                             ^\n/tmp/tmpry8sqgqc.java:15: error: incompatible\
    \ types: String[] cannot be converted to String\n        for (String prefix: allPrefixes(chars))\n\
    \                                        ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixesImpl(string, \"\", result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsmyjp69j.java:14: error: cannot find symbol\n        allPrefixesImpl(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesImpl(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string, new ArrayList<>());\n    }\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpytze8ygy.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, new ArrayList<>());\n\
    \               ^\n  required: String\n  found:    String,ArrayList<Object>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     int n = string.length();\n        for (int i=0; i<=n; i++) {\n         \
    \   String prefix = string.substring(0, i);\n            result.add(prefix);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpjbs193.java:22)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       List<String> list = Arrays.asList(string);\n        for(int i=0;i<list.size()-1;i++)\
    \ {\n            prefixes.add(list.get(i));\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzfv11xg.java:22)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     ArrayList<String> prefix = new ArrayList<String>();\n        prefix.add(\"\
    \");\n        boolean foundPrefix = false;\n        while (true) {\n         \
    \   for (int i = 0; i < prefix.size(); i++) {\n                String prefix =\
    \ prefix.get(i);\n                if (string.startsWith(prefix)) {\n         \
    \           foundPrefix = true;\n                    result.add(prefix);\n   \
    \                 prefix.remove(prefix);\n                }\n            }\n \
    \           if (!foundPrefix) {\n                break;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kkxcm0r.java:19: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n                String prefix = prefix.get(i);\n\
    \                       ^\n/tmp/tmp2kkxcm0r.java:19: error: cannot find symbol\n\
    \                String prefix = prefix.get(i);\n                            \
    \          ^\n  symbol:   method get(int)\n  location: variable prefix of type\
    \ String\n/tmp/tmp2kkxcm0r.java:23: error: cannot find symbol\n              \
    \      prefix.remove(prefix);\n                          ^\n  symbol:   method\
    \ remove(String)\n  location: variable prefix of type String\n3 errors\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       prefixes.add(\"\");\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            String prefix = \"\";\n            while (i < string.length()\
    \ && string.charAt(i) != string.charAt(i + 1)) {\n                prefix += string.charAt(i);\n\
    \                i++;\n            }\n            prefixes.add(prefix);\n    \
    \    }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7hcu7ia.java:26)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null) {\n            throw new NullPointerException(\"\
    string cannot be null\");\n        }\n        ArrayList<String> ret = new ArrayList<>();\n\
    \        for (int i = 0; i <= string.length() - 1; i++) {\n            ret.add(string.substring(0,\
    \ i));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpydism7_d.java:24)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       StringBuilder str = new StringBuilder(string);\n        while (str.length()\
    \ > 0)\n            prefixes.add(str.substring(0, str.length()));\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        String prefix = \"\";\n        if (string.length() > 0)\n\
    \            prefix = string.substring(0, 1);\n        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        for (String string2 : allPrefixes(string.substring(1)))\
    \ {\n            prefixes.add(prefix + string2);\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end 0, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat java.base/java.lang.String.substring(String.java:2680)\n\
    \tat Problem.allPrefixes(tmp6s9ojljd.java:17)\n\tat Problem.main(tmp6s9ojljd.java:23)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  char[] chars = string.toCharArray();\n        for (int i = 0; i < chars.length;\
    \ i++) {\n            for (int j = i; j < chars.length; j++) {\n             \
    \   ret.add(String.valueOf(chars[i]));\n            }\n        }\n        return\
    \ ret;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpas390s_5.java:24)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null) {\n            return new ArrayList<String>();\n\
    \        }\n        if (string.equals(\"\")) {\n            return new ArrayList<String>();\n\
    \        }\n        return allPrefixes(string.substring(1), new ArrayList<String>(Arrays.asList(string.substring(0,\
    \ 1))));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl53lb_i9.java:19: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string.substring(1),\
    \ new ArrayList<String>(Arrays.asList(string.substring(0, 1))));\n           \
    \    ^\n  required: String\n  found:    String,ArrayList<String>\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null || string.length() == 0) {\n         \
    \   throw new IllegalArgumentException(\"String is empty\");\n        }\n    \
    \    ArrayList<String> prefixes = new ArrayList<String>();\n        int minLength\
    \ = string.length();\n        for (int i = 0; i < minLength; i++) {\n        \
    \    prefixes.add(string.substring(0, i));\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: String\
    \ is empty\n\tat Problem.allPrefixes(tmpvhe__v5p.java:14)\n\tat Problem.main(tmpvhe__v5p.java:24)\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<String>();\n\
    \        allPrefixes.add((String)\"a\");\n        allPrefixes.add((String)\"ab\"\
    );\n        allPrefixes.add((String)\"abc\");\n        allPrefixes.add((String)\"\
    abcd\");\n        allPrefixes.add((String)\"abcde\");\n        allPrefixes.add((String)\"\
    abcdef\");\n        allPrefixes.add((String)\"abcdefg\");\n        allPrefixes.add((String)\"\
    abcdefgh\");\n        allPrefixes.add((String)\"abcdefghi\");\n        allPrefixes.add((String)\"\
    abcdefghij\");\n        allPrefixes.add((String)\"abcdefghijk\");\n        allPrefixes.add((String)\"\
    abcdefghijkl\");\n        allPrefixes.add((String)\"abcdefghijklm\");\n      \
    \  allPrefixes.add((String)\"abcdefghijklmn\");\n        allPrefixes.add((String)\"\
    abcdefghijklmno\");\n        allPrefixes.add((String)\"abcdefghijklmnop\");\n\
    \        allPrefixes.add((String)\"abcdefghijklmnopq\");\n        allPrefixes.add((String)\"\
    abcdefghijklmnopqr\");\n        allPrefixes.add((String)\"abcdefghijklmnopqrs\"\
    );\n        allPrefixes.add((String)\"abcdefghijklmnopqrst\");\n        allPrefixes.add((String)\"\
    abcdefghijklmnopqrstu\");\n        allPrefixes.add((String)\"abcdefghijklmnopqrstuv\"\
    );\n        allPrefixes.add((String)\"abcdefghijklmnopqrstuvw\");\n        allPrefixes.add((String)\"\
    abcdefghijklmnopqrstuvwx\");\n        allPrefixes.add((String)\"abcdefghijklmnopqrstuvwxy\"\
    );\n        allPrefixes.add((String)\"abcdefghijklmnopqrstuvwxz\");\n        allPrefixes.add((String)\"\
    abcdefghijklmnopqrstuvwxyz\");\n        allPrefixes.add((String)\"abcdefghijklmnopqrstuvwxyza\"\
    );\n        allPrefixes.add((String)\"abcdefghijklmnopqrstuvwxyzab\");\n     \
    \   allPrefixes.add((String)\"abcdefghijklmnopqrstuvwxyzabc\");\n        allPrefixes.add((String)\"\
    abcdefghijklmnopqrst\n    }\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8g5egw_j.java:44: error: unclosed string literal\n        allPrefixes.add((String)\"\
    abcdefghijklmnopqrst\n                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixes(\"\", \"\", string, prefixes);\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuo5ef2hq.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(\"\", \"\", string, prefixes);\n\
    \        ^\n  required: String\n  found:    String,String,String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<>();\n\n  \
    \      // Iterate through the string, keeping track of the current prefix and\
    \ string\n        for (int i = 0; i < string.length(); i++) {\n            //\
    \ Check if the current character is the shortest possible suffix\n           \
    \ String prefix = string.substring(0, i);\n            if (allPrefixes.contains(prefix))\
    \ {\n                allPrefixes.add(prefix);\n                // Skip the current\
    \ character and start again\n                i++;\n                continue;\n\
    \            }\n\n            // No prefix found yet, so add this character\n\
    \            allPrefixes.add(string.substring(0, i));\n        }\n\n        return\
    \ allPrefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_xrhx2qm.java:34)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.isEmpty()) {\n            return new ArrayList<>();\n\
    \        }\n\n        ArrayList<String> result = new ArrayList<>();\n\n      \
    \  // Add prefix to result\n        String prefix;\n        prefix = string.substring(0,\
    \ string.lastIndexOf('.'));\n        result.add(prefix);\n\n        // Add suffix\
    \ to all prefixes of the prefix \n        while (prefix.length() > 0) {\n    \
    \        for (String prefix : allPrefixes(prefix)) {\n                String suffix;\n\
    \                suffix = string.substring(string.lastIndexOf('.') + 1);\n   \
    \             result.add(prefix + suffix);\n            }\n        }\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppn85wm40.java:26: error: variable prefix is already defined in\
    \ method allPrefixes(String)\n            for (String prefix : allPrefixes(prefix))\
    \ {\n                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  for (int i = 0; i <= string.length() - 1; i++) {\n            ret.add(string.substring(0,\
    \ i));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjodhkc28.java:21)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string.length() == 0)\n            return new ArrayList<String>();\n\
    \        ArrayList<String> result = new ArrayList<String>();\n        char lastChar\
    \ = string.charAt(0);\n        for (int i = 1; i < string.length(); i++) {\n \
    \           if (lastChar == string.charAt(i))\n                continue;\n   \
    \         result.add(string.substring(0, i));\n            lastChar = string.charAt(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58q05l_2.java:27)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // We know that the string is at least 3 characters long\n\
    \        if (string.length() < 3) {\n            // Throw an exception\n     \
    \       throw new IllegalArgumentException(\"The length of the string must be\
    \ at least 3\");\n        }\n        // Create a list to hold our prefixes\n \
    \       ArrayList<String> prefixes = new ArrayList<String>(Arrays.asList((String)\
    \ string.substring(0, 1)));\n        // Iterate through our input string one letter\
    \ at a time\n        for (char c : string.substring(1)) {\n            // If we've\
    \ got a letter and our current prefix is longer than our current prefix\n    \
    \        if (c != null && !prefixes.contains(prefixes.get(prefixes.size() - 1))\
    \ && prefixes.size() > 0) {\n                // Add that letter to our current\
    \ prefix\n                prefixes.add((String) prefixes.get(prefixes.size() -\
    \ 1) + c);\n            }\n            // If our current prefix is longer than\
    \ our input string, return our list\n            if (prefixes.size() > string.length())\
    \ {\n                return prefixes;\n            }\n        }\n        // If\
    \ we get here, our current prefix is still longer than our input string\n    \
    \    return prefixes;\n    }\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggxtoj3g.java:21: error: for-each not applicable to expression\
    \ type\n        for (char c : string.substring(1)) {\n                       \
    \               ^\n  required: array or java.lang.Iterable\n  found:    String\n\
    /tmp/tmpggxtoj3g.java:23: error: bad operand types for binary operator '!='\n\
    \            if (c != null && !prefixes.contains(prefixes.get(prefixes.size()\
    \ - 1)) && prefixes.size() > 0) {\n                  ^\n  first type:  char\n\
    \  second type: <null>\n2 errors\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // write your logic here\n        return null;\n    }\n \
    \   public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.allPrefixes(String)\"\
    \ is null\n\tat Problem.main(tmpv_3nyw2m.java:17)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1snfdzp_.java:14: error: cannot find symbol\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        ^\n  symbol:   method allPrefixesRecursive(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        int prefix = 0, length = 0;\n        ArrayList<String> allPrefixes\
    \ = new ArrayList<String>();\n        do {\n            allPrefixes.add(new StringBuilder(string).reverse().toString().substring(prefix));\n\
    \            length++;\n            prefix++;\n        } while (string.charAt(prefix)\
    \ != '.' && prefix < string.length());\n        allPrefixes.add(new StringBuilder(string).reverse().toString().substring(prefix));\n\
    \        return allPrefixes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.allPrefixes(tmp2wcsaz9e.java:19)\n\
    \tat Problem.main(tmp2wcsaz9e.java:24)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> array = new ArrayList<>();\n        char[]\
    \ chars = string.toCharArray();\n        for (int i = chars.length - 1; i >= 0;\
    \ i--) {\n            String prefix = \"\";\n            for (int j = 0; j < i;\
    \ j++) {\n                prefix += chars[j];\n            }\n            array.add(prefix);\n\
    \        }\n        return array;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqsahqqk.java:26)\n"
  stdout: ''
  timestamp: 1660011812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if (string == null || string.length() < 1)\n            return\
    \ null;\n        // Use Stack to keep track of characters already in string\n\
    \        Stack<Character> stack = new Stack<Character>();\n        // Use Array\
    \ to keep track of all prefixes in order of length from shortest to longest\n\
    \        ArrayList<String> prefixes = new ArrayList<String>();\n\n        // Iterate\
    \ through string character-by-character and keep adding characters to stack\n\
    \        for (int i = 0; i < string.length(); i++) {\n            char ch = string.charAt(i);\n\
    \            while (stack.size() > 0) {\n                // If the last item in\
    \ the stack is a match for current character\n                if (stack.peek()\
    \ == ch) {\n                    // Add character at index i to prefixes\n    \
    \                prefixes.add(string.substring(stack.size() - 1, i));\n      \
    \              // Remove that character from the stack\n                    stack.pop();\n\
    \                }\n                // If the last item in the stack is NOT a\
    \ match for current character\n                else {\n                    break;\n\
    \                }\n            }\n            // Add current character at index\
    \ i to stack\n            stack.push(ch);\n        }\n\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.allPrefixes(String)\"\
    \ is null\n\tat Problem.main(tmpkanuh3m6.java:43)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     ArrayList<String> prefix = new ArrayList<String>();\n        // Loop over\
    \ string by starting at first character of string\n        // and ending one character\
    \ before last\n        for (int i = 0; i < string.length(); i++) {\n         \
    \   // Loop through remaining string\n            for (int j = i; j < string.length();\
    \ j++) {\n                // Add character to prefix\n                prefix.add(string.charAt(j));\n\
    \                // Add prefix to result\n                result.add(new String(prefix.toArray(new\
    \ String[prefix.size()])));\n                // Remove prefix from prefix list\n\
    \                prefix.remove(prefix.size() - 1);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz42oy0o_.java:21: error: incompatible types: char cannot be converted\
    \ to String\n                prefix.add(string.charAt(j));\n                 \
    \                       ^\n/tmp/tmpz42oy0o_.java:23: error: no suitable constructor\
    \ found for String(String[])\n                result.add(new String(prefix.toArray(new\
    \ String[prefix.size()])));\n                           ^\n    constructor String.String(String)\
    \ is not applicable\n      (argument mismatch; no instance(s) of type variable(s)\
    \ T exist so that T[] conforms to String)\n    constructor String.String(char[])\
    \ is not applicable\n      (argument mismatch; inference variable T has incompatible\
    \ bounds\n          lower bounds: char,Object\n          lower bounds: String)\n\
    \    constructor String.String(byte[]) is not applicable\n      (argument mismatch;\
    \ inference variable T has incompatible bounds\n          lower bounds: byte,Object\n\
    \          lower bounds: String)\n    constructor String.String(StringBuffer)\
    \ is not applicable\n      (argument mismatch; no instance(s) of type variable(s)\
    \ T exist so that T[] conforms to StringBuffer)\n    constructor String.String(StringBuilder)\
    \ is not applicable\n      (argument mismatch; no instance(s) of type variable(s)\
    \ T exist so that T[] conforms to StringBuilder)\n  where T is a type-variable:\n\
    \    T extends Object declared in method <T>toArray(T[])\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            prefixes.add(string.substring(0, i));\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp361fw4xr.java:22)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        List<String> result = new ArrayList<>();\n\n        for (int\
    \ i = string.length() - 1; i >= 0; i--) {\n            result.add(string.substring(0,\
    \ i));\n        }\n\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuyatr1zv.java:19: error: incompatible types: List<String> cannot\
    \ be converted to ArrayList<String>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return Arrays.stream(string.length())\n            .mapToObj(i\
    \ -> string.substring(i))\n            .map(s -> s.substring(0, s.length()))\n\
    \            .collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaoe1rupa.java:13: error: no suitable method found for stream(int)\n\
    \        return Arrays.stream(string.length())\n                     ^\n    method\
    \ Arrays.<T#1>stream(T#1[]) is not applicable\n      (cannot infer type-variable(s)\
    \ T#1\n        (argument mismatch; int cannot be converted to T#1[]))\n    method\
    \ Arrays.<T#2>stream(T#2[],int,int) is not applicable\n      (cannot infer type-variable(s)\
    \ T#2\n        (actual and formal argument lists differ in length))\n    method\
    \ Arrays.stream(int[]) is not applicable\n      (argument mismatch; int cannot\
    \ be converted to int[])\n    method Arrays.stream(long[]) is not applicable\n\
    \      (argument mismatch; int cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; int cannot be converted to double[])\n\
    \  where T#1,T#2 are type-variables:\n    T#1 extends Object declared in method\
    \ <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        final char []chars = string.toCharArray();\n        ArrayList<String>\
    \ result = new ArrayList<>();\n        int length = 0;\n        int minLength\
    \ = 0;\n        for (int i = 0; i < chars.length; i++) {\n            length++;\n\
    \            minLength = length;\n            for (int j = 0; j < chars.length;\
    \ j++) {\n                if (chars[j] == chars[i]) {\n                    length++;\n\
    \                    if (length < minLength) {\n                        minLength\
    \ = length;\n                    }\n                }\n            }\n       \
    \     result.add(String.valueOf(chars, 0, minLength));\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ offset 0, count 7, length 6\n\tat java.base/java.lang.String.checkBoundsOffCount(String.java:4589)\n\
    \tat java.base/java.lang.String.rangeCheck(String.java:304)\n\tat java.base/java.lang.String.<init>(String.java:300)\n\
    \tat java.base/java.lang.String.valueOf(String.java:4256)\n\tat Problem.allPrefixes(tmpreq7_e7c.java:28)\n\
    \tat Problem.main(tmpreq7_e7c.java:34)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ for (String prefix : allPrefixes(string)) {\n            if (prefix.length()\
    \ > prefix.getLength()) {\n                prefixes.clear();\n               \
    \ prefixes.add(prefix);\n            } else if (prefix.length() == prefix.getLength())\
    \ {\n                prefixes.add(prefix);\n            }\n        }\n       \
    \ return prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4z0rc0l9.java:15: error: cannot find symbol\n            if (prefix.length()\
    \ > prefix.getLength()) {\n                                        ^\n  symbol:\
    \   method getLength()\n  location: variable prefix of type String\n/tmp/tmp4z0rc0l9.java:18:\
    \ error: cannot find symbol\n            } else if (prefix.length() == prefix.getLength())\
    \ {\n                                                ^\n  symbol:   method getLength()\n\
    \  location: variable prefix of type String\n2 errors\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ prefixes.add(string);\n        prefixes.addAll(allPrefixes(string.substring(1),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe2jgru7_.java:15: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        prefixes.addAll(allPrefixes(string.substring(1),\
    \ prefixes));\n                        ^\n  required: String\n  found:    String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixList = new ArrayList<String>();\n\
    \        int stringLength = string.length();\n        for (int i = 0; i <= stringLength;\
    \ i++) {\n            String prefix = \"\";\n            for (int j = 0; j < i;\
    \ j++) {\n                prefix += string.charAt(j);\n            }\n       \
    \     prefixList.add(prefix);\n        }\n        return prefixList;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps__v0k9y.java:25)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       String[] chars = string.split(\"\");\n        for (String character :\
    \ chars) {\n            String prefix = \"\";\n            for (int i = 0; i <\
    \ character.length(); i++) {\n                prefix += character.charAt(i);\n\
    \            }\n            prefixes.add(prefix);\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwqo9laq3.java:25)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   if (string == null || string.length() < 1) return list;\n        char[] chars\
    \ = string.toCharArray();\n        int index = 0;\n        int currentLength =\
    \ chars.length;\n        while (index < currentLength) {\n            String prefix\
    \ = new String(chars, index, currentLength);\n            list.add(prefix);\n\
    \            index++;\n            currentLength--;\n        }\n        return\
    \ list;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzlrf8xdq.java:28)\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<String>();\n  \
    \      prefixes(string, \"\", results);\n        return results;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1wc0ffn.java:14: error: cannot find symbol\n        prefixes(string,\
    \ \"\", results);\n        ^\n  symbol:   method prefixes(String,String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ int prefixLen = string.length();\n\n        // prefix of length 1\n        prefixes.add(\"\
    \");\n\n        // prefix of length 2\n        for (int i = 0; i < prefixLen;\
    \ i++) {\n            prefixes.add(string.substring(0, i));\n        }\n\n   \
    \     // prefix of length 3\n        for (int i = 0; i < prefixLen; i++) {\n \
    \           prefixes.add(string.substring(0, i) + string.substring(i + 1));\n\
    \        }\n\n        // prefix of length 4\n        for (int i = 0; i < prefixLen;\
    \ i++) {\n            prefixes.add(string.substring(0, i) + string.substring(i\
    \ + 1, i + 2));\n        }\n\n        // prefix of length 5\n        for (int\
    \ i = 0; i < prefixLen; i++) {\n            prefixes.add(string.substring(0, i)\
    \ + string.substring(i + 1, i + 2) + string.substring(i + 3));\n        }\n\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq53jw4_f.java:42)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0yd1v38.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", result);\n   \
    \     ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011803
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ // Use an explicit iterator so we don't use Java's built-in iterator on our\
    \ input collection\n        for (String prefix : string.split(\"\")) {\n     \
    \       prefixes.add(prefix);\n        }\n        return prefixes;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxcfj5ipt.java:21)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if(string == null)\n            throw new IllegalArgumentException(\"\
    Cannot convert null to a string\");\n        ArrayList<String> result = new ArrayList<>();\n\
    \        for(int i=0;i<string.length();i++)\n            result.addAll(prefixes(string.substring(0,\
    \ i)));\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgk2802ri.java:17: error: cannot find symbol\n            result.addAll(prefixes(string.substring(0,\
    \ i)));\n                          ^\n  symbol:   method prefixes(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        char[]\
    \ chars = string.toCharArray();\n        Arrays.sort(chars);\n        for(int\
    \ i = 1; i < chars.length; i++) {\n            result.add(String.valueOf(chars[i\
    \ - 1]));\n            result.add(String.valueOf(chars[i]));\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_yrivrwm.java:24)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        Stack<String>\
    \ stack = new Stack<>();\n        String prefix = \"\";\n        for (char letter\
    \ : string.toCharArray()) {\n            if (letter == prefix.charAt(0)) {\n \
    \               result.add(prefix);\n            }\n            stack.push(prefix\
    \ + letter);\n            prefix = stack.peek();\n        }\n        stack.pop();\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.EmptyStackException\n\tat java.base/java.util.Stack.peek(Stack.java:101)\n\
    \tat java.base/java.util.Stack.pop(Stack.java:83)\n\tat Problem.allPrefixes(tmpii9l9y1b.java:23)\n\
    \tat Problem.main(tmpii9l9y1b.java:27)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        Queue<String>\
    \ queue = new LinkedList<>();\n        queue.add(string);\n        while (queue.size()\
    \ > 0) {\n            String current = queue.poll();\n            for (int i =\
    \ 0; i < current.length(); i++) {\n                result.add(current.substring(0,\
    \ i));\n                for (int j = i + 1; j < current.length(); j++) {\n   \
    \                 String next = current.substring(i, j);\n                   \
    \ queue.add(next);\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ak8b8t3.java:30)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ char[] chars = string.toCharArray();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            prefixes.add((chars[i - 1] + \"\").toLowerCase());\n   \
    \     }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index -1 out of bounds for length 6\n\tat Problem.allPrefixes(tmpd7u7t7gs.java:16)\n\
    \tat Problem.main(tmpd7u7t7gs.java:22)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<>();\n        \n\
    \        // The first step will be to create a prefix tree\n        ArrayDeque<String>\
    \ prefixTree = new ArrayDeque<>();\n        StringBuilder current = new StringBuilder();\n\
    \        current.append(string);\n        \n        // Each time we add a new\
    \ node in the prefix tree\n        while (current.length() > 0) {\n          \
    \  prefixTree.push(current.toString());\n            current = new StringBuilder();\n\
    \            \n            // If there are no more characters, we can add that\
    \ string to the result array\n            while (prefixTree.isEmpty()) {\n   \
    \             result.add(prefixTree.poll());\n            }\n            \n  \
    \          // Grab the top most node from the prefix tree\n            String\
    \ topMostNode = prefixTree.poll();\n            \n            // For each node\
    \ in the prefix tree\n            for (int i = 0; i < topMostNode.length(); i++)\
    \ {\n                \n                // We have a new node to add, so start\
    \ building the prefix tree\n                current = new StringBuilder();\n \
    \               \n                // Build a new string from the existing string\
    \ and the character\n                // at the current index\n               \
    \ current.append(topMostNode.substring(0, i));\n                \n           \
    \     // Add the node to the prefix tree\n                prefixTree.push(current.toString());\n\
    \            }\n        }\n        \n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpktb3bzqy.java:52)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       char[] charArray = string.toCharArray();\n        int start = 0;\n   \
    \     int end = charArray.length - 1;\n        while (start < end) {\n       \
    \     prefixes.add(new String(charArray, start, end));\n            while (end\
    \ > start) {\n                end--;\n            }\n            start++;\n  \
    \      }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwzkwguy.java:28)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   int shortestLength = string.length();\n        int longestLength = 0;\n  \
    \      int prefixLength = 0;\n        for (int i = shortestLength; i < string.length();\
    \ ++i) {\n            prefixLength++;\n        }\n        for (int i = 0; i <\
    \ shortestLength; ++i) {\n            String prefix = string.substring(0, i);\n\
    \            prefixLength--;\n            String suffix = string.substring(i);\n\
    \            longestLength = Math.max(longestLength, suffix.length());\n     \
    \       list.add(prefix);\n            list.add(suffix);\n        }\n        list.add(string);\n\
    \        return list;\n    }\n    public static void main(String[] args) {\n \
    \   assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbn9cs62.java:32)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int len = string.length();\n        // Start from largest length\n   \
    \     for(int i = string.length()-1; i>=0; i--){\n            String prefix =\
    \ string.substring(0, i);\n            // Add to prefix list\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4h2nqdtv.java:25)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>(new ArrayList());\n\
    \        \n        Stack<String> stack = new Stack<String>(new ArrayList());\n\
    \        \n        // Create prefix array list for empty input string\n      \
    \  result.add(\"\");\n        \n        // Create prefix array list for input\
    \ string with one character\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            String prefix = string.substring(0, i);\n            result.add(prefix);\n\
    \            \n            // Add prefix to stack if it isn't already in stack\n\
    \            if (!stack.contains(prefix)) {\n                stack.push(prefix);\n\
    \            }\n        }\n        \n        // Create prefix array list for input\
    \ string with more than one character\n        while (!stack.isEmpty()) {\n  \
    \          String prefix = stack.pop();\n            \n            // Add prefix\
    \ to stack if it isn't already in stack\n            if (!stack.contains(prefix))\
    \ {\n                stack.push(prefix);\n            }\n            \n      \
    \      // Add prefix to prefix array list if its length is greater than 1\n  \
    \          int i = prefix.length();\n            while (i > 1) {\n           \
    \     String newPrefix = prefix + \"x\";\n                result.add(newPrefix);\n\
    \                \n                // Add prefix to stack if it isn't already\
    \ in stack\n                if (!stack.contains(newPrefix)) {\n              \
    \      stack.push(newPrefix);\n                }\n                \n         \
    \       // Add prefix to prefix array list if its length is greater than 1\n \
    \               i--;\n            }\n        }\n        \n        // Return prefix\
    \ array list\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_a0v49i3.java:15: error: constructor Stack in class Stack<E> cannot\
    \ be applied to given types;\n        Stack<String> stack = new Stack<String>(new\
    \ ArrayList());\n                              ^\n  required: no arguments\n \
    \ found:    ArrayList\n  reason: actual and formal argument lists differ in length\n\
    \  where E is a type-variable:\n    E extends Object declared in class Stack\n\
    Note: /tmp/tmp_a0v49i3.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\n1 error\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   allPrefixes(string, \"\", list);\n        return list;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5mc8tqp3.java:14: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        allPrefixes(string, \"\", list);\n     \
    \   ^\n  required: String\n  found:    String,String,ArrayList<String>\n  reason:\
    \ actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int i = length; i >= 0; i--)\
    \ {\n            String prefix = string.substring(0, i);\n            prefixes.add(prefix);\n\
    \            string = string.substring(i);\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpryyw38z1.java:23)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        String longer = string;\n        String shorter = string;\n\
    \        ArrayList<String> result = new ArrayList<String>();\n        for(int\
    \ i = 0; longer.length() > i; i++){\n            for(int j = 0; j < shorter.length();\
    \ j++){\n                if(!longer.startsWith(shorter.substring(0, j))){\n  \
    \                  break;\n                }\n                shorter = shorter.substring(j\
    \ + 1);\n            }\n            result.add(longer.substring(0, i));\n    \
    \        longer = longer.substring(i);\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7o98h6g.java:30)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if(string == null || string.length() == 0)\n            return\
    \ new ArrayList<String>();\n        ArrayList<String> prefixes = new ArrayList<String>(Arrays.asList((String)\"\
    a\"));\n        for(int i = 1; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuempr6u4.java:23)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        if(!string.matches(\"^.*$\"))\n            return new ArrayList<String>();\n\
    \        \n        ArrayList<String> result = new ArrayList<String>();\n     \
    \   \n        // Step 1 find longest substring containing 'a'\n        int longestSubstringIndex\
    \ = string.indexOf(\"a\");\n        \n        // Step 2 find all substrings starting\
    \ from longest substring\n        for (int i=1; i<=longestSubstringIndex; i++)\
    \ {\n            String substring = string.substring(i);\n            \n     \
    \       // Step 3 find all prefixes of substring in string\n            String\
    \ prefix = substring.substring(0, longestSubstringIndex);\n            \n    \
    \        // Step 4 add prefix to list\n            result.add(prefix);\n     \
    \   }\n        \n        // Step 5 return result\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7rgkmeo.java:37)\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefix = new ArrayList<String>(\n     \
    \           Arrays.asList(\"a\",\"b\",\"c\")\n        );\n        return findPrefixesRecursive(string,\
    \ prefix);\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpekwo0rc1.java:16: error: cannot find symbol\n        return findPrefixesRecursive(string,\
    \ prefix);\n               ^\n  symbol:   method findPrefixesRecursive(String,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n\n\
    \        if (string.length() == 0) {\n            prefixes.add(\"\");\n      \
    \  }\n\n        for (int i = 1; i < string.length(); i++) {\n            String\
    \ prefix = string.substring(0, i);\n\n            if (!prefixes.contains(prefix))\
    \ {\n                prefixes.add(prefix);\n            }\n        }\n\n     \
    \   return prefixes;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93dy6j9e.java:30)\n"
  stdout: ''
  timestamp: 1660011814

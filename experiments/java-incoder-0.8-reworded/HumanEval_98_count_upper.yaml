name: HumanEval_98_count_upper
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string s, count the number of uppercase vowels in\
  \ even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    //\
  \ (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"\
  dBBE\"))\n    // (0l)\n    public static long countUpper(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(countUpper((\"\
  aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
  dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
  U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
  EEEE\")) == (2l));\n    }\n\n}\n"
completions: ['        return s.chars().filter(Character::isUpper).count();', "  \
    \      long n = 0;\n        boolean isEven = true;\n        for( int i = 0; i\
    \ < s.length() ; i++ ) {\n            char c = s.charAt(i);\n            if( Character.isUpperCase(\
    \ c ) ) {\n                if( isEven ) {\n                    n++;\n        \
    \        }\n                isEven = !isEven;\n            } else {\n        \
    \        isEven = true;\n            }\n        }\n        return n;", "     \
    \   long total = 0;\n        if (s == null) {\n            return 0;\n       \
    \ }\n        char[] chars = s.toCharArray();\n        for (int i = 0; i < chars.length;\
    \ i++) {\n            if (i % 2 == 0) {\n                int upper = Character.isUpperCase(chars[i]);\n\
    \                if (upper == 1) {\n                    total += 1;\n        \
    \        }\n            }\n        }\n        return total;", "        if (s ==\
    \ null || s.isEmpty()) return 0L;\n        final Set<Character> vowels = Set.of('a',\
    \ 'e', 'i', 'o', 'u');\n        final Map<Character, Long> counts = Maps.newHashMap();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            final char ch = s.charAt(i);\n\
    \            if (vowels.contains(ch)) {\n                if (i % 2 == 0)\n   \
    \                 counts.put(ch, counts.getOrDefault(ch, 0L) + 1);\n         \
    \   }\n        }\n        return counts.values().stream().filter(v -> v % 2 ==\
    \ 0).count();", "        char[] vowels = { 'A', 'E', 'I', 'O', 'U' };\n      \
    \  return s.chars().filter(c -> vowels.contains((char) c)).count(i -> i % 2 ==\
    \ 0);", "        if (s == null) {\n            return 0;\n        }\n        long\
    \ result = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if\
    \ (i % 2 == 0) {\n                String vowel = s.substring(i, i + 1);\n    \
    \            if (vowel.equals(\"A\") || vowel.equals(\"E\") || vowel.equals(\"\
    I\") || vowel.equals(\"O\") ||\n                    vowel.equals(\"U\")) {\n \
    \                   result++;\n                }\n            }\n        }\n \
    \       return result;", "        // Initialize your data structure here.\n  \
    \      long vowelsCount = 0;\n        for (char c : s.toCharArray()) {\n     \
    \       vowelsCount += (c > 'z' && c < 'A') || (c > 'Z');\n        }\n       \
    \ return vowelsCount;", "        long result = 0;\n        for (int i = 0; i<\
    \ s.length(); i++) {\n            String substring = s.substring(i, i+1);\n  \
    \          if (substring.equals(\"A\") || substring.equals(\"E\") || substring.equals(\"\
    I\") || substring.equals(\"O\") || substring.equals(\"U\")) {\n              \
    \  result += 1;\n            }\n        }\n        return result;", "        int\
    \ upperVowels = 0;\n        char[] ch = s.toCharArray();\n        for (int i =\
    \ 0; i < ch.length; i++) {\n            if (ch[i] == 'A' || ch[i] == 'a') {\n\
    \                if (i % 2 == 0) {\n                    upperVowels++;\n     \
    \           }\n            }\n        }\n        return upperVowels;", "     \
    \   long count = 0;\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    if (Character.isUpperCase(s.charAt(i))) {\n                if (i & 1 == 0)\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0; // O(n) where n is the number\
    \ of characters\n        for (char c : s.toCharArray()) {\n            count +=\
    \ Character.isUpperCase(c) && c != 'A' && c != 'E'\n                    && c !=\
    \ 'I' && c != 'O'; // O(1)\n        }\n        return count;", "        char[]\
    \ chars = s.toCharArray();\n        Arrays.sort(chars, 0, chars.length, Comparator.comparingInt(Char::getNumericValue));\n\
    \        long count = 0;\n        for (int i = 0; i < chars.length; i++) {\n \
    \           if (i % 2 == 0) {\n                if (Character.isUpperCase(chars[i]))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        // Write your code here\n        return 0;",
  "        long count = 0;\n        for (int i = 0; i < s.length(); i += 2)\n    \
    \        if (s.charAt(i) == 'A' && s.charAt(i + 1) == 'a')\n                count\
    \ += 1;\n        return count;", "        // write your code in Java 7 without\
    \ using \"var\"\n        long count = 0;\n        if (s == null || s.length()\
    \ == 0) {\n            return 0;\n        }\n\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) == 'A') {\n                count += 1;\n\
    \            } else if (s.charAt(i) == 'a') {\n                count += 1;\n \
    \           } else if (s.charAt(i) == 'B') {\n                count += 1;\n  \
    \          } else if (s.charAt(i) == 'b') {\n                count += 1;\n   \
    \         } else if (s.charAt(i) == 'C') {\n                count += 1;\n    \
    \        } else if (s.charAt(i) == 'c') {\n                count += 1;\n     \
    \       } else if (s.charAt(i) == 'D') {\n                count += 1;\n      \
    \      } else if (s.charAt(i) == 'd') {\n                count += 1;\n       \
    \     } else if (s.charAt(i) == 'E') {\n                count += 1;\n        \
    \    } else if (s.charAt(i) == 'e') {\n                count += 1;\n         \
    \   } else if (s.charAt(i) == 'F') {\n                count += 1;\n          \
    \  } else if (s.charAt(i) == 'f') {\n                count += 1;\n           \
    \ } else if (s.charAt(i) == 'G') {\n                count += 1;\n            }\
    \ else if (s.charAt(i) == 'g') {\n                count += 1;\n            } else\
    \ if (s.charAt(i) == 'H') {\n                count += 1;\n            } else if\
    \ (s.charAt(i) == 'h') {\n                count += 1;\n            } else if (s.charAt(i)\
    \ == 'I') {\n                count += 1;\n            } else if (s.charAt(i) ==\
    \ 'I') {\n                count += 1;\n            } else if (s.charAt(i) == 'J')\
    \ {\n                count += 1;\n            } else if (s.charAt(i) == 'j') {\n\
    \                count += 1;\n            } else if (s.charAt(i) == 'K') {\n \
    \               count += 1;\n            } else if (s.charAt(i) == 'k') {\n  \
    \              count += 1;\n            } else if (s.charAt(i) == 'L') {\n   \
    \             count += 1;\n            } else if (s.charAt(i) == 'l') {\n    \
    \            count += 1;\n            } else if (s.charAt(i) == 'M') {\n     \
    \           count += 1;\n            } else if (s.charAt(i) == 'm') {\n      \
    \          count += 1;\n            } else if (s.charAt(i) == 'N') {\n       \
    \         count += 1;\n            } else if (s.charAt(i) == 'n') {\n        \
    \        count += 1;\n            } else if (s.charAt(i) == 'O') {\n         \
    \       count += 1;\n            } else if (s.charAt(i) == 'o') {\n          \
    \      count += 1;\n            } else if (s.charAt(i) == 'P') {\n           \
    \     count += 1;\n            } else if (s.charAt(i) == 'p') {\n            \
    \    count += 1;\n            } else if (s.charAt(i) == 'Q') {\n             \
    \   count += 1;\n            } else if (s.charAt(i) == 'q') {\n              \
    \  count += 1;\n            } else if (s.charAt(i) == 'R') {\n               \
    \ count += 1;\n            } else if (s.charAt(i) == 'r') {\n                count\
    \ += 1;\n            } else if (s.charAt(i) == 'S') {\n                ", "  \
    \      long count = 0;\n        for (int i = 0; i < s.length(); i += 2) {\n  \
    \          if (s.charAt(i) == 'U') {\n                count += 1;\n          \
    \  }\n        }\n        return count;", "        long upperCount = 0L;\n    \
    \    char[] chars = s.toCharArray();\n        Arrays.parallelSetAll(chars, i ->\
    \ i >= 'A' && i <= 'Z' ? 1L : 0L);\n        return chars.stream().filter(c ->\
    \ c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U').count();", "     \
    \   Set<Character> vowels = Set.of('a', 'e', 'i', 'o', 'u');\n        long evenCount\
    \ = 0, oddCount = 0;\n        for(int i = 0; i < s.length(); i++) {\n        \
    \    char ch = s.charAt(i);\n            if(vowels.contains(ch)) {\n         \
    \       evenCount++;\n                if(i % 2 == 0)\n                    oddCount++;\n\
    \            }\n        }\n        if(evenCount == 0)\n            evenCount =\
    \ 1;\n        if(oddCount % 2 == 0)\n            oddCount /= 2;\n        return\
    \ evenCount + (long) oddCount;", "        long result = 0;\n        for(int i\
    \ = 1, n = s.length(); i <= n; i+=2, n+=2) {\n            if (s.charAt(i) == 'A')\n\
    \                result++;\n        }\n        return result;", "        long\
    \ n = 0L;\n        for (int i = 0; i < s.length(); i++) {\n            n += Character.isUpperCase(s.charAt(i))\
    \ && i % 2 == 0 ? 1 : 0;\n        }\n        return n;", "        if (s == null)\
    \ {\n            return 0L;\n        }\n        // A single uppercase vowel counts\
    \ as an even index\n        long evenCount = 0;\n        for (int i = 0; i < s.length();\
    \ i += 2) {\n            if (Character.isUpperCase(s.charAt(i))) {\n         \
    \       evenCount += 1;\n            }\n        }\n        return evenCount;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (s.charAt(i) == 'a') {\n                if (s.charAt(i + 1) ==\
    \ 'B') {\n                    if (s.charAt(i + 2) == 'C') {\n                \
    \        if (s.charAt(i + 3) == 'D') {\n                            if (s.charAt(i\
    \ + 4) == 'E') {\n                                if (s.charAt(i + 5) == 'F')\
    \ {\n                                    vowelCount++;\n                     \
    \           }\n                            }\n                        }\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ vowelCount;", '        // TODO', "        String vowels = \"aeiouAEIOU\";\n\
    \        boolean vowelsOddIndexed = s.chars().mapToObj(c -> vowels.charAt(c)).filter(c\
    \ -> c % 2 == 1).count() != 0;\n        return vowelsOddIndexed ? s.chars().filterToLong(c\
    \ -> c > 'Z').count() : 0L;", "        return s.chars()\n                .filter(i\
    \ -> i % 2 == 0 && Character.isUpperCase(i))\n                .count();", "  \
    \      long count = (long) Collections.frequency(s.chars(), \"A\") +\n       \
    \         Collections.frequency(s.chars(), \"E\") +\n                Collections.frequency(s.chars(),\
    \ \"I\") +\n                Collections.frequency(s.chars(), \"O\") +\n      \
    \          Collections.frequency(s.chars(), \"U\");\n        return count;", " \
    \       if (s.length() <= 1)\n            return 0;\n        long res = 0;\n \
    \       for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) >=\
    \ 'A' && s.charAt(i) <= 'Z') {\n                if (i % 2 == 0)\n            \
    \        res += s.charAt(i);\n            }\n        }\n        return res;",
  "        return s.chars()\n                .filter(c -> c == ' ' || c == 'A' ||\
    \ c == 'B' || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G')\n    \
    \            .filter((i, c) -> i % 2 == 0)\n                .count();", "    \
    \    long countVowels = 0l; // Total vowels in s.\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E'\
    \ || s.charAt(i) == 'I'\n                    || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U') {\n                countVowels++;\n            }\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i'\n                    || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u') {\n                countVowels++;\n          \
    \  }\n        }\n        return countVowels;", "        int evenIndex = 0;\n \
    \       int vowelIndex = 0;\n        for (char c : s.toCharArray()) {\n      \
    \      if (c > 'A' && c < 'Z') {\n                vowelIndex += (c == 'A' || c\
    \ == 'a') ? 1 : 0;\n            }\n            if (c > 'a' && c < 'z') {\n   \
    \             vowelIndex += (c == 'a' || c == 'A') ? 1 : 0;\n            }\n \
    \           if (c > 'D' && c < 'Z') {\n                vowelIndex += (c == 'D'\
    \ || c == 'd') ? 1 : 0;\n            }\n            if (c > 'd' && c < 'z') {\n\
    \                vowelIndex += (c == 'd' || c == 'D') ? 1 : 0;\n            }\n\
    \            if (c > 'E' && c < 'Z') {\n                vowelIndex += (c == 'E'\
    \ || c == 'e') ? 1 : 0;\n            }\n            if (c > 'e' && c < 'z') {\n\
    \                vowelIndex += (c == 'e' || c == 'E') ? 1 : 0;\n            }\n\
    \            if (c > 'F' && c < 'Z') {\n                vowelIndex += (c == 'F'\
    \ || c == 'f') ? 1 : 0;\n            }\n            if (c > 'f' && c < 'z') {\n\
    \                vowelIndex += (c == 'f' || c == 'F') ? 1 : 0;\n            }\n\
    \            if (c > 'G' && c < 'Z') {\n                vowelIndex += (c == 'G'\
    \ || c == 'g') ? 1 : 0;\n            }\n            if (c > 'g' && c < 'z') {\n\
    \                vowelIndex += (c == 'g' || c == 'G') ? 1 : 0;\n            }\n\
    \            if (c > 'H' && c < 'Z') {\n                vowelIndex += (c == 'H'\
    \ || c == 'h') ? 1 : 0;\n            }\n            if (c > 'h' && c < 'z') {\n\
    \                vowelIndex += (c == 'h' || c == 'H') ? 1 : 0;\n            }\n\
    \            if (c > 'I' && c < 'Z') {\n                vowelIndex += (c == 'I'\
    \ || c == 'i') ? 1 : 0;\n            }\n            if (c > 'i' && c < 'z') {\n\
    \                vowelIndex += (c == 'i' || c == 'I') ? 1 : 0;\n            }\n\
    \            if (c > 'J' && c < 'Z') {\n                vowelIndex += (c == 'J'\
    \ || c == 'j') ? 1 : 0;\n            }\n            if (c > 'j' && c < 'z') {\n\
    \                vowelIndex += (c == 'j' || c == 'J') ? 1 : 0;\n            }\n\
    \            if (c > 'K' && c < 'Z') {\n                vowelIndex += (c == 'K'\
    \ || c == 'k') ? 1 : 0;\n            }", "        long count = 0;\n        int\
    \ n = s.length();\n        for (int i = 0; i < n; i++) {\n            String u\
    \ = s.substring(i, i+1);\n            if (u.equalsIgnoreCase(\"A\") || u.equalsIgnoreCase(\"\
    a\") || u.equalsIgnoreCase(\"E\") || u.equalsIgnoreCase(\"e\") || u.equalsIgnoreCase(\"\
    I\") || u.equalsIgnoreCase(\"i\") || u.equalsIgnoreCase(\"O\") || u.equalsIgnoreCase(\"\
    o\") || u.equalsIgnoreCase(\"U\") || u.equalsIgnoreCase(\"u\")) {\n          \
    \      count++;\n            }\n        }\n        return count;", "        long[]\
    \ count = new long[26];\n        for (int i = 0; i < s.length(); i++) {\n    \
    \        if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n                count[s.charAt(i)\
    \ - 'a']++;\n            }\n        }\n        return LongStream.rangeClosed(1,\
    \ 26).filter(i -> count[i] % 2 == 1).count();", "        return s.chars().filter(c\
    \ -> c >= 'A' && c <= 'Z').filter(c -> c % 2 == 0)\n            .filter(c -> c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o')\n            .count();", "     \
    \   long[] count = new long[2];\n        for(int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isUpperCase(s.charAt(i)) && i % 2 == 0)\n         \
    \       count[0]++;\n            else if (Character.isUpperCase(s.charAt(i)) &&\
    \ i % 2 == 1)\n                count[1]++;\n        }\n        return LongStream.of(count[0],\
    \ count[1]).sum();", "        int vowelCount = 0;\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E'\
    \ || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n     \
    \           vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long count = 0;\n        for (int i = 0; i < s.length(); i++) {\n     \
    \       if (i % 2 == 0)\n                if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I'\n                        || s.charAt(i) == 'O'\
    \ || s.charAt(i) == 'U')\n                    count++;\n        }\n        return\
    \ count;", "        char[] c = s.toCharArray();\n        long count = 0;\n   \
    \     for (int i = 0; i < c.length; i++) {\n            if (i%2 == 0 && c[i] >=\
    \ 'A' && c[i] <= 'Z') {\n                count++;\n            }\n        }\n\
    \        return count;", "        if (s == null || s.length() <= 1) {\n      \
    \      return 0;\n        }\n        \n        String[] even = s.split(\"(?!^)\"\
    );\n        String[] odd = s.substring(1).split(\"(?!^)\");\n\n        long result\
    \ = 0;\n\n        for (String str : even) {\n            String evenStr = str;\n\
    \n            if (str.length() % 2 != 0) {\n                continue;\n      \
    \      }\n\n            for (int i = 0; i < evenStr.length(); i++) {\n       \
    \         if (Character.isUpperCase(evenStr.charAt(i))) {\n                  \
    \  result++;\n                }\n            }\n        }\n\n        for (String\
    \ str : odd) {\n            String oddStr = str;\n\n            if (str.length()\
    \ % 2 != 0) {\n                continue;\n            }\n\n            for (int\
    \ i = 0; i < oddStr.length(); i++) {\n                if (Character.isUpperCase(oddStr.charAt(i)))\
    \ {\n                    result++;\n                }\n            }\n       \
    \ }\n        \n        return result;", "        long upperCount = 0;\n      \
    \  for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a') {\n                if (i % 2 == 0) {\n              \
    \      upperCount += 1;\n                }\n            }\n        }\n       \
    \ return upperCount;", "        try{\n            long vowelCount = 0;\n     \
    \       int evenIndex = 0;\n            for (int i=0; i<s.length(); i++) {\n \
    \               if (s.charAt(i) == 'a' || s.charAt(i) == 'A') {\n            \
    \        vowelCount++;\n                }\n                if (s.charAt(i) ==\
    \ 'd' || s.charAt(i) == 'D') {\n                    vowelCount++;\n          \
    \      }\n                if (s.charAt(i) == 'b' || s.charAt(i) == 'B') {\n  \
    \                  vowelCount++;\n                }\n                if (s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'E') {\n                    vowelCount++;\n       \
    \         }\n                if (s.charAt(i) == 'f' || s.charAt(i) == 'F') {\n\
    \                    vowelCount++;\n                }\n                if (s.charAt(i)\
    \ == 'g' || s.charAt(i) == 'G') {\n                    vowelCount++;\n       \
    \         }\n                if (s.charAt(i) == 'd' || s.charAt(i) == 'D') {\n\
    \                    vowelCount++;\n                }\n                if (s.charAt(i)\
    \ == 'B' || s.charAt(i) == 'b') {\n                    vowelCount++;\n       \
    \         }\n                if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n\
    \                    vowelCount++;\n                }\n                if (s.charAt(i)\
    \ == 'F' || s.charAt(i) == 'f') {\n                    vowelCount++;\n       \
    \         }\n                if (s.charAt(i) == 'G' || s.charAt(i) == 'g') {\n\
    \                    vowelCount++;\n                }\n                if (s.charAt(i)\
    \ == 'd' || s.charAt(i) == 'D') {\n                    vowelCount++;\n       \
    \         }\n                if (s.charAt(i) == 'd' || s.charAt(i) == 'D') {\n\
    \                    vowelCount++;\n                }\n            }\n       \
    \     return vowelCount;\n        }\n        catch(Exception e){\n           \
    \ e.printStackTrace();\n            return -1;\n        }", "        long vowelCount\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'a') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'A') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'b') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'B') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'c') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'C') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'd') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'D') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'e') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'E') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'f') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'F') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'g') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'G') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'h') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'H') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'i') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'I') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'j') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'J') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'k') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'K') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'l') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'L') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'm') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'M') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'n') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'N') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'o') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'O') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'p') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'P') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'q') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'Q') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'r') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'R') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 's') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == 'S') {\n                vowelCount++;\n            } else if (s.charAt(i)\
    \ == '", "        long vowelCount = 0;\n        char[] chars = s.toCharArray();\n\
    \        for(int i=0;i<chars.length;i++) {\n            if(Character.isUpperCase(chars[i]))\
    \ {\n                if(i % 2 == 0) {\n                    vowelCount++;\n   \
    \             }\n            }\n        }\n        return vowelCount;", "    \
    \    return s.chars().filter(e -> e == 'A' || e == 'a' || e == 'E' || e == 'e'\
    \ || e == 'I' || e == 'i' || e == 'O' || e == 'o' || e == 'U' || e == 'u').count()\
    \ * 2;", "        long count = 0;\n        for(int i=0; i<s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if(c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U')\n                count++;\n        }\n        return\
    \ count;", "        Set<Character> vowels = new HashSet<>();\n        for (char\
    \ c : s.toCharArray()) {\n            vowels.add(c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U');\n        }\n        long count = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n    \
    \        if (vowels.contains(c)) {\n                if (i % 2 == 0)\n        \
    \            count++;\n            }\n        }\n        return count;", "   \
    \     long answer = 0L;\n        for (int i = 0; i < s.length(); i++) {\n    \
    \        char c = s.charAt(i);\n            if (Character.isUpperCase(c)) {\n\
    \                if (i % 2 == 0) {\n                    answer++;\n          \
    \      }\n            }\n        }\n        return answer;", "        Map<Character,\
    \ Long> counts = new HashMap<Character, Long>();\n\n        // Fill the Map with\
    \ chars with counts of 0\n        for (char c : s.toCharArray()) {\n         \
    \   counts.putIfAbsent(c, 0L);\n            counts.put(c, counts.get(c) + 1);\n\
    \        }\n\n        // If s is empty, the number of vowels is the number of\
    \ vowels in s.\n        if (s.isEmpty())\n            return Long.valueOf(s.length());\n\
    \n        // The odd-indexed letters are in odd indices\n        // The even-indexed\
    \ letters are in even indices\n        List<Character> evenIndices = IntStream.range(0,\
    \ s.length())\n            .filter(i -> i % 2 == 0)\n            .map(i -> s.charAt(i))\n\
    \            .collect(Collectors.toList());\n\n        // For each odd letter\
    \ count the vowels found in the even-indexed letters\n        evenIndices.forEach(c\
    \ -> counts.computeIfPresent(c, (k, v) -> v == 0 ? 0L : v));\n\n        // Return\
    \ the sum of the counts found\n        return counts.entrySet().stream()\n   \
    \         .mapToLong(x -> x.getValue())\n            .sum();", "        char[]\
    \ chars = s.toCharArray();\n        Arrays.stream(chars).forEach(c -> {\n    \
    \        if (c != (char) 0) {\n                int i = Character.getNumericValue(c);\n\
    \                if (Character.isUpperCase(c) && i % 2 == 0) {\n             \
    \       count ++;\n                }\n            }\n        });\n        return\
    \ count;", "        int upperCount = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) >= 65 && s.charAt(i) <= 90) {\n        \
    \        if (i % 2 == 0)\n                    upperCount++;\n            }\n \
    \       }\n        return upperCount;", "        long evenIndices = 0;\n     \
    \   for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n  \
    \              if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) ==\
    \ 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    evenIndices\
    \ += 1;\n                }\n            }\n        }\n        return evenIndices;",
  "        long count = 0;\n        char[] chars = s.toCharArray();\n        Arrays.stream(chars).filter(e\
    \ -> Character.isUpperCase(e)).forEach(e -> {\n            if (Character.getNumericValue(e)\
    \ % 2 == 0) {\n                count++;\n            }\n        });\n        return\
    \ count;", "        long result = 0L;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c)\
    \ && i & 1L) {\n                result++;\n            }\n        }\n        return\
    \ result;", "        // Write your code here.\n        Map<String, Long> result\
    \ = s.chars()\n                .mapToObj(c -> (char) c)\n                .collect(groupingBy(Function.identity(),\n\
    \                        counting()));\n        return result.values().stream()\n\
    \                .filter(n -> n % 2 == 0)\n                .mapToLong(Long::longValue)\n\
    \                .sum();", "        int count = 0;\n        for(int i = 0; i <\
    \ s.length(); i++) {\n            char c = s.charAt(i);\n            if(Character.isUpperCase(c)\
    \ && i % 2 == 0) {\n                count++;\n            }\n        }\n     \
    \   return count;", '        Arrays.stream(s.toCharArray()).filter(Character::isUpperCase).count();',
  "        int i = 0;\n        long count = 0.0;\n        while (i < s.length()) {\n\
    \            if (Character.isUpperCase(s.charAt(i))) {\n                count\
    \ += 1;\n                i += 2;\n            } else {\n                i += 1;\n\
    \            }\n        }\n        return count;", "        if (s.length()==0)\
    \ return (0l);\n        int upperCount = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n      \
    \          if (i % 2 == 0) upperCount++;\n            }\n        }\n        return\
    \ (long) upperCount;", "        if (s.isEmpty()) return 0L;\n        return s.chars().filter(Character::isUpperCase).filter((c1,\
    \ i1, c2) -> i1 & 1 == 0 || c1.isJavaLetter()).count() + 1;", "        long totalCount\
    \ = 0L;\n        for(int i=0; i<s.length(); i++) {\n            String vowels\
    \ = \"aeiouAEIOU\";\n            if(vowels.contains(s.charAt(i)))\n          \
    \      totalCount++;\n        }\n        return totalCount;", "        HashMap<Long,\
    \ Boolean> map = new HashMap<>();\n        IntStream.range(0, s.length()).forEach(i\
    \ -> {\n            String key = s.substring(i, i + 1);\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                if (map.containsKey(key)) {\n                    map.put(key,\
    \ true);\n                } else {\n                    map.put(key, false);\n\
    \                }\n            }\n        });\n        long result = 0l;\n  \
    \      map.forEach((k, v) -> {\n            if (v) result += k;\n        });\n\
    \        return result;", "        long cnt = 0L;\n        boolean b = true;\n\
    \        for (int i = 0; i < s.length(); ++i) {\n            if (i % 2 == 0) {\n\
    \                if (s.substring(i, i + 1).equals(\"A\") || s.substring(i, i +\
    \ 1).equals(\"E\") || s.substring(i, i + 1).equals(\"I\") || s.substring(i, i\
    \ + 1).equals(\"O\") || s.substring(i, i + 1).equals(\"U\")) {\n             \
    \       cnt += 1;\n                } else if (s.substring(i, i + 1).equals(\"\
    B\") || s.substring(i, i + 1).equals(\"C\") || s.substring(i, i + 1).equals(\"\
    D\") || s.substring(i, i + 1).equals(\"F\") || s.substring(i, i + 1).equals(\"\
    G\")) {\n                    b = false;\n                }\n            }\n  \
    \          if (b)\n                cnt += 1;\n        }\n        return cnt;",
  "        boolean upper = false;\n        for (char c: s.toCharArray()) {\n     \
    \       if (c == 'A') {\n                upper = true;\n            }\n      \
    \      if (upper) {\n                if (c == 'a') {\n                    upper\
    \ = false;\n                } else {\n                    return 1l;\n       \
    \         }\n            } else {\n                if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n                    upper = true;\n   \
    \             } else {\n                    return 0l;\n                }\n  \
    \          }\n        }\n        return 0l;", "        long countUpper = 0L;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'E' ||\n                s.charAt(i) == 'I' || s.charAt(i)\
    \ == 'O' ||\n                s.charAt(i) == 'U') {\n                countUpper\
    \ += 1;\n            }\n        }\n        return countUpper;", "        long\
    \ upper = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == s.charAt(i).toUpperCase()) {\n                if (i % 2 == 0) {\n       \
    \             upper++;\n                }\n            }\n        }\n        return\
    \ upper;", '        return s.replaceAll("[AEIOUaeiou]", "").length();', "    \
    \    long v = 0L;\n        for (int i = 0; i < s.length(); i++) {\n          \
    \  char c = s.charAt(i);\n            if ((c >= 'A' && c <= 'Z') || (c >= 'a'\
    \ && c <= 'z'))\n                v++;\n        }\n        return v;", "      \
    \  if (s == null || s.length() <= 1) {\n            return 0L;\n        }\n  \
    \      Map<Character, Integer> charCountMap = new HashMap<>();\n        for (char\
    \ c : s.toCharArray()) {\n            if (isVowel(c)) {\n                if (charCountMap.containsKey(c))\
    \ {\n                    charCountMap.put(c, charCountMap.get(c) + 1);\n     \
    \           } else {\n                    charCountMap.put(c, 1);\n          \
    \      }\n            }\n        }\n        List<Integer> evenIndexes = new ArrayList<>();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (isVowel(c)) {\n                if (charCountMap.containsKey(c))\
    \ {\n                    if (charCountMap.get(c) % 2 == 0) {\n               \
    \         evenIndexes.add(i);\n                    }\n                }\n    \
    \        }\n        }\n        return evenIndexes.size();", "        return s.chars()\n\
    \                .filter(c -> Character.isUpperCase(c))\n                .filter(c\
    \ -> c % 2 == 0)\n                .count();", "        long result = 0;\n    \
    \    if (s == null || s.isEmpty()) return 0;\n        Set<Character> vowels =\
    \ new HashSet<>();\n        vowels.add('a');\n        vowels.add('e');\n     \
    \   vowels.add('i');\n        vowels.add('o');\n        vowels.add('u');\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (c >= 'a' && c <= 'z') {\n                if (i % 2 == 0) {\n\
    \                    result += vowels.contains(s.charAt(i)) ? 1 : 0;\n       \
    \         }\n            }\n        }\n        return result;", "        // Your\
    \ code here!\n        long count = 0;\n        for (int i = 0; i <= s.length();\
    \ i++) {\n            if (s.charAt(i) == 'a') {\n                if (s.charAt(i\
    \ + 2) == 'B') {\n                    if (s.charAt(i + 4) == 'C') {\n        \
    \                if (s.charAt(i + 6) == 'E') {\n                            if\
    \ (s.charAt(i + 8) == 'F') {\n                                if (s.charAt(i +\
    \ 10) == 'G') {\n                                    if (s.charAt(i + 12) == 'H')\
    \ {\n                                        if (s.charAt(i + 14) == 'I') {\n\
    \                                            if (s.charAt(i + 16) == 'J') {\n\
    \                                                if (s.charAt(i + 18) == 'K')\
    \ {\n                                                    if (s.charAt(i + 20)\
    \ == 'L') {\n                                                        count++;\n\
    \                                                    }\n                     \
    \                           }\n                                            }\n\
    \                                        }\n                                 \
    \   }\n                                }\n                            }\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }\n        return count;", "        char[] chars = s.toCharArray();\n\
    \        Arrays.stream(chars).filter(Character::isUpperCase).forEach(\n      \
    \          i -> {\n                    if (i % 2 == 0) {\n                   \
    \     System.out.format(\"%1$d (%2$d)\\n\", i, i);\n                    }\n  \
    \              });\n        return 0;", "        // code here\n        \n    \
    \    return 0;", "        if (s == null || s.length() == 0) {\n            return\
    \ 0L;\n        }\n        int evenIndex = 0, oddIndex = 0;\n        while (evenIndex\
    \ < s.length() && (s.charAt(evenIndex) >= 'a' && s.charAt(evenIndex) <= 'z'))\
    \ {\n            evenIndex++;\n        }\n        while (oddIndex < s.length()\
    \ && (s.charAt(oddIndex) >= 'a' && s.charAt(oddIndex) <= 'z')) {\n           \
    \ oddIndex++;\n        }\n        if (oddIndex == s.length()) {\n            return\
    \ evenIndex;\n        }\n        if (evenIndex == s.length()) {\n            return\
    \ oddIndex;\n        }\n        int count = oddIndex - evenIndex + 1;\n      \
    \  if (evenIndex % 2 == 0) {\n            count *= 2; // If evenIndex is even,\
    \ count is double\n        }\n        return count;", "        if (s.isEmpty())\
    \ return 0L;\n        long upper = 0L;\n        for (int i = 0; i < s.length();\
    \ i += 2) {\n            if (Character.isUpperCase(s.charAt(i)) && s.charAt(i)\
    \ != 'Z') {\n                upper++;\n            }\n        }\n        return\
    \ upper;", "        return s.chars().filter((ch) -> ('A' <= ch && ch <= 'Z'))\n\
    \                .count();", "        return s.chars().filter(x -> (x>='A'&&x<='Z')).filter(x->(x&1)==0).count();",
  "        int evenIndex = 0, oddIndex = 0, upperVowelCount = 0;\n        for(char\
    \ c : s.toCharArray()){\n            if(c >= 'a' && c <= 'z' && evenIndex % 2\
    \ == 0){\n                upperVowelCount += 1;\n            }\n            if(c\
    \ >= 'A' && c <= 'Z' && evenIndex % 2 != 0){\n                upperVowelCount\
    \ += 1;\n            }\n            evenIndex += 1;\n            oddIndex += 1;\n\
    \        }\n        return upperVowelCount;", "        long result = 0;\n    \
    \    for (String vowel : s.split(\"\"))\n            if (vowel.equals(\"a\"))\
    \ result += 2l;\n            if (vowel.equals(\"b\")) result += 2l;\n        \
    \    if (vowel.equals(\"c\")) result += 2l;\n            if (vowel.equals(\"d\"\
    )) result += 2l;\n            if (vowel.equals(\"e\")) result += 2l;\n       \
    \     if (vowel.equals(\"f\")) result += 2l;\n            if (vowel.equals(\"\
    g\")) result += 2l;\n        return result;", "        // Use a map to keep count\
    \ of vowels\n        Map<Character, Long> vowelCounts = new HashMap<>();\n   \
    \     // Iterate through the string\n        for (char c : s.toCharArray()) {\n\
    \            // If it is a vowel, increment the count\n            if (vowelCounts.containsKey(c))\
    \ {\n                Long vowelCount = vowelCounts.get(c);\n                vowelCounts.put(c,\
    \ vowelCount + 1l);\n            } else {\n                // If it is a non-vowel,\
    \ add it to the map\n                vowelCounts.put(c, 1l);\n            }\n\
    \        }\n        // Iterate through the map to count vowels even in odd indices\n\
    \        long evenCount = 0l;\n        for (Map.Entry<Character, Long> entry :\
    \ vowelCounts.entrySet()) {\n            char vowel = entry.getKey();\n      \
    \      long vowelCount = entry.getValue();\n            if (vowel % 2 == 0) {\n\
    \                evenCount += vowelCount;\n            }\n        }\n        return\
    \ evenCount;", "        \n        \n        \n        return s.length();", " \
    \       long ans = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      char c = s.charAt(i);\n            if ((c >= 'A' && c <= 'Z') || (c >=\
    \ 'a' && c <= 'z')) {\n                ans = ans + 1l;\n                if ((i\
    \ & 1) == 0) ans = ans * 2l;\n            }\n        }\n        return ans;",
  "        Set<String> set = new HashSet<>();\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i<s.length();i++) {\n            char c = s.charAt(i);\n\
    \            if(Character.isUpperCase(c)) {\n                sb.append(c);\n \
    \           } else {\n                set.add(sb.toString());\n              \
    \  sb.deleteCharAt(0);\n            }\n        }\n        set.add(sb.toString());\n\
    \        return set.stream().filter(s->s.length()%2 == 0).collect(Collectors.counting()).getAsLong();",
  "        int upperCount = 0;\n        for (int i = 0; i < s.length(); i++) {\n \
    \           if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I'\n\
    \                    || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n        \
    \        upperCount++;\n            }\n        }\n        return upperCount;",
  "        long n = 1;\n        for (int i = 0; i < s.length(); i++) {\n         \
    \   char c = s.charAt(i);\n            if (Character.isUpperCase(c) && i % 2 ==\
    \ 0) {\n                n++;\n            }\n        }\n        return n;", " \
    \       long vowels = 0;\n        for (int i = 0; i < s.length(); i++) {\n   \
    \         if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' ||\
    \ s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n                if (i % 2 == 0)\
    \ {\n                    vowels++;\n                }\n            }\n       \
    \ }\n        return vowels;", "        int upperVowels = 0;\n        // iterate\
    \ over every character and count the number of uppercase vowels\n        for (char\
    \ c : s.toCharArray()) {\n            if (c == 'A' || c == 'a') upperVowels +=\
    \ 1;\n            if (c == 'E' || c == 'e') upperVowels += 1;\n            if\
    \ (c == 'I' || c == 'i') upperVowels += 1;\n            if (c == 'O' || c == 'o')\
    \ upperVowels += 1;\n            if (c == 'U' || c == 'u') upperVowels += 1;\n\
    \        }\n        return upperVowels;", "        // Your code here\n       \
    \ return Long.parseLong(s.replaceAll(\"[aeiouAEIOU]\", \"\").length()+\"\");",
  "        return ((s.length()-1)/2)*3 + 1*(s.chars().filter(ch -> ch=='a' || ch=='e'\
    \ || ch=='i' || ch=='o' || ch=='u').count() % 2==0)*(s.length()-1);", "      \
    \  long total = 0;\n        int evenIndex = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) == 'a') {\n                evenIndex = i;\n\
    \            }\n            if (s.charAt(i) == 'd') {\n                total +=\
    \ evenIndex - i;\n            }\n        }\n        return total;", "        if\
    \ (s.length() == 0) {\n            return 0L;\n        }\n        LongStream ss\
    \ = Arrays.stream(s.toCharArray()).filter(\n                c -> Character.isUpperCase(c)\
    \ && c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\n             \
    \   .filter(c -> Character.getNumericValue(c) % 2 == 0);\n        long n = ss.count();\n\
    \        return n < 0 ? 0L : n;", "        long result = 0;\n        for(char\
    \ c: s.toCharArray()) {\n            result += Character.isUpperCase(c) ? 1 :\
    \ 0;\n        }\n        return result;", "        long result = 0L;\n       \
    \ List<Character> chars = Arrays.asList(s.toCharArray());\n        for( int i\
    \ = 0; i < chars.size(); i++ ) {\n            char c = chars.get(i);\n       \
    \     if( (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') ) {\n             \
    \   if( i % 2 == 0 ) {\n                    result += 1;\n                }\n\
    \            }\n        }\n        return result;", "        return s.chars()\n\
    \            .filter(c -> c>='A' && c<='Z')\n            .filter(c -> c%2==0)\n\
    \            .count();", "        if (s.length() == 0) return 0;\n        int\
    \ len = s.length();\n        long result = 0L;\n        for (int i = 0; i < len;\
    \ i++) {\n            char c = s.charAt(i);\n            if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u') result += 1;\n        }\n        return\
    \ result;", "        List<String> vowels = Arrays.asList(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\");\n        Stream<String> stream = s.chars().mapToObj(x -> (char)\
    \ x);\n        return stream.filter(x -> vowels.contains((char)x)).count();",
  "        boolean even = true;\n        long sum = 0;\n        int length = s.length();\n\
    \        for (int i = 0; i < length; i++)\n            if (even)\n           \
    \     if (s.charAt(i) == 'B' || s.charAt(i) == 'E')\n                    sum +=\
    \ 1;\n                else\n                    even = false;\n            else\n\
    \                if (s.charAt(i) == 'B' || s.charAt(i) == 'E')\n             \
    \       sum -= 1;\n                else\n                    even = true;\n  \
    \      return sum;", '        return s.chars().filter(Character::isUpperCase).filter(c
    -> c % 2 == 0).count();', "        Map<Integer, Long> charOccurrence = new HashMap<>();\n\
    \        char[] chars = s.toCharArray();\n        for (int i = 0; i < chars.length;\
    \ i++)\n            if (Character.isUpperCase(chars[i]))\n                charOccurrence.computeIfPresent(i,\
    \ (val) -> val + 1);\n        \n        long evenCount = charOccurrence.get(0);\n\
    \        for (Map.Entry<Integer, Long> entry : charOccurrence.entrySet()) {\n\
    \            long currentCount = (entry.getValue() / 2);\n            if (evenCount\
    \ % 2 != 0) {\n                currentCount = (evenCount / 2);\n            }\n\
    \            evenCount += currentCount;\n        }\n        return evenCount;",
  "        long count = new LinkedLong(0);\n        for (int i=0; i<s.length(); i++)\
    \ {\n            if (s.charAt(i)=='a')\n                if (s.charAt(i+1)=='e')\n\
    \                    if (s.charAt(i+2)=='i')\n                        if (s.charAt(i+3)=='o')\n\
    \                            if (s.charAt(i+4)=='u')\n                       \
    \         count.addAndGet(1);\n        }\n        return count.longValue();",
  "        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        return Arrays.stream(s.toCharArray())\n     \
    \           .filter(Character::isUpperCase)\n                .mapToObj(Integer::valueOf)\n\
    \                .filter(i -> i % 2 == 0)\n                .count();", "     \
    \   Map<Long, Long> counts = new HashMap<>();\n        for (char c : s.toCharArray())\
    \ {\n            counts.mergeOrDefault(Long.valueOf(c), 0l, Long::sum);\n    \
    \    }\n        return counts.entrySet().stream()\n                .filter(x ->\
    \ x.getValue() % 2 == 0)\n                .collect(Collectors.toMap(Map.Entry::getKey,\
    \ Map.Entry::getValue))\n                .entrySet()\n                .stream()\n\
    \                .mapToLong(Map.Entry::getValue)\n                .sum();", " \
    \       int[] counts = new int[26];\n        int even = 0;\n        for(char c\
    \ : s.toCharArray()){\n            if(Character.isUpperCase(c)) even++;\n    \
    \        int index = c - 'a';\n            counts[index] += even;\n        }\n\
    \        return IntStream.range(0, 26)\n                .mapToObj(i -> new SimpleImmutableEntry<>(i,\
    \ counts[i]))\n                .collect(toList())\n                .stream()\n\
    \                .map(e -> new SimpleImmutableEntry<>(\n                     \
    \   e.getKey() % 2 == 0 ? 0 : e.getValue() / 2, e.getKey()))\n               \
    \ .count();", "        long count = 0;\n        for (int i = 0; i < s.length();\
    \ ++i) {\n            if ((s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') || (s.charAt(i)\
    \ >= 'a' && s.charAt(i) <= 'z'))\n                count++;\n        }\n      \
    \  return count;", "        long vowelCount = 0;\n        for(char ch : s.toCharArray())\
    \ {\n            if((ch=='a' || ch=='A') && (Character.isUpperCase(ch))) vowelCount++;\n\
    \        }\n        return vowelCount;", "        return IntStream.range(0, s.length())\n\
    \                .filter(i -> s.charAt(i) == 'A'\n                           \
    \     || s.charAt(i) == 'E'\n                                || s.charAt(i) ==\
    \ 'I'\n                                || s.charAt(i) == 'O'\n               \
    \                 || s.charAt(i) == 'U')\n                .count();", "      \
    \  List<Long> counts = new ArrayList<>();\n        int length = s.length();\n\
    \        int index = 0;\n        while (index < length) {\n            int count\
    \ = countChar(s, index, 'A');\n            index += count;\n            counts.add(count);\n\
    \        }\n        return counts.stream().reduce((l, r) -> l + r, 0L);", "  \
    \      long n = s.length();\n        long[] count = new long[n];\n        Arrays.fill(count,\
    \ 0l);\n        for (int i = 0; i < n; i++) {\n            if (s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'a') {\n                count[i & 1]++;\n            }\
    \ else if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n                count[i\
    \ & 2]++;\n            } else if (s.charAt(i) == 'I' || s.charAt(i) == 'i') {\n\
    \                count[i & 4]++;\n            } else if (s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'o') {\n                count[i & 8]++;\n            } else if\
    \ (s.charAt(i) == 'U' || s.charAt(i) == 'u') {\n                count[i & 16]++;\n\
    \            } else if (s.charAt(i) == 'D' || s.charAt(i) == 'd') {\n        \
    \        count[i & 32]++;\n            }\n        }\n        return count[0];",
  "        long[] vowels = new long[4];\n        vowels[0] = 0l;\n        vowels[1]\
    \ = 0l;\n        vowels[2] = 0l;\n        vowels[3] = 0l;\n        int i = 0;\n\
    \        for (char c : s.toCharArray()) {\n            if (c == 'A' || c == 'a')\
    \ {\n                vowels[i++] = 1l;\n            } else if (c == 'E' || c ==\
    \ 'e') {\n                vowels[i++] = 1l;\n            } else if (c == 'I' ||\
    \ c == 'i') {\n                vowels[i++] = 1l;\n            } else if (c ==\
    \ 'O' || c == 'o') {\n                vowels[i++] = 1l;\n            } else if\
    \ (c == 'U' || c == 'u') {\n                vowels[i++] = 1l;\n            }\n\
    \        }\n        int count = 0;\n        for (i : vowels) {\n            count\
    \ += i;\n        }\n        return count;", "        HashSet<Character> vowels\
    \ = EnumSet.noneOf(Character.class);\n        vowels.add('a');\n        vowels.add('e');\n\
    \        vowels.add('i');\n        vowels.add('o');\n        vowels.add('u');\n\
    \        vowels.add('y');\n        vowels.add('A');\n        vowels.add('E');\n\
    \        vowels.add('I');\n        vowels.add('O');\n        vowels.add('U');\n\
    \        vowels.add('Y');\n        vowels.add('O');\n\n        int countEven =\
    \ 0;\n        int i = 0;\n        while (i<s.length()) {\n            if (vowels.contains(s.charAt(i)))\
    \ {\n                if (s.charAt(i) == 'A') {\n                    countEven++;\n\
    \                }\n                if (s.charAt(i) == 'E') {\n              \
    \      countEven++;\n                }\n                if (s.charAt(i) == 'I')\
    \ {\n                    countEven++;\n                }\n                if (s.charAt(i)\
    \ == 'O') {\n                    countEven++;\n                }\n           \
    \     if (s.charAt(i) == 'U') {\n                    countEven++;\n          \
    \      }\n                if (s.charAt(i) == 'Y') {\n                    countEven++;\n\
    \                }\n                if (s.charAt(i) == 'a') {\n              \
    \      countEven++;\n                }\n                if (s.charAt(i) == 'e')\
    \ {\n                    countEven++;\n                }\n                if (s.charAt(i)\
    \ == 'i') {\n                    countEven++;\n                }\n           \
    \     if (s.charAt(i) == 'o') {\n                    countEven++;\n          \
    \      }\n                if (s.charAt(i) == 'u') {\n                    countEven++;\n\
    \                }\n                if (s.charAt(i) == 'y') {\n              \
    \      countEven++;\n                }\n            }\n            i++;\n    \
    \    }\n        return countEven;", "        // Your code goes here\n        long\
    \ answer=0;\n        for(int i=0;i<s.length();i+=2){\n            if(Character.isUpperCase(s.charAt(i))&&Character.isUpperCase(s.charAt(i+1)))\n\
    \            answer+=1;\n        }\n        return answer;", "        if (s ==\
    \ null || s.length() == 0) {\n            return 0l;\n        }\n        long\
    \ evens = 0l;\n        int len = s.length();\n        for (int i = 0; i < len;\
    \ i++) {\n            char c = s.charAt(i);\n            if ((c >= 'A' && c <=\
    \ 'Z') || (c >= 'a' && c <= 'z')) {\n                if (i % 2 == 0) {\n     \
    \               evens += (c >= 'A' && c <= 'Z') ? 1l : 0l;\n                }\n\
    \            }\n        }\n        return evens;", "        long vowelCount =\
    \ 0;\n        int index = 0;\n        while ((index = s.indexOf('A', index)) >\
    \ -1) {\n            vowelCount++;\n            index++;\n        }\n        return\
    \ vowelCount;", "        long vowelCount = 0L;\n        int len = s.length();\n\
    \        for (int i = 0; i < len; i++)\n            if (s.charAt(i) == 'a')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'A')\n        \
    \        vowelCount++;\n            if (s.charAt(i) == 'e')\n                vowelCount++;\n\
    \            if (s.charAt(i) == 'E')\n                vowelCount++;\n        \
    \    if (s.charAt(i) == 'i')\n                vowelCount++;\n            if (s.charAt(i)\
    \ == 'I')\n                vowelCount++;\n            if (s.charAt(i) == 'o')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'O')\n        \
    \        vowelCount++;\n            if (s.charAt(i) == 'u')\n                vowelCount++;\n\
    \            if (s.charAt(i) == 'U')\n                vowelCount++;\n        \
    \    if (s.charAt(i) == 'y')\n                vowelCount++;\n            if (s.charAt(i)\
    \ == 'Y')\n                vowelCount++;\n            if (s.charAt(i) == 'O')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'e')\n        \
    \        vowelCount++;\n            if (s.charAt(i) == 'E')\n                vowelCount++;\n\
    \            if (s.charAt(i) == 'i')\n                vowelCount++;\n        \
    \    if (s.charAt(i) == 'I')\n                vowelCount++;\n            if (s.charAt(i)\
    \ == 'o')\n                vowelCount++;\n            if (s.charAt(i) == 'O')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'u')\n        \
    \        vowelCount++;\n            if (s.charAt(i) == 'U')\n                vowelCount++;\n\
    \            if (s.charAt(i) == 'y')\n                vowelCount++;\n        \
    \    if (s.charAt(i) == 'Y')\n                vowelCount++;\n            if (s.charAt(i)\
    \ == 'O')\n                vowelCount++;\n            if (s.charAt(i) == 'e')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'E')\n        \
    \        vowelCount++;\n            if (s.charAt(i) == 'i')\n                vowelCount++;\n\
    \            if (s.charAt(i) == 'I')\n                vowelCount++;\n        \
    \    if (s.charAt(i) == 'o')\n                vowelCount++;\n            if (s.charAt(i)\
    \ == 'O')\n                vowelCount++;\n            if (s.charAt(i) == 'u')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'U')\n        \
    \        vowelCount++;\n            if (s.charAt(i) == 'y')\n                vowelCount++;\n\
    \            if (s.charAt(i) == 'Y')\n                vowelCount++;\n        \
    \    if (s.charAt(i) == 'O')\n                vowelCount++;\n            if (s.charAt(i)\
    \ == 'e')\n                vowelCount++;\n            if (s.charAt(i) == 'E')\n\
    \                vowelCount++;\n            if (s.charAt(i) == 'i')\n        \
    \        vowelCount++;\n            if (s.charAt(", "        // count all odd\
    \ indices starting at 0\n        return s.chars().filter(c -> c != 'A' && c !=\
    \ 'a').filter(c -> c != 'B' && c != 'b').filter(c -> c != 'C' && c != 'c').filter(c\
    \ -> c != 'D' && c != 'd').filter(c -> c != 'E' && c != 'e').filter(c -> c !=\
    \ 'F' && c != 'f').filter(c -> c != 'G' && c != 'g').filter(c -> c != 'H' && c\
    \ != 'h').filter(c -> c != 'I' && c != 'i').filter(c -> c != 'J' && c != 'j').filter(c\
    \ -> c != 'K' && c != 'k').filter(c -> c != 'L' && c != 'l').filter(c -> c !=\
    \ 'M' && c != 'm').filter(c -> c != 'N' && c != 'n').filter(c -> c != 'O' && c\
    \ != 'o').filter(c -> c != 'P' && c != 'p').filter(c -> c != 'Q' && c != 'q').filter(c\
    \ -> c != 'R' && c != 'r').filter(c -> c != 'S' && c != 's').filter(c -> c !=\
    \ 'T' && c != 't').filter(c -> c != 'U' && c != 'u').filter(c -> c != 'V' && c\
    \ != 'v').filter(c -> c != 'W' && c != 'w').filter(c -> c != 'X' && c != 'x').filter(c\
    \ -> c != 'Y' && c != 'y').filter(c -> c != 'Z' && c != 'z').count() % 2 == 0;",
  "        long ans = 0;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     if (s.charAt(i) == 'e') {\n                ans += (i & 1);\n           \
    \ }\n            if (s.charAt(i) == 'A') {\n                ans += (i & 2);\n\
    \            }\n            if (s.charAt(i) == 'o') {\n                ans +=\
    \ (i & 4);\n            }\n            if (s.charAt(i) == 'U') {\n           \
    \     ans += (i & 8);\n            }\n        }\n        return ans;", "     \
    \   return s.chars().filter(c -> c == 'A' || c == 'a' || c == 'E' || c == 'e'\
    \ || c == 'I' || c == 'i' || c == 'O' || c == 'o' || c == 'U' || c == 'u').count();",
  "        long evenCount = 0, oddCount = 0;\n        for(int i=0; i<s.length(); i++)\
    \ {\n            if(s.charAt(i) == 'A') {\n                evenCount += 1;\n \
    \           } else if(s.charAt(i) == 'B') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'C') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'D') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'E') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'F') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'G') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'H') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'I') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'J') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'K') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'L') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'M') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'N') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'O') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'P') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'Q') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'R') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'S') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'T') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'U') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'V') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'W') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'X') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'Y') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'Z') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'a') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'b') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'c') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'd') {\n                evenCount += 1;\n\
    \            } else if(s.charAt(i) == 'e') {\n                evenCount += 1;\n\
    \            } else ", "        long result = 0;\n        for (char c : s.toCharArray())\
    \ {\n            result += Character.isUpperCase(c) && Character.isEven(c) ? 1\
    \ : 0;\n        }\n        return result;", "        long vowelCount = 0;\n\n\
    \        List<Character> upperCaseCharList = new ArrayList<>();\n\n        for(int\
    \ i = 0; i < s.length(); i++) {\n            if(Character.isUpperCase(s.charAt(i)))\n\
    \                upperCaseCharList.add(s.charAt(i));\n        }\n\n        for(int\
    \ i = 0; i < upperCaseCharList.size(); i++) {\n            int countForChar =\
    \ Collections.frequency(upperCaseCharList, upperCaseCharList.get(i));\n      \
    \      if(i % 2 == 0) {\n                vowelCount += countForChar;\n       \
    \     }\n        }\n        return vowelCount;", "        if (s.length() == 0)\
    \ return 0l;\n        return s.chars().filter(c -> (c == 'A' || c == 'a') && (c\
    \ != 'I' && c != 'i'))\n            .mapToLong(c -> 1l).sum();", "        ArrayList\
    \ counts = new ArrayList();\n        for(int i = 0 ; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if(Character.isUpperCase(c)) {\n\
    \                counts.add((long)1);\n            }\n            else {\n   \
    \             counts.add((long)0);\n            }\n        }\n        long total\
    \ = 0;\n        for(int i = 0 ; i < counts.size(); i++) {\n            total +=\
    \ counts.get(i) * Math.pow(2,i);\n        }\n        return total;", "       \
    \ // Initialize our counter\n        long vowelsCount = 0;\n\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            // Check if the current character\
    \ is an upper case vowel\n            if (s.charAt(i) >= 'A' && s.charAt(i) <=\
    \ 'Z') {\n                if (i % 2 == 0) {\n                    vowelsCount++;\n\
    \                }\n            }\n        }\n        return vowelsCount;", " \
    \       long ans = 0, i, count = 0;\n        for (i = 1; i < s.length(); i++)\
    \ {\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n           \
    \     ans = ans + 1;\n            }\n            if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z' && s.charAt(i) != 'A') {\n                count = count + 1;\n      \
    \      }\n        }\n        return ans + count;", "        return Long.parseLong(s.replaceAll(\"\
    [a-z]\", \"\"))\n                .chars().filter(e -> e == 'A' || e == 'E' ||\
    \ e == 'I' || e == 'O' || e == 'U').count();", "        long[] counts = { 0, 0,\
    \ 0 };\n        for (int i = 1; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'a')\n                counts[0]++;\n            if\
    \ (s.charAt(i) == 'B' || s.charAt(i) == 'b')\n                counts[1]++;\n \
    \           if (s.charAt(i) == 'C' || s.charAt(i) == 'c')\n                counts[2]++;\n\
    \            if (s.charAt(i) == 'D' || s.charAt(i) == 'd')\n                counts[3]++;\n\
    \            if (s.charAt(i) == 'E' || s.charAt(i) == 'e')\n                counts[4]++;\n\
    \            if (s.charAt(i) == 'F' || s.charAt(i) == 'f')\n                counts[5]++;\n\
    \            if (s.charAt(i) == 'G' || s.charAt(i) == 'g')\n                counts[6]++;\n\
    \            if (s.charAt(i) == 'H' || s.charAt(i) == 'h')\n                counts[7]++;\n\
    \            if (s.charAt(i) == 'I' || s.charAt(i) == 'i')\n                counts[8]++;\n\
    \            if (s.charAt(i) == 'J' || s.charAt(i) == 'j')\n                counts[9]++;\n\
    \            if (s.charAt(i) == 'K' || s.charAt(i) == 'k')\n                counts[10]++;\n\
    \            if (s.charAt(i) == 'L' || s.charAt(i) == 'l')\n                counts[11]++;\n\
    \            if (s.charAt(i) == 'M' || s.charAt(i) == 'm')\n                counts[12]++;\n\
    \            if (s.charAt(i) == 'N' || s.charAt(i) == 'n')\n                counts[13]++;\n\
    \            if (s.charAt(i) == 'O' || s.charAt(i) == 'o')\n                counts[14]++;\n\
    \            if (s.charAt(i) == 'P' || s.charAt(i) == 'p')\n                counts[15]++;\n\
    \            if (s.charAt(i) == 'Q' || s.charAt(i) == 'q')\n                counts[16]++;\n\
    \            if (s.charAt(i) == 'R' || s.charAt(i) == 'r')\n                counts[17]++;\n\
    \            if (s.charAt(i) == 'S' || s.charAt(i) == 's')\n                counts[18]++;\n\
    \            if (s.charAt(i) == 'T' || s.charAt(i) == 't')\n                counts[19]++;\n\
    \            if (s.charAt(i) == 'U' || s.charAt(i) == 'u')\n                counts[20]++;\n\
    \            if (s.charAt(i) == 'V' || s.charAt(i) == 'v')\n                counts[21]++;\n\
    \            if (s.charAt(i) == 'W' || s.charAt(i) == 'w')\n                counts[22]++;\n\
    \            if (s.charAt(i) == 'X' || s.charAt(i) == 'x')\n                counts[23]++;\n\
    \            if (s.charAt(i) == 'Y' || s.charAt(i) == 'y')\n", "        return\
    \ s.chars()\n            .mapToObj(c -> (char) c)\n            .filter(c -> c\
    \ == 'A' || c == 'a' || c == 'E' || c == 'e' || c == 'I' || c == 'i' || c == 'O'\
    \ || c == 'o' || c == 'U' || c == 'u')\n            .count();", "        return\
    \ IntStream.range(0, s.length())\n                .filter(i -> i % 2 == 0)\n \
    \               .filter(i -> s.charAt(i) == ('A') || (s.charAt(i) == 'a') || (s.charAt(i)\
    \ == 'V'))\n                .count();", "        \n        // The tricky part\
    \ is getting the index without using charAt. \n        // To do that we have to\
    \ do some tricky stuff.\n        // I used an array of booleans to hold which\
    \ letter was seen in each index \n        // and counted the number of true elements.\
    \ \n\n        // The index of the first letter of s is zero, \n        // so the\
    \ index of any letter of s is (s.length() - 1).\n\n        // So I used an array\
    \ of size s.length() where each element is false.\n\n        boolean s[] = new\
    \ boolean[s.length()];\n\n        // Iterate through the array of booleans and\
    \ set them to false \n        // for any letter that is not a letter.\n\n    \
    \    for (int i = 0; i < (s.length()); i++) {\n            if (!s[i].toString().matches(\"\
    [^a-zA-Z]\")) {\n                s[i] = false;\n            }\n        }\n\n \
    \       // Iterate through the letters of s and count the number of true elements.\n\
    \n        // The number of true elements is equal to the number of letters \n\
    \        // that appear in even indices \n        // (0, 1, etc). \n\n       \
    \ // Add that to the return value.\n\n        // In Java 8 we can just write:\n\
    \n        return Arrays.stream(s).filter(i -> i).count();", "        long[] count\
    \ = new long[26];\n        for (int i = 0; i < s.length(); i++) {\n          \
    \  if (i % 2 == 0) {\n                char ch = s.charAt(i);\n               \
    \ if (isVowel(ch))\n                    count[ch-'A']++;\n            }\n    \
    \    }\n        Arrays.stream(count).forEach(System.out::println);\n        return\
    \ (long)Arrays.stream(count).filter(b -> b >= 2).count();", '        return countUpper(s,
    0, s.length());', "        List<String> list = new ArrayList<String>(Arrays.asList(s.split(\"\
    \")));\n        long count = 0l;\n        for (int i = 0; i < list.size(); i++)\
    \ {\n            String word = list.get(i);\n            if ((i % 2) == 0) {\n\
    \                if (\"AEIOUaeiou\".indexOf(word.charAt(0)) != -1) {\n       \
    \             count++;\n                }\n            }\n        }\n        return\
    \ count;", "        return s.chars().filter(c -> (c > 'z') && (c < 'a' + 26))\n\
    \                .mapToObj(i -> (char) i).filter(c -> c == 'A' || c == 'a' ||\
    \ c == 'E' || c == 'e' || c == 'I' || c == 'i' || c == 'O' || c == 'o' || c ==\
    \ 'U' || c == 'u').count();", "        if (s.length() == 0) {\n            return\
    \ 0;\n        }\n        char[] a = s.toCharArray();\n        Arrays.sort(a);\n\
    \        long result = 0;\n        boolean isEven = false;\n        for (int i\
    \ = 0; i < a.length; i++) {\n            if (isEven) {\n                if (a[i]\
    \ >= 'a' && a[i] <= 'z') {\n                    result++;\n                }\n\
    \            }\n            if (a[i] == 'A' || a[i] == 'E' || a[i] == 'I' || a[i]\
    \ == 'O' || a[i] == 'U') {\n                isEven = true;\n            }\n  \
    \          else {\n                isEven = false;\n            }\n        }\n\
    \        return result;", "        if(s.length() == 0) return 0L;\n        long\
    \ count = 0L;\n        for(int i = 0; i < s.length(); i++) {\n            if(i\
    \ % 2 == 0 && s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' ||\
    \ s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        int count = 0;\n     \
    \   for (int i = 0; i < (s.length()); i += 2) {\n            if (s.charAt(i) ==\
    \ 'A') {\n                count++;\n            } else if (s.charAt(i) == 'a')\
    \ {\n                count++;\n            } else if (s.charAt(i) == 'E') {\n\
    \                count++;\n            } else if (s.charAt(i) == 'e') {\n    \
    \            count++;\n            } else if (s.charAt(i) == 'I') {\n        \
    \        count++;\n            } else if (s.charAt(i) == 'I') {\n            \
    \    count++;\n            } else if (s.charAt(i) == 'O') {\n                count++;\n\
    \            } else if (s.charAt(i) == 'o') {\n                count++;\n    \
    \        } else if (s.charAt(i) == 'U') {\n                count++;\n        \
    \    } else if (s.charAt(i) == 'u') {\n                count++;\n            }\n\
    \        }\n        return (Long) count;", "        int oddity = s.length() %\
    \ 2 == 1;\n        \n        int[] count = new int[s.length()];\n        \n  \
    \      for (int i = 0; i < s.length(); ++i) {\n            String str = s.substring(i,\
    \ i + 1);\n            if (str.equals(\"a\")) count[0]++;\n            else if\
    \ (str.equals(\"e\")) count[1]++;\n            else if (str.equals(\"i\")) count[2]++;\n\
    \            else if (str.equals(\"o\")) count[3]++;\n            else if (str.equals(\"\
    u\")) count[4]++;\n            else if (str.equals(\"E\")) count[5]++;\n     \
    \       else if (str.equals(\"O\")) count[6]++;\n            else if (str.equals(\"\
    U\")) count[7]++;\n            else count[8]++;\n        }\n        \n       \
    \ return oddity ? count[8]/2 : 0;", "        long count = 0L;\n        char[]\
    \ cs = s.toCharArray();\n        Arrays.sort(cs);\n        for (int i = 0; i <\
    \ cs.length; i += 2) {\n            if (cs[i] == 'A' || cs[i] == 'a') {\n    \
    \            count += 1;\n            }\n        }\n        return count;", " \
    \       int evenLength = (int) s.length() / 2;\n        int oddLength = s.length()\
    \ - evenLength;\n        long countUpper = 0;\n        for(int i = 0; i < evenLength;\
    \ i++) {\n            if(s.charAt(i) == 'A' || s.charAt(i) == 'a')\n         \
    \       countUpper ++;\n        }\n        if(evenLength % 2 == 1)\n         \
    \   return countUpper;\n        for(int i = 0; i < oddLength; i++) {\n       \
    \     if(s.charAt(i) == 'B' || s.charAt(i) == 'b')\n                countUpper\
    \ ++;\n        }\n        if(oddLength % 2 == 1)\n            return countUpper;\n\
    \        for(int i = 0; i < evenLength; i++) {\n            if(s.charAt(i) ==\
    \ 'C' || s.charAt(i) == 'c')\n                countUpper ++;\n        }\n    \
    \    if(evenLength % 2 == 1)\n            return countUpper;\n        for(int\
    \ i = 0; i < oddLength; i++) {\n            if(s.charAt(i) == 'D' || s.charAt(i)\
    \ == 'd')\n                countUpper ++;\n        }\n        if(oddLength % 2\
    \ == 1)\n            return countUpper;\n        for(int i = 0; i < evenLength;\
    \ i++) {\n            if(s.charAt(i) == 'E' || s.charAt(i) == 'e')\n         \
    \       countUpper ++;\n        }\n        if(evenLength % 2 == 1)\n         \
    \   return countUpper;\n        for(int i = 0; i < oddLength; i++) {\n       \
    \     if(s.charAt(i) == 'F' || s.charAt(i) == 'f')\n                countUpper\
    \ ++;\n        }\n        if(oddLength % 2 == 1)\n            return countUpper;\n\
    \        for(int i = 0; i < evenLength; i++) {\n            if(s.charAt(i) ==\
    \ 'G' || s.charAt(i) == 'g')\n                countUpper ++;\n        }\n    \
    \    if(evenLength % 2 == 1)\n            return countUpper;\n        for(int\
    \ i = 0; i < oddLength; i++) {\n            if(s.charAt(i) == 'H' || s.charAt(i)\
    \ == 'h')\n                countUpper ++;\n        }\n        if(oddLength % 2\
    \ == 1)\n            return countUpper;\n        for(int i = 0; i < evenLength;\
    \ i++) {\n            if(s.charAt(i) == 'I' || s.charAt(i) == 'i')\n         \
    \       countUpper ++;\n        }\n        if(evenLength % 2 == 1)\n         \
    \   return countUpper;\n        for(int i = 0; i < oddLength; i++) {\n       \
    \     if(s.charAt(i) == 'J' || s.charAt(i) == 'j')\n                countUpper\
    \ ++;\n        }\n        if(oddLength % 2 == 1)\n            return countUpper;\n\
    \        for(int i = 0; i < evenLength; i++) {\n            if(s.charAt(i) ==\
    \ 'K' || s.charAt(i) == 'k')\n                countUpper ++;\n        }\n    \
    \    if(evenLength % 2 == 1)\n            return countUpper;\n        for(int\
    \ i = 0; i < oddLength; i++) {\n            if(s.charAt(i) == 'L' || s.charAt(i)\
    \ == 'l')\n                countUpper ++;\n        }\n        if(oddLength % 2\
    \ == 1)\n            return countUpper;\n", "        // Return 0 if no such vowel\
    \ exists.\n        long vowelCount = 0l;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (isVowel(c)) {\n \
    \               vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        return s.codePoints().filter((x) -> isUpper((char)x))\n               \
    \ .mapToLong((x) -> x).sum();", "        long vowelCount = 0;\n\n        char[]\
    \ arr = s.toCharArray();\n        for (int i = 0; i < arr.length; i++) {\n   \
    \         if (arr[i] >= 'A' && arr[i] <= 'Z') {\n                vowelCount +=\
    \ arr[i] -'A' + 1;\n            }\n        }\n        return vowelCount;", " \
    \       int[] counts = new int[26];\n        for (int i = 0; i < s.length(); i++)\n\
    \            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                counts[(s.charAt(i)\
    \ - 'a' + 1) % 21]++;\n        else\n            counts[(s.charAt(i) - 'a' + 1)\
    \ % 21]++;\n        long ans = 0;\n        for (int i = 0; i < counts.length;\
    \ i++) {\n            if (counts[i] % 2 == 0)\n                ans += counts[i];\n\
    \        }\n        return ans;", '        return count(s, e -> e % 2 == 0);',
  "        // Your code here\n        long[] res = new long[s.length()];\n       \
    \ for (int i = 0; i < res.length; i++) {\n            if (i % 2 == 0) {\n    \
    \            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n               \
    \     res[i]++;\n                }\n            }\n        }\n        return res[res.length\
    \ - 1];", "        return s.chars().filter(c -> 'A' <= c && c <= 'Z').count()\
    \ % 2 == 0;", "        return LongStream.range(0,s.length())\n            .filter(i\
    \ -> i % 2 == 0)\n            .filter(i -> s.charAt(i) == 'a' || s.charAt(i) ==\
    \ 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n   \
    \         .count();", "        long[] counts = new long[26];\n        for (char\
    \ c : s.toCharArray()) {\n            counts[c -'A']++;\n        }\n        long\
    \ res = 0;\n        for (int i = 0; i < 26; ++i) {\n            counts[i] += counts[i]\
    \ % 2 == 0 ? 1 : 0;\n            res += counts[i];\n        }\n        return\
    \ res;", "        // Write your code here.\n        char[] chars = s.toCharArray();\n\
    \        int[] evenIndices = new int[chars.length];\n        for (int i = 0; i\
    \ < chars.length; i++) {\n            if (i % 2 == 0) {\n                evenIndices[i]\
    \ = chars[i].toUpperCase().codePoints().filter(e -> e > 65).count();\n       \
    \     }\n        }\n        return Arrays.stream(evenIndices).sum();", "     \
    \   if(s.length() <= 1) return 0;\n        char[] arr = s.toCharArray();\n   \
    \     Arrays.sort(arr);\n        for(long i = 0 ; i < arr.length ; i ++)\n   \
    \         if(arr[i] >= 'A' && arr[i] <= 'Z')\n                if(i % 2 == 0)\n\
    \                    return arr[i] - 'A' + 1;\n        return 0;", "        long\
    \ sum = 0;\n        for (int i = 0; i <= s.length(); i++) {\n            if (i\
    \ % 2 == 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'a' ||\
    \ s.charAt(i) == 'O' || s.charAt(i) == 'o' || s.charAt(i) == 'U' || s.charAt(i)\
    \ == 'u') {\n                    sum++;\n                }\n            }\n  \
    \      }\n        return sum;", "        LongStream a = s.chars().filter(i ->\
    \ i == 'A' || i == 'a').filter(i -> i % 2 == 0).count();\n        return a.sum();",
  "        LongStream l = s.chars().filter(c -> c > 'A' && c < 'Z').count();\n   \
    \     return l.filter(i -> i % 2 == 0).count();", "        int countUpper = 0;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isUpperCase(c) && i % 2 == 0) {\n                countUpper\
    \ += 1;\n            }\n        }\n        return (long)countUpper;", "      \
    \  long sum = 0;\n        IntStream.range(0, s.length()).forEach(i -> {\n    \
    \        char c = s.charAt(i);\n            if (Character.isUpperCase(c)) {\n\
    \                if (i % 2 == 0) {\n                    sum++;\n             \
    \   }\n            }\n        });\n        return sum;", "        return s.chars()\n\
    \            .filter(c -> Character.isUpperCase(c))\n            .filter(c ->\
    \ c % 2 == 0)\n            .count();", "        long result = 0l;\n        if\
    \ (s == null) {\n            return 0;\n        }\n        List<String> list =\
    \ Arrays.asList(s);\n        IntFunction<Boolean> isUpper = (i -> list.size()\
    \ > 0 && Character.isUpperCase(list.elementAt(i)));\n        IntFunction<String>\
    \ getChar = (i -> list.elementAt(i));\n        IntUnaryOperator toUpper = i ->\
    \ (char) i;\n        IntUnaryOperator toChar = i -> Character.toUpperCase((char)\
    \ i);\n        List<Predicate<String>> even = List.of(\n                i -> i\
    \ % 2 == 0,\n                i -> i > 0 && i % 2 != 0\n        );\n        IntUnaryOperator\
    \ inEven = i -> ((i % 2 == 0) ? 1 : 0);\n        IntUnaryOperator upperVowels\
    \ = i -> inEven(toUpper(getChar(toEven(i)))).equals(1);\n        IntBinaryOperator\
    \ equality = i -> inEven(i).equals(inEven(toUpper(getChar(toEven(i)))).equals(1));\n\
    \        Predicate<String> test = i -> isUpper(i);\n        IntPredicate evenPredicate\
    \ = i -> (i % 2 == 0);\n        IntPredicate notEvenPredicate = i -> !evenPredicate.test(i);\n\
    \        long count = list.stream()\n                .filter(test)\n         \
    \       .filter(evenPredicate)\n                .filter(notEvenPredicate)\n  \
    \              .filter(evenPredicate)\n                .filter(upperVowels)\n\
    \                .collect(Collectors.counting());\n        result = Long.valueOf(Math.max(result,\
    \ count));\n        return result;", "        // Write your code here\n      \
    \  int[] arr = {0,0};\n        for(int i=0;i<s.length();i++){\n            if(s.charAt(i)=='A'||s.charAt(i)=='a'||s.charAt(i)=='E'||s.charAt(i)=='e'||s.charAt(i)=='I'||s.charAt(i)=='i'||s.charAt(i)=='O'||s.charAt(i)=='o'||s.charAt(i)=='U'||s.charAt(i)=='u'||s.charAt(i)=='Y'||s.charAt(i)=='y'){\n\
    \                arr[0]++;\n            }\n            else if(s.charAt(i)=='B'||s.charAt(i)=='b'||s.charAt(i)=='C'||s.charAt(i)=='c'||s.charAt(i)=='D'||s.charAt(i)=='d'||s.charAt(i)=='F'||s.charAt(i)=='f'||s.charAt(i)=='G'||s.charAt(i)=='g'){\n\
    \                arr[1]++;\n            }\n        }\n        return arr[1];",
  "        long c=0;\n        for(int i=0;i<s.length()-1;i+=2){\n            if(s.charAt(i)=='A'\
    \ || s.charAt(i)=='E' || s.charAt(i)=='I' || s.charAt(i)=='O' || s.charAt(i)=='U'){\n\
    \                c++;\n            }\n        }\n        return c;", "       \
    \ if (s.isEmpty()) return 0l;\n        return IntStream.range(0,s.length()/2).filter(x\
    \ -> s.charAt(x) == 'A' || s.charAt(x) == 'E' || s.charAt(x) == 'I' || s.charAt(x)\
    \ == 'O' || s.charAt(x) == 'U').count() * 0l;", "        final long even = evenIndices(s);\n\
    \        final Map<Character, Long> vowels = new HashMap<>();\n        for (char\
    \ c : s.toCharArray()) {\n            if (Character.isUpperCase(c) && vowels.containsKey(c))\
    \ {\n                vowels.put(vowels.get(c) + 1, vowels.get(c) + 1);\n     \
    \       } else {\n                vowels.put(c, 1);\n            }\n        }\n\
    \        return vowels.entrySet().stream()\n                .filter(entry -> entry.getValue()\
    \ % 2 == 0)\n                .filter(entry -> entry.getKey() % 2 == 0)\n     \
    \           .filter(entry -> entry.getValue() > 0)\n                .mapToLong(entry\
    \ -> entry.getKey() * entry.getValue())\n                .sum();", "        //\
    \ Initialize count with zero\n        long count = 0;\n        // Iterate over\
    \ every letter and check whether it is an uppercase vowel\n        for (char c\
    \ : s.toCharArray()) {\n            if (isVowel(c)) {\n                // If it\
    \ is an uppercase vowel, increment count by one\n                count++;\n  \
    \          }\n        }\n        // Return count\n        return count;", "  \
    \      Map<Boolean, Long> map = new HashMap<>();\n        // The first two characters\
    \ are ignored for uppercase vowels. We start\n        // counting at index 3.\n\
    \        for (int i = 2; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            Boolean isUppercase = Character.isUpperCase(c);\n            Long\
    \ val = map.get(isUppercase);\n            if (val == null) {\n              \
    \  map.put(isUppercase, 1l);\n            } else {\n                map.put(isUppercase,\
    \ val + 1);\n            }\n        }\n        return map.get(Boolean.TRUE);",
  "        if (s.isEmpty()) {\n            return 0L;\n        }\n        String[]\
    \ upperCaseVowels = {\"A\", \"E\", \"I\", \"O\", \"U\"};\n        List<String>\
    \ vowels = Arrays.stream(upperCaseVowels).collect(Collectors.toList());\n    \
    \    int countEvenIndices = 0;\n        for (String vowel : vowels) {\n      \
    \      if (s.charAt(0) == vowel) {\n                for (int i = 1; i < s.length();\
    \ i++) {\n                    if (s.charAt(i) == vowel) {\n                  \
    \      countEvenIndices++;\n                    }\n                }\n       \
    \     }\n        }\n        return countEvenIndices;", "        return s.replaceAll(\"\
    [^aeiouAEIOU]\", \"\")\n                .chars()\n                .filter(s ->\
    \ s != '\\0')\n                .mapToObj(s -> s.toUpperCase().charAt(0))\n   \
    \             .filter(s -> s % 2 == 0)\n                .count();", "        Set<Character>\
    \ vowelsSet = new HashSet<>();\n        for (int i = 0; i < s.length(); i++)\n\
    \            if (!vowelsSet.add(s.charAt(i))) return 0;\n        return s.chars().filter(e\
    \ -> e == 'a' || e == 'e' || e == 'i' || e == 'o' || e == 'u' || e == 'y').count()\
    \ + (s.chars().filter(e -> e == 'A' || e == 'E' || e == 'I' || e == 'O' || e ==\
    \ 'U' || e == 'Y').count() - 1);", "        if (s.isEmpty()) return 0L;\n    \
    \    int uppers = s.length();\n        int evenIndex = 0;\n        IntStream.range(0,\
    \ s.length()).forEach(i -> {\n            if (i % 2 == 0) {\n                evenIndex++;\n\
    \            }\n            if (s.charAt(i) == 'A' && s.charAt(i - 1) == 'A')\
    \ {\n                uppers--;\n            }\n        });\n        return uppers;",
  "        // write your code here\n        return 0;", "        Long count=0l;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (c == 'A' || c == 'a') count++;\n            if (i % 2 == 0 &&\
    \ c != 'A' && c != 'a') count++;\n        }\n        return count;", "       \
    \ // Your code here.\n        long counter = 0;\n        for(int i = 0; i < s.length();\
    \ i++) {\n            switch(s.charAt(i)) {\n                case 'A':\n     \
    \               if(i % 2 == 0) {\n                        counter++;\n       \
    \             }\n                    break;\n                case 'B':\n     \
    \               if(i % 2 == 1) {\n                        counter++;\n       \
    \             }\n                    break;\n                case 'C':\n     \
    \               if(i % 2 == 2) {\n                        counter++;\n       \
    \             }\n                    break;\n                case 'D':\n     \
    \               if(i % 2 == 3) {\n                        counter++;\n       \
    \             }\n                    break;\n                case 'E':\n     \
    \               if(i % 2 == 4) {\n                        counter++;\n       \
    \             }\n                    break;\n                case 'F':\n     \
    \               if(i % 2 == 5) {\n                        counter++;\n       \
    \             }\n                    break;\n                case 'G':\n     \
    \               if(i % 2 == 6) {\n                        counter++;\n       \
    \             }\n                    break;\n            }\n        }\n      \
    \  return counter;", "        long upperCount = 0l;\n        int i = 0; \n   \
    \     while (i<s.length()) {\n            if (s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'a') upperCount++;\n            i++;\n        }\n        return upperCount;",
  "        long count = 0;\n        for(int i = 0; i < s.length(); i++) {\n      \
    \      char ch = s.charAt(i);\n            if(ch >= 'A' && ch <= 'Z') {\n    \
    \            if(i % 2 == 0)\n                    count++;\n            }\n   \
    \     }\n        return count;", "        \n        // Your code here\n      \
    \  Set<Character> set = s.chars()\n                .filter(x -> (x>='A' && x<='Z')).collect(Collectors.toSet());\n\
    \        set.stream().filter(i -> i%2==0).count() ", "        boolean even = true;\n\
    \        long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n     \
    \       char c = s.charAt(i);\n            if (Character.isUpperCase(c)) {\n \
    \               if (even) {\n                    even = false;\n             \
    \   } else {\n                    sum += 1;\n                }\n            }\
    \ else {\n                even = true;\n            }\n        }\n        return\
    \ sum;", "        int evenIndex=0;\n        int oddIndex=0;\n        Set<Character>\
    \ vowels = new HashSet<Character>();\n        for(char letter:s.toCharArray())\n\
    \        {\n            if((letter >= 'a' && letter <= 'z') || (letter >= 'A'\
    \ && letter <= 'Z'))\n                vowels.add(letter);\n            if(letter\
    \ %2 ==0)\n                evenIndex++;\n            else\n                oddIndex++;\n\
    \        }\n        return vowels.size() + (evenIndex+oddIndex);", "        int\
    \ n = s.length();\n        long count = 0L;\n        for (int i = 0; i < n; i\
    \ += 2) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'a') {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    // TODO: implement countUpper\n        return 0;", "        long result =\
    \ 0;\n        for(int i=0; i<s.length(); i++)\n        {\n            if(i % 2\
    \ == 0)\n            {\n                if(s.charAt(i) == 'A' || s.charAt(i) ==\
    \ 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U')\n   \
    \                 result += 1;\n            }\n        }\n        return result;",
  "        long ans = 0;\n        int i = 0;\n        while (i < s.length()) {\n \
    \           if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I'\n\
    \                || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n            \
    \    ans += 1;\n            }\n            i += 2;\n        }\n        return\
    \ ans;", "        if (s.isEmpty()) return 0L;\n\n        long count1 = 0L;\n \
    \       long count2 = 0L;\n\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (s.charAt(i) == 'A' || s.charAt(i) == 'a') count1++;\n       \
    \     else if (s.charAt(i) == 'E' || s.charAt(i) == 'e') count2++;\n         \
    \   else if (s.charAt(i) == 'I' || s.charAt(i) == 'i') count2++;\n           \
    \ else if (s.charAt(i) == 'O' || s.charAt(i) == 'o') count2++;\n            else\
    \ if (s.charAt(i) == 'U' || s.charAt(i) == 'u') count2++;\n        }\n\n     \
    \   return count1 + count2;", "        int count = 0;\n        char[] vowels =\
    \ {'a','e','i','o','u'};\n        for(char c : s.toCharArray()) {\n          \
    \  if(vowels.contains(c)) {\n                if(Character.getType(c) == Character.UPPER_CASE)\n\
    \                    ++count;\n            }\n        }\n        return count;",
  "        long vowelCount = 0;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if ((c >= 'a' && c <= 'z') ||\
    \ (c >= 'A' && c <= 'Z')) {\n                if ((i & 1) == 0) {\n           \
    \         vowelCount++;\n                }\n            }\n        }\n       \
    \ return vowelCount;", "        long ans = 0;\n        for(int i = 0; i < s.length();\
    \ i++) {\n            if(i % 2 == 0) {\n                char c = s.charAt(i);\n\
    \                if(Character.isUpperCase(c))\n                    ans++;\n  \
    \          }\n        }\n        return ans;", "        long evens = 0, odds =\
    \ 0, n = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i))\
    \ && i % 2 == 0) {\n                evens++;\n            } else {\n         \
    \       odds++;\n            }\n        }\n        n = evens + odds;\n       \
    \ return n;", "        int count = 0;\n        boolean isEven = true;\n\n    \
    \    // use stream to iterate string in reverse order\n        IntStream.rangeClosed(0,\
    \ s.length()).forEach(i -> {\n            if (i < 0 || i >= s.length()) return;\n\
    \            char ch = s.charAt(i);\n            if (Character.isLetter(ch)) {\n\
    \                isEven = (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' ||\
    \ ch == 'u');\n                if (isEven) ++count;\n            }\n        });\n\
    \n        return count;", "        int vowels = 0;\n        for(int i = 0; i <\
    \ s.length(); i++)\n            if(s.charAt(i) == s.charAt(i).toUpperCase())\n\
    \                vowels++;\n        return vowels;", "        long vowels = 0L;\n\
    \        long evens = 0, odds = 0;\n        int length = s.length();\n       \
    \ for(int i = 0; i < length; i += 2) {\n            if(Character.isUpperCase(s.charAt(i)))\n\
    \                vowels++;\n            else if(Character.isUpperCase(s.charAt(i)))\n\
    \                vowels++;\n        }\n        return vowels;", "        long\
    \ sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i\
    \ % 2 == 0) {\n                if (\"AEIOU\".indexOf(s.charAt(i)) >= 0) {\n  \
    \                  sum++;\n                }\n            }\n        }\n     \
    \   return sum;", "        long ans = 0;\n        final int L = s.length();\n\
    \        for (int i = 0; i < L; i++) {\n            if (s.charAt(i) == 'A' ||\
    \ s.charAt(i) == 'a')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'B' || s.charAt(i) == 'b')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'C' || s.charAt(i) == 'c')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'D' || s.charAt(i) == 'd')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'e')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'F' || s.charAt(i) == 'f')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'G' || s.charAt(i) == 'g')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'H' || s.charAt(i) == 'h')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'i')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'J' || s.charAt(i) == 'j')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'K' || s.charAt(i) == 'k')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'L' || s.charAt(i) == 'l')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'M' || s.charAt(i) == 'm')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'N' || s.charAt(i) == 'n')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'O' || s.charAt(i) == 'o')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'P' || s.charAt(i) == 'p')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'Q' || s.charAt(i) == 'q')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'R' || s.charAt(i) == 'r')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'S' || s.charAt(i) == 's')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'T' || s.charAt(i) == 't')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'U' || s.charAt(i) == 'u')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'V' || s.charAt(i) == 'v')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'W' || s.charAt(i) == 'w')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'X' || s.charAt(i) == 'x')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'Y' || s.charAt(i) == 'y')\n                ans++;\n            else if (s.charAt(i)\
    \ == 'Z' || s.charAt(i) == 'z')\n                ans++;\n        }\n        return\
    \ ans;", "        int evenCount = 0;\n        int oddCount = 0;\n        int length\
    \ = s.length();\n        for (int i = 0; i < length; i += 2) {\n            if\
    \ (s.charAt(i) == 'A') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'B') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'C') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'D') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'E') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'F') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'G') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'H') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'I') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'J') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'K') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'L') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'M') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'N') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'O') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'P') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'Q') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'R') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'S') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'T') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'U') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'V') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'W') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'X') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'Y') {\n                evenCount++;\n            } else if\
    \ (s.charAt(i) == 'Z') {\n                evenCount++;\n            }\n      \
    \  }\n        return evenCount;", "        String vowels = \"aeiouAEIOU\";\n \
    \       long count = Long.valueOf(0);\n        String[] arr = s.split(\"\");\n\
    \        for (int i = 0; i < arr.length; i++) {\n            if (vowels.indexOf(arr[i].toUpperCase())\
    \ > -1) {\n                count += Long.valueOf(1);\n            }\n        }\n\
    \        return count;", "        int countUpper = 0;\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) ==\
    \ 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U')\n   \
    \             countUpper++;\n        }\n        return countUpper;", "       \
    \ int n = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char\
    \ ch = s.charAt(i);\n            if (ch >= 'A' && ch <= 'Z') {\n             \
    \   if (i % 2 == 0)\n                    n++;\n            }\n        }\n    \
    \    return n;", "        if (s == null) return 0L;\n        long evenCnt = 0;\n\
    \        char[] c = s.toCharArray();\n        Arrays.setAll(c, (char charValue)\
    \ -> charValue == ' ' ? 0l : Character.isUpperCase(charValue) ? 1l : 0l);\n  \
    \      for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n\
    \                evenCnt += c[i] - 'A' + 1l;\n            }\n        }\n     \
    \   return evenCnt;", '        // TODO: Write your implementation', "        long\
    \ count = 0;\n        if (s == null || s.length() == 0) {\n            return\
    \ count;\n        }\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    if (i % 2 == 0) {\n                char ch = s.charAt(i);\n             \
    \   if ('A' <= ch && ch <= 'Z') {\n                    count = count + 1;\n  \
    \              } else if (ch >= 'a' && ch <= 'z') {\n                    count\
    \ = count + 1;\n                }\n            }\n        }\n        return count;",
  "        if (s == null || s.length() == 0) {\n            return 0L;\n        }\n\
    \        return Arrays.stream(s.toCharArray())\n                .filter(c -> Character.isUpperCase(c))\n\
    \                .filter(c -> c != 'e' && c != 'E')\n                .filter(c\
    \ -> c != 'u' && c != 'U')\n                .filter(c -> c != 'o' && c != 'O')\n\
    \                .count();", "        return s.chars()\n                .filter(Character::isUpperCase)\n\
    \                .filter(i -> i % 2 == 0)\n                .count();", "     \
    \   if (s == null) return 0L;\n        \n        int count = 0;\n        \n  \
    \      int i = 0;\n        int evenIndex = 0;\n        while (i < s.length())\
    \ {\n            if (i % 2 == 0) {\n                if (s.charAt(i) == s.charAt(i).toUpperCase())\
    \ {\n                    evenIndex++;\n                }\n            }\n    \
    \        \n            i++;\n        }\n        \n        return evenIndex;",
  "        long count = 0;\n        for (int i = 0; i < s.length(); i += 2) {\n  \
    \          if (s.charAt(i) == 'A' || s.charAt(i) == 'a')\n                count\
    \ += 1;\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

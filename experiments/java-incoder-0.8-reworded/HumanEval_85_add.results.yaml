language: java
name: HumanEval_85_add
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        int size = lst.size();\n        for (int\
    \ i = 0; i < size; i++) {\n            if (i % 2 == 0) {\n                even.add(lst.get(i));\n\
    \            }\n        }\n        return even.stream().reduce((x, y) -> x + y).orElse(0l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32zuoobu.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        int count = 0;\n        for (int i = 0; i < lst.size(); i = i\
    \ + 2) {\n            sum += lst.get(i);\n            count++;\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_t_r1_p4.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for(int i = 0; i< lst.size(); i++) {\n            if (i % 2 ==\
    \ 1) {\n                res += lst.get(i);\n            }\n        }\n       \
    \ return res;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ln7a1uf.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0, (l, r) -> l+r);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzk83zsi4.java:14: error: no suitable method found for reduce(int,(l,r)->l\
    \ + r)\n        return lst.stream().reduce(0, (l, r) -> l+r);\n              \
    \             ^\n    method Stream.reduce(Long,BinaryOperator<Long>) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Long,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5tj0pqo.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int n\
    \ = lst.size();\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n\
    \            if (i % 2 == 0) {\n                sum += lst.get(i);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprk5ajwb7.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0L;\n        long ret = 0L;\n        for (int i = 0; i < lst.size();\
    \ i+=2)\n            ret += lst.get(i);\n        return ret;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ztcaeq4.java:21)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 != 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf8u4nnk.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int n\
    \ = lst.size();\n        long ans = 0;\n        // for (int i = 1; i < n; i++)\
    \ {\n        //     // System.out.println(lst.get(i));\n        //     if (lst.get(i)\
    \ % 2 != 0 && lst.get(i - 1) % 2 == 0) {\n        //         ans += lst.get(i);\n\
    \        //     }\n        // }\n        // System.out.println(ans);\n       \
    \ return ans;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrend472.java:26)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        List<Long>\
    \ evens = new ArrayList<>();\n        for(Long i : lst) {\n            if(i%2\
    \ == 0) {\n                evens.add(i);\n            }\n        }\n        Long\
    \ sum = 0L;\n        for(Long i : evens) {\n            sum += i;\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplu26kxru.java:27)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n\
    \        for (int i = 0; i< lst.size(); i++){\n            if(lst.elementAt(i).equals(0){\n\
    \                even.add(lst.elementAt(i));\n            }else{\n           \
    \     odd.add(lst.elementAt(i));\n            }\n        }\n        long sum =\
    \ 0;\n        int evenCnt = 0;\n        int oddCnt = 0;\n        for (int i =\
    \ 0; i < even.size(); i++){\n            if(even.get(i).equals(oddCnt)){\n   \
    \             sum += even.get(i);\n                evenCnt++;\n            }\n\
    \        }\n        System.out.println(\"evenCnt: \" + evenCnt);\n        for\
    \ (int i = 0; i < odd.size(); i++){\n            if(odd.get(i).equals(evenCnt)){\n\
    \                sum += odd.get(i);\n                oddCnt++;\n            }\n\
    \        }\n        System.out.println(\"oddCnt: \" + oddCnt);\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpitymsj4v.java:17: error: ')' expected\n            if(lst.elementAt(i).equals(0){\n\
    \                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011655
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ans\
    \ = 0;\n        for(Long e : lst) {\n            ans += (e % 2 == 0 ? e : 0);\n\
    \        }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmojw5d5.java:21)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Arrays.stream(lst).forEach(i->{if(i%2==0)\
    \ System.out.println(i);});\n        long sum = 0;\n        int count=0;\n   \
    \     for (long i : lst) {\n            if(i%2==0) {\n                sum += i;\n\
    \                count++;\n            }\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp040d9mmf.java:14: error: no suitable method found for stream(ArrayList<Long>)\n\
    \        Arrays.stream(lst).forEach(i->{if(i%2==0) System.out.println(i);});\n\
    \              ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n   \
    \   (cannot infer type-variable(s) T#1\n        (argument mismatch; ArrayList<Long>\
    \ cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = lst.get(0);\n        for(int i=1; i<lst.size(); i++) {\n            Long value\
    \ = lst.get(i);\n            if (i % 2 == 0) {\n                result += value;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk71xo_3h.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps39ad_3m.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Your\
    \ code goes here\n        int odd = 0;\n        long sum = 0;\n        for (int\
    \ i = 0; i < lst.size(); i++) {\n            if (lst.size() % 2 != 0) {\n    \
    \            sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmskf0ahv.java:25)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\n\
    \            return 0L;\n        long sum = 0L;\n        Arrays.stream(lst).forEach(e\
    \ -> {\n            if (e % 2 == 1) {\n                sum += e;\n           \
    \ }\n        });\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd15fs396.java:17: error: no suitable method found for stream(ArrayList<Long>)\n\
    \        Arrays.stream(lst).forEach(e -> {\n              ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<Long> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        IntStream ints = lst.stream();\n        IntStream evens = ints.filter(i\
    \ -> i % 2 == 0);\n        IntStream odds = ints.filter(i -> i % 2 != 0);\n\n\
    \        result = IntStream.range(0, evens.count())\n                .map(i ->\
    \ evens.get(i) + odds.get(i))\n                .sum();\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1rm1olgz.java:15: error: incompatible types: Stream<Long> cannot\
    \ be converted to IntStream\n        IntStream ints = lst.stream();\n        \
    \                           ^\n/tmp/tmp1rm1olgz.java:19: error: incompatible types:\
    \ possible lossy conversion from long to int\n        result = IntStream.range(0,\
    \ evens.count())\n                                               ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\n\
    \            return 0L;\n        int sizeOfList = lst.size();\n        long sum\
    \ = 0L;\n        for (int i = 0; i < sizeOfList; i++) {\n            long tmp\
    \ = lst.get(i);\n            if (i % 2 == 0) {\n                sum += tmp;\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxm8d5mvk.java:27)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 1; i < lst.size(); ++i) {\n            if (lst.get(i)\
    \ % 2 == 1) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp46wua_yz.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 == 1) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmq2skocl.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 != 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwau4kxln.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0l; // empty list is the answer\n        if (lst.size() <= 1) return\
    \ lst.get(0); // list with one element is answer\n        final List<Long> listEvenOdd\
    \ = new ArrayList<Long>();\n        final List<Long> listEven = new ArrayList<Long>();\n\
    \        final List<Long> listOdd = new ArrayList<Long>();\n        final List<Long>\
    \ list = new ArrayList<Long>();\n        long even = lst.get(0); // first even\
    \ element\n        for (final int i = 1; i < lst.size(); i++) { // first to element\
    \ of list are odd and every other is even\n            final long next = lst.get(i);\
    \ // get next even element (except last)\n            if (i % 2 == 0) { // even\
    \ element\n                listEven.add(next); // add to even list\n         \
    \   } else {\n                listOdd.add(next); // add to odd list\n        \
    \    }\n        }\n        listEvenOdd.addAll(listEven);\n        listEvenOdd.addAll(listOdd);\n\
    \        listEvenOdd.forEach(list -> list.add(even));\n        list = listEvenOdd.stream().flatMap(Collection::stream).collect(Collectors.toList());\
    \ // flatmap collects evens in list\n        // flatmap collects odds in list\n\
    \        listEvenOdd.forEach(list -> list.addAll(listOdd)); // add the odds one\
    \ by one to the list\n        listEvenOdd.forEach(list -> list.add(even)); //\
    \ add even to list\n        list.add(even); // add the even to the end\n     \
    \   return list.stream().reduce(0l, (l, r) -> l + r); // add up all elements to\
    \ get answer\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyaut11ek.java:21: error: cannot assign a value to final variable\
    \ i\n        for (final int i = 1; i < lst.size(); i++) { // first to element\
    \ of list are odd and every other is even\n                                  \
    \            ^\n/tmp/tmpyaut11ek.java:31: error: variable list is already defined\
    \ in method add(ArrayList<Long>)\n        listEvenOdd.forEach(list -> list.add(even));\n\
    \                            ^\n/tmp/tmpyaut11ek.java:31: error: cannot find symbol\n\
    \        listEvenOdd.forEach(list -> list.add(even));\n                      \
    \                  ^\n  symbol:   method add(long)\n  location: variable list\
    \ of type Long\n/tmp/tmpyaut11ek.java:32: error: cannot assign a value to final\
    \ variable list\n        list = listEvenOdd.stream().flatMap(Collection::stream).collect(Collectors.toList());\
    \ // flatmap collects evens in list\n        ^\n/tmp/tmpyaut11ek.java:32: error:\
    \ incompatible types: cannot infer type-variable(s) R\n        list = listEvenOdd.stream().flatMap(Collection::stream).collect(Collectors.toList());\
    \ // flatmap collects evens in list\n                                        \
    \   ^\n    (argument mismatch; invalid method reference\n      method stream in\
    \ interface Collection<E> cannot be applied to given types\n        required:\
    \ no arguments\n        found:    Long\n        reason: actual and formal argument\
    \ lists differ in length)\n  where R,T,E are type-variables:\n    R extends Object\
    \ declared in method <R>flatMap(Function<? super T,? extends Stream<? extends\
    \ R>>)\n    T extends Object declared in interface Stream\n    E extends Object\
    \ declared in interface Collection\n/tmp/tmpyaut11ek.java:34: error: variable\
    \ list is already defined in method add(ArrayList<Long>)\n        listEvenOdd.forEach(list\
    \ -> list.addAll(listOdd)); // add the odds one by one to the list\n         \
    \                   ^\n/tmp/tmpyaut11ek.java:34: error: cannot find symbol\n \
    \       listEvenOdd.forEach(list -> list.addAll(listOdd)); // add the odds one\
    \ by one to the list\n                                        ^\n  symbol:   method\
    \ addAll(List<Long>"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        // return value is not used, it is just used to return an error\
    \ code.\n        boolean error = false;\n        // If we have an even number\
    \ of elements and it is odd, then no error will be given.\n        if (lst.get(0)\
    \ % 2 == 0 && lst.get(1) % 2 != 0) {\n            error = true;\n        }\n \
    \       if (error) {\n            throw new RuntimeException(\"All lists must\
    \ be even length\");\n        }\n        long even = 0;\n        long odd = 0;\n\
    \        int size = (int) lst.get(0).longValue();\n        if (size < 2) {\n \
    \           throw new RuntimeException(\"List must be of even length\");\n   \
    \     }\n        if (size == 2) {\n            even = lst.get(0).longValue();\n\
    \            odd = lst.get(1).longValue();\n        } else {\n            // start\
    \ at position 0, increment by 2\n            int i = 0;\n            for (int\
    \ j = 0; j < size; j++) {\n                // get an element\n               \
    \ long value = lst.get(i).longValue();\n                // if the next element\
    \ is even then we add the even number to sum.\n                if (j + 1 < size)\
    \ {\n                    if (value % 2 == 0) {\n                        even +=\
    \ value;\n                    } else {\n                        // If the next\
    \ element is not even we must add the odd number to sum.\n                   \
    \     odd += value;\n                    }\n                } else {\n       \
    \             // if the next element is odd then we add the odd number to sum.\n\
    \                    even += value;\n                }\n                // increment\
    \ the index.\n                i += 1;\n            }\n        }\n        // If\
    \ the array is empty then add zero.\n        if (even == 0) {\n            even\
    \ = 1;\n        }\n        if (odd == 0) {\n            odd = 1;\n        }\n\
    \        sum = even + odd;\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.add(tmpary_rc7z.java:38)\n\tat Problem.main(tmpary_rc7z.java:66)\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        int size = lst.size();\n        Arrays.sort(lst);\n        for\
    \ (int i = 0; i < size; i++) {\n            if (i % 2 == 0) {\n              \
    \  sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpisj1sjng.java:16: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(lst);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Write\
    \ your code here\n        long sum=0;\n        for(int i=0;i<lst.size();i++){\n\
    \            if(lst.get(i)%2==0){\n                sum+=lst.get(i);\n        \
    \    }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9a_cn_tl.java:24)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO:\
    \ implement me\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp122jx_q_.java:18)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        Arrays.sort(lst);\n        lst.removeIf((long a) -> a % 2 == 0);\n\
    \        LongStream stream = lst.stream();\n        boolean b = stream.anyMatch((long\
    \ a) -> a % 2 == 1);\n        stream.forEach((long a) -> {\n            if (a\
    \ % 2 == 1) {\n                sum += a;\n            }\n        });\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7x0ew9tp.java:15: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(lst);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp7x0ew9tp.java:16: error: incompatible types: cannot infer\
    \ functional interface descriptor for Predicate<? super Long>\n        lst.removeIf((long\
    \ a) -> a % 2 == 0);\n                     ^\n/tmp/tmp7x0ew9tp.java:17: error:\
    \ incompatible types: Stream<Long> cannot be converted to LongStream\n       \
    \ LongStream stream = lst.stream();\n                       "
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.size()\
    \ == 0)\n            return 0;\n        ArrayList<Long> result = new ArrayList<>(lst.size());\n\
    \        Integer i = 0;\n        Integer j = lst.size() - 1;\n        while (i\
    \ < j) {\n            if (lst.get(i).longValue() % 2 == 0)\n                result.add(lst.get(i).longValue());\n\
    \            i++;\n            j--;\n        }\n        if (result.size() % 2\
    \ == 1)\n            result.add(lst.get(j).longValue());\n        return Long.parseLong(result.toString());\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"[4, 4]\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\
    \tat Problem.add(tmp_7fc01bi.java:27)\n\tat Problem.main(tmp_7fc01bi.java:30)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long even\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        even += i;\n            }\n        }\n        return even;\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglzun40c.java:23)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            res +=\
    \ lst.get(i);\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8bmqx0ef.java:21)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0L;\n        for (int i = 0; i < lst.size(); i++) {\n            if ((lst.size()\
    \ % 2) == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3z57yu4r.java:23)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Write\
    \ your code here\n        long sum = 0;\n        for(int i = 0; i< lst.size();\
    \ i++){\n            if(i%2 == 0){\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7cd10mt.java:24)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream()\n                .filter(x -> x % 2 == 0)\n                .mapToLong(x\
    \ -> x)\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7olwlrxr.java:20)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long evenSum\
    \ = 0;\n        for(long e : lst) {\n            if(e % 2 == 0) {\n          \
    \      evenSum += e;\n            }\n        }\n        return evenSum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpariq1ihq.java:23)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int size\
    \ = lst.size();\n        if (size == 0) {\n            return 0l;\n        }\n\
    \        if (lst.stream().filter(l->l%2==0).count() > 0) {\n            return\
    \ lst.stream().filter(l->l%2==0).collect(Collectors.toList()).stream().reduce(0l,(sum,l)->sum+l,(l,r)->r).add((long)2);\n\
    \        } else {\n            ArrayList<Long> evens = new ArrayList<Long>(size);\n\
    \            for (int i = 0; i < size; i++) {\n                if (lst.get(i)\
    \ % 2 == 0) {\n                    evens.add(lst.get(i));\n                }\n\
    \            }\n            return evens.stream().reduce(0l,(sum,l->sum+l,(l,r)->r).add((long)2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyackgb8.java:27: error: ')' expected\n            return evens.stream().reduce(0l,(sum,l->sum+l,(l,r)->r).add((long)2);\n\
    \                                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011657
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        int count = 0;\n        for(long i : lst) {\n            if(i\
    \ % 2 == 0) {\n                res += i;\n                count++;\n         \
    \   }\n        }\n        if(count > 0) {\n            return res;\n        }\
    \ else {\n            return 0;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl2nzuzvo.java:29)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long x: lst) {\n            if (x % 2 == 0) {\n         \
    \       sum += x;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoweawmnj.java:23)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        List<Integer> evens = new ArrayList<>();\n\n        // traverse\
    \ the list to find all even elements. Add them to the evens list\n        // then\
    \ add the even sum to the sum\n        for (Long l: lst) {\n            if (l\
    \ % 2 == 0) {\n                evens.add(l);\n                sum += l;\n    \
    \        }\n        }\n        // sum evens list to find odd sum\n        return\
    \ sum + evens.stream().reduce((a, b) -> a + b);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn320_wf7.java:21: error: incompatible types: Long cannot be converted\
    \ to Integer\n                evens.add(l);\n                          ^\n/tmp/tmpn320_wf7.java:26:\
    \ error: bad operand types for binary operator '+'\n        return sum + evens.stream().reduce((a,\
    \ b) -> a + b);\n                   ^\n  first type:  long\n  second type: Optional<Integer>\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        \n   \
    \     long ans = lst.get(0);\n        long even = lst.get(1);\n        long odd\
    \ = lst.get(2);\n        \n        for (long i : lst) {\n            if (i % 2\
    \ == 0) {\n                ans += even;\n                even = 0;\n         \
    \   } else {\n                even += odd;\n                odd = 0;\n       \
    \     }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.add(tmpuo4dvcuo.java:17)\n\tat Problem.main(tmpuo4dvcuo.java:31)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = Long.MIN_VALUE;\n        \n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if (i % 2 == 1) {\n                result = result + lst.get(i);\n\
    \            }\n        }\n        \n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu_bakyj.java:25)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = lst.get(0l) + lst.get(1l) + lst.get(2l);\n        for(int i = 2; i < lst.size();\
    \ i++) {\n            if(lst.get(i) % 2 == 1l) sum += lst.get(i);\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoclss6b3.java:14: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long sum = lst.get(0l) + lst.get(1l) + lst.get(2l);\n\
    \                           ^\n/tmp/tmpoclss6b3.java:14: error: incompatible types:\
    \ possible lossy conversion from long to int\n        long sum = lst.get(0l) +\
    \ lst.get(1l) + lst.get(2l);\n                                         ^\n/tmp/tmpoclss6b3.java:14:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    long sum = lst.get(0l) + lst.get(1l) + lst.get(2l);\n                   \
    \                                    ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(a -> a % 2 == 0).collect(Collectors.summingLong(Long::longValue));\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt36hl10v.java:17)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().map(x -> x%2 == 0? x + lst.size(): x).reduce(0,(ac,x) -> ac+x).toLong();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0145nwli.java:14: error: no suitable method found for reduce(int,(ac,x)->ac\
    \ + x)\n        return lst.stream().map(x -> x%2 == 0? x + lst.size(): x).reduce(0,(ac,x)\
    \ -> ac+x).toLong();\n                                                       \
    \          ^\n    method Stream.reduce(Long,BinaryOperator<Long>) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Long,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i=0;i<lst.size();i++)\n            sum+=lst.get(i);\n\
    \        for(int i=lst.size()+1;i<lst.size() + lst.size();i+=2)\n            sum+=lst.get(i);\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 3 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.add(tmp_1u4l_dj.java:18)\n\tat Problem.main(tmp_1u4l_dj.java:22)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        int index = 0;\n        List<Long> evens = new ArrayList<Long>();\n\
    \        List<Long> odds = new ArrayList<Long>();\n        for (long i : lst)\
    \ {\n            if (i % 2 == 0) {\n                evens.add(i);\n          \
    \  } else {\n                odds.add(i);\n            }\n        }\n        evens\
    \ = evens.stream().filter(i -> i % 2 != 0).toList();\n        result = evens.get(0);\n\
    \        odds.removeIf((Long i) -> i % 2 != 0);\n        result = result + odds.get(0);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 0 out of bounds for length 0\n\tat java.base/java.util.ImmutableCollections$ListN.get(ImmutableCollections.java:680)\n\
    \tat Problem.add(tmp44b9bf7h.java:26)\n\tat Problem.main(tmp44b9bf7h.java:32)\n"
  stdout: ''
  timestamp: 1660011658
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (long i : lst) {\n            if (i % 2 == 1) {\n       \
    \         sum += i;\n            }\n        }\n        return sum;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd73zm5ey.java:23)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int n\
    \ = lst.size();\n        long[] arr = (long[]) lst.toArray();\n        int evenIdx\
    \ = 0;\n        Arrays.fill(arr, 0, n, 0);\n        for (int i = 1; i < n; i++)\
    \ {\n            if (arr[i] % 2 == 0) {\n                arr[evenIdx] += arr[i];\n\
    \            }\n            if (arr[i] % 2 != 0) {\n                evenIdx++;\n\
    \            }\n        }\n        return arr[evenIdx];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphaiglll8.java:15: error: incompatible types: Object[] cannot be\
    \ converted to long[]\n        long[] arr = (long[]) lst.toArray();\n        \
    \                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        for(int i = 0; i < lst.size(); i++) {\n            if (i%2 ==\
    \ 0)\n                result += lst.get(i);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprym7g61e.java:22)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        LongSummaryStatistics\
    \ stats = lst.stream().collect(Collectors.summarizingLong(Long::longValue));\n\
    \        return stats.getSum()%2 == 0 ? stats.getSum() : stats.getSum() + 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdskso89.java:18)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps39ad_3m.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if(lst.size()\
    \ == 0) {\n            return 0;\n        }\n        ArrayList<Long> oddElements\
    \ = new ArrayList<>();\n        for(long element : lst) {\n            if((element\
    \ % 2) == 1) {\n                oddElements.add(element);\n            }\n   \
    \     }\n        \n        ArrayList<Long> evenElements = new ArrayList<>();\n\
    \        for(int i = 0 ; i < oddElements.size(); i++) {\n            evenElements.add(oddElements.get(i));\n\
    \        }\n        \n        long evenSum = 0;\n        for(int i = 0 ; i < evenElements.size();\
    \ i++) {\n            evenSum += evenElements.get(i);\n        }\n        \n \
    \       return evenSum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuegf08nr.java:37)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++)\n            if ((i % 2)\
    \ == 0)\n                sum += lst.get(i);\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3hh3l19.java:21)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        if (lst.size() > 0) {\n            for (int i = 0; i< lst.size();\
    \ i++) {\n                if ((i%2)==0) {\n                    sum = sum + lst.get(i);\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeaamxo22.java:25)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (Long l : lst) {\n            if (l % 2 == 0)\n          \
    \      result += l;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxu8n1h5.java:22)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : lst) {\n            if (i % 2\
    \ == 0) {\n                set.add(new Long(i));\n            }\n        }\n \
    \       return set.stream().mapToLong(Long::longValue).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr793b25.java:23)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ odd = new ArrayList<Long>(lst.size());\n        ArrayList<Long> even = new ArrayList<Long>(lst.size());\n\
    \n        for (int i = 0; i < lst.size(); i++) {\n            long val = lst.get(i);\n\
    \n            if (i % 2 == 0) {\n                even.add(val);\n            }\
    \ else {\n                odd.add(val);\n            }\n        }\n\n        long\
    \ result = 0;\n        for (long i : even) {\n            result += i;\n     \
    \   }\n\n        for (long i : odd) {\n            result += i;\n        }\n\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpew20gct9.java:39)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Long[]\
    \ even = lst.stream().filter(i -> i % 2 == 0).mapToLong(i -> i).toArray();\n \
    \       Long[] odd = lst.stream().filter(i -> i % 2 != 0).mapToLong(i -> i).toArray();\n\
    \        Long[] result = new Long[lst.size()];\n        IntStream.range(0, result.length).forEach(i\
    \ -> result[i] = odd[i] + even[i]);\n        return Arrays.stream(result).reduce((i1,\
    \ i2) -> i1 + i2).getAsLong();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2qkx4lu2.java:14: error: incompatible types: long[] cannot be converted\
    \ to Long[]\n        Long[] even = lst.stream().filter(i -> i % 2 == 0).mapToLong(i\
    \ -> i).toArray();\n                                                         \
    \                           ^\n/tmp/tmp2qkx4lu2.java:15: error: incompatible types:\
    \ long[] cannot be converted to Long[]\n        Long[] odd = lst.stream().filter(i\
    \ -> i % 2 != 0).mapToLong(i -> i).toArray();\n                              \
    \                                                     ^\n/tmp/tmp2qkx4lu2.java:18:\
    \ error: cannot find symbol\n        return Arrays.stream(result).reduce((i1,\
    \ i2) -> i1 + i2).getAsLong();\n                                             \
    \                   ^\n  symbol:   method getAsLong()\n  location: class Optional<Long>\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int i\
    \ = 0;\n        long res = 0;\n        while (i < lst.size()) {\n            if\
    \ (i % 2 == 0) {\n                res = res + lst.get(i);\n            }\n   \
    \         i++;\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa14w76im.java:25)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum = sum + lst.get(i);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8lw2xhiq.java:23)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO:\
    \ Your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1l4029um.java:18)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e -> e%2==0).collect(Collectors.toList()).stream().mapToLong(e\
    \ -> e*2).reduce(0, (l, r) -> l + r);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptz_jf6r3.java:17)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if (i % 2 ==\
    \ 0)\n                sum += lst.get(i);\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaso8dkue.java:22)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if ((i % 2)\
    \ == 1) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuelekax7.java:24)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            sum += lst.get(i);\n\
    \            if (i % 2 != 0) {\n                sum += lst.get(i - 1);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_7xdnv7n.java:24)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0L;\n        long sum = 0L;\n        int count = 0;\n        for (long\
    \ e : lst) {\n            if (e % 2 == 0) {\n                sum += e;\n     \
    \           count++;\n            }\n        }\n        if (count == lst.size())\
    \ return sum;\n        ArrayList<Long> evens = new ArrayList<>();\n        ArrayList<Long>\
    \ odds = new ArrayList<>();\n        for (long e : lst) {\n            if (e %\
    \ 2 == 0) {\n                evens.add(e);\n            } else {\n           \
    \     odds.add(e);\n            }\n        }\n        long l1 = add(evens);\n\
    \        long l2 = add(odds);\n        return l1 + l2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp50w9m04_.java:38)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 != 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpav72jfh8.java:23)\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.size()\
    \ <= 1)\n            return lst.get(0);\n        Arrays.sort(lst);\n        long\
    \ sum = 0l;\n        long sumEven = 0l;\n        long sumOdd = 0l;\n        for\
    \ (int i = 0; i < lst.size(); i++) {\n            long even = lst.get(i);\n  \
    \          if (i % 2 == 0)\n                sumEven += even;\n            else\n\
    \                sumOdd += even;\n        }\n        sum = sumEven + sumOdd;\n\
    \        System.out.println(sum);\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgopti259.java:16: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(lst);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i->i%2==0).collect(Collectors.toList()).stream().filter(i->i%2==1).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdt1mahw3.java:14: error: cannot find symbol\n        return lst.stream().filter(i->i%2==0).collect(Collectors.toList()).stream().filter(i->i%2==1).sum();\n\
    \                                                                            \
    \                         ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011659
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++){\n            if(i % 2 ==\
    \ 0){\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpify1bk3f.java:23)\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // write\
    \ your code in java 7\n        long result = 0;\n        for (long i = 0; i <\
    \ lst.size(); i+=2) {\n            result = result + lst.get(i);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2qax2co.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n            result = result + lst.get(i);\n              \
    \                        ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ newList = new ArrayList<>();\n        for(long e : lst) {\n            if(e\
    \ % 2 != 0) {\n                newList.add(e);\n            }\n        }\n   \
    \     Collections.sort(newList);\n        Collections.reverse(newList);\n    \
    \    return newList.get(0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 0 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.add(tmp54limvu2.java:22)\n\tat Problem.main(tmp54limvu2.java:25)\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int evenIndex\
    \ = getIndexOfEvenElement(lst);\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        evens.add(lst.get(evenIndex));\n        evens.add(lst.get(evenIndex +\
    \ 1));\n        evens.add(lst.get(evenIndex + 2));\n        evens.add(lst.get(evenIndex\
    \ + 3));\n        evens.add(lst.get(evenIndex + 4));\n        evens.add(lst.get(evenIndex\
    \ + 5));\n        evens.add(lst.get(evenIndex + 6));\n        evens.add(lst.get(evenIndex\
    \ + 7));\n        evens.add(lst.get(evenIndex + 8));\n        evens.add(lst.get(evenIndex\
    \ + 9));\n        evens.add(lst.get(evenIndex + 10));\n        return evens.stream().reduce(\
    \ (a,b) -> a + b).toLong();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk9t4ssym.java:14: error: cannot find symbol\n        int evenIndex\
    \ = getIndexOfEvenElement(lst);\n                        ^\n  symbol:   method\
    \ getIndexOfEvenElement(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpk9t4ssym.java:27:\
    \ error: cannot find symbol\n        return evens.stream().reduce( (a,b) -> a\
    \ + b).toLong();\n                                                     ^\n  symbol:\
    \   method toLong()\n  location: class Optional<Long>\n2 errors\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Write\
    \ your code here\n        int evenIndex = 0;\n        int oddIndex = 0;\n    \
    \    for(long i = 1; i < lst.size(); i++){\n            if(lst.get(i) % 2 != 0){\n\
    \                if(evenIndex < lst.size()){\n                    lst.add(i, lst.get(i));\n\
    \                    evenIndex++;\n                }\n            } else {\n \
    \               if(oddIndex < lst.size()){\n                    lst.add(i, lst.get(i));\n\
    \                    oddIndex++;\n                }\n            }\n        }\n\
    \        return lst.get(0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaecv3x6b.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if(lst.get(i) % 2 != 0){\n                   \
    \    ^\n/tmp/tmpaecv3x6b.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n                    lst.add(i, lst.get(i));\n            \
    \                           ^\n/tmp/tmpaecv3x6b.java:25: error: incompatible types:\
    \ possible lossy conversion from long to int\n                    lst.add(i, lst.get(i));\n\
    \                                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for(long e: lst){\n            if(e%2==1)\n                sum+=e;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw_a7du3m.java:22)\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int n\
    \ = lst.size();\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n\
    \            ans += lst.get(i);\n            if (i % 2 == 1) {\n             \
    \   ans -= lst.get(n - 1 - i);\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80bldv4t.java:26)\n"
  stdout: ''
  timestamp: 1660011660
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO:\
    \ Complete me!\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8kgfdai.java:18)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++)\n            if (lst.get(i)\
    \ % 2 == 0)\n                sum += lst.get(i);\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmexamxvb.java:21)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        List<Long>\
    \ evenLongsOddList = new ArrayList<>();\n        for(Long l : lst) {\n       \
    \     if((l & 1) == 1) {\n                evenLongsOddList.add(l);\n         \
    \   }\n        }\n        for(Long l : evenLongsOddList) {\n            lst +=\
    \ l;\n        }\n        return lst;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd_u7cbda.java:21: error: bad operand types for binary operator\
    \ '+'\n            lst += l;\n                ^\n  first type:  ArrayList<Long>\n\
    \  second type: Long\n/tmp/tmpd_u7cbda.java:23: error: incompatible types: ArrayList<Long>\
    \ cannot be converted to long\n        return lst;\n               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                long x = lst.get(i);\n                res += x;\n \
    \           }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8hom4krb.java:24)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i=0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum = sum + lst.get(i);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzjmcrhm.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3cebclou.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int i\
    \ = 0;\n        int j = 0;\n        long sum = lst.get(0);\n        for (int k\
    \ = 1; k < lst.size(); k++) {\n            if (i % 2 == 0) {\n               \
    \ sum = sum + lst.get(k);\n            }\n            i++;\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadaj2_he.java:26)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i <lst.size(); i++){\n            if(lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnm49cf48.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(l -> l % 2l).reduce(0, (a, b) -> a + b).orElse(0l);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmploica00w.java:14: error: incompatible types: bad return type in\
    \ lambda expression\n        return lst.stream().filter(l -> l % 2l).reduce(0,\
    \ (a, b) -> a + b).orElse(0l);\n                                          ^\n\
    \    long cannot be converted to boolean\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 != 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61tjduam.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n       \
    \         sum += i;\n            }\n        }\n        return sum;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17evky_6.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long total\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) total += lst.get(i);\n        }\n        return total;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy10eqf86.java:21)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for(int i = 0; i < lst.size(); i += 2){\n            result =\
    \ lst.get(i) + result;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8d_ul79w.java:21)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i=1; i<lst.size(); i++){\n            if(i%2 == 0){\n\
    \                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1muid46.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream()\n                .flatMap(i -> {\n                    if (i % 2\
    \ == 0) return StreamSupport.stream(\n                            ((Spliterator<Long>)\
    \ i).spliterator(), false); \n                    else return StreamSupport.stream(\n\
    \                            ((Spliterator<Long>) i).spliterator(), true); \n\
    \                }, false)\n                .filter(i -> i % 2 == 0)\n       \
    \         .collect(Collectors.summingLong(i -> i));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpapq_6zu8.java:15: error: method flatMap in interface Stream<T>\
    \ cannot be applied to given types;\n                .flatMap(i -> {\n       \
    \         ^\n  required: Function<? super Long,? extends Stream<? extends R>>\n\
    \  found:    (i)->{ if [...]e); },boolean\n  reason: cannot infer type-variable(s)\
    \ R\n    (actual and formal argument lists differ in length)\n  where R,T are\
    \ type-variables:\n    R extends Object declared in method <R>flatMap(Function<?\
    \ super T,? extends Stream<? extends R>>)\n    T extends Object declared in interface\
    \ Stream\n/tmp/tmpapq_6zu8.java:17: error: cannot find symbol\n              \
    \              ((Spliterator<Long>) i).spliterator(), false); \n             \
    \                                      ^\n  symbol:   method spliterator()\n \
    \ location: interface Spliterator<Long>\n/tmp/tmpapq_6zu8.java:19: error: cannot\
    \ find symbol\n                            ((Spliterator<Long>) i).spliterator(),\
    \ true); \n                                                   ^\n  symbol:   method\
    \ spliterator()\n  location: interface Spliterator<Long>\n/tmp/tmpapq_6zu8.java:22:\
    \ error: incompatible types: cannot infer type-variable(s) T\n               \
    \ .collect(Collectors.summingLong(i -> i));\n                                \
    \               ^\n    (argument mismatch; bad return type in lambda expression\n\
    \      Object cannot be converted to long)\n  where T is a type-variable:\n  \
    \  T extends Object declared in method <T>summingLong(ToLongFunction<? super T>)\n\
    4 errors\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Write\
    \ your code here.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp549q6xpm.java:18)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for(int i = 0; i< lst.size(); i+=2){\n            res+=lst.get(i);\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdaitbvlm.java:21)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        if (lst.isEmpty()) {\n            return 0;\n        }\n     \
    \   for (Long i : lst) {\n            if (i % 2 == 1) {\n                sum +=\
    \ i;\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprq26xjn1.java:26)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        for (int i = 1; i < lst.size(); i += 2) {\n            result\
    \ += lst.get(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy9gzha53.java:22)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int count\
    \ = 0;\n        for(Long i : lst) {\n            if(i%2 ==0) {\n             \
    \   lst.add((long)(i*2));\n                count++;\n            }\n        }\n\
    \        return lst.get(0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.add(tmptyy2fti4.java:15)\n\
    \tat Problem.main(tmptyy2fti4.java:24)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        \n   \
    \ }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnrcvpai4.java:15: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 !=\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa5y7jza9.java:24)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = null;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.elementAt(i)\
    \ % 2 == 0) {\n                result = lst.add(i, result);\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsajz9qlg.java:14: error: incompatible types: <null> cannot be converted\
    \ to long\n        long result = null;\n                      ^\n/tmp/tmpsajz9qlg.java:16:\
    \ error: method elementAt in class ArrayList<E#1> cannot be applied to given types;\n\
    \            if (lst.elementAt(i) % 2 == 0) {\n                   ^\n  required:\
    \ Object[],int\n  found:    int\n  reason: cannot infer type-variable(s) E#2\n\
    \    (actual and formal argument lists differ in length)\n  where E#1,E#2 are\
    \ type-variables:\n    E#1 extends Object declared in class ArrayList\n    E#2\
    \ extends Object declared in method <E#2>elementAt(Object[],int)\n/tmp/tmpsajz9qlg.java:17:\
    \ error: incompatible types: void cannot be converted to long\n              \
    \  result = lst.add(i, result);\n                                ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ IntStream.range(0, lst.size())\n                .filter(i -> lst.get(i) % 2\
    \ == 1)\n                .filter(i -> lst.get(i) % 2 == 0)\n                .mapToLong(i\
    \ -> lst.get(i))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vu8uxxu.java:21)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0;\n        if (lst.get(0) % 2 == 0) return lst.get(0);\n\n        //\
    \ odd elements\n        long evenSum = 0;\n        for (int i = 0; i < lst.size();\
    \ i = i + 2) {\n            evenSum += lst.get(i);\n        }\n        return\
    \ evenSum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi486hzs4.java:25)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        LongStream\
    \ s = lst.stream();\n        LongStream even = s.filter(i -> i%2==0);\n      \
    \  LongStream odd = s.filter(i -> i%2==1);\n        return even.sum() + (odd.sum());\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi01jnr5x.java:14: error: incompatible types: Stream<Long> cannot\
    \ be converted to LongStream\n        LongStream s = lst.stream();\n         \
    \                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0L;\n        for (long val : lst) {\n            if (val % 2 == 0) {\n   \
    \             sum += val;\n            }\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4labvcs.java:23)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.size()\
    \ == 0) {\n            return 0l;\n        }\n        ArrayList<Long> listEven\
    \ = new ArrayList<>();\n        listEven.addAll(Arrays.asList(lst.get(0), lst.get(1))\
    \ // listEven = {4l, 2l}\n                , lst.get(2) // listEven = {4l, 2l,\
    \ 6l, 7l}\n        );\n        ArrayList<Long> listOdd = new ArrayList<>();\n\
    \        listOdd.addAll(Arrays.asList(lst.get(3), lst.get(4)) // listOdd = {7l,\
    \ 6l}\n                , lst.get(5) // listOdd = {7l, 6l, 9l, 5l}\n        );\n\
    \        long sum = 0;\n        for (Long x : listEven) {\n            sum +=\
    \ x;\n        }\n        for (Long x : listOdd) {\n            sum -= x;\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwehqmdye.java:18: error: incompatible types: no instance(s) of\
    \ type variable(s) T exist so that List<T> conforms to int\n        listEven.addAll(Arrays.asList(lst.get(0),\
    \ lst.get(1)) // listEven = {4l, 2l}\n                ^\n  where T is a type-variable:\n\
    \    T extends Object declared in method <T>asList(T...)\n/tmp/tmpwehqmdye.java:22:\
    \ error: incompatible types: no instance(s) of type variable(s) T exist so that\
    \ List<T> conforms to int\n        listOdd.addAll(Arrays.asList(lst.get(3), lst.get(4))\
    \ // listOdd = {7l, 6l}\n               ^\n  where T is a type-variable:\n   \
    \ T extends Object declared in method <T>asList(T...)\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        if (lst.isEmpty()) return 0;\n        if (lst.get(0) % 2 == 0)\
    \ return lst.get(0);\n        long last = lst.get(0);\n        for (Long i : lst)\
    \ {\n            if (i % 2 == 0) {\n                sum += last;\n           \
    \ }\n            last = i;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5bd9r4l5.java:27)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps39ad_3m.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = -1;\n        for(Long i : lst) {\n            if( i.intValue() % 2 != 0 )\n\
    \                result = Math.max(result, i);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk1j0ss99.java:22)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Your\
    \ code here\n        long result = 1L;\n        for (int index = 0; index < lst.size();\
    \ index++) {\n            if (index % 2 != 0)\n                result = result\
    \ + lst.get(index);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpla164ill.java:23)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            int index\
    \ = i;\n            while ((index & 1) == 1) {\n                index >>= 1;\n\
    \            }\n            sum += lst.get(index);\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmmjdyqv.java:25)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5tj0pqo.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // write\
    \ your code here\n        long sum=0;\n        for(int i=0;i<lst.size();i++){\n\
    \            if(i%2==0)\n            {\n                sum+=lst.get(i);\n   \
    \         }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnftq_nbl.java:25)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        int count = 0;\n        for(long x: lst)\
    \ {\n            if(count%2 != 0) {\n                even.add(x);\n          \
    \  }\n            count++;\n        }\n        return even;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp2zmo0bh.java:22: error: incompatible types: ArrayList<Long> cannot\
    \ be converted to long\n        return even;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ ((lst.get(0) == 0)?0:lst.get(0))+(lst.get(1%2==0)?(lst.get(2%2==0)?(lst.get(3%2==0)?0:((lst.get(3%2==0)?lst.get(3):lst.get(2)):lst.get(2)):lst.get(2)):lst.get(1));\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3jvfaoob.java:14: error: ')' expected\n        return ((lst.get(0)\
    \ == 0)?0:lst.get(0))+(lst.get(1%2==0)?(lst.get(2%2==0)?(lst.get(3%2==0)?0:((lst.get(3%2==0)?lst.get(3):lst.get(2)):lst.get(2)):lst.get(2)):lst.get(1));\n\
    \                                                                            \
    \                                                                 ^\n/tmp/tmp3jvfaoob.java:14:\
    \ error: ';' expected\n        return ((lst.get(0) == 0)?0:lst.get(0))+(lst.get(1%2==0)?(lst.get(2%2==0)?(lst.get(3%2==0)?0:((lst.get(3%2==0)?lst.get(3):lst.get(2)):lst.get(2)):lst.get(2)):lst.get(1));\n\
    \                                                                            \
    \                                                                            \
    \             ^\n/tmp/tmp3jvfaoob.java:14: error: ';' expected\n        return\
    \ ((lst.get(0) == 0)?0:lst.get(0))+(lst.get(1%2==0)?(lst.get(2%2==0)?(lst.get(3%2==0)?0:((lst.get(3%2==0)?lst.get(3):lst.get(2)):lst.get(2)):lst.get(2)):lst.get(1));\n\
    \                                                                            \
    \                                                                            \
    \                        ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        List<Long>\
    \ evens = new ArrayList<>();\n        ArrayList<Long> odds = new ArrayList<>();\n\
    \        for(int i = 0; i < lst.size(); i++) {\n            if(lst.size() % 2\
    \ == 1) {\n                evens.add(lst.get(i));\n            } else {\n    \
    \            odds.add(lst.get(i));\n            }\n        }\n        odds.addAll(evens);\n\
    \        long sum = 0;\n        for(Long val : odds) {\n            sum += val;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3azy7zk.java:31)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long evenSum\
    \ = 0;\n        int len = lst.size();\n        for (int i = 0; i < len; i++) {\n\
    \            if (i%2 == 0) {\n                evenSum += lst.get(i);\n       \
    \     }\n        }\n        return evenSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv02zkcxo.java:24)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n       \
    \         sum += i;\n            }\n        }\n        return sum;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17evky_6.java:23)\n"
  stdout: ''
  timestamp: 1660011661
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps39ad_3m.java:23)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long total\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                total += lst.get(i);\n            }\n        }\n  \
    \      return total;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpye9_1aex.java:23)\n"
  stdout: ''
  timestamp: 1660011662
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        \n   \
    \     \n        for(long num : lst){\n            if(num % 2 == 1){\n        \
    \        long even = num % 2;\n                long odd = num % 3;\n         \
    \       long sum = even + odd;\n                lst.set((int) num, sum);\n   \
    \         }\n        }\n        \n        return lst.stream().mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprd99ailk.java:28)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            sum +=\
    \ lst.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjna390ew.java:21)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 1) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprpu6e4_j.java:23)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i< lst.size(); i++) {\n            if(lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqgfcj70.java:23)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        if (lst.get(0) % 2 == 0) {\n \
    \           return lst.get(0);\n        }\n        ArrayList<Long> even = new\
    \ ArrayList<>();\n        ArrayList<Long> odd = new ArrayList<>();\n        odd.add(lst.get(0));\n\
    \        long x = 0;\n        for (int i = 1; i < lst.size(); i++) {\n       \
    \     if (lst.get(i) % 2 == 0) {\n                even.add(lst.get(i));\n    \
    \        }\n            else {\n                odd.add(lst.get(i));\n       \
    \     }\n            if (i % 2 == 0) {\n                x = x + lst.get(i);\n\
    \            }\n        }\n        // System.out.println(even);\n        // System.out.println(odd);\n\
    \        // System.out.println(x);\n        return x;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcy79hlkh.java:41)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long l : lst) {\n            if (l % 2 == 0) {\n        \
    \        sum += l;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnf_h7uth.java:23)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        int evenIndex = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            sum+=lst.get(i);\n            if (lst.get(i)%2==0) {\n      \
    \          evenIndex++;\n            }\n        }\n        for (int i = 0; i <\
    \ lst.size(); i++) {\n            if (evenIndex==2) {\n                sum+=lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqlp46rfz.java:30)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ newList = new ArrayList<>();\n        newList.add((Long) 0l);\n        for (Long\
    \ elem : lst) {\n            if (elem.intValue() % 2 == 0) {\n               \
    \ newList.add(elem);\n            }\n        }\n        return newList.get((int)\
    \ (newList.size() / 2));\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78fv7lbd.java:24)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        long a = lst.get(0);\n        for (Long b: lst.subList(1, lst.size()))\
    \ {\n            if ((b % 2) == 0) {\n                sum += a;\n            }\n\
    \            a = b;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgkr3xvd.java:25)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream()\n            .filter(i -> i%2==1)\n            .map(Long::valueOf)\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb7lmbkqr.java:17: error: cannot find symbol\n            .sum();\n\
    \            ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO:\
    \ implement here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp331a5339.java:18)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.size()\
    \ <= 1)\n            return lst.get(0);\n        Long sum = 0;\n        for (int\
    \ i = 1; i < lst.size(); i++) {\n            if (lst.size() - i >= 2)\n      \
    \          sum = sum + lst.get(i);\n            if (lst.size() - i == 1)\n   \
    \             sum = sum + lst.get(i);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz3u2tyod.java:16: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // write\
    \ your code in Java SE 8.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_m_yhdn3.java:18)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            int pos = lst.size()\
    \ - 1 - i;\n            if(lst.get(pos) % 2 == 0)\n                sum += lst.get(pos);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1aexdb_b.java:23)\n"
  stdout: ''
  timestamp: 1660011663
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\n\
    \            return 0;\n        long sum = 0;\n        for (Long num : lst)\n\
    \            sum += num;\n        if (sum % 2 == 1)\n            throw new RuntimeException();\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqywgq4lg.java:24)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        for (long i : lst) {\n            if ((i & 1l) == 0l) {\n   \
    \             result += i;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiqlyb5q.java:23)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if(lst.isEmpty())\
    \ throw new IllegalArgumentException(\"No Elements in List\");\n        long res\
    \ = 0;\n        for(Long l : lst) res +=  2*l;\n        return res;\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8al67en.java:20)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Long sum\
    \ = 0l;\n        for(int i=0; i<lst.size(); i++) {\n            sum+=lst.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_cvg_40.java:21)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        \n   \
    \     return lst.stream()\n                .filter(i -> i % 2 == 0)\n        \
    \        .map(i -> i * 2)\n                .sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu5d60nfp.java:18: error: cannot find symbol\n                .sum();\n\
    \                ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter((i)->{\n            return (i%2==0); \n        }).mapToLong(i->{\n\
    \            return i;\n        }).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsjdijkv.java:21)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long evenSum\
    \ = 0;\n        int size = lst.size();\n        for (int i = 0; i < size; i++)\
    \ {\n            if (i % 2 == 0) {\n                evenSum += lst.get(i);\n \
    \           }\n        }\n        return evenSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpatl0j2r6.java:24)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ newList = new ArrayList<>(lst.size());\n        long evenSum = 0;\n        for\
    \ (Long l : lst) {\n            if (l % 2 == 0) {\n                evenSum = evenSum\
    \ + l;\n            }\n        }\n        return evenSum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvw8yg15n.java:24)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Complete\
    \ the implementation here\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpygc2twbm.java:16: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ans\
    \ = 0L;\n        IntPair pair;\n        Iterator<Long> itr = lst.iterator();\n\
    \        while (itr.hasNext()) {\n            pair = itr.next();\n           \
    \ if (pair.getValue() % 2 == 0) {\n                ans += pair.getValue();\n \
    \               itr.remove();\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmejn9vjv.java:15: error: cannot find symbol\n        IntPair pair;\n\
    \        ^\n  symbol:   class IntPair\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for(long l : lst) {\n            sum+=l;\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74lzw48r.java:21)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long even\
    \ = 0l;\n        long odd = 0l;\n        for(long l : lst) {\n            if((l\
    \ & 1) == 1) {\n                even+=l;\n            } else {\n             \
    \   odd+=l;\n            }\n        }\n        return (even+odd);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygz4bnfv.java:26)\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        LongStream\
    \ stream = lst.stream();\n        Long[] evens = stream.filter(i -> (i%2) == 0).mapToLong(i\
    \ -> i).toArray();\n        Long[] odds = stream.filter(i -> (i%2) == 1).mapToLong(i\
    \ -> i).toArray();\n        Long[] result = new Long[evens.length + odds.length];\n\
    \        System.arraycopy(evens, 0, result, 0, evens.length);\n        System.arraycopy(odds,\
    \ 0, result, evens.length, odds.length);\n        return result[0];\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfp2lgbwq.java:14: error: incompatible types: Stream<Long> cannot\
    \ be converted to LongStream\n        LongStream stream = lst.stream();\n    \
    \                                  ^\n/tmp/tmpfp2lgbwq.java:15: error: cannot\
    \ find symbol\n        Long[] evens = stream.filter(i -> (i%2) == 0).mapToLong(i\
    \ -> i).toArray();\n                                                     ^\n \
    \ symbol:   method mapToLong((i)->i)\n  location: interface LongStream\n/tmp/tmpfp2lgbwq.java:16:\
    \ error: cannot find symbol\n        Long[] odds = stream.filter(i -> (i%2) ==\
    \ 1).mapToLong(i -> i).toArray();\n                                          \
    \          ^\n  symbol:   method mapToLong((i)->i)\n  location: interface LongStream\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream()\n            .filter((i) -> i%2 == 0)\n            .sum();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpov43502q.java:16: error: cannot find symbol\n            .sum();\n\
    \            ^\n  symbol:   method sum()\n  location: interface Stream<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> (i%2)==0).collect(Collectors.toList()).get(0);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl6xkqhzn.java:17)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        \n        for(int i = 1; i < lst.size(); i++) {\n            if\
    \ (i % 2 != 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmo7kv6_.java:25)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(long num : lst) {\n            if(num%2 == 0) sum+=num;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjrihuzvn.java:21)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for(long i = 0; i < lst.size(); i++) {\n \
    \           if(i % 2 == 0) {\n                res.add(lst.get(i));\n         \
    \   }\n        }\n        return lst.get(0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphedo2pq5.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n                res.add(lst.get(i));\n                   \
    \             ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011664
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0L;\n        for (int i = 0; i< lst.size(); i = i + 2) {\n            sum\
    \ = sum + lst.get(i);\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qde2w29.java:21)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        int size = lst.size();\n        for (int i = 0; i < size; i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpei9a4amo.java:24)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19fsbi74.java:23)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        if (lst.size() > 0) {\n            int evenIndex = lst.size()\
    \ / 2;\n            int oddIndex = lst.size() - evenIndex;\n            int index\
    \ = evenIndex;\n            long val = lst.get(index);\n            while ((index\
    \ = oddIndex - index) >= 0) {\n                sum += val;\n                val\
    \ = lst.get(index--);\n            }\n            sum += val;\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.add(tmpu5l4voou.java:22)\n\tat Problem.main(tmpu5l4voou.java:29)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0L;\n        int oddIndex = lst.indexOf(1L);\n        int evenIndex =\
    \ lst.indexOf(2L);\n        ArrayList<Long> evens = lst.subList(evenIndex + 1,\
    \ lst.size());\n        evens.add(evens.get(0));\n        ArrayList<Long> odds\
    \ = lst.subList(0, oddIndex + 1);\n        odds.add(odds.get(0));\n        return\
    \ evens.stream().mapToLong(Long::longValue).sum() % 2L;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm75xhylu.java:17: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        ArrayList<Long> evens = lst.subList(evenIndex\
    \ + 1, lst.size());\n                                           ^\n/tmp/tmpm75xhylu.java:19:\
    \ error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n\
    \        ArrayList<Long> odds = lst.subList(0, oddIndex + 1);\n              \
    \                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i=0; i < lst.size(); i++) {\n            if(i%2 != 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66_d021e.java:24)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long total\
    \ = 0;\n        for (long element : lst) {\n            if (element % 2 == 0)\
    \ {\n                total += element;\n            }\n        }\n        return\
    \ total;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5qm1k9o9.java:23)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(lst);\n        for (int\
    \ i = 1; i < lst.size(); i++) {\n            if (lst.get(i - 1) != lst.get(i))\
    \ {\n                result.add(lst.get(i));\n            }\n        }\n     \
    \   return result.get(0);\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppv4wbo5u.java:15: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(lst);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        List<Integer> oddIndices = lst.stream().filter(n\
    \ -> n % 2 == 1).boxed().collect(Collectors.toList());\n        for (Integer i\
    \ : oddIndices) {\n            sum += lst.get(i);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4zw87x6x.java:16: error: cannot find symbol\n        List<Integer>\
    \ oddIndices = lst.stream().filter(n -> n % 2 == 1).boxed().collect(Collectors.toList());\n\
    \                                                                       ^\n  symbol:\
    \   method boxed()\n  location: interface Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO:\
    \ Write your code here.\n        if(lst.size()<2) return 0l;\n        int evenIndex=0;\n\
    \        for(int i=1;i<lst.size();i++) {\n            if(lst.get(i)%2==0) evenIndex++;\n\
    \        }\n        long sum=0l;\n        for(int i=0;i<evenIndex;i++){\n    \
    \        sum+=lst.get(i);\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnt5m58b.java:27)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i=0; i<lst.size(); i++) {\n            if (i % 2 != 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpve0csaro.java:24)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ even = new ArrayList<>(lst.size());\n        even.addAll(lst.subList(1,lst.size()));\n\
    \        even.removeAll(Collections.singleton(Long.valueOf(2)));\n        long\
    \ sum = 0;\n        for(long e : even) {\n            sum += e;\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk7dzqdme.java:25)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i+=2) {\n            sum += lst.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzrggl14.java:21)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO\
    \ Auto-generated method stub\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5cxzfh7c.java:15: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.size()\
    \ < 2) return 0;\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            sum += lst.get(i);\n        }\n        long evenSum = sum;\n\
    \        for (int i = 2; i < lst.size(); i++) {\n            sum += lst.get(i);\n\
    \        }\n        return evenSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptxkd7yk0.java:26)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        int size = lst.size();\n        for(int i = 0; i < size; i++)\
    \ {\n            if(i % 2 == 0) {\n                sum += lst.get(i);\n      \
    \      }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qq006gr.java:24)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        List<Long>\
    \ evenElements = lst.stream().filter(i -> i % 2 == 0).collect(Collectors.toList());\n\
    \        List<Long> oddElements = lst.stream().filter(i -> i % 2 != 0).collect(Collectors.toList());\n\
    \        List<Long> result = new ArrayList<>();\n        result.addAll(evenElements);\n\
    \        result.addAll(oddElements);\n        return result.stream().sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp28dx1zth.java:19: error: cannot find symbol\n        return result.stream().sum();\n\
    \                              ^\n  symbol:   method sum()\n  location: interface\
    \ Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int len\
    \ = lst.size();\n        long evenSum = 0;\n        for (int i = 1; i <= len /\
    \ 2; i++) {\n            if (i % 2 == 0) {\n                evenSum += lst.get(i);\n\
    \            }\n        }\n        return evenSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpom8m205i.java:24)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long total\
    \ = 0;\n        List<Long> odds = lst.stream().filter(x -> x % 2 != 0).collect(Collectors.toList());\n\
    \        odds.addAll(lst.stream().filter(x -> x % 2 == 0).collect(Collectors.toList()));\n\
    \        odds.forEach(x -> total += x);\n        return total;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ovz8u7m.java:17: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        odds.forEach(x -> total\
    \ += x);\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        lst.removeIf((e) -> e % 2 == 0); // Remove even elements\n  \
    \      for (int i=0; i<lst.size(); i++) {\n            if (i%2==1) {\n       \
    \         sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf77ck98z.java:24)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ evens = new ArrayList<Long>();\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                evens.add(lst.get(i));\n \
    \           }\n        }\n        long ans = evens.stream().reduce(0, Long::sum);\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9is5x_r5.java:20: error: no suitable method found for reduce(int,Long::sum)\n\
    \        long ans = evens.stream().reduce(0, Long::sum);\n                   \
    \              ^\n    method Stream.reduce(Long,BinaryOperator<Long>) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Long)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Long,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        // for (int i = 0; i < lst.size(); i++) {\n        //     if (lst.get(i)\
    \ % 2 == 1) {\n        //         sum += lst.get(i);\n        //     }\n     \
    \   // }\n        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 == 1) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_q9ix66.java:28)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // your\
    \ code here\n        ArrayList<Integer> a = new ArrayList<Integer>();\n      \
    \  for(Integer i : lst){\n            if(i%2 == 0){\n                a.add(i);\n\
    \            }\n        }\n        if(a.size()%2==0){\n            return a.stream().reduce(Math::addExact).orElse(0l);\n\
    \        }\n        else{\n            return a.stream().reduce((c1,c2) -> c1+c2).orElse(0l);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu9srlipn.java:16: error: incompatible types: Long cannot be converted\
    \ to Integer\n        for(Integer i : lst){\n                        ^\n/tmp/tmpu9srlipn.java:22:\
    \ error: incompatible types: long cannot be converted to Integer\n           \
    \ return a.stream().reduce(Math::addExact).orElse(0l);\n                     \
    \                                       ^\n/tmp/tmpu9srlipn.java:25: error: incompatible\
    \ types: long cannot be converted to Integer\n            return a.stream().reduce((c1,c2)\
    \ -> c1+c2).orElse(0l);\n                                                    \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if((int)lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw835rw_v.java:16: error: incompatible types: Long cannot be converted\
    \ to int\n            if((int)lst.get(i) % 2 == 0) {\n                       \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long evenSum = 0l;\n        for(Long i : lst) {\n      \
    \      if(i%2==0) evenSum+=i;\n        }\n        return evenSum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx7p_6_n3.java:22)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Complete\
    \ this method\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++)\
    \ {\n            if(i % 2 == 0) {\n                sum += lst.get(i);\n      \
    \      }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2x97nwfg.java:24)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.size()\
    \ == 0) return 0;\n        ArrayList<Long> copy = new ArrayList<>((lst));\n  \
    \      for (long i = copy.size(); i-- > 0;) {\n            if (copy.get(i) % 2\
    \ != 0) copy.remove(i);\n        }\n        return copy.get(0);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw0q9j4xl.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (copy.get(i) % 2 != 0) copy.remove(i);\n  \
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        boolean\
    \ even = true;\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i += 1) {\n            long value = lst.get(i);\n            if (even && value\
    \ % 2 == 0) {\n                sum += value;\n            }\n            even\
    \ = !even;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r8l6457.java:26)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for(int i : lst) {\n            if(i%2 != 0) {\n             \
    \   result += i;\n            }\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpitdx5nqf.java:15: error: incompatible types: Long cannot be converted\
    \ to int\n        for(int i : lst) {\n                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long evenSum\
    \ = 0;\n        int count = 0;\n        for(int i=0; i < lst.size(); i++) {\n\
    \            if(lst.get(i) % 2 == 0) {\n                evenSum += lst.get(i);\n\
    \                count++;\n            }\n        }\n        return evenSum /\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1q3237g4.java:25)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19fsbi74.java:23)\n"
  stdout: ''
  timestamp: 1660011665
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for(long l : lst) {\n            if(l%2==0)\n                result+=l;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponjk8b37.java:22)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i=1; i<lst.size(); i++)\n            sum += lst.get(i)\
    \ %2 == 0? lst.get(i): 0l ;\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpld_x8z63.java:21)\n"
  stdout: ''
  timestamp: 1660011666
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for(long i : lst) {\n            result += (i % 2 == 0) ? i :\
    \ result - i;\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq2t0kbxt.java:21)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (long l : lst) {\n            if (l % 2 == 0) {\n       \
    \         sum += l;\n            }\n        }\n        return sum;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2orz9tov.java:23)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\n\
    \            return 0l;\n        Long[] even = new Long[(int)lst.size()];\n  \
    \      even[0] = lst.get(0l);\n        even[1] = lst.get(1l);\n        even[2]\
    \ = lst.get(2l);\n        even[3] = lst.get(3l);\n        int count = 0;\n   \
    \     for (int i = 0; i < even.length; i++) {\n            if (even[i] % 2 ==\
    \ 0l)\n                count++;\n        }\n        long[] res = new long[count];\n\
    \        int j = 0;\n        for (int i = 0; i < even.length; i++) {\n       \
    \     if (even[i] % 2 == 0l) {\n                res[j++] = even[i];\n        \
    \    }\n        }\n        return Arrays.stream(res).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9gc7_dl1.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        even[0] = lst.get(0l);\n                         \
    \ ^\n/tmp/tmp9gc7_dl1.java:18: error: incompatible types: possible lossy conversion\
    \ from long to int\n        even[1] = lst.get(1l);\n                         \
    \ ^\n/tmp/tmp9gc7_dl1.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n        even[2] = lst.get(2l);\n                         \
    \ ^\n/tmp/tmp9gc7_dl1.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        even[3] = lst.get(3l);\n                         \
    \ ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (Long x : lst) {\n            if ((x % 2) == 0) {\n      \
    \          sum += x;\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqy4js__9.java:23)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8y9u8qw.java:18)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        if (lst.isEmpty())\n            return 0;\n        long current\
    \ = lst.get(0);\n        for (int i = 1; i < lst.size(); i++) {\n            long\
    \ a = lst.get(i);\n            sum += current;\n            current = a;\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfvecvqxe.java:26)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO\
    \ Auto-generated method stub\n        long sum=0;\n        for(long i=0;i<lst.size();i++){\n\
    \            if(i&1==1){\n                sum+=lst.get(i);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjnun6dl7.java:17: error: bad operand types for binary operator\
    \ '&'\n            if(i&1==1){\n                ^\n  first type:  long\n  second\
    \ type: boolean\n/tmp/tmpjnun6dl7.java:18: error: incompatible types: possible\
    \ lossy conversion from long to int\n                sum+=lst.get(i);\n      \
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (long n : lst)\n            if (n % 2 == 0)\n            \
    \    res += n;\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp891s7up5.java:21)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (Long i : lst) {\n            if ((i & 1) == 0) {\n      \
    \          sum += i;\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0zildng.java:23)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if (lst.isEmpty())\n\
    \            return null;\n        long sum = 0;\n        final int evenIndex\
    \ = lst.get(0)%2 == 0; // return true if even, false if odd\n        for (int\
    \ i : lst) {\n            if (evenIndex && i%2 == 0) {\n                sum +=\
    \ i;\n            }\n            else if (!evenIndex && i%2 == 1) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf3kgk4yd.java:15: error: incompatible types: <null> cannot be converted\
    \ to long\n            return null;\n                   ^\n/tmp/tmpf3kgk4yd.java:17:\
    \ error: incompatible types: boolean cannot be converted to int\n        final\
    \ int evenIndex = lst.get(0)%2 == 0; // return true if even, false if odd\n  \
    \                                         ^\n/tmp/tmpf3kgk4yd.java:18: error:\
    \ incompatible types: Long cannot be converted to int\n        for (int i : lst)\
    \ {\n                     ^\n/tmp/tmpf3kgk4yd.java:19: error: bad operand types\
    \ for binary operator '&&'\n            if (evenIndex && i%2 == 0) {\n       \
    \                   ^\n  first type:  int\n  second type: boolean\n/tmp/tmpf3kgk4yd.java:22:\
    \ error: bad operand type int for unary operator '!'\n            else if (!evenIndex\
    \ && i%2 == 1) {\n                     ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for (int i = 0; i < lst.size(); i += 2) {\n\
    \            even.add(lst.get(i));\n        }\n        Long result = Long.parseLong(String.valueOf(even));\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"[4]\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\
    \tat Problem.add(tmpgc2rnwd0.java:18)\n\tat Problem.main(tmpgc2rnwd0.java:22)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ IntStream.range(0, lst.size()).filter(i -> i % 2 == 0).collect(Collectors.sumLong(i\
    \ -> lst.get(i)));\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdg81bgg4.java:14: error: cannot find symbol\n        return IntStream.range(0,\
    \ lst.size()).filter(i -> i % 2 == 0).collect(Collectors.sumLong(i -> lst.get(i)));\n\
    \                                                                            \
    \            ^\n  symbol:   method sumLong((i)->lst.get(i))\n  location: class\
    \ Collectors\n1 error\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = lst.size() - 1; i >= 0; i--) if (lst.get (i) %2 ==\
    \ 0) sum += lst.get (i);\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5uekgyj.java:19)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long x : lst) {\n            if (x % 2 != 0) {\n        \
    \        sum += x;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0h5wvqqe.java:23)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5tj0pqo.java:24)\n"
  stdout: ''
  timestamp: 1660011656
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long even\
    \ = 0;\n        long odd = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (i % 2 == 0) {\n                even += lst.get(i);\n        \
    \    } else {\n                odd += lst.get(i);\n            }\n        }\n\
    \        return even;\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgixs2sc.java:26)\n"
  stdout: ''
  timestamp: 1660011667
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        if (lst.size() > 0) {\n            if (lst.get(0) % 2 == 1) {\n\
    \                sum += lst.get(0);\n            }\n            for (int i = 1;\
    \ i < lst.size(); i++) {\n                if (lst.get(i) % 2 != 1) {\n       \
    \             sum += lst.get(i);\n                }\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxzc8c4l.java:29)\n"
  stdout: ''
  timestamp: 1660011667

language: java
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ delta = Math.abs(a - c);\n        if (delta > b) {\n            delta -= b;\n\
    \            return (float) Math.abs((b + delta) / 2);\n        }\n        if\
    \ (delta > c) {\n            delta -= c;\n            return (float) Math.abs((c\
    \ + delta) / 2);\n        }\n        if (delta > a + b) {\n            delta -=\
    \ a;\n            return (float) Math.abs((a + delta) / 2);\n        }\n     \
    \   if (delta > b + c) {\n            delta -= b;\n            return (float)\
    \ Math.abs((b + delta) / 2);\n        }\n        if (delta > a + c) {\n      \
    \      delta -= a;\n            return (float) Math.abs((c + delta) / 2);\n  \
    \      }\n        return -1f;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0d76sqrm.java:44)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ d = (a+b+c)/2;\n        if (d==0) {\n            return -1;\n        }\n   \
    \     long s = b*b - 4*a*c;\n        float area = Math.sqrt(s/2);\n        if\
    \ (s > 0) {\n            return Math.round(area*100.0)/100.0f;\n        } else\
    \ {\n            return -1;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4wk0zmu9.java:25: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt(s/2);\n               \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = a + b + c;\n        if (s > 0)\n            return (long) (Math.pow(s /\
    \ (2 * a + b + c), 0.5));\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmt9cw0k8.java:26)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // validate\
    \ the parameters\n        if ((a + b + c) < 0)\n            return (float) -1;\n\
    \        // calculate the area\n        return (float) Math.sqrt((a + b) * (b\
    \ + c) * (c + a));\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63qyf0fl.java:27)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum % 2 == 0)\n            return (float) sum\
    \ / 2;\n        else\n            return (float) sum / 2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xyh2v79.java:28)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ side1 = (float) a;\n        float side2 = (float) b;\n        float side3 =\
    \ (float) c;\n\n        if (side1 + side2 >= side3) {\n            return side1\
    \ + side2;\n        } else {\n            return side1 + side2 + side3;\n    \
    \    }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4mzg8dr.java:31)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = (a + b + c) / 2;\n        long l = (a + b) - (s + c);\n        long h =\
    \ Math.sqrt((s * (s - a) * (s - b) * (s - c)) * 4 / 9);\n        if (l < 0 ||\
    \ h < 0 || s <= 0) {\n            return -1;\n        }\n        if (s > 0) {\n\
    \            float area = ((float) s) * 0.5f;\n            if (area < 0) {\n \
    \               area = -area;\n            }\n            return Math.round(area\
    \ / 100f);\n        } else {\n            return -1;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd6syvzwa.java:22: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long h = Math.sqrt((s * (s - a) * (s - b) * (s\
    \ - c)) * 4 / 9);\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ x = (a * a + b * b - c * c) / (2.0f * Math.sqrt(4.0f * b * b - 4.0f * a * a));\n\
    \        System.out.println(x);\n        if (x <= 0)\n            return -1.0f;\n\
    \        else\n            return Math.round(x * 100) / 100.0f;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpamogoa1a.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float x = (a * a + b * b - c * c) / (2.0f * Math.sqrt(4.0f\
    \ * b * b - 4.0f * a * a));\n                                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        final\
    \ float area = (a * b <= c) ? b * b - 4 * c * a\n            : b * b + 4 * c *\
    \ c;\n        if (area < 0) return -1.0f;\n        double rounded = Math.round(Math.round(area\
    \ * 1000d) / 1000d);\n        return rounded == area ? rounded\n            :\
    \ rounded == area - 1 ? rounded - 1\n            : rounded;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyeuvpe_u.java:24: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return rounded == area ? rounded\n           \
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = (a * a + b * b) - (c * c);\n        // If area is negative, it cannot\
    \ be valid triangle\n        if (area < 0.0f) {\n            area = -1.0f;\n \
    \       }\n        // Round to 2 decimal places\n        area = Math.round(area\
    \ * 100f) / 100f;\n        return area;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8l_2ihhw.java:30)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // return\
    \ -1 if sum of any two sides is greater than 3rd side\n        return ((a + b\
    \ > c) ? -1 : (a + b > c ? b : c));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60kzbyxx.java:24)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        boolean validTri = false;\n        // Sum all sides of the triangle,\
    \ making sure to round the answer \n        // to 2 decimal places.\n        float\
    \ sum = (a + b + c);\n        if (sum <= ((float)((long)Math.pow(10, 2))*(float)Math.PI))\
    \ {\n            validTri = true;\n        } else {\n            validTri = false;\n\
    \        }\n        // If three sides are valid triangles, calculate the area\
    \ of the triangle \n        // by using the Heron's formula. \n        if (validTri)\
    \ {\n            area = 0.5f * Math.sqrt((float)((a+b)*(b-a)*(c-a)));\n      \
    \  } else {\n            area = -1;\n        }\n        // Return the area rounded\
    \ to 2 decimal places.\n        return Math.round(area / 100f * 100f) / 100f;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5dhxe3jf.java:33: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = 0.5f * Math.sqrt((float)((a+b)*(b-a)*(c-a)));\n\
    \                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ side1 = (float) Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2)));\n        float\
    \ side2 = (float) Math.sqrt((Math.pow(c, 2) + Math.pow(a, 2)));\n        float\
    \ side3 = (float) Math.sqrt((Math.pow(c, 2) + Math.pow(b, 2)));\n        if (side1\
    \ > side2 && side1 > side3) {\n            float sum = side1 + side2 + side3;\n\
    \            float area = (float) Math.round(((float) (a * b)) / sum * 100) /\
    \ 100.0f;\n            return area;\n        } else {\n            return -1f;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlt1a180.java:32)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ ab = a + b;\n        long ac = a + c;\n        long bc = b + c;\n        if\
    \ ((ab > ac) && (bc > ab)) {\n            return (a + b + c) / 2;\n        }\n\
    \        if (ab > bc) {\n            return -1;\n        }\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdz6qn4q9.java:32)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ d = a + b + c;\n        if (d < a) d = a;\n        if (d < b) d = b;\n     \
    \   if (d < c) d = c;\n        if (d > a + b) d = a + b;\n        if (d > a +\
    \ c) d = a + c;\n        if (d > b + c) d = b + c;\n        if (d == a + b + c)\
    \ return -1d;\n        float s = (a + b) * (a + c) + (b + c) * (a + b + c) - (a\
    \ + c) * (b + c);\n        return Math.sqrt(s / (2 * d));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1jrzeeu6.java:27: error: incompatible types: possible lossy conversion\
    \ from double to float\n        if (d == a + b + c) return -1d;\n            \
    \                       ^\n/tmp/tmp1jrzeeu6.java:29: error: incompatible types:\
    \ possible lossy conversion from double to float\n        return Math.sqrt(s /\
    \ (2 * d));\n                        ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ ( a + b + c ) / 2.0f;\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4emgsdwc.java:24)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ (a+b>c) ? 0.0 : (a+c>b) ? 0.0 : (a+b>c) ? 0.0 : ((a+c>b) ? 0.0 : ((b+c>a) ?\
    \ 0.0 : -1.0));\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzqst2i1.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (a+b>c) ? 0.0 : (a+c>b) ? 0.0 : (a+b>c)\
    \ ? 0.0 : ((a+c>b) ? 0.0 : ((b+c>a) ? 0.0 : -1.0));\n                       ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) || (b + c > a) || (c + a > b)) {\n     \
    \       System.out.println(\"Invalid triangle \" + a + \" \" + b + \" \" + c);\n\
    \        } else {\n            area = 0.5f * Math.sqrt((a + b) * (a + c) * (b\
    \ + c));\n        }\n        return area;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_ovjf72.java:24: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = 0.5f * Math.sqrt((a + b) * (a + c)\
    \ * (b + c));\n                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if(a > b + c) { \n            area = b + c; \n        } else\
    \ if (b > a + c) { \n            area = a + c; \n        } else { \n         \
    \   area = a + b; \n        }\n        return area; \n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp40s7ihx.java:31)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ a1 = (a + b) / 2;\n        long b1 = (b + c) / 2;\n        long c1 = (c + a)\
    \ / 2;\n        if (a1 + b1 + c1 == a && b1 + c1 == b && c1 + a1 == c) {\n   \
    \         return (float)Math.sqrt(a1 * b1 * c1);\n        }\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsu_mhvhf.java:29)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ d1 = Math.max((long)Math.sqrt(a * b), b);\n        long d2 = Math.min((long)Math.sqrt(a\
    \ * b), c);\n        long d3 = Math.min((long)Math.sqrt(a * c), b);\n        long\
    \ d4 = Math.min((long)Math.sqrt(a * c), c);\n        long d5 = Math.min((long)Math.sqrt(b\
    \ * c), b);\n        long d6 = Math.min((long)Math.sqrt(b * c), c);\n        long\
    \ d7 = Math.min((long)Math.sqrt(c * c), c);\n        if (Math.max(d1, d2, d3,\
    \ d4, d5, d6, d7) == (long)Math.sqrt(a * b * c)) {\n            return d1 * d2\
    \ * d4;\n        }\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt_or6itl.java:27: error: no suitable method found for max(long,long,long,long,long,long,long)\n\
    \        if (Math.max(d1, d2, d3, d4, d5, d6, d7) == (long)Math.sqrt(a * b * c))\
    \ {\n                ^\n    method Math.max(int,int) is not applicable\n     \
    \ (actual and formal argument lists differ in length)\n    method Math.max(long,long)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(float,float) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n    method Math.max(double,double) is not\
    \ applicable\n      (actual and formal argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        boolean\
    \ side1, side2, side3, valid;\n\n        // Check if all sides are valid\n   \
    \     if ((a + b < c) || (a + c < b) || (b + c < a)) {\n            return -1;\n\
    \        } else {\n            // Calculate all the sides\n            side1 =\
    \ (a + b > c);\n            side2 = (b + c > a);\n            side3 = (a + c >\
    \ b);\n        }\n\n        // Calculate the sum of all the sides\n        float\
    \ sideSum = (side1 + side2 + side3) * 0.5f;\n\n        // If the sum of all the\
    \ sides is greater than the third side then the\n        // triangle is valid\n\
    \        if (sideSum > c) {\n            // Calculate the area of the triangle\n\
    \            float area = side * side * 0.5f;\n\n            // Round the area\
    \ to 2 decimal places\n            area = Math.round(area * 100.0f / 100.0f) /\
    \ 100.0f;\n\n            // Return the area rounded to 2 decimal places\n    \
    \        return area;\n        }\n\n        // The sum of the sides exceeds the\
    \ third side but doesn't satisfy the \n        // condition for being a valid\
    \ triangle. Return -1\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpabdqnqaa.java:33: error: bad operand types for binary operator\
    \ '+'\n        float sideSum = (side1 + side2 + side3) * 0.5f;\n             \
    \                  ^\n  first type:  boolean\n  second type: boolean\n/tmp/tmpabdqnqaa.java:39:\
    \ error: cannot find symbol\n            float area = side * side * 0.5f;\n  \
    \                       ^\n  symbol:   variable side\n  location: class Problem\n\
    /tmp/tmpabdqnqaa.java:39: error: cannot find symbol\n            float area =\
    \ side * side * 0.5f;\n                                ^\n  symbol:   variable\
    \ side\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011850
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ >= b + c) {\n            return (float)a;\n        }\n        if (b >= a + c)\
    \ {\n            return (float)b;\n        }\n        if ((a + b + c) >= ((a -\
    \ b) + c)) {\n            return (float)(a + b + c);\n        }\n        return\
    \ (float)-1;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa3fxt2nf.java:32)\n"
  stdout: ''
  timestamp: 1660011851
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c) {\n            return (float)-1;\n        } else {\n            return\
    \ (float)(a * c - b * b);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4f7pxlm.java:27)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        // validTriangle is the boolean value that will indicate\
    \ whether the three sides are valid or not\n        boolean validTriangle = isValidTriangle(a,\
    \ b, c);\n        if (validTriangle) {\n            // To calculate area, we have\
    \ to find out the area of hypotenuse\n            float hypotenuse = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n            // If the hypotenuse is greater than the\
    \ length of any side of triangle, we can't calculate \n            // the area.\
    \ Thus, return -1\n            if (hypotenuse > c)\n                return (float)\
    \ -1l;\n            // If the hypotenuse is less than or equal to length of any\
    \ side of triangle, then \n            // find out the area by calculating the\
    \ area of a triangle\n            area = Math.sqrt(Math.pow(c, 2) - Math.pow(hypotenuse,\
    \ 2));\n            // Round the area to 2 decimal points\n            area =\
    \ Math.round(area * 100) / 100;\n        } else {\n            // Thus, if we\
    \ can't calculate the area, return -1.\n            return (float) -1l;\n    \
    \    }\n        // Return the area of the triangle\n        return area;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhh3aude.java:22: error: cannot find symbol\n        boolean validTriangle\
    \ = isValidTriangle(a, b, c);\n                                ^\n  symbol:  \
    \ method isValidTriangle(long,long,long)\n  location: class Problem\n/tmp/tmpkhh3aude.java:25:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \            float hypotenuse = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\
    \                                        ^\n/tmp/tmpkhh3aude.java:32: error: incompatible\
    \ types: possible lossy conversion from double to float\n            area = Math.sqrt(Math.pow(c,\
    \ 2) - Math.pow(hypotenuse, 2));\n                            ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area, validArea;\n        if ((a + b) > c || (b + c) > a || (c + a) > b){\n\
    \            return -1F;\n        }\n        else{\n            area = (float)(a\
    \ * b * c);\n            validArea = FloatMath.sqrt(area);\n            validArea\
    \ = (float)Math.round(validArea * 100) / 100.0F;\n            System.out.println(area\
    \ + \" \" + validArea);\n            return validArea;\n        }\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk05qjnrd.java:26: error: cannot find symbol\n            validArea\
    \ = FloatMath.sqrt(area);\n                        ^\n  symbol:   variable FloatMath\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ side1 = (float) (a+b+c);\n        float side2 = (float) (a-b+c);\n        float\
    \ side3 = (float) (a-c+b);\n        if (side1 > side2 && side2 > side3) {\n  \
    \          return (float) (side1 + side2 + side3);\n        } else {\n       \
    \     return -1;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbl2vfyh.java:30)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Write\
    \ your code here\n        if((a != 0) && (b != 0) && (c != 0)) {\n           \
    \ float s = (b+c)/2;\n            float h = (b-c)/2;\n            if (Math.abs(h)\
    \ < Math.abs(s)) return (float) (s/Math.pow(h, 2));\n            return (float)\
    \ -1l;\n        }\n        return -1l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt6q80h8.java:30)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a+b\
    \ > c) {\n            return (float) (a*(b*(c-a)/(a+b+c)));\n        } else {\n\
    \            return (float) -1;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ty8f2lx.java:27)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ s = (a + b + c) / 2;\n        long sides = Math.sqrt(Math.pow(s, 2) + Math.pow(2\
    \ * s, 2));\n        if (sides < c) {\n            return -1;\n        }\n   \
    \     return Math.round(s * 100) / 100;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbhqgqaq8.java:21: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long sides = Math.sqrt(Math.pow(s, 2) + Math.pow(2\
    \ * s, 2));\n                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ num1 = (float)a/a;\n        float num2 = (float)b/b;\n        float num3 = (float)c/c;\n\
    \        float num4 = Math.sqrt((num1*num1) + Math.pow((num2*num2), 2) + Math.pow((num3*num3),\
    \ 2));\n        if (num4 > num1 && num4 > num2 && num4 > num3) {\n           \
    \ return num4;\n        } else {\n            return -1f;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq96ocauc.java:23: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float num4 = Math.sqrt((num1*num1) + Math.pow((num2*num2),\
    \ 2) + Math.pow((num3*num3), 2));\n                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = (a + b + c) / 2;\n\n        return Math.sqrt(\n                Math.pow((a\
    \ + b), 2) +\n                Math.pow((a + c), 2) +\n                Math.pow((b\
    \ + c), 2)\n        );\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp69be0g90.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(\n                        ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011852
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n\n        if (a + b > c) {\n            area = (a * b) / c;\n       \
    \     area = Math.round(area * 100.0) / 100.0;\n        } else {\n           \
    \ area = -1;\n        }\n\n        return area;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_k0_iud4.java:24: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = Math.round(area * 100.0) / 100.0;\n\
    \                                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Validate\
    \ user input\n        if (a >= b && a >= c) {\n            if (b >= c) {\n   \
    \             return 0;\n            }\n            else if (a >= b) {\n     \
    \           return (a+b+c)/2;\n            }\n            else {\n           \
    \     return (a+c+b)/2;\n            }\n        }\n        else if (b >= c &&\
    \ b >= a) {\n            if (a >= c) {\n                return (b+c+a)/2;\n  \
    \          }\n            else if (b >= a) {\n                return (b+a+c)/2;\n\
    \            }\n            else {\n                return (b+c+a)/2;\n      \
    \      }\n        }\n        else if (c >= a && c >= b) {\n            if (b >=\
    \ a) {\n                return (c+a+b)/2;\n            }\n            else if\
    \ (c >= b) {\n                return (c+b+a)/2;\n            }\n            else\
    \ {\n                return (c+a+b)/2;\n            }\n        }\n        else\
    \ {\n            return -1f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01_1_g4t.java:60)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a+b+c>c)\
    \ return -1l; \n        if(b+c>c) return -1l; \n        if(a>b+c) return -1l;\
    \ \n        return a*(b+c)/2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqycthai.java:26)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b < c) && (a + c < b)) {\n            float s = (a + b + c) / 2.0f;\n    \
    \        return (Math.sqrt(s * (s - a) * (s - b) * (s - c)));\n        } else\
    \ {\n            return -1.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwugylfv1.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c)));\n                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ perimeter = (a + b + c) / 2;\n        if (Math.max(perimeter, a, b, c) == perimeter)\
    \ {\n            float area = Math.round(perimeter * Math.sqrt(3) / 2);\n    \
    \        return Math.round(area * 100) / 100;\n        } else {\n            return\
    \ -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4u1psoy2.java:21: error: no suitable method found for max(double,long,long,long)\n\
    \        if (Math.max(perimeter, a, b, c) == perimeter) {\n                ^\n\
    \    method Math.max(int,int) is not applicable\n      (actual and formal argument\
    \ lists differ in length)\n    method Math.max(long,long) is not applicable\n\
    \      (actual and formal argument lists differ in length)\n    method Math.max(float,float)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Math.max(double,double) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ h;\n        if (a>b) {\n            if (b>c) {\n                h = b - c;\n\
    \            } else {\n                h = c - b;\n            }\n        } else\
    \ {\n            if (b>c) {\n                h = a - c;\n            } else {\n\
    \                h = a - b;\n            }\n        }\n        float d = (a <\
    \ b) ? 2*(b-a)*(h/b): ((a < c) ? 2*(c-b)*(h/c): 0);\n        return Float.valueOf((float)Math.sqrt(d));\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtpy9w73.java:38)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if (a <= b + c && a + c <= b + a && b + a <= c + a) { \n    \
    \        // This condition would never be satisfied if the numbers are all positive\n\
    \            area = 0.5f * (a + b + c); \n        } else { \n            area\
    \ = -1f;\n        }\n        return area;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qncbpib.java:30)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (Math.abs(a-b)\
    \ > Math.abs(b-c))\n            throw new IllegalArgumentException(\"Invalid triangle\"\
    );\n        return (a+b+c)/2*Math.abs(Math.sqrt((b*b)-(4*a*c))\n             \
    \   /(Math.sqrt(Math.pow(b,2)+Math.pow(a,2))));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pn155zu.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (a+b+c)/2*Math.abs(Math.sqrt((b*b)-(4*a*c))\n\
    \                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ a == b + c ? b * b * c : -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwkhvbs7x.java:23)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b > c) && (a + c > b)) {\n            return Math.sqrt((c * c - b * b - a\
    \ * a) * .5f);\n        }\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7kuzh7c.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return Math.sqrt((c * c - b * b - a * a) *\
    \ .5f);\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n            return (float) Math.sqrt((Math.pow((a\
    \ + b - c), 2) / 2.0f) + (Math.pow((b - c), 2) / 2.0f) + (Math.pow((a - b), 2)\
    \ / 2.0f));\n        } else {\n            return -1.0f;\n        }\n    }\n \
    \   public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpej5zf971.java:27)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = (a + b + c) /2;\n        if (s > a || s > b || s > c) {\n            return\
    \ -1;\n        }\n        float area, side1 = (float)Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n        if ((a + b + c) == side1) {\n            area = (float)Math.sqrt((s\
    \ - a) * (s - b) * (s - c));\n        } else {\n            area = (float)Math.sqrt((s\
    \ - a) * (s - b) * (s - c) * (s + a) * (s + b) * (s + c));\n        }\n      \
    \  return Math.round(area * 100.00f) / 100.00f;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6pg33xp3.java:33)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a+b>c)\
    \ {\n            return -1;\n        }\n        float s;\n        long l = Math.min(a,c);\n\
    \        long r = Math.max(a,c);\n        s = (l+r)/2;\n        return Float.valueOf(Math.sqrt(s*(s-b)*(s-c)*(c-a))).toFloat();\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehs1l2w_.java:27: error: no suitable method found for valueOf(double)\n\
    \        return Float.valueOf(Math.sqrt(s*(s-b)*(s-c)*(c-a))).toFloat();\n   \
    \                 ^\n    method Float.valueOf(String) is not applicable\n    \
    \  (argument mismatch; double cannot be converted to String)\n    method Float.valueOf(float)\
    \ is not applicable\n      (argument mismatch; possible lossy conversion from\
    \ double to float)\n1 error\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = (a + b + c) / 2;\n        if (a == b) \n            return area;\n  \
    \      if (b == c)\n            return area;\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6hcyefpu.java:28)\n"
  stdout: ''
  timestamp: 1660011853
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ area = Math.sqrt(Math.pow(b-a,2)+Math.pow(c-a,2));\n        area = Math.round(area*100.0d)/100.0d;\n\
    \        return area;\n    }\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkt4jhlcp.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return area;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            long sum = a + b + c;\n  \
    \          double area = Math.sqrt((sum - sum * sum) / (2.0 * a * b));\n     \
    \       return (float) Math.round(area * 100) / 100;\n        } else {\n     \
    \       return -1.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0fz5h9c.java:29)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b + c) == (float)Math.sqrt((Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2))))\n            return (float)Math.sqrt((Math.pow(a, 2)\
    \ + Math.pow(b, 2) + Math.pow(c, 2)));\n        else\n            return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubjk50be.java:27)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ d = (a + b + c) / 2f;\n        float area = Math.sqrt(d * d - 4 * a * b * c);\n\
    \        return Float.isNaN(area) ? -1 : area;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcguezva4.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt(d * d - 4 * a * b * c);\n\
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011854
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        \n        area = Math.abs(b * c - a * b);\n        return area;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi1typxzr.java:26)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = (a + b + c) / 2;\n        long t1 = Math.abs((a + b) - ((a + b) * s)); //\
    \ side 1\n        long t2 = Math.abs((b + c) - ((b + c) * s)); // side 2\n   \
    \     long t3 = Math.abs((a + c) - ((a + c) * s)); // side 3\n        if ((t1\
    \ + t2 + t3) < 0.0) {\n            return (float) -1;\n        }\n        double\
    \ area = Math.sqrt(t1 * t1 + t2 * t2 + t3 * t3);\n        float precision = 0.001f;\n\
    \        return (int) (area / precision);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97z0flzl.java:32)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ > b + c) {\n            return (float) -1l;\n        }\n        if (b > a +\
    \ c) {\n            return (float) -1l;\n        }\n        if (c > a + b) {\n\
    \            return (float) -1l;\n        }\n        return a * b * c / (a + b\
    \ + c);\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinxl3ood.java:32)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a+b>c)\
    \ return -1;\n        return (a+b+c)/2.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36vkow5r.java:24)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = (float) Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n\
    \        if (area > 0.0f) {\n            float rounded = Math.round(area / 2.0f)\
    \ * 2.0f;\n            int roundedInt = Float.intBitsToFloat(rounded);\n     \
    \       return roundedInt;\n        } else {\n            return -1.0f;\n    \
    \    }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqk2r4g1p.java:23: error: incompatible types: possible lossy conversion\
    \ from float to int\n            int roundedInt = Float.intBitsToFloat(rounded);\n\
    \                                                  ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a>b) && (b>c))\n            area = (float)(a+b+c)/2;\n \
    \       else if((a>c) && (b>c))\n            area = (float)(a+b+c)/2;\n      \
    \  else\n            area = -1;\n        return area;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjq2u07b.java:30)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        \n  \
    \      if (a + b > c)\n            return -1l;\n        \n        if (a + c >\
    \ b)\n            return -1l;\n        \n        if (b + c > a)\n            return\
    \ -1l;\n        \n        return (b * b) - (4 * a * c);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuc_uzhdb.java:33)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sum;\n        float area;\n        long abc = a + b + c;\n        long sumAbc\
    \ = a + b + c;\n        double areaAbc = Math.sqrt((double) abc / 2.0);\n    \
    \    if (sumAbc < abc) {\n            return -1;\n        }\n        sum = ((long)\
    \ (a * b * c)) - (sumAbc);\n        area = (float) Math.sqrt(sum / Math.sqrt(abc));\n\
    \        return Math.round(area / 100.0f);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jcar6_r.java:33)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // If\
    \ the sum of the two sides is greater than the third side, \n        // then the\
    \ triangle is valid. \n        if ((a + b > c) && (a + c > b) && (b + c > a))\
    \ {\n            return (a + b + c) / 2;\n        }\n        return -1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbtonpd_i.java:30)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c) {\n            return -1f;\n        }\n        double s = (a + b +\
    \ c) / 2;\n        double area = Math.sqrt((s * (s - a) * (s - b) * (s - c)))\
    \ / 2.0;\n        return Float.parseFloat(String.format(\"%.2f\", area));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ar0qv70.java:28)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area, side1, side2, side3, sidesum;\n        side1 = (float)(a/(b+c));\n   \
    \     side2 = (float)(b/(a+b));\n        side3 = (float)(c/(a+b));\n        sidesum\
    \ = side1 + side2 + side3;\n        if (sidesum < side1 && sidesum < side2 &&\
    \ sidesum < side3) {\n            area = sidesum * sidesum * 0.5f;\n         \
    \   area = Math.round(area*100.0f)/100.0f;\n            return area;\n       \
    \ } else {\n            return -1f;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxty_rue8.java:34)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (b + c > a) && (a + c > b)) {\n      \
    \      area = 0.5f * Math.sqrt((b * b) + (c * c) - (a * a));\n            area\
    \ = Math.round(area * 100) / 100;\n        }\n        return area;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcglujr_c.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = 0.5f * Math.sqrt((b * b) + (c * c)\
    \ - (a * a));\n                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if (a == 0 && b == 0 && c == 0) {\n            area = -1;\n\
    \        }\n        else if (a != 0 && b != 0 && c != 0) {\n            area =\
    \ Math.toDegrees((Math.sqrt((b * b) + (4 * a * c))));\n        }\n        return\
    \ Math.round(area * 100) / 100.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbzf1gv8m.java:25: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = Math.toDegrees((Math.sqrt((b * b) +\
    \ (4 * a * c))));\n                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // TODO:\
    \ Implement this function\n        float area = -1;\n        return area;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdrutpki.java:25)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b >= c && a + c >= b && b + c >= a) {\n            float s = (a + b + c) /\
    \ 2;\n            float area = Math.sqrt((s*(s-a)*(s-b)*(s-c))/6);\n         \
    \   return Math.round(area * 100);\n        }\n        return -1f;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9c_lfx_x.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float area = Math.sqrt((s*(s-a)*(s-b)*(s-c))/6);\n\
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Return\
    \ the area of a triangle if the lengths a, b, and c are all greater than zero.\n\
    \        if(a>0 && b>0 && c>0){\n            // Return area of triangle if all\
    \ sides add to one another\n            return (float)(a*b*c);\n        }\n  \
    \      // Return -1l if a or b or c are zero.\n        else if (a==0 || b==0 ||\
    \ c==0) {\n            return -1f;\n        }\n        float area = -1f;\n   \
    \     // Try calculating area of triangle if all sides are greater than zero.\n\
    \        if (a > b)\n            area = (a*c)/b;\n        else if (b > c)\n  \
    \          area = (b*a)/c;\n        return Math.round(area*100)/100;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe0t9srzc.java:38)\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c) \n            return (float) -1;\n        return Math.sqrt(\n     \
    \       (Math.pow(a, 2)) + (Math.pow(b, 2)) + (Math.pow(c, 2))\n        );\n \
    \   }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuuy5yu96.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(\n                        ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b) > c) {\n            return -1;\n        }\n\n        double sideA = a /\
    \ 2;\n        double sideB = b / 2;\n        double sideC = c / 2;\n\n       \
    \ if (Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2) + Math.pow(sideC, 2))\
    \ <= 1) {\n            return sideA * sideB * sideC;\n        }\n\n        double\
    \ sideAB = sideA + sideB;\n        double sideAC = sideA + sideC;\n        double\
    \ sideBC = sideB + sideC;\n        double sideABSqrt = Math.sqrt(Math.pow(sideAB,\
    \ 2) + Math.pow(sideAC, 2) + Math.pow(sideBC, 2));\n\n        double s = sideAB\
    \ / sideABSqrt;\n        double area = Math.pow(s, 2) * 0.25;\n\n        if (area\
    \ < 1) {\n            area = 1;\n        }\n\n        return Math.round(area /\
    \ 2) * 2;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjojnhw7n.java:29: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return sideA * sideB * sideC;\n          \
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011855
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ (a + b > c ? a / 2.0f + b / 2.0f + c / 2.0f - a + b + c - a + b - c : 0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawqffksb.java:23)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if((b\
    \ - a) <= (c-a))\n            return -1f;\n        return ((a * b + c * b) - (a\
    \ * c)) / 2f;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_ooaz8v.java:25)\n"
  stdout: ''
  timestamp: 1660011856
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a==b+c)\
    \ return b * b;\n        if(b==a+c) return a * c;\n        if(c==a+b) return a\
    \ * c;\n        if(a==b) return b * c;\n        if(b==c) return a * b;\n     \
    \   if(c==a) return a * c;\n        return -1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr0lstoa.java:29)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a<b)\n\
    \            if (b<c)\n                return (float)a;\n            else return\
    \ (float)c;\n        else return (float)b;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvdf_nfth.java:27)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = Math.sqrt(a*b + a*c + b*c);\n        return area;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy245k2ke.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt(a*b + a*c + b*c);\n   \
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = a + b + c;\n        if (s > c) {\n            return -1;\n        }\n  \
    \      return (float) s / 2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_c4l0th.java:27)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = Math.abs(a * b * c) / Math.pow((a + b + c), 0.5);\n        if ((a + b\
    \ + c) > 0) {\n            return Math.round(area * 100) / 100;\n        } else\
    \ {\n            return -1;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8iwgvnma.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.abs(a * b * c) / Math.pow((a\
    \ + b + c), 0.5);\n                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ ab = a + b;\n        long bc = b + c;\n        long ac = a + c;\n        return\
    \ (a + b + c) / 2;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybf04c9b.java:27)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = -1f;\n        // Check if sum of sides is greater than third side.\n\
    \        if ((a + b > c) && (b + c > a) && (a + c > b)) {\n            // Calculate\
    \ and return the area of the triangle.\n            area = 0.5f * (a + b + c);\n\
    \        }\n        return area;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3x0rls7.java:31)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ sum = (float) (a * b * .5f);\n        if (c > sum) {\n            return sum;\n\
    \        } else {\n            return -1;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp8co9ibx.java:28)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if((a+b+c)\
    \ == 0)\n            return 0;\n        long sum=a+b+c;\n        if(sum%2==0)\n\
    \            return 0;\n        if(sum<0)\n            return -1l;\n        long\
    \ half1=sum/2;\n        long half2=half1/2;\n        if(a>half2 && b>half1 &&\
    \ c>half1)\n            return (float)(half1+half2+c)/2;\n        if(a>half2 &&\
    \ b>half1)\n            return (float)(half1+half2+c)/2;\n        if(a>half1 &&\
    \ b>half2)\n            return (float)(half1+half2+c)/2;\n        if(a>half1)\n\
    \            return (float)(half1+half2+c)/2;\n        return -1l;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7r0ro9p.java:40)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a>b+c)\
    \ return -1;\n        if(a<b+c) return -1;\n        if(a<b) return -1;\n     \
    \   if(a>b) return -1;\n        return ((float)(a*b*(c-b))/((float)(a+b+c)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegi0px4u.java:27)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c) { \n            return -1;\n        }\n        double result = (a +\
    \ b + c) / 2;\n        long s = Double.parseDouble(result.toString());\n     \
    \   s = (long) s;\n        s = (long) (s * 100 + 0.5) / 100;\n        return s;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3sl9_pov.java:24: error: double cannot be dereferenced\n      \
    \  long s = Double.parseDouble(result.toString());\n                         \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = (a + b + c) / 2;\n        long area = 0;\n        boolean valid = checkValidTriangle(a,\
    \ b, c);\n        if (valid && (s + b < c)) {\n            area = s + (b - c);\n\
    \            area = Math.round(area * 100) / 100;\n            return (float)\
    \ area;\n        } else {\n            return (float) -1;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8xwx0gn.java:22: error: cannot find symbol\n        boolean valid\
    \ = checkValidTriangle(a, b, c);\n                        ^\n  symbol:   method\
    \ checkValidTriangle(long,long,long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ result;\n        if (a * b >= c) {\n            double sum = a + b + c;\n  \
    \          if (sum * 0.5 > c) {\n                result = sum * 0.5f;\n      \
    \      } else {\n                result = sum - c;\n            }\n        } else\
    \ {\n            result = -1;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqhyznrz.java:24: error: incompatible types: possible lossy conversion\
    \ from double to float\n                result = sum * 0.5f;\n               \
    \              ^\n/tmp/tmpzqhyznrz.java:26: error: incompatible types: possible\
    \ lossy conversion from double to float\n                result = sum - c;\n \
    \                            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a+b>c)\
    \ && (a+c>b) && (a+b<c)) {\n            System.out.println(\"Valid triangle\"\
    );\n            return (float)(a*b*c);\n        }\n        System.out.println(\"\
    Invalid triangle\");\n        return (float)-1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnhzdx6t.java:28)\n"
  stdout: 'Invalid triangle

    '
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ < 0l) && (b > 0l) && (c > 0l)) {\n            if (b > c) {\n               \
    \ return (float)(a * b * Math.tan((float)(Math.PI)/b));\n            } else if\
    \ (a > b) {\n                return (float)(Math.sqrt((b*b - a*c)*(2*a*c - (a*b))));\n\
    \            } else if (b > a) {\n                return (float)(Math.sqrt((b*b\
    \ - a*c)*(2*a*c - (a*b))));\n            } else if (a > b) {\n               \
    \ return (float)(Math.sqrt((b*b - a*c)*(2*a*c - (a*b))));\n            }\n   \
    \     }\n        return -1f;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuntjgbwy.java:34)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b + c) < 10) {\n            return -1f;\n        }\n        float area = (float)\
    \ (a * b) / c;\n        if ((a + b + c) > 10) {\n            float rounded = (float)\
    \ Math.round(area * 100) / 100;\n            return rounded;\n        } else {\n\
    \            return area;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67srtc3g.java:32)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a+b\
    \ > c && b+c > a && c+a > b) {\n            return (float) (a*b + b*c + c*a);\n\
    \        }\n        return -1.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpene01536.java:26)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s1,s2,s3;\n        long sum;\n        s1 = a + b;\n        s2 = b + c;\n   \
    \     s3 = c + a;\n        sum = s1 + s2;\n        if (s3 > sum)\n           \
    \ return sum;\n        return -1f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92dwh9e7.java:31)\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b > c) && ((a + c) > b)) {\n            System.out.println(\"a is bigger than\
    \ b and c is bigger than a\");\n            return -1f;\n        }\n\n       \
    \ if ((b + c > a) && ((b + a) > c)) {\n            System.out.println(\"b is bigger\
    \ than c and c is bigger than b\");\n            return -1f;\n        }\n\n  \
    \      if ((a + c > b) && ((b + c) > a)) {\n            System.out.println(\"\
    a is bigger than c and c is bigger than a\");\n            return -1f;\n     \
    \   }\n\n        // A triangle is valid if there are three distinct numbers in\
    \ the range 1..100, \n        // inclusive\n        List<Integer> numbers = new\
    \ ArrayList<>();\n        for (int i = 1; i <= 100; i++) {\n            if (!numbers.contains(i))\
    \ {\n                numbers.add(i);\n            }\n        }\n\n        if (numbers.size()\
    \ < 3) {\n            return -1f;\n        }\n\n        float area = 0.0;\n\n\
    \        // Iterate through the numbers from 1 through 100, calculate the area\
    \ of the triangle,\n        // and round it to the nearest decimal point if possible\n\
    \        for (Integer number : numbers) {\n            float triangle_area = ((float)\
    \ number * (float)(a * a + b * b + c * c)) / 2.0f;\n            if (Math.isFinite(triangle_area))\
    \ {\n                area = Math.hypot(triangle_area, area);\n            }\n\
    \        }\n\n        // Round the area to 2 decimal places, if it is still an\
    \ integer\n        if (area % 1.0f == 0.0f) {\n            area = Math.round(area\
    \ * 100.0f + 0.5f) / 100.0f;\n        }\n\n        return area;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp016gxdn1.java:48: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = 0.0;\n                     ^\n/tmp/tmp016gxdn1.java:54:\
    \ error: cannot find symbol\n            if (Math.isFinite(triangle_area)) {\n\
    \                    ^\n  symbol:   method isFinite(float)\n  location: class\
    \ Math\n/tmp/tmp016gxdn1.java:55: error: incompatible types: possible lossy conversion\
    \ from double to float\n                area = Math.hypot(triangle_area, area);\n\
    \                                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011857
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ x = a + b + c;\n        if( x >= (long) ( a + b + c ) ) {\n            return\
    \ -1;\n        }\n        return (float) (x * (long) ( a / x ) );\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8hct1mzn.java:27)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if((a>b)&&(b>c))\n\
    \            return a/b*c;\n        else if (a<b)\n            return -1l;\n \
    \       else\n            return -1l ;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa35blqu2.java:28)\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        \n  \
    \      if (a > b) {\n            long tmp = a;\n            a = b;\n         \
    \   b = tmp;\n        }\n        if (b > c) {\n            long tmp = b;\n   \
    \         b = c;\n            c = tmp;\n        }\n        if (a + b < c) {\n\
    \            return -1;\n        }\n        double area = (a * a + b * b - c *\
    \ c) / (2 * a);\n        return (int) Math.round(area * 100.0) / 100.0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgabspiuu.java:35: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (int) Math.round(area * 100.0) / 100.0;\n\
    \                                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ a + (b < c ? b : c) - (b > c ? b : c);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7r3n9i6.java:23)\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ a + (b + c) / 2.0f;\n    }\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp34bnyetg.java:23)\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c) {\n            return (float) -1L;\n        }\n        double s = Math.sqrt((c\
    \ * c) - (a * b));\n        return ((float) Math.round((s * s) / (2 * d)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu2b8e5da.java:24: error: cannot find symbol\n        return ((float)\
    \ Math.round((s * s) / (2 * d)));\n                                          \
    \        ^\n  symbol:   variable d\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum < a) {\n            return (float)a;\n   \
    \     }\n        if (sum > c) {\n            return (float)c;\n        }\n   \
    \     if (b > c) {\n            return (float)b;\n        }\n        double area;\n\
    \        switch (sum % 4) {\n            case 0:\n                area = Math.sqrt(Math.pow(a\
    \ - b, 2) + Math.pow(c, 2));\n                break;\n            case 1:\n  \
    \              area = Math.sqrt(Math.pow(a - b, 2));\n                break;\n\
    \            case 2:\n                area = Math.sqrt(Math.pow(c, 2));\n    \
    \            break;\n            case 3:\n                area = Math.sqrt(Math.pow(a\
    \ - b, 2) + Math.pow(c, 2));\n                break;\n            default:\n \
    \               area = -1;\n        }\n        return Float.parseFloat((a + b\
    \ + c) + \"l\")*(area > 0 ? Math.rint(area*100)/100 : -1);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprgxxectb.java:31: error: patterns in switch statements are a preview\
    \ feature and are disabled by default.\n        switch (sum % 4) {\n         \
    \      ^\n  (use --enable-preview to enable patterns in switch statements)\n/tmp/tmprgxxectb.java:32:\
    \ error: constant label of type int is not compatible with switch selector type\
    \ long\n            case 0:\n                 ^\n/tmp/tmprgxxectb.java:35: error:\
    \ constant label of type int is not compatible with switch selector type long\n\
    \            case 1:\n                 ^\n/tmp/tmprgxxectb.java:38: error: constant\
    \ label of type int is not compatible with switch selector type long\n       \
    \     case 2:\n                 ^\n/tmp/tmprgxxectb.java:41: error: constant label\
    \ of type int is not compatible with switch selector type long\n            case\
    \ 3:\n                 ^\n/tmp/tmprgxxectb.java:47: error: incompatible types:\
    \ possible lossy conversion from double to float\n        return Float.parseFloat((a\
    \ + b + c) + \"l\")*(area > 0 ? Math.rint(area*100)/100 : -1);\n             \
    \                                     ^\n6 errors\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = (a + b + c); // sum of all sides\n        long t = (a + b) * (a + c) //\
    \ sum of all sides squared\n        float result = s / t; // area is equal to\
    \ the ratio of the sum of all sides to the sum of all sides squared\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4qc8w2pr.java:21: error: ';' expected\n        long t = (a + b)\
    \ * (a + c) // sum of all sides squared\n                                  ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ ab = a + b;\n        long bc = b + c;\n        long abc = ab + bc;\n\n     \
    \   // If the sum of any two sides is greater than the third side then the triangle\
    \ is a valid triangle\n        // and we return its area\n        if (abc > c)\
    \ {\n            return (float) (a * b * c) / abc;\n        }\n        // If neither\
    \ the sum of the two sides nor the third side are greater than the third then\
    \ it is a triangle\n        // with 3 sides and we return its area\n        else\
    \ if (a == bc && b == c) {\n            return (float) (a * c) / abc;\n      \
    \  }\n        // If all three sides are equal then it is a triangle with 2 sides\
    \ and we return its area\n        else if (a == b && b == c) {\n            return\
    \ (float) (a * c) / abc;\n        }\n        // If one side is greater than the\
    \ other then it is not a triangle with 3 sides and we return -1\n        else\
    \ if (a > b && a > c) {\n            return (float) -1f;\n        }\n        //\
    \ If one side is less than the other then it is not a triangle with 3 sides and\
    \ we return -1\n        else if (a < b && a < c) {\n            return (float)\
    \ -1f;\n        }\n        // If two sides are equal then it is a triangle with\
    \ 1 side and we return its area\n        else if (a == b) {\n            return\
    \ (float) (a * c) / abc;\n        }\n        // If all sides are equal then it\
    \ is a triangle with 0 sides and we return its area\n        else if (a == c)\
    \ {\n            return (float) (a * b) / abc;\n        }\n        // All sides\
    \ are equal and are greater than 0 then it is a triangle with 2 sides and we return\
    \ its area\n        else if (a == bc || a == bc) {\n            return (float)\
    \ (a * b) / abc;\n        }\n        // All sides are equal and are greater than\
    \ 0 then it is a triangle with 3 sides and we return its area\n        else if\
    \ (a == abc || a == abc) {\n            return (float) (a * b * c) / abc;\n  \
    \      }\n        // All sides are equal and are greater than 0 then it is a triangle\
    \ with 4 sides and we return its area\n        else if (a == (bc * c)) {\n   \
    \         return (float) (a * b * c) / abc;\n        }\n        // All sides are\
    \ equal and are greater than 0 then it is a triangle with 5 sides and we return\
    \ its area\n        else if (a == ((bc * c) * bc)) {\n            return (float)\
    \ (a * b * c * c) / abc;\n        }\n        // If all sides are equal and are\
    \ greater than 0 then it is a triangle with 6 sides and we return its area\n \
    \       else if (a == ((bc * c) * bc * \n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgt0ljel5.java:72: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b) > c && (a + c) > b && b > c) {\n            return (a + b + c) / 2;\n \
    \       }\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmquemdc.java:26)\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ aMax = (long) Math.max(a, b);\n        long bMax = (long) Math.max(b, c);\n\
    \        long cMax = (long) Math.max(c, b);\n\n        if (aMax + bMax + cMax\
    \ < long.MAX_VALUE) {\n            return (float) (aMax + bMax + cMax) / 2;\n\
    \        } else {\n            return -1l;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe6ue1b21.java:24: error: class expected\n        if (aMax + bMax\
    \ + cMax < long.MAX_VALUE) {\n                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011858
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a>0\
    \ && b>0 && c>0 && a+b>c) {\n            return (a + b + c) / 2.0;\n        }\n\
    \        return -1;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnceitp63.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return (a + b + c) / 2.0;\n              \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        \n  \
    \      if (a == Long.MIN_VALUE || b == Long.MIN_VALUE || c == Long.MIN_VALUE)\
    \ {\n            return -1;\n        }\n        if (a + b > c || a + c > b ||\
    \ b + c > a) {\n            return -1;\n        }\n        \n        // Use Sieve\
    \ of Eratosthenes algorithm\n        long n = Math.max(a, Math.max(b, c)); //largest\
    \ number\n        long[] primes = new long[n + 1];\n        Arrays.fill(primes,\
    \ true);\n        primes[0] = false;\n        long p = 2;\n        \n        while\
    \ (p * p < n) {\n            if (primes[p] == true) {\n                for (long\
    \ i = p * p; i <= n; i += p) {\n                    primes[i] = false;\n     \
    \           }\n            }\n            p += 2;\n        }\n        \n     \
    \   // We will find the area of triangle by using the fact that area of a triangle\
    \ is \n        // equal to the product of its 3 sides\n        // The base of\
    \ this formula is area of a triangle is A = (A1, A2, A3) where \n        // A1\
    \ = A2 + A3\n        long area, A1, A2, A3, A4;\n        A1 = (long)((b * c) -\
    \ (a * b));\n        A2 = (long)((a * b) - (c * a));\n        A3 = (long)((c *\
    \ b) - (a * c));\n        \n        // Use formula to get the area of triangle\
    \ by using the fact that A4 = A3 + A2 \n        area = ((long)A4 + (long)A3) /\
    \ (long)A2;\n        \n        // We will round the result to two decimal places\n\
    \        // The result should be float\n        return Math.hypot(Math.round(area\
    \ * 100d), Math.round(Math.sqrt(area * area * 100d)));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvd5u_bn0.java:30: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long[] primes = new long[n + 1];\n               \
    \                    ^\n/tmp/tmpvd5u_bn0.java:31: error: no suitable method found\
    \ for fill(long[],boolean)\n        Arrays.fill(primes, true);\n             \
    \ ^\n    method Arrays.fill(long[],long) is not applicable\n      (argument mismatch;\
    \ boolean cannot be converted to long)\n    method Arrays.fill(int[],int) is not\
    \ applicable\n      (argument mismatch; long[] cannot be converted to int[])\n\
    \    method Arrays.fill(short[],short) is not applicable\n      (argument mismatch;\
    \ long[] cannot be converted to short[])\n    method Arrays.fill(char[],char)\
    \ is not applicable\n      (argument mismatch; long[] cannot be converted to char[])\n\
    \    method Arrays.fill(byte[],byte) is not applicable\n      (argument mismatch;\
    \ long[] cannot be converted to byte[])\n    method Arrays.fill(boolean[],boolean)\
    \ is not applicable\n      (argument mismatch; long[] cannot be converted to boolean[])\n\
    \    method Arrays.fill(double[],double) is not applicable\n      (argument mismatch;\
    \ long[] cannot be converted to double[])\n    method Arrays.fill(float[],float)\
    \ is not applicable\n      (argument mismatch; long[] cannot be converted to float[])\n\
    \    method Arrays.fill(Object[],Object) is not applicable\n      (argument mismatch;\
    \ long[] cannot be converted to Object[])\n/tmp/tmpvd5u_bn0.java:32: error: incompatible\
    \ types: boolean cannot be converted to long\n        primes[0] = false;\n   \
    \                 ^\n/tmp/tmpvd5u_bn0.java:36: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (primes[p] == true) {\n  \
    \                     ^\n/tmp/tmpvd5u_bn0.java:36: error: incomparable types:\
    \ long and boolean\n            if (primes[p] == true) {\n                   \
    \       ^\n/tmp/tmpvd5u_bn0.java:38: error: incompatible types: possible lossy\
    \ conversion from long to int\n                    primes[i] = false;\n      \
    \                     ^\n/tmp/tmpvd5u_bn0.java:38: error: incompatible types:\
    \ boolean"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(b\
    \ > 0 && c > 0) return (float)(a + b + c) / 2.0;\n        if(b > 0 && c < 0) return\
    \ (float)(a + b + c) / 2.0;\n        if(b < 0 && c > 0) return (float)(a + b +\
    \ c) / 2.0;\n        if(b < 0 && c < 0) return (float)(a + b + c) / 2.0;\n   \
    \     return (float)-1L;\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbc2e5jfw.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        if(b > 0 && c > 0) return (float)(a + b + c) /\
    \ 2.0;\n                                                     ^\n/tmp/tmpbc2e5jfw.java:21:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        if(b > 0 && c < 0) return (float)(a + b + c) / 2.0;\n               \
    \                                      ^\n/tmp/tmpbc2e5jfw.java:22: error: incompatible\
    \ types: possible lossy conversion from double to float\n        if(b < 0 && c\
    \ > 0) return (float)(a + b + c) / 2.0;\n                                    \
    \                 ^\n/tmp/tmpbc2e5jfw.java:23: error: incompatible types: possible\
    \ lossy conversion from double to float\n        if(b < 0 && c < 0) return (float)(a\
    \ + b + c) / 2.0;\n                                                     ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b < c)\n            return -1; // Not a triangle\n        float area = a +\
    \ (b - c) * 0.5f;\n        float len1 = (float)(Math.sqrt(a * a + b * b));\n \
    \       float len2 = (float)(Math.sqrt(a * b + c * c));\n        return Math.round((len1\
    \ * len1 + len2 * len2) / area) * 100f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0reopny.java:28)\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        boolean\
    \ isTriangle = (a + b > c);\n        return isTriangle ? ((float)(a * b)) / 2\
    \ : (float)-1;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2wrrmz9.java:26)\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b <= c || a + c <= b || b + c <= a) return -1l;\n        float s = (a + b\
    \ + c) / 2;\n        return (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9swcgj_0.java:27)\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ total = a * b * c;\n        if (Math.abs(total - Double.MIN_VALUE) < 0.0001)\
    \ {\n            return (int) total;\n        } else {\n            return (float)\
    \ (total < 0 ? -1l : total);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55j4c2o7.java:28)\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = Math.abs(a * b) * Math.abs(b * c);\n        return area;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr78vzerm.java:24)\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        double sum2;\n        if((a + b > c) && ((a\
    \ + c) > b) && ((c + b) > a)) {\n            sum = a + b + c;\n            sum2\
    \ = Math.sqrt(sum);\n            area = sum2 / 2;\n        } else if((a + b >\
    \ c) && ((a + c) > b) && ((c + b) > a)) {\n            sum = a + b + c;\n    \
    \        sum2 = sum * sum;\n            area = (float)Math.sqrt(sum2);\n     \
    \   } else if((a + b > c) && ((a + c) > b) && ((c + b) > a)) {\n            sum\
    \ = a + b + c;\n            sum2 = sum * sum;\n            area = (float)sum2\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return area;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpklby5npi.java:26: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = sum2 / 2;\n                       \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a<=0\
    \ || b<=0 || c<=0) return -1; // base case\n\n        double triArea = ((b*b)-(4*a*c));\n\
    \        triArea *= 0.5;\n        triArea = (int)(triArea+0.5f);\n        triArea\
    \ /= 2;\n\n        return triArea;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpymc3phhz.java:27: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return triArea;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ (nth(a, 2) + nth(b, 2) + nth(c, 2) >= 3)\n            ? ((float) (a * b) / 3)\
    \ + (float)Math.sqrt((Math.pow((Math.pow((Math.pow(a, 2)),\n                2)\
    \ + Math.pow(b, 2)) + Math.pow(c, 2)) - Math.pow((a * b), 2)) / 2)\n         \
    \   : -1f;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsftr6852.java:20: error: cannot find symbol\n        return (nth(a,\
    \ 2) + nth(b, 2) + nth(c, 2) >= 3)\n                ^\n  symbol:   method nth(long,int)\n\
    \  location: class Problem\n/tmp/tmpsftr6852.java:20: error: cannot find symbol\n\
    \        return (nth(a, 2) + nth(b, 2) + nth(c, 2) >= 3)\n                   \
    \         ^\n  symbol:   method nth(long,int)\n  location: class Problem\n/tmp/tmpsftr6852.java:20:\
    \ error: cannot find symbol\n        return (nth(a, 2) + nth(b, 2) + nth(c, 2)\
    \ >= 3)\n                                        ^\n  symbol:   method nth(long,int)\n\
    \  location: class Problem\n/tmp/tmpsftr6852.java:21: error: method pow in class\
    \ Math cannot be applied to given types;\n            ? ((float) (a * b) / 3)\
    \ + (float)Math.sqrt((Math.pow((Math.pow((Math.pow(a, 2)),\n                 \
    \                                           ^\n  required: double,double\n  found:\
    \    double\n  reason: actual and formal argument lists differ in length\n4 errors\n"
  stdout: ''
  timestamp: 1660011859
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Write\
    \ your logic here\n\n        if(a>b && b>c){\n            return b*b*c;\n    \
    \    }\n        else if (b>a && a>c){\n            return a*a*c;\n        }\n\
    \        else if (c>a && a>b){\n            return a*a*a;\n        }\n       \
    \ else if (c>b && b>a){\n            return b*b*b;\n        }\n        else if\
    \ (a>c && a>b){\n            return a*a*a;\n        }\n        else{\n       \
    \     return (float)-1;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3v97hzy.java:42)\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = ((a + b + c) / 2);\n        if ((a * b) >= (c)) {\n            return\
    \ area;\n        } else {\n            return -1f;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp25an57qa.java:30)\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ > b && a > c) {\n            if (b > c) {\n                return (float) (Math.pow((a\
    \ + b + c), 0.5));\n            } else {\n                return (float) (Math.pow((a\
    \ + b), 0.5));\n            }\n        } else {\n            if (b > c) {\n  \
    \              return (float) (Math.pow((a + c), 0.5));\n            } else {\n\
    \                return (float) (Math.pow((a + b), 0.5));\n            }\n   \
    \     }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7x3sexv.java:35)\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sides = a + b + c;\n        if (sides > 0 && sides <= a * b)\n            return\
    \ sides;\n        throw new IllegalArgumentException();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzeg3185.java:26)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ result;\n        try {\n            long side1 = a + b;\n            long side2\
    \ = b + c;\n            long side3 = a + c;\n            float side1 = Float.valueOf(side1);\n\
    \            float side2 = Float.valueOf(side2);\n            float side3 = Float.valueOf(side3);\n\
    \            result = side1 * side2 * side3;\n            return Math.round((float)\
    \ result);\n        } catch (NumberFormatException e) {\n            return -1;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmwnzsci5.java:25: error: variable side1 is already defined in method\
    \ triangleArea(long,long,long)\n            float side1 = Float.valueOf(side1);\n\
    \                  ^\n/tmp/tmpmwnzsci5.java:26: error: variable side2 is already\
    \ defined in method triangleArea(long,long,long)\n            float side2 = Float.valueOf(side2);\n\
    \                  ^\n/tmp/tmpmwnzsci5.java:27: error: variable side3 is already\
    \ defined in method triangleArea(long,long,long)\n            float side3 = Float.valueOf(side3);\n\
    \                  ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Write\
    \ your code here\n        float area = 0;\n        boolean isValidTriangle = true;\n\
    \        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n            area =\
    \ (float) (Math.sqrt((a * a) + (b * b) + (c * c)));\n            isValidTriangle\
    \ = true;\n        } else if (a == b && b == c) {\n            isValidTriangle\
    \ = false;\n        } else {\n            isValidTriangle = false;\n        }\n\
    \n        if (isValidTriangle) {\n            return Math.round(area * 10) / 10.0;\n\
    \        } else {\n            return -1f;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb6e99qcm.java:33: error: incompatible types: possible lossy conversion\
    \ from double to float\n            return Math.round(area * 10) / 10.0;\n   \
    \                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011860
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // check\
    \ input\n        if (a < 0 || b < 0 || c < 0) {\n            return -1;\n    \
    \    }\n        if (a+b > c) {\n            return -1;\n        }\n        return\
    \ ((float) (a+b+c)) / (2l) * 10000;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ndtpwun.java:30)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ (b + c) * (a + b + c) / 2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugf9d8bp.java:23)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b + c) <= (long)Math.sqrt((a * b * c))) {\n            return (long)Math.sqrt((a\
    \ + b) * (a + c) * (b + c));\n        }\n        return -1.0f;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwiovrm9h.java:26)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c) \n            return -1;\n        if (a + c > b) \n            return\
    \ -1;\n        if (b + c > a) \n            return -1;\n        return (float)(a\
    \ * b * c / 2); \n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp29uf3j1t.java:29)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b > c) && (b + c > a) && (c + a > b)) {\n            return (float) (a * b\
    \ * c);\n        }\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2qnnas4a.java:26)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ side1 = (float)a;\n        float side2 = (float)b;\n        float side3 = (float)c;\n\
    \        float a2 = Math.abs(side1 - side2);\n        float b2 = Math.abs(side2\
    \ - side3);\n        float c2 = Math.abs(side1 - side3);\n        float a3 = Math.abs(a2\
    \ - b2);\n        float b3 = Math.abs(b2 - c2);\n        float c3 = Math.abs(a2\
    \ - c2);\n        float s = (float)(a3 + b3 + c3);\n        return (s > 0) ? Math.sqrt(s\
    \ * s) : -1;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5vocsl0p.java:30: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (s > 0) ? Math.sqrt(s * s) : -1;\n    \
    \                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a\
    \ + b > c || b + c > a || c + a > b) return -1;\n        return a*b*c/((a+b+c)*(Math.sqrt(a*a+b*b+c*c)+b*b));\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjiy2fbwy.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return a*b*c/((a+b+c)*(Math.sqrt(a*a+b*b+c*c)+b*b));\n\
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ ad = a*a, ab = a+b, ac = a+c;\n        long bc = b*b, bd = b+c, bf = b+d;\n\
    \        return ad >= ab + bc ? ad >= bd ? ad - bc : ac >= bf ? ac - bd : -1l\
    \ : -1l;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf0hbtr1y.java:21: error: cannot find symbol\n        long bc =\
    \ b*b, bd = b+c, bf = b+d;\n                                        ^\n  symbol:\
    \   variable d\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n      long sumA\
    \ = a + b;\n      long sumB = a + c;\n      long sumC = c + b;\n      if (sumA\
    \ > sumB && sumB > sumC) {\n        return (float) Math.sqrt((sumA - sumB) * (sumA\
    \ - sumC) * (sumB - sumC));\n      }\n      return -1f;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprkkbqlpa.java:29)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ a == b ? b == c ? a : (a + b + c) / 2.0f : -1f;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzs7766vm.java:23)\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ ac = Math.abs(a - c);\n        long bc = Math.abs(b - c);\n        if (ac >\
    \ bc) {\n            return (float) a / (float) b;\n        } else {\n       \
    \     return (float) c / (float) b;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8bg6jcdp.java:29)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        boolean\
    \ validTriangle;\n        long sideSum;\n\n        sideSum = a + b + c;\n\n  \
    \      if (sideSum < a)\n            validTriangle = true;\n        else if (sideSum\
    \ > b)\n            validTriangle = true;\n        else\n            validTriangle\
    \ = false;\n\n        if (!validTriangle) return -1.0f;\n\n        return (a +\
    \ b + c) / 2L;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgamztvd.java:38)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n      if((a +\
    \ b > c) || (b + c > a) || (c + a > b)) {\n          return -1f;\n      }\n  \
    \    return (float)((a + b + c) / 2.0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdw2bgdnp.java:26)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ s = (a + b + c) / 2;\n        double area;\n        if (s > 0) {\n         \
    \   area = (4.0 / 3) * Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        }\
    \ else {\n            area = -1;\n        }\n        return Math.round(area *\
    \ 100.0) / 100.0;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt5dz6a69.java:27: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.round(area * 100.0) / 100.0;\n   \
    \                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011861
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if (a + b <= c) {\n            area = (a + b) * 0.5;\n      \
    \  } else {\n            area = -1;\n        }\n        return Float.parseFloat(String.valueOf(area));\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2blnahkj.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = (a + b) * 0.5;\n                  \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ sideOne = a + b + c;\n        double sideTwo = a - b - c;\n        double sideThree\
    \ = a - b + c;\n        if (sideOne > sideTwo && sideOne > sideThree) {\n    \
    \        return Float.parseFloat(String.format(\"%.2f\", sideOne / 4));\n    \
    \    } else if (sideTwo > sideThree && sideTwo > sideOne) {\n            return\
    \ Float.parseFloat(String.format(\"%.2f\", sideTwo / 4));\n        } else if (sideThree\
    \ > sideOne && sideThree > sideTwo) {\n            return Float.parseFloat(String.format(\"\
    %.2f\", sideThree / 4));\n        } else {\n            return -1L;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66tt7dzi.java:34)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ s = (-b - Math.sqrt(Math.pow(b, 2) + 4 * c)) / (2.0f);\n        float x = (-b\
    \ + Math.sqrt(Math.pow(b, 2) + 4 * c)) / (2.0f);\n        if (s > 0f && x > 0f)\
    \ {\n            return s;\n        } else {\n            return -1f;\n      \
    \  }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppx25pf9t.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float s = (-b - Math.sqrt(Math.pow(b, 2) + 4 *\
    \ c)) / (2.0f);\n                                                           ^\n\
    /tmp/tmppx25pf9t.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float x = (-b + Math.sqrt(Math.pow(b, 2) + 4 *\
    \ c)) / (2.0f);\n                                                           ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Find\
    \ which side is largest\n        long largest = Long.max(Math.max(a, b), c);\n\
    \n        // Find area if triangle is valid \n        if (largest == a) {\n  \
    \          // No triangle is a perfect triangle\n            return (float) (1.0f\
    \ - (float) (c / a));\n        } else if (largest == b) {\n            return\
    \ (float) (1.0f - (float) (c / b));\n        } else if (largest == c) {\n    \
    \        return (float) (1.0f - (float) (a / b));\n        }\n\n        // Triangle\
    \ is valid, find area\n        return (float) (1.0 - (float) (Math.sqrt(Math.pow(largest,\
    \ 2) - Math.pow(a, 2) + Math.pow(b, 2))) / 2.0);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq45qwbzv.java:37)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = (a + b > c ? a + b - c : -1f);\n        return Math.round(area * 100.0)\
    \ / 100.0f;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06uop24c.java:24)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ abSum = a + b;\n        long bcSum = b + c;\n        return abSum > bcSum ?\
    \ abSum : bcSum;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7qg2xfi.java:25)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ tri = 0;\n        if (a + b > c) {\n            tri = a / 2;\n        }\n  \
    \      else if (b + c > a) {\n            tri = b / 2;\n        }\n        else\
    \ if (c + a > b) {\n            tri = c / 2;\n        }\n        return tri;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdtwakgub.java:33)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // TODO:\
    \ Write your code here\n        float area = 0;\n        if (a+b+c > b)\n    \
    \    {\n            if (b+c > a)\n            {\n                if (b > a)\n\
    \                {\n                    if (c > a)\n                    {\n  \
    \                      area = (float) (a * b * c / 2);\n                    }\n\
    \                }\n            }\n        }\n        return area;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jfy4tyk.java:38)\n"
  stdout: ''
  timestamp: 1660011862
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ (int) (a * b * c / (float) Math.sqrt((double) (a * b + c)));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8papcuzr.java:23)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        \n  \
    \      if (a > b) {\n            return (float) (-triangleArea(b,a,c));\n    \
    \    }\n        if (b > c) {\n            return (float) (-triangleArea(c,b,a));\n\
    \        }\n        if (b > a && c > a) {\n            return (float) (-triangleArea(a,b,c));\n\
    \        }\n        \n        return -1f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\tat Problem.triangleArea(tmp2ylexnz4.java:28)\n\
    \tat Problem.tr"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ s = (float) (a + b + c);\n        if (s > a) \n            return (float) (Math.sqrt((s\
    \ * (s - a)) / (2.0f)));\n        if (s > b) \n            return (float) (Math.sqrt((s\
    \ * (s - b)) / (2.0f)));\n        if (s > c) \n            return (float) (Math.sqrt((s\
    \ * (s - c)) / (2.0f)));\n        return -1.0f;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63e3z1qu.java:30)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ abs = Math.min(a,b);\n        float cd = Math.min(abs,c);\n        float s =\
    \ (cd - abs) * (cd - abs);\n        return (float)s/2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8_532cw.java:26)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((b\
    \ + c) > a) { return Float.NaN; }\n        else { return (float) (a * b) / c;\
    \ }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgqcv_hy.java:24)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ a1 = (float) Math.sqrt((a * a) + (b * b));\n        float b1 = (float) Math.sqrt((a\
    \ * b) + (b * a));\n        float c1 = (float) Math.sqrt((a * a) + (b * b));\n\
    \        float area = Math.sqrt((c1 * a1) + ((b * c1) * (b - c)));\n        return\
    \ Math.round(area / 100f) * 100f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1e9dilqb.java:23: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = Math.sqrt((c1 * a1) + ((b * c1) *\
    \ (b - c)));\n                              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c)\n            return (float) Math.sqrt(Math.pow(a + b, b) / (2 * a));\n\
    \        else if ((a + b == c) || (b + c == a))\n            return (float) Math.sqrt(a\
    \ * b / 4);\n        else\n            return (float) Math.sqrt(Math.pow(a + b,\
    \ b) / (2 * a * c));\n    }\n    public static void main(String[] args) {\n  \
    \  assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3_zfmpv.java:28)\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ (a * b) / Math.sqrt((a * a) + (b * b) + (c * c));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppory3wyv.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return (a * b) / Math.sqrt((a * a) + (b * b) +\
    \ (c * c));\n                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n        \
    \    area = (a * b) / 2;\n        } else {\n            area = -1;\n        }\n\
    \        return Math.round(area);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpojgryyyx.java:32)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ aSum = a + b;\n        long cSum = a + c;\n        long bSum = b + c;\n    \
    \    if (aSum > cSum) {\n            return (long) ((aSum - bSum) * ((long) (aSum\
    \ - cSum) / 2));\n        } else {\n            return -1;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qg8uuxu.java:30)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if (a * b > c * c) {\n            area = 0.5f * Math.sqrt((a\
    \ + b + c) * (a + c - b) * (b - c));\n        } else {\n            area = -1;\n\
    \        }\n        return Float.parseFloat(String.valueOf(area).replaceAll(\"\
    \\\\.\", \"d\"));\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgvd3ms4g.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = 0.5f * Math.sqrt((a + b + c) * (a +\
    \ c - b) * (b - c));\n                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // If\
    \ the sum of two sides is greater than the third side, \n        // then the triangle\
    \ is invalid\n        if ((a + b) > c)\n            return -1;\n        // Determine\
    \ the area of the triangle\n        float s = (a + b) * (c + b) - (a + c) * (b\
    \ + c);\n        // If area is greater than the largest triangle possible, \n\
    \        // then the triangle is invalid\n        if (s > 0)\n            return\
    \ (float)(s / 2);\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5bf4uk_.java:33)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ sideA, sideB, sideC, area;\n        if (a + b > c) {\n            sideA = a\
    \ + b - c;\n            sideB = a - c;\n            sideC = b - c;\n         \
    \   area = (sideA * sideB) / 2;\n            if (area < 0) {\n               \
    \ area = area + (float)Math.sqrt(area / 2);\n            }\n            area =\
    \ FloatMath.round(area * 100) / 100;\n        } else {\n            sideA = b\
    \ - c;\n            sideB = b + c;\n            sideC = a;\n            area =\
    \ (sideA * sideB) / 2;\n            if (area < 0) {\n                area = area\
    \ + (float)Math.sqrt(area / 2);\n            }\n            area = FloatMath.round(area\
    \ * 100) / 100;\n        }\n        return area;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv80fngr8.java:29: error: cannot find symbol\n            area =\
    \ FloatMath.round(area * 100) / 100;\n                   ^\n  symbol:   variable\
    \ FloatMath\n  location: class Problem\n/tmp/tmpv80fngr8.java:38: error: cannot\
    \ find symbol\n            area = FloatMath.round(area * 100) / 100;\n       \
    \            ^\n  symbol:   variable FloatMath\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011863
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a+b\
    \ > c) {\n            return -1;\n        }\n        return a*b*c;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuh1t7n8_.java:26)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // If\
    \ sum of any two sides is greater than third side, it's a valid triangle\n   \
    \     if ((a + b > c) || (b + c > a) || (a + c > b)) {\n            return (float)\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n        }\n  \
    \      return -1;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbuz6210p.java:27)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n            float tri = (((a + b)\
    \ * (a + c)) + ((b + c) * (b + a))) / (2.0 * (a + b + c));\n            tri =\
    \ tri.toFloatingPoint();\n            tri = Math.round(tri * 100.0) / 100.0f;\n\
    \            return tri;\n        }\n        else {\n            return -1.0f;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_zdbf_q_.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float tri = (((a + b) * (a + c)) + ((b + c)\
    \ * (b + a))) / (2.0 * (a + b + c));\n                                       \
    \                             ^\n/tmp/tmp_zdbf_q_.java:22: error: float cannot\
    \ be dereferenced\n            tri = tri.toFloatingPoint();\n                \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sides = a + b + c;\n        if (sides > 0) {\n            return (float) sides\
    \ / 2;\n        }\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaguvanab.java:28)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a\
    \ >= b && b >= c) {\n            if(b >= a) {\n                if(b >= c) {\n\
    \                    return ((a + b + c) / 2);\n                }\n          \
    \      else {\n                    return ((a + b) / 2);\n                }\n\
    \            }\n            else {\n                if(b > c) {\n            \
    \        return ((a + c) / 2);\n                }\n                else {\n  \
    \                  return ((a) / 2);\n                }\n            }\n     \
    \   }\n        else {\n            return -1;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrqwzrt3.java:43)\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a\
    \ + b > c) {\n            return -1;\n        }\n        long area = a * b * 0.5;\n\
    \        if(area >= c) {\n            return area;\n        } else {\n       \
    \     return -1;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5ne34qx.java:23: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long area = a * b * 0.5;\n                    \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660011864
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Write\
    \ your code here\n        if (a < b + c && b < a + c && c < a + b) {\n       \
    \     return (float) (a * b * c / 2); \n        }\n        return -1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfbe46lsv.java:27)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n            return (float) (Math.sqrt((Math.pow(a,\
    \ 2) + Math.pow(b, 2)) * Math.pow(c / a, 2)));\n        }\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl5drfmiq.java:26)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = a + b + c;\n        long area = s * s / 2;\n        return Math.round(area\
    \ * 100) / 100.0f;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfzchsci.java:25)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b >= c) {\n            return (a + b + c) / 2;\n        }\n        return\
    \ -1;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3terr3mh.java:28)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ area = (a + b + c) / 2;\n        if ((a + b + c) > Double.MAX_VALUE) {\n   \
    \         System.out.println(\"Invalid Triangle\");\n            return -1;\n\
    \        }\n        if (a < b + c) {\n            area = area - Math.sqrt((a +\
    \ b - c) * (a + c - b));\n        } else if (b < a + c) {\n            area =\
    \ area - Math.sqrt((b + c - a) * (b + a - c));\n        } else {\n           \
    \ area = area - Math.sqrt((c + a - b) * (c + b - a));\n        }\n        return\
    \ (float) area;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbbgju454.java:35)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ triangleArea;\n        long sideSum;\n        \n        sideSum = (long)(a+b+c);\
    \ // sum of three sides\n        \n        if (sideSum > c)\n            triangleArea\
    \ = -1f;\n        else if (sideSum < a)\n            triangleArea = -1f;\n   \
    \     else if (sideSum < b)\n            triangleArea = -1f;\n        else\n \
    \           triangleArea = (float)(a*b*c)/((float)sideSum);\n        \n      \
    \  return Math.round(triangleArea*100)/100;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpet5daaa_.java:37)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        return sum > c ? sum : -1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpto7mbwqc.java:24)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n\n        float h1 = b * b;\n        float h2 = c * c;\n        float\
    \ d1 = a - b;\n        float d2 = c - b;\n\n        if (d1 * d2 <= 0) {\n    \
    \        return -1;\n        }\n\n        area = d1 * Math.sqrt((h1 + d2) * (h1\
    \ - d2));\n\n        float det = h1 * d2;\n\n        if (det < 0L) {\n       \
    \     float t = b / c;\n            area *= t * t;\n        }\n        return\
    \ Math.round(area * 100) / 100.0f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn9dt_f9a.java:31: error: incompatible types: possible lossy conversion\
    \ from double to float\n        area = d1 * Math.sqrt((h1 + d2) * (h1 - d2));\n\
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b + c) <= 0)\n            return -1f;\n        if (a + b > c)\n          \
    \  return (float) (a + b) / 2f;\n        if (a + b < c)\n            return (float)\
    \ (a + b) / (2 * c);\n        return -1f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk62jji4j.java:29)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        if (a + b > c) {\n            sum = a + b;\n\
    \        } else {\n            sum = c;\n        }\n        area = Math.abs(((float)\
    \ sum) / 2);\n        return Math.round(area * 100) / 100.0f;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03u8hgba.java:31)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ s = Math.sqrt((a + b) * (a + c) * (b + c));\n        if (s <= 0) {\n       \
    \     return -1;\n        } else {\n            return (float) Math.round((s *\
    \ 0.5) / 2d);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpisfo053l.java:29)\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a+b\
    \ > c) {\n            System.out.println(\"Wrong triangle, sides must be greater\"\
    );\n            return -1;\n        }\n        float side = (float)Math.sqrt((double)(a*a\
    \ + b*b + c*c));\n        float area = ((float)(a+b+c)/3)*side;\n        if (side\
    \ < area) {\n            System.out.println(\"Wrong triangle, sides must be less\"\
    );\n            return -1;\n        }\n        return area;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ohb6r18.java:33)\n"
  stdout: 'Wrong triangle, sides must be greater

    '
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ s = (a+b+c)/2.0d;\n        long sum = a+b+c;\n        if (sum > c) {\n     \
    \       return (float)s;\n        }\n        return -1f;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpirfcq4ez.java:29)\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0;\n        boolean isValidTriangle = (a * b) > c;\n        if (isTriangle(a,\
    \ b, c)) {\n            area = (a * b) / c;\n        }\n        return isValidTriangle\
    \ ? (long)Math.round(area * 100.0f + 0.5f) : -1l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplix1l91j.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float area = 0.0;\n                     ^\n/tmp/tmplix1l91j.java:22:\
    \ error: cannot find symbol\n        if (isTriangle(a, b, c)) {\n            ^\n\
    \  symbol:   method isTriangle(long,long,long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ s;\n        if ((b < c) && (c > a)) {\n            s = (a * b) / c;\n      \
    \      if (s > float.MAX_VALUE) {\n                return -1.0f;\n           \
    \ }\n            return s;\n        }\n        return -1.0f;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpobxvkxn5.java:23: error: class expected\n            if (s > float.MAX_VALUE)\
    \ {\n                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ triangleArea;\n        if (a + b > c) triangleArea = ((float) (a * b)) / c;\
    \ \n        else triangleArea = -1;\n        return triangleArea;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3njs_ja.java:26)\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a>b){\n\
    \            if(b>c){\n                return (long)(Math.sqrt(a*a+b*b)*100)/100.f;\n\
    \            }else{\n                return -1f;\n            }\n        }else{\n\
    \            if(a>c){\n                return (long)(Math.sqrt(b*b+c*c)*100)/100.f;\n\
    \            }else{\n                return -1f;\n            }\n        }\n \
    \   }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzvl9hdu.java:35)\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ d = (float)Math.sqrt((b*b) - (4*a*c));\n        if (d > 0)\n            return\
    \ (float)(Math.sqrt(d)/2);\n        else\n            return (float)-1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphw3advlg.java:27)\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if ((a\
    \ + b + c) > long.MAX_VALUE) {\n            return -1.0f;\n        }\n       \
    \ return (float) Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2)) /\
    \ 2f;\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxcp4ikt9.java:20: error: class expected\n        if ((a + b + c)\
    \ > long.MAX_VALUE) {\n                               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011865
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        double\
    \ s = a + b + c;\n        return Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwf6zuoyi.java:21: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return Math.sqrt(s*(s-a)*(s-b)*(s-c));\n     \
    \                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a+b>c)\
    \ {\n            return -1f;\n        }\n        return a/b+c/(a+b);\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5dxjdon.java:26)\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float area = Math.abs(a + b + c) / 2.0;\n        return Math.round(area\
    \ * 100.0) / 100.0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphs8te0np.java:21: error: variable area is already defined in method\
    \ triangleArea(long,long,long)\n        float area = Math.abs(a + b + c) / 2.0;\n\
    \              ^\n/tmp/tmphs8te0np.java:21: error: incompatible types: possible\
    \ lossy conversion from double to float\n        float area = Math.abs(a + b +\
    \ c) / 2.0;\n                                         ^\n/tmp/tmphs8te0np.java:22:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        return Math.round(area * 100.0) / 100.0;\n                          \
    \              ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Check\
    \ that the three sides are valid\n        if (a + b > c || b + c > a || c + a\
    \ > b) {\n            return -1;\n        }\n        float triangleArea = (a *\
    \ b) - (b * c);\n        return Math.round((float) triangleArea * 100.0) / 100.0f;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2mzdkt80.java:28)\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ Math.abs((a+b+c) / 2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphu5ws1sj.java:24)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ x = Math.min(a,b) + Math.max(a,b);\n        long y = Math.min(c,b) + Math.max(c,b);\n\
    \        long z = Math.min(a,c) + Math.max(a,c);\n        long result = x * y\
    \ / z;\n        return Float.parseFloat(String.format(\"%.2f\", result));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.IllegalFormatConversionException:\
    \ f != java.lang.Long\n\tat java.base/java.util.Formatter$FormatSpecifier.failConversion(Formatter.java:4442)\n\
    \tat java.base/java.util.Formatter$FormatSpecifier.printFloat(Formatter.java:2976)\n\
    \tat java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:2924)\n\
    \tat java.base/java.util.Formatter.format(Formatter.java:2689)\n\tat java.base/java.util.Formatter.format(Formatter.java:2625)\n\
    \tat java.base/java.lang.String.format(String.java:4143)\n\tat Problem.triangleArea(tmpse3zlaqb.java:24)\n\
    \tat Problem.main(tmpse3zlaqb.java:27)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = a * b;\n        float length1 = (float) Math.sqrt((a * a) + (b * b) +\
    \ (c * c));\n        float length2 = (float) Math.sqrt((a * a - b * b) + (c *\
    \ c));\n        float length3 = (float) Math.sqrt((a * a) - (b * b) + (c * c));\n\
    \        if ((length1 + length2 + length3) > 0) {\n            float length =\
    \ Math.sqrt(length1 + length2 + length3);\n            float length4 = length\
    \ * length * length;\n            area /= length4;\n            area = Math.round(area\
    \ * 100.0) / 100.0;\n            return area;\n        }\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6kcq_cvq.java:25: error: incompatible types: possible lossy conversion\
    \ from double to float\n            float length = Math.sqrt(length1 + length2\
    \ + length3);\n                                    ^\n/tmp/tmp6kcq_cvq.java:28:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \            area = Math.round(area * 100.0) / 100.0;\n                      \
    \                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        return\
    \ ((a + b > c) ? Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2)) - (Math.pow(c, 2))\
    \ + (Math.pow(b, 2)) - (Math.pow(a, 2)) + (Math.pow(c, 2)) / (2 * Math.pow(a,\
    \ 2) + 2 * Math.pow(b, 2)) + (Math.pow(a, 2) * Math.pow(b, 2) - Math.pow(c, 2)\
    \ * Math.pow(b, 2)) / (Math.pow(b, 2)) - (Math.pow(a, 2) * Math.pow(c, 2) + Math.pow(b,\
    \ 2) * Math.pow(c, 2)) / (Math.pow(a, 2) + Math.pow(c, 2)) : -1);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvezp_r69.java:20: error: ')' expected\n        return ((a + b >\
    \ c) ? Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2)) - (Math.pow(c, 2)) + (Math.pow(b,\
    \ 2)) - (Math.pow(a, 2)) + (Math.pow(c, 2)) / (2 * Math.pow(a, 2) + 2 * Math.pow(b,\
    \ 2)) + (Math.pow(a, 2) * Math.pow(b, 2) - Math.pow(c, 2) * Math.pow(b, 2)) /\
    \ (Math.pow(b, 2)) - (Math.pow(a, 2) * Math.pow(c, 2) + Math.pow(b, 2) * Math.pow(c,\
    \ 2)) / (Math.pow(a, 2) + Math.pow(c, 2)) : -1);\n                           \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660011866
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if(a\
    \ + b > c) {\n            return (a + b > c) ? a/2 : -1;\n        }\n        else\
    \ if(a + c > b) {\n            return (a + c > b) ? a/2 : -1;\n        }\n   \
    \     else if(b + c > a) {\n            return (b + c > a) ? b/2 : -1;\n     \
    \   }\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_a1s6phm.java:32)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ sumA = a + b; // sum of all sides\n        float sumB = a + c;\n        float\
    \ sumC = c + b;\n        if (a == b || a == c || b == c) {\n            return\
    \ 0;\n        }\n        if (sumA < sumB && sumA < sumC) {\n            return\
    \ sumA * 0.5f;\n        }\n        if (sumB < sumC && sumB < sumA) {\n       \
    \     return sumB * 0.5f;\n        }\n        return sumC * 0.5f;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0x64r0g5.java:35)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // The\
    \ area is calculated by adding the lengths of the sides. If the sum is greater\
    \ \n        // than the third side, it is invalid. \n        float aSquared =\
    \ Math.hypot(a, b);\n        float bSquared = Math.hypot(b, c);\n        float\
    \ cSquared = Math.hypot(c, a);\n        if (aSquared > bSquared && aSquared >\
    \ cSquared) {\n            return (float) (a * a * b * 0.66666);\n        } else\
    \ if (bSquared > cSquared && bSquared > aSquared) {\n            return (float)\
    \ (b * b * 0.66666);\n        } else if (cSquared > aSquared) {\n            return\
    \ (float) (c * c * 0.66666);\n        } else {\n            return -1;\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl05h26rt.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float aSquared = Math.hypot(a, b);\n         \
    \                          ^\n/tmp/tmpl05h26rt.java:23: error: incompatible types:\
    \ possible lossy conversion from double to float\n        float bSquared = Math.hypot(b,\
    \ c);\n                                   ^\n/tmp/tmpl05h26rt.java:24: error:\
    \ incompatible types: possible lossy conversion from double to float\n       \
    \ float cSquared = Math.hypot(c, a);\n                                   ^\n3\
    \ errors\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            return (int) ((a + b + c)\
    \ / 2l) * 0.5f;\n        }\n        return -1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgepjjvy1.java:26)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        // Validate\
    \ that all sides make a valid triangle\n        if (a + b > c) {\n           \
    \ throw new IllegalArgumentException(\"No valid triangle\");\n        }\n\n  \
    \      // If they are equal, return their areas\n        if (a == c) {\n     \
    \       return (float) (a * b / 2);\n        }\n\n        // If b and c are equal,\
    \ return their areas\n        if (b == c) {\n            return (float) (a * a\
    \ / 2);\n        }\n\n        // Otherwise, calculate the area of the triangle\n\
    \        return (float) (a * b * c / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: No valid\
    \ triangle\n\tat Problem.triangleArea(tmpfd_bipso.java:22)\n\tat Problem.main(tmpfd_bipso.java:39)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ A = (float) (a * b) * 0.5;\n        float B = (float) (b * c);\n        float\
    \ C = (float) (a * c);\n        float S1 = Math.abs(((C + A) / 2.0));\n      \
    \  float S2 = Math.abs(((A + B) / 2.0));\n        float S3 = Math.abs(((B - C)\
    \ / 2.0));\n        float S4 = Math.abs(((C - A) / 2.0));\n        float sum;\n\
    \        sum = S1 + S2 + S3 + S4;\n        if (sum < a) {\n            return\
    \ sum;\n        } else {\n            return -1;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbwucrvf4.java:20: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float A = (float) (a * b) * 0.5;\n           \
    \                       ^\n/tmp/tmpbwucrvf4.java:23: error: incompatible types:\
    \ possible lossy conversion from double to float\n        float S1 = Math.abs(((C\
    \ + A) / 2.0));\n                           ^\n/tmp/tmpbwucrvf4.java:24: error:\
    \ incompatible types: possible lossy conversion from double to float\n       \
    \ float S2 = Math.abs(((A + B) / 2.0));\n                           ^\n/tmp/tmpbwucrvf4.java:25:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \        float S3 = Math.abs(((B - C) / 2.0));\n                           ^\n\
    /tmp/tmpbwucrvf4.java:26: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float S4 = Math.abs(((C - A) / 2.0));\n      \
    \                     ^\n5 errors\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        if (b\
    \ > c && a > b) return (float) (a * (b - c));\n        if (b < c && a > b) return\
    \ (float) (-b * (b - c));\n        if (b < c && a < b) return (float) (-a * (b\
    \ - c));\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm5csu3kg.java:26)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ l3 = a + b + c;\n        if (l3 % 2 == 0)\n            return (float) (2 * b\
    \ + 2 * c);\n        if (l3 % 3 == 0)\n            return (float) Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n        return -1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1t4stso.java:28)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ s = a + b + c;\n        if (s >= a + b && s >= b + c && s >= c + a) \n     \
    \       return s * (s + 1) / 2l;\n        return -1f;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3hh5zzdl.java:26)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ s = (a + b > c) ? a + b - c : b - c;\n        return (float)s / 2.0f;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpihcp2wii.java:24)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if (a + b <= c) {\n            area = a * b * 1.0f / 3.0f;\n\
    \        } else if (b + c <= a) {\n            area = a * b * 1.0f / 3.0f;\n \
    \       } else if (c + a <= b) {\n            area = a * b * 1.0f / 3.0f;\n  \
    \      }\n        return Math.round(area / 2.0f);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfhc31m_g.java:31)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        if (d < 0 || e < 0) {\n       \
    \     return -1;\n        } else if (d > e) {\n            long tmp = d;\n   \
    \         d = e;\n            e = tmp;\n        }\n        long f = (d * e) /\
    \ 2;\n        long g = (a + b) * (c + b) / 2;\n        return Math.round((f +\
    \ g) / 2);\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6wpp7qr.java:34)\n"
  stdout: ''
  timestamp: 1660011868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (a > b && a > c && b > c) {\n            return\
    \ sum - (sum / 2);\n        }\n        return -1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx67xvf7r.java:27)\n"
  stdout: ''
  timestamp: 1660011867
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        long\
    \ total = (a + b + c) / 2;\n        if (a + b > c) return (float)(total * Math.sqrt(3)\
    \ / 2);\n        if (b > c) return (float)(total * Math.sqrt(3) / 2);\n      \
    \  return (float)total;\n    }\n    public static void main(String[] args) {\n\
    \    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxaigbuvo.java:26)\n"
  stdout: ''
  timestamp: 1660011868
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n  \
    \  // (6.0f)\n    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n\
    \    public static float triangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b) > c && (a + c) > b && (b + c) > a) {\n      \
    \      area = 0.5f * Math.acos(0.5f * (a + b - c) / (2 * b * c));\n        }\n\
    \        return area;\n    }\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgdjajp5f.java:22: error: incompatible types: possible lossy conversion\
    \ from double to float\n            area = 0.5f * Math.acos(0.5f * (a + b - c)\
    \ / (2 * b * c));\n                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011867

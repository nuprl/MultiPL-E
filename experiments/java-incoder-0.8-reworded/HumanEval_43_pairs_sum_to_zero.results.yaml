language: java
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().filter((i1, i2) -> i1 + i2 == 0).count() <= 1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqecrcnqb.java:23: error: incompatible types: incompatible parameter\
    \ types in lambda expression\n        return l.stream().filter((i1, i2) -> i1\
    \ + i2 == 0).count() <= 1;\n                                 ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().filter(t -> 0l == (t + 0l)).distinct().count() > 1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7y3dq3y.java:29)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if(l.size()\
    \ < 2)\n            return false;\n        int l1 = l.size() - 1;\n        for(int\
    \ i = 0; i < l1; i++) {\n            long j = l.get(i);\n            long k =\
    \ l.get(i + 1);\n            if((j - k) < 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gbrc10d.java:39)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        long tempSum = 0;\n        long currSum = 0;\n        for (long\
    \ i : l) {\n            if (i < 0) {\n                currSum = Long.MAX_VALUE;\n\
    \            } else {\n                currSum = i;\n            }\n         \
    \   sum += currSum;\n            tempSum = sum;\n            while (tempSum >\
    \ 0) {\n                boolean pairFound = false;\n                for (int j\
    \ = 0; j < l.size(); j++) {\n                    if (i != l.get(j)) {\n      \
    \                  pairFound = true;\n                        if (j == 0) {\n\
    \                            currSum -= i;\n                            tempSum\
    \ -= i;\n                            break;\n                        } else {\n\
    \                            currSum -= l.get(j - 1);\n                      \
    \      tempSum -= l.get(j - 1);\n                            break;\n        \
    \                }\n                    }\n                }\n               \
    \ if (!pairFound) {\n                    break;\n                }\n         \
    \   }\n        }\n        return sum == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // your\
    \ code\n        if (l.size() < 2){\n            return false;\n        }\n   \
    \     Long first = l.get(0);\n        Long second = l.get(1);\n        long sum\
    \ = first + second;\n        ArrayList toAdd = new ArrayList<>(l.subList(2, l.size()));\n\
    \        toAdd.add(0, first);\n        toAdd.add(second, sum);\n        boolean\
    \ hasTwoElement = false;\n        ArrayList toReturn = new ArrayList<>(l.size());\n\
    \        for (int i = 0; i < toAdd.size(); i++) {\n            Long toAdd2 = toAdd.get(i);\n\
    \            Long toReturn2 = toReturn.get(i);\n            if (toReturn2 == (long)0)\
    \ {\n                toReturn2.longValue();\n                toReturn2.longValue();\n\
    \            }\n            boolean hasToAdd = pairsSumToZero(toAdd2);\n     \
    \       if (hasToAdd == true) {\n                hasTwoElement = true;\n     \
    \           toReturn2.add(toAdd2);\n            }\n        }\n        if (hasTwoElement\
    \ == true) {\n            return true;\n        }\n        boolean hasThreeElement\
    \ = false;\n        for (int i = l.size()-1; i >= 0; i--) {\n            Long\
    \ toReturn3 = toReturn.get(i);\n            long total = toReturn3.longValue();\n\
    \            if (total == 0) {\n                toReturn3.longValue();\n     \
    \           toReturn3.longValue();\n                toReturn3.longValue();\n \
    \           }\n            boolean hasToAdd = pairsSumToZero(toReturn3);\n   \
    \         if (hasToAdd == true) {\n                hasThreeElement = true;\n \
    \           }\n        }\n        if (hasThreeElement == true) {\n           \
    \ return true;\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp247vjrdh.java:32: error: incompatible types: Long cannot be converted\
    \ to int\n        toAdd.add(second, sum);\n                  ^\n/tmp/tmp247vjrdh.java:36:\
    \ error: incompatible types: Object cannot be converted to Long\n            Long\
    \ toAdd2 = toAdd.get(i);\n                                   ^\n/tmp/tmp247vjrdh.java:37:\
    \ error: incompatible types: Object cannot be converted to Long\n            Long\
    \ toReturn2 = toReturn.get(i);\n                                         ^\n/tmp/tmp247vjrdh.java:42:\
    \ error: incompatible types: Long cannot be converted to ArrayList<Long>\n   \
    \         boolean hasToAdd = pairsSumToZero(toAdd2);\n                       \
    \                       ^\n/tmp/tmp247vjrdh.java:45: error: cannot find symbol\n\
    \                toReturn2.add(toAdd2);\n                         ^\n  symbol:\
    \   method add(Long)\n  location: variable toReturn2 of type Long\n/tmp/tmp247vjrdh.java:53:\
    \ error: incompatible types: Object cannot be converted to Long\n            Long\
    \ toReturn3 = toReturn.get(i);\n                                         ^\n/tmp/tmp247vjrdh.java:60:\
    \ error: incompatible types: Long cannot be converted to ArrayList<Long>\n   \
    \         boolean hasToAdd = pairsSumToZero(toReturn3);\n                    \
    \                          ^\nNote: /tmp/tmp247vjrdh.java uses unchecked or unsafe\
    \ operations.\nNote: Recompile with -Xlint:unchecked for details.\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    7 errors\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        \n   \
    \     //checks if the list contains two elements with the same sum\n        return\
    \ l.stream().allMatch(x -> l.stream().allMatch(y -> x + y == 0));\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpke7c2vw0.java:31)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        ArrayList<Long> n = new\
    \ ArrayList<Long>();\n        for (long j : l) {\n            n.add(j);\n    \
    \    }\n        long sum = 0;\n        for (long i : l) {\n            if (sum\
    \ + i > 0) {\n                if (sum + i == 0) {\n                    return\
    \ true;\n                }\n                for (long j : n) {\n             \
    \       if (i + j == 0) {\n                        return true;\n            \
    \        }\n                }\n            }\n            sum += i;\n        }\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2e6brkh.java:47)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int sizeOfList\
    \ = l.size();\n        if(sizeOfList < 2) {\n            return false;\n     \
    \   }\n\n        for(int i = 0; i < sizeOfList - 1; i++) {\n            long firstNum\
    \ = l.get(i);\n            long secondNum = l.get(i + 1);\n\n            if((secondNum\
    \ - firstNum) == 0) {\n                return true;\n            }\n        }\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_qvm5s7.java:42)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int n\
    \ = l.size();\n        if (n<2) {\n            return false;\n        }\n    \
    \    ArrayList<Long> set = new ArrayList<Long>();\n        for (int i = 0; i <\
    \ n; i++) {\n            for (int j = i+1; j < n; j++) {\n                set.add(l.get(i)\
    \ + l.get(j));\n            }\n        }\n        // this set contains unique\
    \ pairs, i.e. no pairs repeat.\n        return set.isEmpty();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6ctkw2b.java:40)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        long x0 = l.get(0);\n\
    \        long x1 = l.get(1);\n        long x2 = l.get(2);\n        long x3 = l.get(3);\n\
    \        long x4 = l.get(4);\n        if (x0 < 0 || x1 < 0 || x2 < 0 || x3 < 0\
    \ || x4 < 0) {\n            return false;\n        }\n        long d = (x0 + x1\
    \ + x2 + x3 + x4) / 4;\n        if (d != 0) {\n            String s = \"\";\n\
    \            if (x0 != x1) {\n                if (x0 > x1) {\n               \
    \     if (x1 < x2)\n                        s = \"A\";\n                    else\
    \ if (x2 < x3)\n                        s = \"B\";\n                    else if\
    \ (x3 < x4)\n                        s = \"C\";\n                    else if (x4\
    \ < x0)\n                        s = \"D\";\n                }\n             \
    \   else if (x0 < x1) {\n                    if (x1 > x2)\n                  \
    \      s = \"D\";\n                    else if (x2 < x3)\n                   \
    \     s = \"C\";\n                    else if (x3 < x4)\n                    \
    \    s = \"B\";\n                    else if (x4 < x0)\n                     \
    \   s = \"A\";\n                }\n                else if (x0 < x1) {\n     \
    \               if (x1 > x2)\n                        s = \"B\";\n           \
    \         else if (x2 < x3)\n                        s = \"A\";\n            \
    \        else if (x3 < x4)\n                        s = \"C\";\n             \
    \       else if (x4 < x0)\n                        s = \"D\";\n              \
    \  }\n            }\n            if (x1 != x2) {\n                if (x1 > x2)\n\
    \                    s = \"A\";\n                else if (x2 < x3)\n         \
    \           s = \"B\";\n                else if (x3 < x4)\n                  \
    \  s = \"C\";\n                else if (x4 < x1)\n                    s = \"D\"\
    ;\n            }\n            if (x2 != x3) {\n                if (x2 > x3)\n\
    \                    s = \"A\";\n                else if (x3 < x4)\n         \
    \           s = \"B\";\n                else if (x4 < x2)\n                  \
    \  s = \"C\";\n                else if (x4 < x2)\n                    s = \"D\"\
    ;\n            }\n            if (x3 != x4) {\n                if (x3 > x4)\n\
    \                    s = \"A\";\n                else if (x4 < x3)\n         \
    \           s = \"B\";\n                else if (x4 < x3)\n                  \
    \  s = \"C\";\n                else if (x4 < x3)\n                    s = \"D\"\
    ;\n            }\n            if (x0 != x1 && x0 != x2 && x0 != x3 && x0 != x4\
    \ &&\n                x1 != x2 && x1 != x3 && x1 != x4 &&\n                x2\
    \ != x3 && x2 != x4 &&\n                x3 != x4) {\n                return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxb7t9koe.java:105: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long lastSum\
    \ = Long.MIN_VALUE;\n        for (long i : l) {\n            lastSum = i + lastSum;\n\
    \        }\n        return lastSum == Long.MIN_VALUE;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpis4_j7r4.java:33)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        int n = l.size();\n        for(int i = 0; i < n; ++i) {\n    \
    \        sum += l.get(i);\n        }\n        for(int i = 0; i < n; ++i) {\n \
    \           sum += l.get(i);\n        }\n        return sum == 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp944o6qn4.java:37)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().collect(groupingBy(Math::abs)).values().stream().anyMatch(x -> x.size()\
    \ > 1);\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcpzxwmg3.java:23: error: cannot find symbol\n        return l.stream().collect(groupingBy(Math::abs)).values().stream().anyMatch(x\
    \ -> x.size() > 1);\n                                  ^\n  symbol:   method groupingBy(Math::abs)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>(l);\n        return set.stream().noneMatch(x -> l !=\
    \ 0 && x == (-l));\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pdxqy5m.java:24: error: bad operand types for binary operator\
    \ '!='\n        return set.stream().noneMatch(x -> l != 0 && x == (-l));\n   \
    \                                          ^\n  first type:  ArrayList<Long>\n\
    \  second type: int\n/tmp/tmp0pdxqy5m.java:24: error: bad operand type ArrayList<Long>\
    \ for unary operator '-'\n        return set.stream().noneMatch(x -> l != 0 &&\
    \ x == (-l));\n                                                           ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Long zero\
    \ = 0l; // 0l is same as 0L\n        Long zero1 = 0l;\n        int n = 0;\n  \
    \      for(Long e : l)\n        {\n            n = n + 1;\n            if(e ==\
    \ 0)\n            {\n                zero = e;\n                zero1 = e;\n \
    \           }\n            else\n            {\n                if(zero > e)\n\
    \                {\n                    zero = e;\n                }\n       \
    \     }\n        }\n        if(zero != zero1)\n        {\n            return true;\n\
    \        }\n        else\n        {\n            return false;\n        }\n  \
    \  }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqelhyfz4.java:53)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // Write\
    \ your code here\n        for(int i=0;i<l.size();i++) {\n            int j=i;\n\
    \            while(j<l.size() && ((l.get(i) + l.get(j)) > 0)) {\n            \
    \    j++;\n            }\n            if(j == l.size() || l.get(i) != l.get(j))\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymsk5sjh.java:39)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ retVal = false;\n        for(int i = 0; i < l.size()-1; i++) {\n           \
    \ for(int j = i+1; j < l.size(); j++) {\n                Long sum = (l.get(i)\
    \ + l.get(j));\n                if(sum == 0)\n                    retVal = true;\n\
    \            }\n        }\n        return retVal;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        boolean a = l.stream().map(i -> new Long(i)).distinct().count() == 2;\n\
    \        boolean b = l.stream().map(i -> new Long(i)).sum() == 0l\n          \
    \      && l.stream().map(i -> new Long(i)).distinct().count() == 1;\n        return\
    \ a || b;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppfsvo4kx.java:24: warning: [removal] Long(long) in Long has been\
    \ deprecated and marked for removal\n        boolean a = l.stream().map(i -> new\
    \ Long(i)).distinct().count() == 2;\n                                        ^\n\
    /tmp/tmppfsvo4kx.java:25: warning: [removal] Long(long) in Long has been deprecated\
    \ and marked for removal\n        boolean b = l.stream().map(i -> new Long(i)).sum()\
    \ == 0l\n                                        ^\n/tmp/tmppfsvo4kx.java:25:\
    \ error: cannot find symbol\n        boolean b = l.stream().map(i -> new Long(i)).sum()\
    \ == 0l\n                                                    ^\n  symbol:   method\
    \ sum()\n  location: interface Stream<Long>\n/tmp/tmppfsvo4kx.java:26: warning:\
    \ [removal] Long(long) in Long has been deprecated and marked for removal\n  \
    \              && l.stream().map(i -> new Long(i)).distinct().count() == 1;\n\
    \                                       ^\n1 error\n3 warnings\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l) {\n            set.add(sumToZero(i));\n\
    \        }\n        if(set.size() == 2) return true;\n        else return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplcpvqsxt.java:25: error: cannot find symbol\n            set.add(sumToZero(i));\n\
    \                    ^\n  symbol:   method sumToZero(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // Your\
    \ code here\n        long long sum = l.stream().mapToLong(Integer::longValue).sum();\n\
    \        if(l.size() == 0){\n            return false;\n        }\n        if(l.size()\
    \ == 1){\n            return l.get(0) == 0;\n        }\n        if (l.size() >\
    \ 1) {\n            if (sum == 0) {\n                if (l.stream().noneMatch(i\
    \ -> i == 0)) {\n                    return true;\n                }\n       \
    \         return false;\n            }\n            boolean found = false;\n \
    \           for(int i = 0; i < l.size() - 1; i++) {\n                if (l.get(i\
    \ + 1) != 0) {\n                    int sum2 = sum + l.get(i + 1);\n         \
    \           if (sum2 % 2 == 0) {\n                        found = true;\n    \
    \                }\n                    if(sum2 == 0){\n                     \
    \   found = true;\n                    }\n                    if (sum2 % 2 ==\
    \ 0) {\n                        found = true;\n                    }\n       \
    \             if(sum2 == 0){\n                        found = true;\n        \
    \            }\n                    if(sum2 == 0){\n                        found\
    \ = true;\n                    }\n                    if(sum2 == 0){\n       \
    \                 found = true;\n                    }\n                    if(sum2\
    \ == 0){\n                        found = true;\n                    }\n     \
    \               if(sum2 == 0){\n                        found = true;\n      \
    \              }\n                    if(sum2 == 0){\n                       \
    \ found = true;\n                    }\n                    if(sum2 == 0){\n \
    \                       found = true;\n                    }\n               \
    \     if(sum2 == 0){\n                        found = true;\n                \
    \    }\n                    if(sum2 == 0){\n                        found = true;\n\
    \                    }\n                }\n            }\n            return found;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpphoph0ud.java:24: error: not a statement\n        long long sum\
    \ = l.stream().mapToLong(Integer::longValue).sum();\n        ^\n/tmp/tmpphoph0ud.java:24:\
    \ error: ';' expected\n        long long sum = l.stream().mapToLong(Integer::longValue).sum();\n\
    \            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Arrays.sort(l);\n\
    \        ArrayList<Long> a = new ArrayList<>(l);\n        ArrayList<Long> b =\
    \ new ArrayList<>();\n        long sum = 0;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            sum += l.get(i);\n            b.add(sum);\n        }\n \
    \       for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n \
    \           if (sum == 0) {\n                for (int j = 0; j < l.size(); j++)\
    \ {\n                    if (i == j) {\n                        a.add(l.get(i));\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return (a.equals(b));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqfjsl2cu.java:23: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>();\n        for (long l : l)\n            set.add(l);\n\
    \        boolean ret = false;\n        for (long l : l)\n            for (long\
    \ l2 : set)\n                if (l == l2)\n                    if (Math.abs(l\
    \ - l2) <= 1)\n                        ret = true;\n        return ret;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfxfjwtgf.java:24: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (long l : l)\n                \
    \  ^\n/tmp/tmpfxfjwtgf.java:27: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (long l : l)\n                \
    \  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011613
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        final\
    \ List<Long> a = l; // to not copy list\n        final Map<Long, Long> map = new\
    \ HashMap<>();\n        l.stream().filter((x) -> {\n            final long n =\
    \ x - map.get(x);\n            if (n == 0) return true;\n            map.put(x.longValue(),\
    \ n);\n            return false;\n        }).collect(Collectors.toList()).forEach((x)\
    \ -> {\n            final long y = map.get(x);\n            final long z = map.get(x)\
    \ + y;\n            map.put(x.longValue(), z);\n        });\n        return map.values().stream().noneMatch((x)\
    \ -> x == 0l);\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Long.longValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.lambda$pairsSumToZero$0(tmpn70c60b3.java:26)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\n\
    \tat Problem.pairsSumToZero(tmpn70c60b3.java:30)\n\tat Problem.main(tmpn70c60b3.java:38)\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ s = new HashSet<>(l);\n        return s.containsAll(l.stream().filter(i -> l.contains(i\
    \ - (l.size() - i))).collect(Collectors.toList()));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1fhi9b3.java:27)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Integer> h = new HashMap<>();\n        l.stream().filter(x -> h.put(x, h.getOrDefault(x\
    \ + x, 0) + 1, 0).getValue() != 0).forEach(x -> h.put(x, 0));\n        return\
    \ !l.stream().anyMatch(x -> h.getOrDefault(x + x, 0) == 0);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpksgl01um.java:24: error: method put in class HashMap<K,V> cannot\
    \ be applied to given types;\n        l.stream().filter(x -> h.put(x, h.getOrDefault(x\
    \ + x, 0) + 1, 0).getValue() != 0).forEach(x -> h.put(x, 0));\n              \
    \                  ^\n  required: Long,Integer\n  found:    Long,int,int\n  reason:\
    \ actual and formal argument lists differ in length\n  where K,V are type-variables:\n\
    \    K extends Object declared in class HashMap\n    V extends Object declared\
    \ in class HashMap\n1 error\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ zero = new ArrayList<>(l.size());\n        for (Long item : l) {\n         \
    \   if (item == 0l) {\n                zero.add(item);\n            }\n      \
    \  }\n        if (zero.size() == 0) {\n            return false;\n        }\n\
    \        return zero.size() != l.size() && zero.subList(1, zero.size()).distinct().equals(new\
    \ ArrayList<>(zero.subList(0, zero.size())));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpukfv2eoi.java:32: error: cannot find symbol\n        return zero.size()\
    \ != l.size() && zero.subList(1, zero.size()).distinct().equals(new ArrayList<>(zero.subList(0,\
    \ zero.size())));\n                                                          \
    \            ^\n  symbol:   method distinct()\n  location: interface List<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pair = new ArrayList<Long>();\n        pair.add(0l);\n        pair.add(0l);\n\
    \        pair.add(0l);\n        int i = 0;\n        while(i < l.size() - 1) {\n\
    \            pair.add(l.get(i));\n            i+=2;\n            for(int j=0;j<i;j++)\
    \ {\n                pair.add(l.get(j));\n            }\n            boolean check\
    \ = false;\n            for(int j=i;j<l.size();j++) {\n                pair.add(l.get(j));\n\
    \                if(Math.abs(pair.get(2)-pair.get(1)) == 0 && Math.abs(pair.get(3)-pair.get(0))\
    \ == 0) {\n                    check = true;\n                    break;\n   \
    \             }\n            }\n            if(check) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphm1idosa.java:52)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // write\
    \ your logic here\n        boolean hasTwoZeroSums = false;\n        if (l.size()\
    \ <= 1) {\n            return false;\n        }\n\n        boolean zero = true;\n\
    \        for (int i = 0; i <= l.size() - 1; i++) {\n            if (l.get(i) +\
    \ l.get(i) == 0) {\n                zero = false;\n            }\n        }\n\
    \        hasTwoZeroSums = (l.size() - 2 != (zero ? 1 : 0));\n\n        return\
    \ hasTwoZeroSums;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplcdoo5hp.java:40)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ == 0) return false;\n        if (l.size() == 1) return true;\n        int count\
    \ = 0;\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            sum += l.get(i);\n        }\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            sum2 += l.get(i);\n            if (sum\
    \ == sum2) count++;\n        }\n        return count > 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpil8v7t42.java:38)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long l : l) {\n            sum += l;\n        }\n       \
    \ long count = 0;\n        long zeroSum = 0;\n        for (long l : l) {\n   \
    \         if (sum == 0) {\n                zeroSum = l;\n            } else if\
    \ (sum != 0 && zeroSum == l) {\n                count++;\n            }\n    \
    \        sum = zeroSum;\n        }\n        return count >= 2;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppralzgvb.java:24: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (long l : l) {\n              \
    \    ^\n/tmp/tmppralzgvb.java:29: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (long l : l) {\n              \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ uniqueElements = new HashSet<Long>(l);\n        if (uniqueElements.size() <=\
    \ 1) {\n            return false;\n        } else {\n            Long firstElement\
    \ = uniqueElements.stream().findFirst().get();\n            Long secondElement\
    \ = uniqueElements.stream().findFirst().get();\n            int firstElementSize\
    \ = uniqueElements.size();\n            for (int i = 2; i <= firstElementSize;\
    \ i++) {\n                if (firstElement == uniqueElements.get(i-1) && secondElement\
    \ == uniqueElements.get(i)) {\n                    return true;\n            \
    \    }\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpywwi5mng.java:31: error: cannot find symbol\n                if\
    \ (firstElement == uniqueElements.get(i-1) && secondElement == uniqueElements.get(i))\
    \ {\n                                                  ^\n  symbol:   method get(int)\n\
    \  location: variable uniqueElements of type Set<Long>\n/tmp/tmpywwi5mng.java:31:\
    \ error: cannot find symbol\n                if (firstElement == uniqueElements.get(i-1)\
    \ && secondElement == uniqueElements.get(i)) {\n                             \
    \                                                                 ^\n  symbol:\
    \   method get(int)\n  location: variable uniqueElements of type Set<Long>\n2\
    \ errors\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l\
    \ == null)\n            return false;\n        long sum = 0;\n        for (Long\
    \ val : l) {\n            sum += val;\n        }\n        if (sum == 0)\n    \
    \        return false;\n        List<Long> copy = new ArrayList<>(l);\n      \
    \  Set<Long> unique = new HashSet<>();\n        for (Long val : copy) {\n    \
    \        if (unique.add(val)) {\n                long counter = 0;\n         \
    \       for (int i = 0; i < copy.size(); i++) {\n                    if (copy.get(i)\
    \ == val)\n                        counter++;\n                    if (counter\
    \ == 2)\n                        return true;\n                }\n           \
    \ }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xxfsp1n.java:48)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ aSumsToZero = true;\n        ArrayList<Long> a = new ArrayList<>(l);\n     \
    \   while(a.size() > 1){\n            int size = a.size();\n            ArrayList<Long>\
    \ b = new ArrayList<>(size);\n            for(int i = 0; i < size; i++){\n   \
    \             if(i == 0){\n                    b.add(a.get(i));\n            \
    \    }\n                else{\n                    int sum = 0;\n            \
    \        for(int j = 0; j < i; j++){\n                        sum += a.get(j);\n\
    \                    }\n                    sum += a.get(i);\n               \
    \     if(sum < 0){\n                        sum *= -1;\n                    }\n\
    \                    if(sum != 0){\n                        b.add(a.get(size));\n\
    \                    }\n                    else{\n                        break;\n\
    \                    }\n                }\n            }\n            if(b.size()\
    \ > 2){\n                a.remove(0);\n                a.remove(0);\n        \
    \        a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n                a.remove(0);\n\
    \                a.remove(0);\n                a.remove(0);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfxs97on8.java:124: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011614
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        final\
    \ long two = (1l<<(Integer.SIZE/2));\n        for(int i = 0; i < l.size()-1; i++)\
    \ {\n            long pair = l.get(i)+l.get(i+1);\n            long twoPair =\
    \ pair+pair;\n            if (pair+twoPair <= two) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplkkr5njm.java:37)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2)\n            return false;\n        long i = 0;\n        long j = 1;\n\
    \        List<Long> list = new ArrayList<>(l);\n        Collections.sort(list);\n\
    \        Collections.sort(list);\n        for (long k = list.size() - 1; k >=\
    \ 0; k--) {\n            i = i + list.get(k);\n            j = j - list.get(k);\n\
    \            if (i == j) {\n                return true;\n            }\n    \
    \    }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpahme7uxg.java:31: error: incompatible types: possible lossy conversion\
    \ from long to int\n            i = i + list.get(k);\n                       \
    \      ^\n/tmp/tmpahme7uxg.java:32: error: incompatible types: possible lossy\
    \ conversion from long to int\n            j = j - list.get(k);\n            \
    \                 ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long[]\
    \ arr = l.toArray(new long[l.size()]);\n        Arrays.sort(arr);\n        if\
    \ (arr[0] == 0)\n            return false;\n        boolean twoDiffs = false;\n\
    \        for (int i = 1; i < arr.length; i++) {\n            if (arr[i] - arr[i\
    \ - 1] != 0) {\n                twoDiffs = true;\n                break;\n   \
    \         }\n        }\n        return twoDiffs;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfmokiktp.java:23: error: no suitable method found for toArray(long[])\n\
    \        long[] arr = l.toArray(new long[l.size()]);\n                      ^\n\
    \    method Collection.<T#1>toArray(IntFunction<T#1[]>) is not applicable\n  \
    \    (cannot infer type-variable(s) T#1\n        (argument mismatch; long[] cannot\
    \ be converted to IntFunction<T#1[]>))\n    method ArrayList.<T#2>toArray(T#2[])\
    \ is not applicable\n      (inference variable T#2 has incompatible bounds\n \
    \       equality constraints: long\n        lower bounds: Object)\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>toArray(IntFunction<T#1[]>)\n\
    \    T#2 extends Object declared in method <T#2>toArray(T#2[])\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0l;\n        for (Long val : l) {\n            sum += val;\n        }\n  \
    \      return l != null && l.stream().filter(i -> i % 2 == 0)\n              \
    \  .filter(i -> sum == 0).count() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjmlv6q6a.java:28: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n                .filter(i ->\
    \ sum == 0).count() == 2;\n                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long first\
    \ = 0;\n        long second = 0;\n        for (Long i : l) {\n            if (i\
    \ > 0) {\n                first += i;\n                second += i;\n        \
    \    }\n        }\n        if (first == 0 && second == 0) return false;\n    \
    \    long third = first + second;\n        long fourth = second + third;\n   \
    \     long fifth = third + fourth;\n        long sixth = fourth + fifth;\n   \
    \     if (fifth > 0) return true;\n        if (third == 0 && fourth == 0) return\
    \ false;\n        long seventh = fifth + sixth;\n        if (seventh != 0) return\
    \ true;\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpli9vga17.java:43)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ result = false;\n        if (l.size() > 0) {\n            for (int i = 0; i\
    \ < l.size(); i++) {\n                for (int j = 0; j < l.size(); j++) {\n \
    \                   long a = l.get(i);\n                    long b = l.get(j);\n\
    \                    if (i != j && a != 0 && b != 0) {\n                     \
    \   long sum = a + b;\n                        if (sum == 0) {\n             \
    \               result = true;\n                            break;\n         \
    \               }\n                    }\n                }\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        for(int i = 0; i < l.size(); i++) {\n            sum -= l.get(i);\n\
    \            if(sum == 0) {\n                return true;\n            }\n   \
    \     }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4wizb351.java:36)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        boolean sameElements = false;\n        long lastElement = 0;\n      \
    \  boolean zeroFound = false;\n        for (long element : l) {\n            if\
    \ (element != lastElement) {\n                if (!zeroFound) {\n            \
    \        if (element == 0) {\n                        zeroFound = true;\n    \
    \                    sameElements = true;\n                        break;\n  \
    \                  }\n                } else {\n                    zeroFound\
    \ = false;\n                    sameElements = false;\n                }\n   \
    \         }\n            lastElement = element;\n        }\n        return sameElements;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb8_sn5ed.java:48)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (int i = 0; i<l.size(); i++) {\n            sum += l.get(i);\n\
    \            if (sum < 0) {\n                sum = 0;\n            }\n       \
    \ }\n        // return true if there are two distinct elements in the array list\
    \ that\n        // sum to zero, and false otherwise.\n        return l.size()\
    \ != l.stream().filter(x -> x == sum).count() && l.size() != l.stream().filter(x\
    \ -> x != sum).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyv67poac.java:32: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.size() != l.stream().filter(x\
    \ -> x == sum).count() && l.size() != l.stream().filter(x -> x != sum).count();\n\
    \                                                       ^\n/tmp/tmpyv67poac.java:32:\
    \ error: local variables referenced from a lambda expression must be final or\
    \ effectively final\n        return l.size() != l.stream().filter(x -> x == sum).count()\
    \ && l.size() != l.stream().filter(x -> x != sum).count();\n                 \
    \                                                                            \
    \                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // write\
    \ your code here\n        long first = l.get(0);\n        long second = l.get(1);\n\
    \        boolean areDistinct = true;\n        for (int i = 0; i < l.size() - 1;\
    \ i++) {\n            if (l.get(i) == l.get(i + 1)) {\n                areDistinct\
    \ = false;\n            }\n        }\n        if (areDistinct) {\n           \
    \ return areDistinct;\n        } else {\n            return false;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4mj15c88.java:39)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        boolean found = false;\n        for (long i : l) {\n         \
    \   sum += i;\n            if (sum == 0)\n                found = true;\n    \
    \    }\n        return found;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ewz5oze.java:36)\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        long sum = Collections.reduce(l, (x, y) -> x + y, 0l);\n        return\
    \ sum == 0l;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa7_8vtgy.java:24: error: cannot find symbol\n        long sum =\
    \ Collections.reduce(l, (x, y) -> x + y, 0l);\n                              ^\n\
    \  symbol:   method reduce(ArrayList<Long>,(x,y)->x + y,long)\n  location: class\
    \ Collections\n1 error\n"
  stdout: ''
  timestamp: 1660011615
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l2 = new ArrayList<>(l);\n        boolean b = false;\n        long count = 0;\n\
    \        Set<Long> s = new HashSet<>();\n        l2.stream().forEach(l2 -> {\n\
    \            if (l2.longValue() != 0) {\n                s.add(l2);\n        \
    \        count++;\n            }\n        });\n        Long zero = 0l; // for\
    \ negative zero testing\n        if (count >= 2) {\n            l2.stream().forEach(l\
    \ -> {\n                boolean found = false;\n                long sum = 0;\n\
    \                for (Long l3 : s) {\n                    sum += l3.longValue();\n\
    \                    if (sum == l) {\n                        found = true;\n\
    \                    }\n                }\n                if (!found) {\n   \
    \                 b = true;\n                }\n            });\n        }\n \
    \       if (l2.size() != s.size()) {\n            b = true;\n        }\n     \
    \   if (b) {\n            return false;\n        } else {\n            return\
    \ true;\n        }\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bs34gun.java:27: error: variable l2 is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        l2.stream().forEach(l2 -> {\n     \
    \                       ^\n/tmp/tmp5bs34gun.java:35: error: variable l is already\
    \ defined in method pairsSumToZero(ArrayList<Long>)\n            l2.stream().forEach(l\
    \ -> {\n                                ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011616
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Arrays.sort(l);\n\
    \        return Arrays.stream(l).distinct().count() == 2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp64ze6hu0.java:23: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp64ze6hu0.java:24: error: no suitable method found for stream(ArrayList<Long>)\n\
    \        return Arrays.stream(l).distinct().count() == 2;\n                  \
    \   ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n      (cannot infer\
    \ type-variable(s) T#1\n        (argument mismatch; ArrayList<Long> cannot be\
    \ converted to T#1[]))\n    method Arrays.<T#2>st"
  stdout: ''
  timestamp: 1660011616
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        l.sort(new\
    \ Comparator<Long>() {\n            public int compare(Long o1, Long o2) {\n \
    \               return o1.compareTo(o2);\n            }\n        });\n       \
    \ Collections.sort(l);\n        int count = 0;\n        long sumOfTwo = 0;\n \
    \       for (int i = 0; i < l.size(); i += 2) {\n            sumOfTwo += l.get(i);\n\
    \            sumOfTwo += l.get(i + 1);\n            if (sumOfTwo == 0) return\
    \ true;\n            if (sumOfTwo > 0) count++;\n        }\n        if (count\
    \ % 2 == 1) return false;\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1_obrn6.java:44)\n"
  stdout: ''
  timestamp: 1660011616
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0l;\n        for(Long long1 : l) {\n            sum += long1;\n        }\n\
    \        for(Long long2 : l) {\n            if(Math.abs(sum - long2) > 2l * Long.MIN_VALUE)\
    \ return false;\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpca4hxzr2.java:36)\n"
  stdout: ''
  timestamp: 1660011616
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        l.sort(Comparator.comparing(Long::longValue));\n\
    \        HashSet<Long> set = new HashSet<>();\n        long sum = 0;\n       \
    \ for (int i = 0; i < l.size(); i++) {\n            set.add(l.get(i));\n     \
    \       sum += l.get(i);\n        }\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            Long c = l.get(i);\n            set.clear();\n            for\
    \ (int j = 0; j < l.size(); j++) {\n                if (j != i && ((sum - c) ==\
    \ l.get(j))) {\n                    set.add(c);\n                    sum += c;\n\
    \                }\n            }\n            if (set.size() > 1) {\n       \
    \         return true;\n            }\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0hpes92t.java:49)\n"
  stdout: ''
  timestamp: 1660011616
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2)\n            return false;\n        int n = l.size() - 1;\n        int\
    \ count = 0;\n        ArrayList<Long> ans = new ArrayList<>();\n        Long sum\
    \ = l.stream().reduce(0L, Long::sum);\n        boolean pair = false;\n       \
    \ for (int i = 0; i <= n; i++) {\n            if (Math.abs(l.get(i) - sum) <=\
    \ 1) {\n                ans.add(l.get(i));\n                count += 1;\n    \
    \        }\n            if (count > 1 && !pair) {\n                pair = true;\n\
    \            }\n        }\n        if (count == 0)\n            return false;\n\
    \        boolean pair1 = false;\n        boolean pair2 = false;\n        for (int\
    \ i = 0; i <= n; i++) {\n            if (Math.abs(l.get(i) - sum) <= 1) {\n  \
    \              ans.add(l.get(i));\n                if (ans.contains(sum)) {\n\
    \                    pair1 = true;\n                } else {\n               \
    \     pair2 = true;\n                }\n            }\n        }\n        return\
    \ pair1 || pair2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozqn17dz.java:57)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ s = new HashSet<>();\n        long s = 0;\n        for (Long i: l) {\n     \
    \       s.add(i);\n            s += i;\n        }\n        if (s.size() < 2) return\
    \ false;\n        System.out.println(s);\n        return !s.isEmpty() && (s.contains(0l)\
    \ && (s.contains(l.stream().filter((x) -> x != 0l).map((x) -> -x).sum())));\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3g3cnvwq.java:24: error: variable s is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        long s = 0;\n             ^\n/tmp/tmp3g3cnvwq.java:26:\
    \ error: long cannot be dereferenced\n            s.add(i);\n             ^\n\
    /tmp/tmp3g3cnvwq.java:29: error: long cannot be dereferenced\n        if (s.size()\
    \ < 2) return false;\n             ^\n/tmp/tmp3g3cnvwq.java:31: error: long cannot\
    \ be dereferenced\n        return !s.isEmpty() && (s.contains(0l) && (s.contains(l.stream().filter((x)\
    \ -> x != 0l).map((x) -> -x).sum())));\n                 ^\n/tmp/tmp3g3cnvwq.java:31:\
    \ error: long cannot be dereferenced\n        return !s.isEmpty() && (s.contains(0l)\
    \ && (s.contains(l.stream().filter((x) -> x != 0l).map((x) -> -x).sum())));\n\
    \                                 ^\n/tmp/tmp3g3cnvwq.java:31: error: long cannot\
    \ be dereferenced\n        return !s.isEmpty() && (s.contains(0l) && (s.contains(l.stream().filter((x)\
    \ -> x != 0l).map((x) -> -x).sum())));\n                                     \
    \               ^\n/tmp/tmp3g3cnvwq.java:31: error: cannot find symbol\n     \
    \   return !s.isEmpty() && (s.contains(0l) && (s.contains(l.stream().filter((x)\
    \ -> x != 0l).map((x) -> -x).sum())));\n                                     \
    \                                                                         ^\n\
    \  symbol:   method sum()\n  location: interface Stream<Long>\n7 errors\n"
  stdout: ''
  timestamp: 1660011616
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int n\
    \ = l.size();\n        if (n == 0) return false;\n        long sum = 0;\n    \
    \    for (int i = 0; i < n; i++) {\n            sum += l.get(i);\n        }\n\
    \        long max = 0;\n        for (int i = 1; i < n; i++) {\n            long\
    \ curSum = sum - l.get(i - 1);\n            max = Math.max(max, Math.abs(curSum));\n\
    \            if (Math.abs(curSum) == 0) {\n                return true;\n    \
    \        }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxxw3gjll.java:41)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashSet<Long>\
    \ set = new HashSet<Long>(l);\n        for (long num : l) {\n            if (!set.contains(num\
    \ + num)) {\n                return true;\n            }\n            set.add(num);\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0v_oj4a.java:33)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Long sum\
    \ = 0l;\n        Long lastSum = 0l;\n        for (Long val : l) {\n          \
    \  sum += val;\n            if (sum > 0l) {\n                lastSum = sum;\n\
    \            }\n        }\n        if (lastSum == 0l) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz7grtrl7.java:40)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // create\
    \ an array list of pairs.\n        ArrayList<Pair<Long, Long>> pairList = new\
    \ ArrayList<>();\n        pairList.add(new Pair<Long, Long>(l.get(0), l.get(0)));\n\
    \        // loop over the remaining elements.\n        for (int i = 1; i < l.size();\
    \ i++) {\n            // get current element and next element.\n            Pair<Long,\
    \ Long> current = pairList.get(pairList.size() - 1);\n            Pair<Long, Long>\
    \ next = pairList.get(pairList.size() - 2);\n            // if current element\
    \ plus next element sum to zero.\n            if (l.get(i) + l.get(i-1) == 0)\
    \ {\n                pairList.add(new Pair<Long, Long>(l.get(i), l.get(i)));\n\
    \                pairList.add(new Pair<Long, Long>(l.get(i), l.get(i-1)));\n \
    \           }\n        }\n        // if there are two distinct pairs, return false,\
    \ otherwise return true.\n        if (pairList.size() == 2) {\n            return\
    \ false;\n        } else {\n            return true;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.pairsSumToZero(tmp_zw8vj9v.java:25)\n\tat Problem.main(tmp_zw8vj9v.java:45)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if(l.size()\
    \ == 0 || l.size() == 1) {\n            return false;\n        }\n        long\
    \ sum = 0;\n        for(long i : l) {\n            sum += i;\n        }\n    \
    \    for(long i : l) {\n            if(i == 0 || i != sum) return false;\n   \
    \     }\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp331g809t.java:39)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Map<Long,\
    \ Long> m = new HashMap<>();\n        for (long n : l)\n            m.put(n, m.get(n)\
    \ + 1);\n        for (int i = 1; i < l.size(); i++) {\n            Long v = l.get(i);\n\
    \            Long a = m.get(v);\n            if (a == 0) return false;\n     \
    \       m.put(v, (Long) (a-1));\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.lang.Long.longValue()\" because the return value of \"java.util.Map.get(Object)\"\
    \ is null\n\tat Problem.pairsSumToZero(tmpmedno3sl.java:25)\n\tat Problem.main(tmpmedno3sl.java:35)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        \n   \
    \     \n        List<Long> pairs = l.stream().filter(pair -> pair[0] != pair[1]).collect(Collectors.toList());\n\
    \        \n        \n        \n        return pairs.size() < 2;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9shnj7tc.java:25: error: array required, but Long found\n     \
    \   List<Long> pairs = l.stream().filter(pair -> pair[0] != pair[1]).collect(Collectors.toList());\n\
    \                                                         ^\n/tmp/tmp9shnj7tc.java:25:\
    \ error: array required, but Long found\n        List<Long> pairs = l.stream().filter(pair\
    \ -> pair[0] != pair[1]).collect(Collectors.toList());\n                     \
    \                                               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        List<Long>\
    \ a = new ArrayList<>();\n        List<Long> b = new ArrayList<>();\n        for\
    \ (Long e : l) {\n            a.add(e);\n            b.add(0);\n        }\n  \
    \      if (b.size() != a.size())\n            return false;\n        for (Long\
    \ e : l) {\n            long s = 0;\n            for (Long i : a)\n          \
    \      s += i;\n            if (s > 0)\n                for (int i = 0; i < a.size();\
    \ i++)\n                    if (a.get(i) == e) {\n                        b.set(i,\
    \ b.get(i) + 1);\n                        if (b.size() != a.size())\n        \
    \                    return false;\n                    }\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg46vzjy9.java:27: error: incompatible types: int cannot be converted\
    \ to Long\n            b.add(0);\n                  ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) return false;\n        long one = l.get(0);\n        long two = l.get(1);\n\
    \        long sum = 0;\n        for (int i = 2; i < l.size(); i++) {\n       \
    \     long temp = l.get(i);\n            if (temp > 0) {\n                sum\
    \ += temp;\n            }\n            long temp = l.get(i);\n            if (temp\
    \ != 0) {\n                if (sum == 0) return true;\n                if (sum\
    \ + temp == one) {\n                    return false;\n                }\n   \
    \         }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4sb6m2uo.java:32: error: variable temp is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n            long temp = l.get(i);\n       \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        IntIntDoubleIntHashMap<Integer>\
    \ a = new IntIntDoubleIntHashMap<Integer>();\n\n        for (Long e : l) {\n \
    \           a.put(e, 0);\n        }\n\n        for (Long e : l) {\n          \
    \  if (a.get(e) != 0) {\n                return false;\n            }\n      \
    \  }\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmporg46ucb.java:23: error: cannot find symbol\n        IntIntDoubleIntHashMap<Integer>\
    \ a = new IntIntDoubleIntHashMap<Integer>();\n        ^\n  symbol:   class IntIntDoubleIntHashMap\n\
    \  location: class Problem\n/tmp/tmporg46ucb.java:23: error: cannot find symbol\n\
    \        IntIntDoubleIntHashMap<Integer> a = new IntIntDoubleIntHashMap<Integer>();\n\
    \                                                ^\n  symbol:   class IntIntDoubleIntHashMap\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // Complete\
    \ this function\n        if (l == null || l.size() < 2) return false;\n      \
    \  long sum = 0;\n        for (long i : l) sum += i;\n        return sum == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpabegovl4.java:33)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long maxOne\
    \ = 0, maxTwo = 0;\n        int count = l.size();\n        for (int i = 0; i <\
    \ count; i++) {\n            long one = l.get(i);\n            long two = l.get(i\
    \ + 1);\n            if (one == two) {\n                return false;\n      \
    \      }\n            if (one > maxOne) {\n                maxOne = one;\n   \
    \         }\n            if (two > maxTwo) {\n                maxTwo = two;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 4 out of bounds for length 4\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.pairsSumToZero(tmp3calr7ab.java:27)\n\tat Problem.main(tmp3calr7ab.java:41)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if(l.size()\
    \ < 2) {\n            return false;\n        }\n        ArrayList<Long> l1 = new\
    \ ArrayList<Long>();\n        ArrayList<Long> l2 = new ArrayList<Long>();\n  \
    \      boolean flag = false;\n        for(Long l : l) {\n            if(l1 ==\
    \ null || l2 == null || l+l1 != 0l) {\n                l1.add(l);\n          \
    \  }\n            else {\n                l2.add(l);\n            }\n        }\n\
    \        if(l1 != null && l1.size() >= 2 && l2 != null && l2.size() >= 2) {\n\
    \            flag = true;\n            for(Long l : l1) {\n                if(l2\
    \ == null || l-l2 != 0l) {\n                    return flag;\n               \
    \ }\n                else {\n                    flag = false;\n             \
    \   }\n            }\n        }\n        return flag;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_21n26or.java:29: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for(Long l : l) {\n               \
    \  ^\n/tmp/tmp_21n26or.java:30: error: bad operand types for binary operator '+'\n\
    \            if(l1 == null || l2 == null || l+l1 != 0l) {\n                  \
    \                          ^\n  first type:  Long\n  second type: ArrayList<Long>\n\
    /tmp/tmp_21n26or.java:39: error: variable l is already defined in method pairsSumToZero(ArrayList<Long>)\n\
    \            for(Long l : l1) {\n                     ^\n/tmp/tmp_21n26or.java:40:\
    \ error: bad operand types for binary operator '-'\n                if(l2 == null\
    \ || l-l2 != 0l) {\n                                  ^\n  first type:  Long\n\
    \  second type: ArrayList<Long>\n4 errors\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // Declare\
    \ and initialize variables\n        long zero = 0;\n        boolean check = false;\n\
    \        int count = 0;\n\n        // Declare a list to hold pairs that sum to\
    \ zero\n        List<Pair<Long, Long>> pairList = new ArrayList<>();\n\n     \
    \   // Traverse the array list l to create pairs\n        l.forEach(a -> {\n \
    \           Pair<Long, Long> pair = new Pair<>(l, a);\n            if (pair.second()\
    \ == 0) {\n                zero = pair.first();\n            }\n            if\
    \ (pair.first() > 0) {\n                pairList.add(pair);\n            }\n \
    \       });\n\n        // Traverse the pair list to check for pairs\n        for\
    \ (Pair<Long, Long> pair : pairList) {\n            // If pair.first == pair.second\
    \ then pair is a duplicate pair\n            if (pair.first() == pair.second())\
    \ {\n                check = true;\n            }\n            // If pair.first\
    \ > pair.second then pair.first and pair.second sum to zero\n            if (pair.first()\
    \ > pair.second()) {\n                check = false;\n            }\n        \
    \    count++;\n        }\n\n        return count == pairList.size() ? check :\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiaggqswb.java:33: error: incompatible types: cannot infer type\
    \ arguments for Pair<>\n            Pair<Long, Long> pair = new Pair<>(l, a);\n\
    \                                            ^\n    reason: inference variable\
    \ A has incompatible bounds\n      equality constraints: Long\n      lower bounds:\
    \ ArrayList<Long>\n  where A is a type-variable:\n    A extends Object declared\
    \ in class Pair\n/tmp/tmpiaggqswb.java:34: error: cannot find symbol\n       \
    \     if (pair.second() == 0) {\n                    ^\n  symbol:   method second()\n\
    \  location: variable pair of type Pair<Long,Long>\n/tmp/tmpiaggqswb.java:35:\
    \ error: cannot find symbol\n                zero = pair.first();\n          \
    \                 ^\n  symbol:   method first()\n  location: variable pair of\
    \ type Pair<Long,Long>\n/tmp/tmpiaggqswb.java:37: error: cannot find symbol\n\
    \            if (pair.first() > 0) {\n                    ^\n  symbol:   method\
    \ first()\n  location: variable pair of type Pair<Long,Long>\n/tmp/tmpiaggqswb.java:45:\
    \ error: cannot find symbol\n            if (pair.first() == pair.second()) {\n\
    \                    ^\n  symbol:   method first()\n  location: variable pair\
    \ of type Pair<Long,Long>\n/tmp/tmpiaggqswb.java:45: error: cannot find symbol\n\
    \            if (pair.first() == pair.second()) {\n                          \
    \          ^\n  symbol:   method second()\n  location: variable pair of type Pair<Long,Long>\n\
    /tmp/tmpiaggqswb.java:49: error: cannot find symbol\n            if (pair.first()\
    \ > pair.second()) {\n                    ^\n  symbol:   method first()\n  location:\
    \ variable pair of type Pair<Long,Long>\n/tmp/tmpiaggqswb.java:49: error: cannot\
    \ find symbol\n            if (pair.first() > pair.second()) {\n             \
    \                      ^\n  symbol:   method second()\n  location: variable pair\
    \ of type Pair<Long,Long>\n8 errors\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ result = true;\n        HashMap<Long,Long> h = new HashMap<>();\n        for(Long\
    \ i : l)\n        {\n            long temp = i;\n            h.put(temp,temp);\n\
    \        }\n        for(Long i: l)\n        {\n            Long temp2 = i;\n \
    \           if(!h.containsKey(temp2))\n            {\n                result =\
    \ false;\n                break;\n            }\n            else if(h.containsKey(temp2))\n\
    \            {\n                Long temp3 = h.get(temp2);\n                if(temp2.equals(temp3))\n\
    \                {\n                    result = false;\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvq4sxrx3.java:54)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        Long one = l.get(0);\n        Long two = l.get(1);\n        Long three\
    \ = l.get(2);\n        Long four = l.get(3);\n        Long five = l.get(4);\n\
    \        Long six = l.get(5);\n        if ((one == two) && (three == four) &&\
    \ (five == six)) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 4 out of bounds for length 4\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.pairsSumToZero(tmpbr6xvsdg.java:28)\n\tat Problem.main(tmpbr6xvsdg.java:36)\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // write\
    \ your code here\n        List<Long> temp = new ArrayList<>();\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            Long ls = l.get(i);\n            temp.add(ls);\n\
    \        }\n        long n = l.size();\n        long a = 0, b = 0, c = 0, d =\
    \ 0, e = 0, f = 0;\n        for (int i = 0; i < n - 1; i++) {\n            a =\
    \ 0;\n            b = 0;\n            c = 0;\n            d = 0;\n           \
    \ e = 0;\n            f = 0;\n            boolean isNotInt = false;\n        \
    \    boolean isInt = false;\n            if (i != n - 1) {\n                for\
    \ (long j = i + 1; j < n; j++) {\n                    isInt = true;\n        \
    \            if (temp.get(i).equals(temp.get(j))) {\n                        a\
    \ = a + 1;\n                    } else {\n                        isInt = false;\n\
    \                    }\n                    if (temp.contains(temp.get(j))) {\n\
    \                        b = b + 1;\n                    } else {\n          \
    \              isInt = false;\n                    }\n                    if (a\
    \ != 0) {\n                        c = c + 1;\n                    } else {\n\
    \                        isInt = false;\n                    }\n             \
    \       if (b != 0) {\n                        d = d + 1;\n                  \
    \  } else {\n                        isInt = false;\n                    }\n \
    \                   if (c != 0) {\n                        e = e + 1;\n      \
    \              } else {\n                        isInt = false;\n            \
    \        }\n                    if (d != 0) {\n                        f = f +\
    \ 1;\n                    } else {\n                        isInt = false;\n \
    \                   }\n                }\n                if (isInt) {\n     \
    \               isNotInt = true;\n                }\n            }\n         \
    \   if (isNotInt) {\n                return false;\n            }\n        }\n\
    \        return !(e == f == 0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvaplat0w.java:43: error: incompatible types: possible lossy conversion\
    \ from long to int\n                    if (temp.get(i).equals(temp.get(j))) {\n\
    \                                                    ^\n/tmp/tmpvaplat0w.java:48:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \                if (temp.contains(temp.get(j))) {\n                         \
    \                      ^\n/tmp/tmpvaplat0w.java:82: error: incomparable types:\
    \ boolean and int\n        return !(e == f == 0);\n                        ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n3 errors\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().allMatch(x -> l.stream().noneMatch(y -> y == x));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6a2mztvq.java:29)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        l.stream().forEach((t)\
    \ -> {\n            if (l.contains(t)) {\n                l.stream().forEach((t)\
    \ -> {\n                    if (t.equals(t)) {\n                        if (t\
    \ == 0) {\n                            return true;\n                        }\n\
    \                    }\n                });\n            }\n        });\n    \
    \    return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4f2rrwoz.java:25: error: incompatible types: unexpected return\
    \ value\n                l.stream().forEach((t) -> {\n                       \
    \            ^\n/tmp/tmp4f2rrwoz.java:25: error: variable t is already defined\
    \ in method pairsSumToZero(ArrayList<Long>)\n                l.stream().forEach((t)\
    \ -> {\n                                    ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        l.add(0L);\n\
    \        l.add(-1L);\n        long result = 0L;\n        for (long x: l) { \n\
    \            result = result + x;\n        }\n        boolean equal = l.stream().anyMatch(i\
    \ -> result == i);\n        return equal;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjhywblsw.java:29: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        boolean equal = l.stream().anyMatch(i\
    \ -> result == i);\n                                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l2 = new ArrayList<>();\n        for (Long i : l) {\n            l2.add(i +\
    \ 0l);\n            l2.add(i + 1l);\n        }\n        ArrayList<Long> l3 = new\
    \ ArrayList<>();\n        l3.addAll(Arrays.asList(1l, 2l, 3l, 4l, 5l, 6l, 7l,\
    \ 8l, 9l));\n        l3.addAll(Arrays.asList(10l, 11l, 12l, 13l, 14l, 15l, 16l,\
    \ 17l, 18l, 19l, 20l, 21l, 22l, 23l, 24l, 25l, 26l, 27l, 28l, 29l, 30l, 31l, 32l,\
    \ 33l, 34l, 35l, 36l, 37l, 38l, 39l, 40l, 41l, 42l, 43l, 44l, 45l, 46l, 47l, 48l,\
    \ 49l, 50l, 51l, 52l, 53l, 54l, 55l, 56l, 57l, 58l, 59l, 60l, 61l, 62l, 63l, 64l,\
    \ 65l, 66l, 67l, 68l, 69l, 70l, 71l, 72l, 73l, 74l, 75l, 76l, 77l, 78l, 79l, 80l,\
    \ 81l, 82l, 83l, 84l, 85l, 86l, 87l, 88l, 89l, 90l, 91l, 92l, 93l, 94l, 95l, 96l,\
    \ 97l, 98l, 99l));\n        ArrayList<Long> l4 = new ArrayList<>();\n        l4.addAll(Arrays.asList(1l,\
    \ 2l, 3l, 4l, 5l, 6l, 7l, 8l, 9l, 10l, 11l, 12l, 13l, 14l, 15l, 16l, 17l, 18l,\
    \ 19l, 20l, 21l, 22l, 23l, 24l, 25l, 26l, 27l, 28l, 29l, 30l, 31l, 32l, 33l, 34l,\
    \ 35l, 36l, 37l, 38l, 39l, 40l, 41l, 42l, 43l, 44l, 45l, 46l, 47l, 48l, 49l, 50l,\
    \ 51l, 52l, 53l, 54l, 55l, 56l, 57l, 58l, 59l, 60l, 61l, 62l, 63l, 64l, 65l, 66l,\
    \ 67l, 68l, 69l, 70l, 71l, 72l, 73l, 74l, 75l, 76l, 77l, 78l, 79l, 80l, 81l, 82l,\
    \ 83l, 84l, 85l, 86l, 87l, 88l, 89l, 90l, 91l, 92l, 93l, 94l, 95l, 96l, 97l, 98l,\
    \ 99l));\n        ArrayList<Long> l5 = new ArrayList<>();\n        l5.addAll(Arrays.asList(1l,\
    \ 2l, 3l, 4l, 5l, 6l, 7l, \n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_gfzzx5.java:35: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 4
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        LongStream\
    \ s = l.stream();\n        s.parallel().forEach(s1 -> {\n            LongStream\
    \ s2 = l.stream();\n            s2.parallel().forEach(s3 -> {\n              \
    \  if(s1 + s2 != 0 && s1 + s2 != s3 && s2 + s1 != 0 && s2 + s1 != s3) return true;\n\
    \            });\n        });\n        return false; // if none of the pairs sum\
    \ to zero, then returns false.\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpws7l8dxc.java:23: error: incompatible types: Stream<Long> cannot\
    \ be converted to LongStream\n        LongStream s = l.stream();\n           \
    \                    ^\n/tmp/tmpws7l8dxc.java:25: error: incompatible types: Stream<Long>\
    \ cannot be converted to LongStream\n            LongStream s2 = l.stream();\n\
    \                                    ^\n/tmp/tmpws7l8dxc.java:26: error: incompatible\
    \ types: unexpected return value\n            s2.parallel().forEach(s3 -> {\n\
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\nprinting javac\
    \ parameters to: /work/arjunguha-research-group/repos/polyglot-codegen-evaluation/src/javac.20220808_222018.args\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().distinct().reduce(IntStream.range(1,l.size()).filter(i -> l.get(i-1)\
    \ + l.get(i) == 0)) == false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6gz78z5q.java:23: error: no suitable method found for reduce(IntStream)\n\
    \        return l.stream().distinct().reduce(IntStream.range(1,l.size()).filter(i\
    \ -> l.get(i-1) + l.get(i) == 0)) == false;\n                                \
    \    ^\n    method Stream.reduce(BinaryOperator<Long>) is not applicable\n   \
    \   (argument mismatch; IntStream cannot be converted to BinaryOperator<Long>)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Long,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long num : l) {\n            sum += num;\n        }\n   \
    \     if (sum < 0)\n            return false;\n        Arrays.sort(l);\n     \
    \   long lastSum = 0;\n        boolean first = true;\n        for (int i = 0;\
    \ i < l.size(); ++i) {\n            long num = l.get(i);\n            long tempSum\
    \ = lastSum + num;\n            if (tempSum == 0) {\n                return first;\n\
    \            }\n            lastSum = tempSum;\n            first = false;\n \
    \       }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd7t9vvfq.java:29: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(l);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for (long x: l) {\n            map.put(x,\
    \ map.getOrDefault(x + x, 0L));\n        }\n        for (long x: l) {\n      \
    \      if (map.get(x) == 0)\n                return false;\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6c5bf20.java:37)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long s\
    \ = 0;\n        for (Long i : l)\n            s += i;\n        if (s == 0l)\n\
    \            return true;\n        for (Long i : l)\n            if (i != s)\n\
    \                return false;\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhezc_iw.java:37)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Map<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : l) { map.put(i, 0L); }\n\
    \        for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1;\
    \ j < l.size(); j++) {\n                if (map.containsKey(l.get(j))) { map.put(l.get(j),\
    \ map.get(l.get(j)) + 1L); }\n                else { map.put(l.get(j), 1L); }\n\
    \            }\n        }\n        for (Map.Entry<Long, Long> entry : map.entrySet())\
    \ {\n            if (entry.getValue() == 2L && entry.getKey() == 0L) { return\
    \ true; }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpllg8dd4w.java:40)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \n        int n = l.size();\n        if (n <= 1) return true;\n\n        boolean\
    \ hasTwoDiff = true;\n        int lastVal = l.get(0);\n\n        for (int i =\
    \ 1; i < n; i++) {\n            if (l.get(i) - lastVal == 0) {\n             \
    \   hasTwoDiff = false;\n                break;\n            }\n            lastVal\
    \ = l.get(i);\n        }\n\n        return hasTwoDiff;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1awe13ix.java:29: error: incompatible types: Long cannot be converted\
    \ to int\n        int lastVal = l.get(0);\n                           ^\n/tmp/tmp1awe13ix.java:36:\
    \ error: incompatible types: Long cannot be converted to int\n            lastVal\
    \ = l.get(i);\n                           ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ !l.stream()\n                .filter(x -> x%2 == 0)\n                .map(x\
    \ -> x.longValue())\n                .collect(Collectors.toSet())\n          \
    \      .containsAll(l.stream()\n                        .map(x -> x.longValue())\n\
    \                        .collect(Collectors.toSet())\n                      \
    \  .stream()\n                        .filter(y -> y == 0)\n                 \
    \       .collect(Collectors.toSet()));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7bt2p2ti.java:38)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ found = false;\n        HashMap<Long, Long> map = new HashMap<>();\n       \
    \ for (Long l : l) {\n            if (!map.containsKey(l))\n                map.put(l,\
    \ 0l);\n            map.put(l, map.get(l) + l);\n        }\n        if (map.containsKey(0l))\n\
    \            return true;\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_o9tdt25.java:25: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (Long l : l) {\n              \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ ret=false;\n        if(l==null || l.size()<2)\n            return ret;\n   \
    \     long sum=0;\n        for(long i:l)\n            sum+=i;\n        long cursum=0;\n\
    \        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n    \
    \        return ret;\n        for(long i:l)\n            if(i!=0)\n          \
    \      sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:l)\n            cursum+=i;\n        if(sum!=cursum)\n\
    \            return ret;\n        for(long i:l)\n            if(i!=0)\n      \
    \          sum-=i;\n        for(long i:\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfokekel5.java:115: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011617
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        return l != null && l != null && l.size() > 0 && (sum == 0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpriwh6_cv.java:33)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int sum\
    \ = 0;\n        for (Long s : l) {\n            sum += s;\n        }\n       \
    \ // return true if there are two distinct elements in the array list\n      \
    \  // that sum to zero\n        if (sum == 0) return false;\n        if (l.size()\
    \ == 1) {\n            return sum == l.get(0);\n        }\n        if (l.size()\
    \ > 2) {\n            long firstSum = 0;\n            long secondSum = 0;\n  \
    \          for (Long s : l) {\n                firstSum += s;\n            }\n\
    \            for (Long s : l) {\n                secondSum += s;\n           \
    \ }\n            if (firstSum == 0 || secondSum == 0) {\n                return\
    \ false;\n            }\n            if (firstSum + secondSum == sum) {\n    \
    \            return true;\n            }\n            return pairsSumToZero(l.subList(1,\
    \ l.size()-1));\n        }\n        return true;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6d6mjzdf.java:48: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n            return pairsSumToZero(l.subList(1,\
    \ l.size()-1));\n                                           ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l\n                .stream()\n                .map(e -> Arrays.asList(new Long[]\
    \ {e}))\n                .map(e -> Arrays.stream(e))\n                .collect(Collectors.groupingBy(Function.identity(),\
    \ Collectors.counting()) > 1);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe0wq71r5.java:27: error: cannot find symbol\n                .collect(Collectors.groupingBy(Function.identity(),\
    \ Collectors.counting()) > 1);\n                                             \
    \  ^\n  symbol:   variable Function\n  location: class Problem\n/tmp/tmpe0wq71r5.java:26:\
    \ error: no suitable method found for stream(List<Long>)\n                .map(e\
    \ -> Arrays.stream(e))\n                                ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; List<Long> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; List<Long> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; List<Long> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; List<Long> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long zero\
    \ = 0l;\n        long sum = 0l;\n        for (long e : l) {\n            sum =\
    \ sum + e;\n            if (e == 0 && sum == zero) {\n                return true;\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17eples3.java:37)\n"
  stdout: ''
  timestamp: 1660011618
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ flag = false;\n        for (int i = 0; i < l.size(); i++) {\n            long\
    \ current = l.get(i);\n            int j = i + 1;\n            if (j == l.size()\
    \ || l.get(j) == current) {\n                continue;\n            }\n      \
    \      while (j < l.size() && l.get(j) != current) {\n                j++;\n \
    \           }\n            if (j == l.size()) {\n                flag = true;\n\
    \                continue;\n            }\n            long sum = current + l.get(j);\n\
    \            if (sum == 0) {\n                flag = true;\n                for\
    \ (int k = j; k < l.size(); k++) {\n                    l.remove(j);\n       \
    \         }\n            }\n        }\n        return flag;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjit2v5sa.java:48)\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ <= 2) return false;\n        // Create a set of the unique elements in the array\
    \ list.\n        Set<Long> set = new HashSet<Long>(l);\n        // Create a set\
    \ of the elements in the array list that are greater than the largest element\
    \ in the array.\n        Set<Long> greater = new HashSet<Long>(l);\n        greater.add(Collections.max(l));\n\
    \        // Iterate over the set and if the element is in the greater set, it's\
    \ in the set.\n        for (Long i : set) {\n            if (greater.contains(i))\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppy1gz_sm.java:38)\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ pairsSumToZero(l, 0L);\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpinlxopwh.java:23: error: method pairsSumToZero in class Problem\
    \ cannot be applied to given types;\n        return pairsSumToZero(l, 0L);\n \
    \              ^\n  required: ArrayList<Long>\n  found:    ArrayList<Long>,long\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ flag=false;\n        long sum=0;\n        for(Long i : l) {\n            sum+=i;\n\
    \        }\n        if(l.size()<2)\n            return false;\n        else if(l.size()==2)\n\
    \            return true;\n        else\n            for(Long i : l) {\n     \
    \           if(Math.abs(sum-i)<1)\n                    flag=true;\n          \
    \      sum=i;\n            }\n        return flag;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0nwt883t.java:44)\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ b = false;\n        for(int i = 1; i<l.size(); i++){\n            for(int j\
    \ = i+1; j<l.size(); j++){\n                if((l.get(i)-l.get(j)) > 0){\n   \
    \                 b = true;\n                    break;\n                }\n \
    \           }\n        }\n        return b;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsp6zrs2f.java:35)\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int n\
    \ = l.size();\n        // iterate from 0 to n-1\n        for (int i = 0; i < n;\
    \ i++) {\n            for (int j = i + 1; j < n; j++) {\n                // if\
    \ the current element is bigger than the previous element,\n                //\
    \ return false\n                if (l.get(i) + l.get(j) > 0) {\n             \
    \       return false;\n                }\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuc6l1xx9.java:40)\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Integer>\
    \ a1 = new ArrayList<>();\n        ArrayList<Integer> a2 = new ArrayList<>();\n\
    \        l.forEach((long i) -> {\n            if (a1.contains(i - 1)) {\n    \
    \            a1.add(i + 1);\n            } else {\n                a1.add(i);\n\
    \            }\n            if (a2.contains(i + 1)) {\n                a2.add(i\
    \ + 1);\n            } else {\n                a2.add(i);\n            }\n   \
    \     });\n\n        // if a1.size() == a2.size(), then there are two distinct\
    \ elements that\n        // sum to zero\n        if (a1.size() == a2.size()) {\n\
    \            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ritb3bw.java:25: error: incompatible types: cannot infer functional\
    \ interface descriptor for Consumer<? super Long>\n        l.forEach((long i)\
    \ -> {\n                  ^\n/tmp/tmp2ritb3bw.java:27: error: incompatible types:\
    \ long cannot be converted to Integer\n                a1.add(i + 1);\n      \
    \                   ^\n/tmp/tmp2ritb3bw.java:29: error: incompatible types: long\
    \ cannot be converted to Integer\n                a1.add(i);\n               \
    \        ^\n/tmp/tmp2ritb3bw.java:32: error: incompatible types: long cannot be\
    \ converted to Integer\n                a2.add(i + 1);\n                     \
    \    ^\n/tmp/tmp2ritb3bw.java:34: error: incompatible types: long cannot be converted\
    \ to Integer\n                a2.add(i);\n                       ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    5 errors\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if(l.size()\
    \ < 2) return false;\n        long t[] = new long[l.size()];\n        long total\
    \ = 0;\n        for(int i=0; i < t.length; i++) {\n            t[i] = l.get(i);\n\
    \            total += t[i];\n        }\n        for(int j=1; j < t.length; j++)\
    \ {\n            total -= t[j];\n            if(total == 0) return true;\n   \
    \     }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7wbrked9.java:38)\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Long result\
    \ = Arrays.stream(l).reduce(0, Long::sum);\n        if (result == 0L) return true;\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplzbnu201.java:23: error: no suitable method found for stream(ArrayList<Long>)\n\
    \        Long result = Arrays.stream(l).reduce(0, Long::sum);\n              \
    \              ^\n    method Arrays.<T#1>stream(T#1[]) is not applicable\n   \
    \   (cannot infer type-variable(s) T#1\n        (argument mismatch; ArrayList<Long>\
    \ cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Long sum\
    \ = 0l;\n        for(int i = 0; i < l.size(); i++) {\n            sum+=l.get(i);\n\
    \            if((sum)==0l) return false;\n        }\n        return true;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1cyizbg.java:31)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ found = false;\n        List<Long> list = new ArrayList<>();\n        for(Long\
    \ l1 : l)\n            list.add(l1);\n        for(Long l2 : list) {\n        \
    \    if((l1 -= l2) == 0) {\n                found = true;\n                break;\n\
    \            }\n        }\n        return found;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe2qedonk.java:28: error: cannot find symbol\n            if((l1\
    \ -= l2) == 0) {\n                ^\n  symbol:   variable l1\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011619
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int count\
    \ = 0;\n        for (int i = 1; i < l.size(); i++) {\n            Long first =\
    \ l.get(i);\n            Long second = l.get(i - 1);\n            if ((first +\
    \ second) == 0) {\n                count++;\n            }\n        }\n      \
    \  return count == 2;\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphb2bkziq.java:37)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        final\
    \ List<Long> l1 = l.subList(0, l.size());\n        final List<Long> l2 = l.subList(0,\
    \ l.size());\n        if (l1.equals(l2)) {\n            return true;\n       \
    \ }\n        final long sum1 = l1.stream().mapToLong(Long::longValue).sum();\n\
    \        final long sum2 = l2.stream().mapToLong(Long::longValue).sum();\n   \
    \     return Math.abs(sum1 - sum2) <= Math.max(Math.abs(sum1), Math.abs(sum2));\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpicm6w20d.java:33)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        List<Pair<Long,\
    \ Long>> list = l.stream().filter(i -> i > 0).collect(Collectors.toList());\n\
    \        Collections.sort(list);\n        int lastElement = 0;\n        for (int\
    \ i = 0; i < list.size(); i++) {\n            lastElement = list.get(i).item;\n\
    \            if (i == list.size() - 1) {\n                if (lastElement == 0)\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                int next = list.get(i + 1).item;\n                if (next\
    \ != 0) {\n                    return false;\n                }\n            }\n\
    \        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lvorncn.java:23: error: incompatible types: inference variable\
    \ T has incompatible bounds\n        List<Pair<Long, Long>> list = l.stream().filter(i\
    \ -> i > 0).collect(Collectors.toList());\n                                  \
    \                                         ^\n    equality constraints: Pair<Long,Long>\n\
    \    lower bounds: Long\n  where T is a type-variable:\n    T extends Object declared\
    \ in method <T>toList()\n/tmp/tmp_lvorncn.java:27: error: cannot find symbol\n\
    \            lastElement = list.get(i).item;\n                               \
    \      ^\n  symbol:   variable item\n  location: class Pair<Long,Long>\n/tmp/tmp_lvorncn.java:33:\
    \ error: cannot find symbol\n                int next = list.get(i + 1).item;\n\
    \                                          ^\n  symbol:   variable item\n  location:\
    \ class Pair<Long,Long>\n3 errors\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        Collections.sort(l, Collections.reverseOrder());\n        long n = l.size();\n\
    \        boolean a = true;\n        for (int i = 0; i < n - 1; i++) {\n      \
    \      long sum = l.get(i) + l.get(i + 1);\n            if (sum < 0) {\n     \
    \           a = false;\n                break;\n            } else if (sum ==\
    \ 0) {\n                a = true;\n            }\n        }\n        return a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp57pqy__u.java:39)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return true;\n        if (l.size() == 1) { return false; }\n        long sum\
    \ = l.get(0);\n        for (Long x : l) {\n            if (x == 0) continue;\n\
    \            if (sum - x == 0) { return true; }\n            sum += x;\n     \
    \   }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8u590p0h.java:34)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ s = new HashSet<Long>();\n        for (Long i : l) {\n            s.add(i);\n\
    \        }\n        return l.size() <= 1 || s.equals(l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv3no9dh3.java:33)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        l.stream().forEach(i\
    \ -> {\n            System.out.println(sumToZero(i));\n        });\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf4hucv14.java:24: error: cannot find symbol\n            System.out.println(sumToZero(i));\n\
    \                               ^\n  symbol:   method sumToZero(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int n\
    \ = l.size();\n        int sum = 0;\n        int count = 0;\n        // create\
    \ pairs of elements\n        for (int i = 0; i < n - 1; i++) {\n            sum\
    \ += l.get(i);\n            count++;\n            for (int j = i + 1; j < n; j++)\
    \ {\n                sum += l.get(j);\n                count++;\n            }\n\
    \        }\n        // return true if count is even, else false\n        if (count\
    \ % 2 == 0) {\n            return true;\n        }\n        else {\n         \
    \   return false;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe4g3qtkn.java:48)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ pairs = new HashSet<Long>();\n        for( long i : l) {\n            pairs.add(i);\n\
    \        }\n        for( long j : l) {\n            if( pairs.contains(j) && pairs.size()\
    \ > 1 ) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7sandwv_.java:38)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().map(x -> Math.abs(x) + Math.abs(l.get(l.size() - 1 - x))).distinct().count()\
    \ == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpivilqrcw.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return l.stream().map(x -> Math.abs(x) + Math.abs(l.get(l.size()\
    \ - 1 - x))).distinct().count() == 2;\n                                      \
    \                                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long aSum\
    \ = l.get(0);\n        for (int i = 1; i < l.size(); i++) {\n            aSum\
    \ = aSum + l.get(i);\n        }\n        boolean found = true;\n        for (int\
    \ i = 1; i < l.size(); i++) {\n            long bSum = l.get(i);\n           \
    \ if (bSum == 0)\n                continue;\n            if (aSum > 0 && bSum\
    \ < 0) {\n                found = false;\n                break;\n           \
    \ }\n            else if (aSum < 0 && bSum > 0) {\n                found = false;\n\
    \                break;\n            }\n            else if (aSum < 0 && bSum\
    \ > 0) {\n                found = false;\n                break;\n           \
    \ }\n            else if (aSum > 0 && bSum < 0) {\n                found = false;\n\
    \                break;\n            }\n        }\n        return found;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4p62e5te.java:52)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        long sum = 0;\n        for (Long l : l) {\n            sum = sum + l;\n\
    \        }\n        long zero = 0;\n        for (Long l : l) {\n            if\
    \ (l == 0) {\n                zero = l;\n                break;\n            }\n\
    \        }\n        return sum == zero;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjua4vzd1.java:25: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (Long l : l) {\n              \
    \    ^\n/tmp/tmpjua4vzd1.java:29: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (Long l : l) {\n              \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ one = new ArrayList<>(Arrays.asList((long)1l));\n        ArrayList<Long> two\
    \ = new ArrayList<>(Arrays.asList((long)2l));\n        ArrayList<Long> three =\
    \ new ArrayList<>(Arrays.asList((long)3l));\n        for (Long item : l) {\n \
    \           long d = item - one.get(0) + two.get(0) + three.get(0);\n        \
    \    int i1 = one.indexOf(one.get(0));\n            int i2 = two.indexOf(one.get(0));\n\
    \            int i3 = three.indexOf(one.get(0));\n            one.remove(i1);\n\
    \            two.remove(i2);\n            three.remove(i3);\n            if (d\
    \ != 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -1 out of bounds for length 1\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.remove(ArrayList.java:504)\n\
    \tat Problem.pairsSumToZero(tmp2ffsjiy8.java:32)\n\tat Problem.main(tmp2ffsjiy8.java:41)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        long n1 = 0, n2 = 0, n3\
    \ = 0; //n1, n2, n3 are temporary variables\n        long n4 = 0;\n        for\
    \ (Long i : l) {\n            if (i == 0) {\n                n1 = 0;\n       \
    \         n2 = 0;\n                n3 = 0;\n                n4 = 0;\n        \
    \    } else if (i == 1) {\n                n1 = n2;\n                n2 = 0;\n\
    \                n3 = 0;\n                n4 = 0;\n            } else if (i ==\
    \ 2) {\n                n1 = n2;\n                n2 = n3;\n                n3\
    \ = 0;\n                n4 = 0;\n            } else if (i == 3) {\n          \
    \      n1 = n2;\n                n2 = n3;\n                n3 = n4;\n        \
    \        n4 = 0;\n            } else if (i == 4) {\n                n1 = n2;\n\
    \                n2 = n3;\n                n3 = n4;\n                n4 = i;\n\
    \            }\n        }\n        return (n1 != n2) || (n3 != n4);\n    }\n \
    \   public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42bgoczv.java:64)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int len\
    \ = l.size();\n        ArrayList<Long> m = new ArrayList<>(len);\n        long\
    \ total = 0;\n        for (int i = 0; i < len; i++) {\n            long v = l.get(i);\n\
    \            total += v;\n            m.add(v);\n        }\n\n        for (int\
    \ i = 0; i < len; i++) {\n            long v = l.get(i);\n            if (m.contains(v))\
    \ {\n                m.remove(v);\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1b21qcll.java:42)\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // your\
    \ code here\n        int arrSize = l.size();\n        HashSet<Long> set = new\
    \ HashSet<Long>();\n        for(int i = 0; i < arrSize; i++){\n            set.add(l.get(i));\n\
    \        }\n        for(Long x: set){\n            for(int j = 0; j < arrSize;\
    \ j++){\n                if(x.equals(l.get(j))){\n                    if(j - i\
    \ > 1){\n                        System.out.println(\"False\");\n            \
    \            return false;\n                    }\n                }\n       \
    \     }\n        }\n        System.out.println(\"True\");\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp21l020f9.java:32: error: cannot find symbol\n                 \
    \   if(j - i > 1){\n                           ^\n  symbol:   variable i\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int count\
    \ = 0;\n        for (int i = 0; i < l.size(); i++) {\n            if (i > 0 &&\
    \ l.get(i) == l.get(i - 1) && l.get(i) == 0) {\n                count++;\n   \
    \         } else if (l.get(i) == 0) {\n                count++;\n            }\n\
    \        }\n        if (count >= 2) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuloa92wx.java:41)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int[]\
    \ a = new int[l.get(1)];\n        Arrays.fill(a, -1);\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            for (int j = i+1; j < l.size(); j++) {\n \
    \               int k = l.get(i) - l.get(j);\n                if (a[k] == -1)\
    \ {\n                    a[k] = i;\n                    break;\n             \
    \   }\n            }\n        }\n        return Arrays.asList(a).containsValue(-1);\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpebv68jow.java:23: error: incompatible types: Long cannot be converted\
    \ to int\n        int[] a = new int[l.get(1)];\n                             \
    \  ^\n/tmp/tmpebv68jow.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int k = l.get(i) - l.get(j);\n           \
    \                      ^\n/tmp/tmpebv68jow.java:34: error: cannot find symbol\n\
    \        return Arrays.asList(a).containsValue(-1);\n                        \
    \       ^\n  symbol:   method containsValue(int)\n  location: interface List<int[]>\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011620
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<Long, Long>();\n        for (long x : l) map.put(x,\
    \ x+1);\n        for (long key : map.keySet()) {\n            if (map.get(key)\
    \ != map.get(key+1)) return false;\n        }\n        return true;\n    }\n \
    \   public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5simdf_4.java:34)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        if (sum == 0) {\n            return false;\n        }\n  \
    \      ArrayList twoSum = new ArrayList();\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i - 1) + l.get(i) == sum) {\n                twoSum.add(i\
    \ - 1, i);\n            }\n        }\n        return twoSum.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxw87qb49.java:42)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.isEmpty())\n\
    \            return false;\n        int max = Collections.max(l);\n        int\
    \ min = Collections.min(l);\n        boolean diff = false;\n        if (max ==\
    \ min) {\n            diff = true;\n        }\n        else if (min == -max)\n\
    \            diff = true;\n        else if (max < 0) {\n            diff = false;\n\
    \        }\n        else if (max > 0) {\n            diff = true;\n        }\n\
    \        if (diff)\n            return true;\n        int sum = 0;\n        int\
    \ count = 0;\n        for (long i : l)\n            if (i >= 0)\n            \
    \    sum += i;\n            if (sum == 0)\n                count++;\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaur6uqps.java:25: error: incompatible types: inferred type does\
    \ not conform to upper bound(s)\n        int max = Collections.max(l);\n     \
    \                            ^\n    inferred: Long\n    upper bound(s): Integer,Comparable<?\
    \ super Long>,Long,Object\n/tmp/tmpaur6uqps.java:26: error: incompatible types:\
    \ inferred type does not conform to upper bound(s)\n        int min = Collections.min(l);\n\
    \                                 ^\n    inferred: Long\n    upper bound(s): Integer,Comparable<?\
    \ super Long>,Long,Object\n2 errors\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        l.forEach(set::add);\n        return set.size()\
    \ == 2 \n            && set.contains((l.stream().filter(n -> n == 0).count())\
    \ == 2);\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3x7gcyr5.java:32)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ pairs.parallelStream().anyMatch(i -> i.i.sum() == 0 && i.j.sum() == 0);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8iwbzui5.java:23: error: cannot find symbol\n        return pairs.parallelStream().anyMatch(i\
    \ -> i.i.sum() == 0 && i.j.sum() == 0);\n               ^\n  symbol:   variable\
    \ pairs\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().distinct().count() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsnfblq5.java:29)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for(Long e : l){\n            sum += e;\n        }\n        for(int\
    \ i = 0; i < l.size(); i++){\n            for(int j = i+1; j < l.size(); j++){\n\
    \                if(Math.abs(l.get(i) - l.get(j)) > sum){\n                  \
    \  return false;\n                }\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgpsvqezn.java:37)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2)\n            return false;\n        long sum = 0;\n        for (long i\
    \ : l)\n            sum += i;\n        long s = 0;\n        for (long i : l)\n\
    \            s += i;\n        if (s != sum)\n            return false;\n     \
    \   return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprskvv3cx.java:36)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ a = false;\n        for (int i = 0; i < l.size()-1; i++) {\n            if (l.get(i)\
    \ == l.get(i + 1)) a = true;\n        }\n        if (l.size() < 2) a = false;\n\
    \        return a;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf46zxrj5.java:34)\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        long sum = 0L;\n     \
    \   long x = l.get(0); //x is the starting point for sum calculation\n       \
    \ long y = l.get(1); //y is the ending point for sum calculation\n        for\
    \ (long i = 2; i <= l.size(); i++) {\n            sum += l.get(i);\n         \
    \   if (sum == x) {\n                return false;\n            } else if (sum\
    \ == y) {\n                return true;\n            }\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_zf4fcp9.java:30: error: incompatible types: possible lossy conversion\
    \ from long to int\n            sum += l.get(i);\n                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().filter(t -> l.remove(t)).distinct().count() == 1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1631)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.pairsSumToZero(tmpri3b_gcx.java:23)\n\tat Problem.main(tmpri3b_gcx.java:26)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int two\
    \ = 0;\n        long sum = 0;\n        for (long i : l) {\n            two = two\
    \ + 2;\n            sum = sum + i;\n            if (two > 1) {\n             \
    \   boolean found = false;\n                for (int j = 0; j < l; j++) {\n  \
    \                  long ja = l.get(j);\n                    if (ja > i && sum\
    \ == ja) {\n                        found = true;\n                        break;\n\
    \                    }\n                }\n                if (!found) return\
    \ false;\n            }\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpere30z2x.java:30: error: bad operand types for binary operator\
    \ '<'\n                for (int j = 0; j < l; j++) {\n                       \
    \           ^\n  first type:  int\n  second type: ArrayList<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ s = new HashSet<Long>();\n        for (Long i : l)\n            if (!s.contains(i))\n\
    \                s.add(i);\n        if (s.size() > 1)\n            return false;\n\
    \        return true;\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkt0y_q74.java:35)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ result = false;\n        IntStream xs = l.stream().map(Integer::longValue);\n\
    \        IntStream ys = l.stream().map(Integer::longValue);\n        IntStream\
    \ xys = l.stream().map(Integer::longValue);\n        IntStream.range(0, xs.size()).forEach(i\
    \ -> {\n            if (xs.get(i) != 0) {\n                IntStream.range(0,\
    \ ys.size()).forEach(j -> {\n                    if (ys.get(j) == 0) {\n     \
    \                   xys.skip(j).forEach(z -> {\n                            xys.skip(i).forEach(a\
    \ -> {\n                                if (xs.get(i) == 0) {\n              \
    \                      xs.add(xs.get(i));\n                                }\n\
    \                                if (xs.get(j) == 0) {\n                     \
    \               xs.add(j);\n                                }\n              \
    \                  if (ys.get(z) != 0) {\n                                   \
    \ ys.add(ys.get(z));\n                                }\n                    \
    \            if (xs.get(z) == 0) {\n                                    xs.add(z);\n\
    \                                }\n                                if (ys.get(j)\
    \ == 0) {\n                                    ys.add(j);\n                  \
    \              }\n                                if (xs.get(j) == 0 && ys.get(z)\
    \ == 0) {\n                                    xs.add(j);\n                  \
    \                  ys.add(z);\n                                    xs.skip(j).forEach(z\
    \ -> {\n                                        ys.add(z);\n                 \
    \                       xys.add(a);\n                                    });\n\
    \                                }\n                            });\n        \
    \                });\n                    }\n                });\n           \
    \ }\n        });\n        if (l.size() > 2) {\n            List<Long> zs = new\
    \ ArrayList<>();\n            zs.add(l.get(0) == 0 ? l.get(1) : l.get(2));\n \
    \           zs.add(l.get(0) == 0 ? l.get(2) : l.get(3));\n            zs.add(l.get(1)\
    \ == 0 ? l.get(2) : l.get(3));\n            zs.add(l.get(1) == 0 ? l.get(3) :\
    \ l.get(4));\n            zs.add(l.get(2) == 0 ? l.get(3) : l.get(4));\n     \
    \       zs.add(l.get(2) == 0 ? l.get(4) : l.get(5));\n            zs.add(l.get(3)\
    \ == 0 ? l.get(4) : l.get(5));\n            zs.add(l.get(3) == 0 ? l.get(5) :\
    \ l.get(6));\n            zs.add(l.get(4) == 0 ? l.get(5) : l.get(6));\n     \
    \       zs.add(l.get(4) == 0 ? l.get(6) : l.get(7));\n            zs.add(l.get(5)\
    \ == 0 ? l.get(6) : l.get(7));\n            zs.add(l.get(5) == 0 ? l.get(7) :\
    \ l.get(8));\n            zs.add(l.get(6) == 0 ? l.get(7) : l.get(8));\n     \
    \       zs.add(l.get(6) == 0 ? l.get(8) : l.get(9));\n            zs.add(l.get(7)\
    \ == 0 ? l.get(\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxtlefafz.java:79: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpxtlefafz.java:80: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // write\
    \ your code in Java SE 8\n        // you can write the same code without using\
    \ varargs\n        if (l.size() != 2) {\n            return false;\n        }\n\
    \        long sum = 0;\n        for (Long val : l) {\n            sum += val;\n\
    \        }\n        for (Long val : l) {\n            if (sum != 0) {\n      \
    \          return false;\n            }\n        }\n        return true;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps0qonl3u.java:43)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> h = new HashMap<Long, Long>();\n        l.stream().forEach(e -> h.put(e,\
    \ 0l));\n        for (int i = 0; i < l.size() - 1; i++) {\n            long curr\
    \ = l.get(i);\n            long next = l.get(i + 1);\n            h.put(curr,\
    \ curr - next);\n            h.put(next, curr - next);\n        }\n        boolean\
    \ answer = h.values()\n                .remove(0l)\n                .stream()\n\
    \                .allMatch(e -> e == 0l);\n        return answer;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_3w9qtt_.java:33: error: boolean cannot be dereferenced\n     \
    \           .stream()\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011621
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        IntDoublePair\
    \ sum = IntDoublePair.of(0, 0);\n        ArrayList<IntDoublePair> sums = new ArrayList<>();\n\
    \        // initialize sum accumulators to zero\n        for(IntDoublePair pair\
    \ : l) {\n            sum += pair;\n            sums.add(pair);\n        }\n \
    \       // if there are two elements in the array list that sum to zero, return\
    \ true\n        if (sums.size() == 2) {\n            return true;\n        }\n\
    \        // otherwise, return false\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp875jqawk.java:23: error: cannot find symbol\n        IntDoublePair\
    \ sum = IntDoublePair.of(0, 0);\n        ^\n  symbol:   class IntDoublePair\n\
    \  location: class Problem\n/tmp/tmp875jqawk.java:23: error: cannot find symbol\n\
    \        IntDoublePair sum = IntDoublePair.of(0, 0);\n                       \
    \     ^\n  symbol:   variable IntDoublePair\n  location: class Problem\n/tmp/tmp875jqawk.java:24:\
    \ error: cannot find symbol\n        ArrayList<IntDoublePair> sums = new ArrayList<>();\n\
    \                  ^\n  symbol:   class IntDoublePair\n  location: class Problem\n\
    /tmp/tmp875jqawk.java:26: error: cannot find symbol\n        for(IntDoublePair\
    \ pair : l) {\n            ^\n  symbol:   class IntDoublePair\n  location: class\
    \ Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ s1=new HashSet<Long>(l);\n        Set<Long> s2=new HashSet<Long>(l);\n     \
    \   Set<Long> s3=new HashSet<Long>(l);\n        for(long i:s1)\n        {\n  \
    \          for(long j:s2)\n            {\n                if(i+j==0)\n       \
    \         {\n                    s3.add(i+j);\n                }\n           \
    \ }\n        }\n        if(s3.size()>1)\n        {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpov1r6sod.java:43)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // Your\
    \ code here\n        if (l.size() <= 1) {\n            return false;\n       \
    \ }\n        Map<Long, Long> map = new HashMap<Long, Long>();\n        for (Long\
    \ i : l) {\n            map.put(i, map.getOrDefault(i, 0L) + 1);\n        }\n\
    \        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            Long\
    \ key = entry.getKey();\n            Long val = entry.getValue();\n          \
    \  if (val == 1) {\n                return false;\n            }\n        }\n\
    \        return true;\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpix5bepcu.java:44)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Map<Integer,\
    \ Long> m = new HashMap<>();\n        for (long i : l)\n            m.putIfAbsent(i,\
    \ 0L);\n        long sum = 0;\n        for (long i : l)\n            sum += i;\n\
    \        for (int i = 0; i < l.size(); i++) {\n            long ival = l.get(i);\n\
    \            long val;\n            if (m.containsKey(ival)) {\n             \
    \   val = m.get(ival);\n            } else {\n                val = 0L;\n    \
    \        }\n            if (val != 0 && sum - val == 0)\n                return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjh43fj1j.java:25: error: incompatible types: long cannot be converted\
    \ to Integer\n            m.putIfAbsent(i, 0L);\n                          ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ arr = new ArrayList<>();\n        Collections.addAll(arr,l);\n        if(arr.size()\
    \ < 2) {\n            return false;\n        }\n        long sum = 0;\n      \
    \  arr.stream().forEach(i -> {\n            sum += i;\n            if(sum == 0)\
    \ {\n                return true;\n            }\n            return false;\n\
    \        });\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsrbf062e.java:24: error: method addAll in class Collections cannot\
    \ be applied to given types;\n        Collections.addAll(arr,l);\n           \
    \        ^\n  required: Collection<? super T>,T[]\n  found:    ArrayList<Long>,ArrayList<Long>\n\
    \  reason: inference variable T has incompatible bounds\n    lower bounds: Long,Object\n\
    \    lower bounds: ArrayList<Long>\n  where T is a type-variable:\n    T extends\
    \ Object declared in method <T>addAll(Collection<? super T>,T...)\n/tmp/tmpsrbf062e.java:29:\
    \ error: incompatible types: unexpected return value\n        arr.stream().forEach(i\
    \ -> {\n                             ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // If\
    \ there are two or more elements whose sum is zero, then return false.\n     \
    \   if (l.size() < 3) return l.stream().allMatch(i -> i == 0L);\n        int sum\
    \ = 0;\n        // Add the first element to the sum.\n        sum += l.get(0L);\n\
    \        // Find the two elements whose sum should be zero.\n        for (int\
    \ i = 1; i < l.size(); i++) {\n            if (l.get(i) == 0) {\n            \
    \    sum += l.get(i);\n                l.set(i, 0);\n            }\n        }\n\
    \        // If the sum of all the elements in the array list does not equal zero,\n\
    \        // then the array list contains two pairs of elements that sum to zero.\n\
    \        return sum == 0L;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm0imxlbr.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        sum += l.get(0L);\n                     ^\n/tmp/tmpm0imxlbr.java:32:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ l.set(i, 0);\n                         ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ == 0) {\n            return false;\n        }\n        \n        long sum =\
    \ 0;\n        \n        for (long i : l) {\n            sum += i;\n        }\n\
    \        \n        double sumOfPairs = sum / 2;\n        \n        ArrayList<Long>\
    \ list = new ArrayList<>();\n        \n        for (long i : l) {\n          \
    \  list.add(i - sumOfPairs);\n        }\n        \n        return list.stream().distinct().count()\
    \ == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn18v7yuk.java:38: error: incompatible types: double cannot be converted\
    \ to Long\n            list.add(i - sumOfPairs);\n                       ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // initialize\
    \ two variables for the sums\n        long sum1 = 0, sum2 = 0;\n\n        // iterate\
    \ the arraylist l to find the first two elements that sum to zero\n        for\
    \ (long x : l) {\n            sum1 += x;\n        }\n\n        for (long x : l)\
    \ {\n            sum2 += x;\n        }\n\n        // if the sum of the first two\
    \ elements is zero, and the sum of the last two elements is zero, then return\
    \ true\n        return ((sum1 == 0) && (sum2 == 0));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimxb6o4r.java:42)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.isEmpty())\
    \ return false;\n\n        if (l.size() == 1) {\n            long l = l.get(0);\
    \ // the element at index 0 of the list\n            if (l == 0) return true;\n\
    \            if (l < 0) return false;\n            return false;\n        }\n\n\
    \        int sum = 0;\n        long prev = Long.MIN_VALUE;\n        for (long\
    \ l : l) {\n            if (prev == Long.MIN_VALUE || prev < l) {\n          \
    \      prev = l; // set the new first element\n            } else if (prev > l\
    \ && sum == 0) {\n                sum = l; // set the new second element\n   \
    \         }\n        }\n\n        return sum == 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_ntl1ke.java:26: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n            long l = l.get(0); // the element\
    \ at index 0 of the list\n                 ^\n/tmp/tmpv_ntl1ke.java:26: error:\
    \ long cannot be dereferenced\n            long l = l.get(0); // the element at\
    \ index 0 of the list\n                      ^\n/tmp/tmpv_ntl1ke.java:34: error:\
    \ variable l is already defined in method pairsSumToZero(ArrayList<Long>)\n  \
    \      for (long l : l) {\n                  ^\n/tmp/tmpv_ntl1ke.java:38: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     sum = l; // set the new second element\n                      ^\n4 errors\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int size\
    \ = l.size();\n        if (size == 0)\n            return false;\n        if (size\
    \ == 1)\n            return true;\n        long sum = 0;\n        for (int i =\
    \ 0; i < size; i++) {\n            sum += l.get(i);\n        }\n        if (sum\
    \ == 0)\n            return true;\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwa13yhe.java:40)\n"
  stdout: ''
  timestamp: 1660011622
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> pairs = new HashMap<>();\n        long sum = 0;\n        for (long k :\
    \ l) {\n            sum += k;\n            if (pairs.containsKey(sum)) {\n   \
    \             return true;\n            } else {\n                pairs.put(sum,\
    \ sum);\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpklflqm4b.java:36)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if(l.size()\
    \ == 0) return false;\n        int pairs = 1;\n        for(int i = 1; i < l.size();\
    \ i++) {\n            pairs = pairs * 2 + 1;\n        }\n        for(int i = 0;\
    \ i < l.size(); i++) {\n            for(int j = 0; j < i; j++) {\n           \
    \     long l1 = l.get(i);\n                long l2 = l.get(j);\n             \
    \   if(l1 + l2 == 0) return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ s = new HashSet<Long>();\n        for (Long i : l)\n            if (s.contains(i))\n\
    \                return true;\n        else\n            return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkl_bus9p.java:29: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        Map<Long, Long> map =\
    \ new HashMap<Long, Long>();\n        for (Long x : l) {\n            if (!map.containsKey(x))\
    \ {\n                map.put(x, x);\n            } else {\n                map.put(x,\
    \ map.get(x) + x);\n            }\n        }\n        for (Long x : map.values())\
    \ {\n            if (x == 0) return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzkbg2a8r.java:40)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long i : l) {\n            sum = sum + i;\n        }\n  \
    \      long zero = sum - 1;\n        for (Long i : l) {\n            if (i !=\
    \ zero) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzfv1sef.java:39)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        boolean result = false;\n        for (long l : l) {\n        \
    \    sum += l;\n            if (sum == 0) {\n                result = true;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9u9f45im.java:25: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (long l : l) {\n              \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        final\
    \ long zero = 0l; // 0 is special case\n        long sum = 0l;\n        for (long\
    \ i : l) {\n            sum += i;\n            if (sum == zero) return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl8t05hr8.java:35)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) return false;\n\n        long[] arrLst = l.toArray(new long[l.size()]);\n\
    \        Arrays.sort(arrLst);\n\n        int sum = 0;\n        for (int i = 0;\
    \ i < arrLst.length - 1; i++) {\n            sum += arrLst[i];\n            if\
    \ (sum < 0) return false;\n        }\n\n        for (int i = 0; i < arrLst.length\
    \ - 1; i++) {\n            sum += arrLst[i + 1];\n            if (sum < 0) return\
    \ false;\n        }\n\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy8_j9vtw.java:25: error: no suitable method found for toArray(long[])\n\
    \        long[] arrLst = l.toArray(new long[l.size()]);\n                    \
    \     ^\n    method Collection.<T#1>toArray(IntFunction<T#1[]>) is not applicable\n\
    \      (cannot infer type-variable(s) T#1\n        (argument mismatch; long[]\
    \ cannot be converted to IntFunction<T#1[]>))\n    method ArrayList.<T#2>toArray(T#2[])\
    \ is not applicable\n      (inference variable T#2 has incompatible bounds\n \
    \       equality constraints: long\n        lower bounds: Object)\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>toArray(IntFunction<T#1[]>)\n\
    \    T#2 extends Object declared in method <T#2>toArray(T#2[])\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) return false; // not enough numbers to sum up\n        ArrayList<Long>\
    \ left = new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i < l.size() -\
    \ 1) {\n                if (l.get(i) + l.get(i + 1) == 0) left.add(l.get(i));\n\
    \                else right.add(l.get(i));\n            } else {\n           \
    \     if (l.get(i) == 0) left.add(l.get(i));\n                else right.add(l.get(i));\n\
    \            }\n        }\n        return left.size() == 2 && right.size() ==\
    \ 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphkstgw88.java:41)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Map<Long,\
    \ Long> map = new HashMap<>();\n        for (Long i : l) map.put(i, i + 0l);\n\
    \        for (Map.Entry<Long, Long> e : map.entrySet()) \n            if (map.get(e.getValue()).equals(e.getKey()))\n\
    \                return false;\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z2aub2g.java:34)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (long i : l) {\n            sum += i;\n        }\n       \
    \ if (sum == 0) {\n            return false;\n        }\n        boolean a_b =\
    \ false;\n        boolean b_a = false;\n        for (long i : l) {\n         \
    \   long a = i;\n            long b = sum - a;\n            if (a == b) {\n  \
    \              a_b = true;\n            } else if (a == b + 1) {\n           \
    \     b_a = true;\n            }\n        }\n        return a_b && b_a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv8kqtxnd.java:47)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // your\
    \ implementation here\n        if(l.size()<2)\n            return false;\n   \
    \     l.sort(Comparator.naturalOrder());\n        for(long i=0;i<l.size();i++){\n\
    \            if(i+1 < l.size())\n                if((l.get(i)+l.get(i+1))!=0)\n\
    \                    return false;\n        }\n        return true;\n    }\n \
    \   public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpadi2yurj.java:29: error: incompatible types: possible lossy conversion\
    \ from long to int\n                if((l.get(i)+l.get(i+1))!=0)\n           \
    \               ^\n/tmp/tmpadi2yurj.java:29: error: incompatible types: possible\
    \ lossy conversion from long to int\n                if((l.get(i)+l.get(i+1))!=0)\n\
    \                                    ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int n\
    \ = l.size();\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n \
    \           sum += l.get(i);\n        }\n        for (int i = 0; i < n; i++) {\n\
    \            int j = i;\n            int sumj = sum;\n            while (j > 0\
    \ && sumj < 0) {\n                sumj += l.get(j--);\n            }\n       \
    \     if (sumj == 0 && sum != 0) {\n                return true;\n           \
    \ }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbt2prj_7.java:44)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        Long a1 = l.get(0);\n\
    \        Long a2 = l.get(1);\n        Long a3 = l.get(2);\n        Long a4 = l.get(3);\n\
    \        Long a5 = l.get(4);\n        Long a6 = l.get(5);\n        Long a7 = l.get(6);\n\
    \        Long a8 = l.get(7);\n        Long a9 = l.get(8);\n        Long a10 =\
    \ l.get(9);\n        if (a1 == 0 && a2 == 0 && a3 == 0 && a4 == 0 && a5 == 0 &&\
    \ a6 == 0 && a7 == 0 && a8 == 0 && a9 == 0 && a10 == 0) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 4 out of bounds for length 4\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.pairsSumToZero(tmpb4y60fm3.java:30)\n\tat Problem.main(tmpb4y60fm3.java:42)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(Long i : l)\n            set.add(Math.abs(i));\n\
    \n        return set.size() >= 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv9gnrsz.java:30)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long x : l) {\n            sum += x;\n        }\n       \
    \ \n        long prevSum = 0;\n        for (Long x : l) {\n            if (prevSum\
    \ + x == 0) {\n                return true;\n            }\n            prevSum\
    \ += x;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvos3bm0n.java:41)\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashSet<Long>\
    \ set = new HashSet<Long>();\n        for(Long l : l)\n            if (set.add(l)\
    \ && set.remove(l) && set.size() == 2)\n                return true;\n       \
    \ return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmponulit1d.java:24: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for(Long l : l)\n                 ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long[]\
    \ a = new long[l.size()];\n        for(int i = 0; i < l.size(); i++) {\n     \
    \       a[i] = l.get(i);\n        }\n        return pairsSumToZero(a);\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp233156su.java:27: error: incompatible types: long[] cannot be converted\
    \ to ArrayList<Long>\n        return pairsSumToZero(a);\n                    \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011623
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        // create two new array\
    \ lists\n        ArrayList<Long> newList = new ArrayList<Long>(l.size());\n  \
    \      for (Long i : l) {\n            if (!newList.contains(i)) {\n         \
    \       newList.add(i);\n            }\n        }\n        // find the pairs with\
    \ the minimum absolute value\n        ArrayList<Long> minPairs = new ArrayList<Long>(l.size());\n\
    \        ArrayList <Long> minPairValues = new ArrayList<Long>(l.size());\n   \
    \     Iterator<Long> it = l.iterator();\n        while (it.hasNext()) {\n    \
    \        Long pair = it.next();\n            if (!minPairs.contains(pair)) {\n\
    \                minPairs.add(pair);\n                minPairValues.add(Math.abs(pair));\n\
    \            }\n        }\n        // if the length of minPairValues is greater\
    \ than 2, the array list contains two\n        // distinct elements that sum to\
    \ zero.\n        return (minPairValues.size() > 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rrtmwel.java:49)\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ == 0) return false;\n        long largestLong = Collections.max(l);\n      \
    \  List<Long> twoList = new ArrayList<>(l.size() - 1);\n        for (long x :\
    \ l) {\n            for (long y : l) {\n                if (x == y && x != largestLong)\
    \ {\n                    twoList.add(x);\n                    twoList.add(y);\n\
    \                    x = largest - largestLong;\n                    y = largest\
    \ - largestLong;\n                }\n            }\n        }\n        return\
    \ twoList.size() == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0fu6xqte.java:31: error: cannot find symbol\n                 \
    \   x = largest - largestLong;\n                        ^\n  symbol:   variable\
    \ largest\n  location: class Problem\n/tmp/tmp0fu6xqte.java:32: error: cannot\
    \ find symbol\n                    y = largest - largestLong;\n              \
    \          ^\n  symbol:   variable largest\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().distinct().\n                map(a -> new ArrayList<Long>(Arrays.asList(a,\
    \ a)).\n                        stream().\n                        mapToLong(Long::longValue).\n\
    \                        sum().\n                        equals(0)).\n       \
    \         collect(Collectors.toList()).size() > 1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmqq8xv46.java:27: error: long cannot be dereferenced\n        \
    \                sum().\n                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ list = new ArrayList<Long>(l);\n        Collections.sort(list);\n        int\
    \ count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            count\
    \ += 1;\n            if (count == list.size()) {\n                if (list.get(i)\
    \ == list.get(i + 1)) {\n                    return true;\n                }\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 4 out of bounds for length 4\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.pairsSumToZero(tmp4h1a8tf1.java:29)\n\tat Problem.main(tmp4h1a8tf1.java:37)\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ res = false;\n        long i = 0;\n        while (i < l.size() - 1) {\n    \
    \        if (l.get(i) + l.get(i + 1) == 0) {\n                res = true;\n  \
    \          }\n            i += 2;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp_1zxu93.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (l.get(i) + l.get(i + 1) == 0) {\n        \
    \              ^\n/tmp/tmpp_1zxu93.java:26: error: incompatible types: possible\
    \ lossy conversion from long to int\n            if (l.get(i) + l.get(i + 1) ==\
    \ 0) {\n                                   ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long[]\
    \ pairs;\n        int n = l.size();\n        ArrayList<Long> pairList = new ArrayList<>();\n\
    \        boolean result = false;\n        ArrayList<Long> diff1 = new ArrayList<>();\n\
    \        ArrayList<Long> diff2 = new ArrayList<>();\n        for (int i = 0; i\
    \ < n; i++) {\n            if (l.get(i) == 0) {\n                return false;\n\
    \            }\n        }\n        for (int i = 0; i < n; i++) {\n           \
    \ for (int j = i + 1; j < n; j++) {\n                if (l.get(i) + l.get(j) ==\
    \ 0) {\n                    pairs = new long[n];\n                    pairs[0]\
    \ = l.get(i);\n                    pairs[1] = l.get(j);\n                    for\
    \ (int k = 0; k < n; k++) {\n                        if (k == i || k == j) {\n\
    \                            pairs[k] = pairs[k] + pairs[k];\n               \
    \         }\n                    }\n                    pairList.add(pairs);\n\
    \                }\n            }\n        }\n        List<List<Long>> pairList\
    \ = pairList.stream().distinct().collect(Collectors.toList());\n        for (int\
    \ i = 0; i < pairList.size(); i++) {\n            List<Long> pair = pairList.get(i);\n\
    \            for (int j = 0; j < pairList.size(); j++) {\n                List<Long>\
    \ otherPair = pairList.get(j);\n                if (otherPair.contains(pair) &&\
    \ i != j) {\n                    //System.out.printf(\"i:%d, j:%d, pair:%s, otherPair:%s\
    \ \\n\", i, j, pair.toString(), otherPair.toString());\n                    if\
    \ (!otherPair.contains(pair)) {\n                        diff1.add(pair);\n  \
    \                      diff2.add(otherPair);\n                        //System.out.printf(\"\
    i:%d, j:%d, pair:%s, otherPair:%s \\n\", i, j, pair.toString(), otherPair.toString());\n\
    \                        result = true;\n                    }\n             \
    \   }\n            }\n        }\n        diff1.stream().distinct().forEach(list1\
    \ -> diff2.stream().distinct().forEach(list2 -> {\n            if (!list1.containsAll(list2))\
    \ {\n                diff1.removeAll(list2);\n            }\n        }));\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52328_gi.java:45: error: incompatible types: long[] cannot be converted\
    \ to Long\n                    pairList.add(pairs);\n                        \
    \         ^\n/tmp/tmp52328_gi.java:49: error: variable pairList is already defined\
    \ in method pairsSumToZero(ArrayList<Long>)\n        List<List<Long>> pairList\
    \ = pairList.stream().distinct().collect(Collectors.toList());\n             \
    \            ^\n/tmp/tmp52328_gi.java:57: error: incompatible types: List<Long>\
    \ cannot be converted to Long\n                        diff1.add(pair);\n    \
    \                              ^\n/tmp/tmp52328_gi.java:58: error: incompatible\
    \ types: List<Long> cannot be converted to Long\n                        diff2.add(otherPair);\n\
    \                                  ^\n/tmp/tmp52328_gi.java:66: error: cannot\
    \ find symbol\n            if (!list1.containsAll(list2)) {\n                \
    \      ^\n  symbol:   method containsAll(Long)\n  location: variable list1 of\
    \ type Long\n/tmp/tmp52328_gi.java:67: error: incompatible types: Long cannot\
    \ be converted to Collection<?>\n                diff1.removeAll(list2);\n   \
    \                             ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n6 errors\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        int leng\
    \ = l.size();\n        if (leng < 2) {\n            return false;\n        }\n\
    \        ArrayList<Long> ones = new ArrayList<Long>(l.size());\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>(l.size());\n        // find distinct ones\n     \
    \   long sum = 0;\n        for (long val : l) {\n            if (val != 0) {\n\
    \                sum += val;\n                ones.add(val);\n            }\n\
    \        }\n        // find distinct twos\n        for (int i = 0; i < leng; i++)\
    \ {\n            for (int j = 0; j < leng; j++) {\n                if (i != j)\
    \ {\n                    long val1 = l.get(i);\n                    long val2\
    \ = l.get(j);\n                    if (val1 != 0) {\n                        sum\
    \ += val1;\n                        ones.add(val1);\n                    }\n \
    \                   if (val2 != 0) {\n                        sum += val2;\n \
    \                       twos.add(val2);\n                    }\n             \
    \   }\n            }\n        }\n        // if sum of ones is greater than sum\
    \ of twos, there are no distinct elements that\n        // sum to zero.\n    \
    \    return (sum - one.stream().reduce((a, b) -> a + b).get()) > twos.stream().reduce((a,\
    \ b) -> a + b).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9up5h3k2.java:56: error: cannot find symbol\n        return (sum\
    \ - one.stream().reduce((a, b) -> a + b).get()) > twos.stream().reduce((a, b)\
    \ -> a + b).get();\n                      ^\n  symbol:   variable one\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long one\
    \ = (long) 1l;\n        long two = (long) 2l;\n        int minDiff = Integer.MAX_VALUE;\n\
    \        boolean pairs = false;\n        int minDiff2 = Integer.MAX_VALUE;\n \
    \       int index = 0;\n\n        for(int i = 0; i < l.size(); i++){\n       \
    \     for(int j = i; j < l.size(); j++){\n                if(l.get(i)+l.get(j)\
    \ == 0){\n                    pairs = true;\n                    minDiff = Math.min(minDiff,\
    \ Math.abs(i - j));\n                }\n            }\n        }\n\n        if(pairs){\n\
    \            for(int i = 0; i < l.size(); i++){\n                for(int j = i;\
    \ j < l.size(); j++){\n                    if(l.get(i)+l.get(j) == 0){\n     \
    \                   if(Math.abs(i - j) < minDiff){\n                         \
    \   minDiff = Math.abs(i - j);\n                            minDiff2 = minDiff;\n\
    \                            index = i;\n                        }\n         \
    \           }\n                }\n            }\n        }\n\n        if(minDiff2\
    \ == Integer.MAX_VALUE){\n            for(int i = 0; i < l.size(); i++){\n   \
    \             if(l.get(i) != 0){\n                    return false;\n        \
    \        }\n            }\n            return true;\n        }\n\n        return\
    \ minDiff < minDiff2;\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzio7mmf.java:68)\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // your\
    \ code goes here\n        boolean check = false;\n        Long sum = 0;\n    \
    \    for (Long value : l) {\n            sum += value;\n        }\n        for\
    \ (Long value : l) {\n            if (sum == 0 && value > 0) {\n             \
    \   check = true;\n            }\n        }\n        return check;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjp7ib16m.java:25: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>(l);\n        Iterator<Long> it = l.iterator();\n   \
    \     while (it.hasNext()) {\n            Long curr = it.next();\n           \
    \ if (set.contains(curr + curr.longValue())) \n                return false;\n\
    \            set.add(curr + curr.longValue());\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnyh_gsxv.java:37)\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().mapToLong(x -> x).distinct().count() == 2l\n                && l.stream().mapToLong(x\
    \ -> x).sum() == 0l;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe4c5r9ro.java:30)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ Arrays.stream(l)\n                     .filter(e -> e != 0)\n              \
    \       .distinct()\n                     .count() == 2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7nfbk8fx.java:23: error: no suitable method found for stream(ArrayList<Long>)\n\
    \        return Arrays.stream(l)\n                     ^\n    method Arrays.<T#1>stream(T#1[])\
    \ is not applicable\n      (cannot infer type-variable(s) T#1\n        (argument\
    \ mismatch; ArrayList<Long> cannot be converted to T#1[]))\n    method Arrays.<T#2>stream(T#2[],int,int)\
    \ is not applicable\n      (cannot infer type-variable(s) T#2\n        (actual\
    \ and formal argument lists differ in length))\n    method Arrays.stream(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.stream(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.stream(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n  where T#1,T#2 are type-variables:\n    T#1 extends Object declared\
    \ in method <T#1>stream(T#1[])\n    T#2 extends Object declared in method <T#2>stream(T#2[],int,int)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011624
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Integer\
    \ count = (Integer) IntStream.range(1, l.size()).boxed()\n            .filter(i\
    \ -> l.get(i) == l.get(i))\n            .count();\n        if (count == l.size())\
    \ {\n            return true;\n        } else if (count == 2) {\n            return\
    \ l.get(0) == l.get(1);\n        } else {\n            return false;\n       \
    \ }\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi1984kfq.java:25: error: incompatible types: long cannot be converted\
    \ to Integer\n            .count();\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : l) {\n            set.add(Math.abs(i));\n\
    \        }\n        return set.size() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpml3loe1c.java:33)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        Long first = l.get(0);\n        Long second = l.get(1);\n        return\
    \ (Math.abs(first) + Math.abs(second) == 0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2qpxxp7j.java:32)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        for (Long l : l) {\n            sum += l;\n        }\n       \
    \ if (l.size() < 2) {\n            return false;\n        }\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long l : l) {\n            if (set.contains(sum))\
    \ {\n                return false;\n            }\n            set.add(sum);\n\
    \        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmbklbz0s.java:24: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (Long l : l) {\n              \
    \    ^\n/tmp/tmpmbklbz0s.java:31: error: variable l is already defined in method\
    \ pairsSumToZero(ArrayList<Long>)\n        for (Long l : l) {\n              \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> map = new HashMap<>();\n        for(Long x : l)\n            map.put(x,\
    \ map.getOrDefault(x, 0) + x);\n        for(Long x : l) {\n            if(map.containsKey(x)\
    \ && map.get(x) == 0) {\n                return true;\n            }\n       \
    \ }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2o54o49_.java:25: error: incompatible types: int cannot be converted\
    \ to Long\n            map.put(x, map.getOrDefault(x, 0) + x);\n             \
    \                              ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<>();\n        for(long x : l)\n            if(x == 0)\n  \
    \              set.add(x);\n        for(long x : l)\n            if(x == 0)\n\
    \                return false;\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xo2x787.java:34)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Set<Long>\
    \ set = new HashSet<Long>(l);\n        return set.size() < l.size() ? false :\
    \ set.stream().allMatch(i -> l.stream().filter((j) -> i + j == 0).count() == 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4dcna0kq.java:30)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<Long>();\n        for (Long i : l) {\n            int\
    \ j = 0;\n            while (i + pairs.get(j) != 0) {\n                j++;\n\
    \            }\n            pairs.add(i, i + pairs.get(j));\n        }\n     \
    \   return !pairs.isEmpty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5gkw6c_z.java:29: error: incompatible types: Long cannot be converted\
    \ to int\n            pairs.add(i, i + pairs.get(j));\n                      ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long pairSumToZero\
    \ = 0;\n        for (int i = 0; i < l.size(); i++) {\n            for (int j =\
    \ i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) {\n\
    \                    pairSumToZero += 2;\n                    break;\n       \
    \         } else {\n                    pairSumToZero += 1;\n                }\n\
    \            }\n        }\n        return (pairSumToZero % 2 == 0);\n    }\n \
    \   public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4q8lgk6d.java:37)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        HashMap<Long,\
    \ Long> mp = new HashMap<>();\n        l.stream().map(mp::put).reduce(mp::putAll,\
    \ mp::get);\n        return mp.size() == 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsqm8gy_2.java:24: error: incompatible types: invalid method reference\n\
    \        l.stream().map(mp::put).reduce(mp::putAll, mp::get);\n              \
    \         ^\n    method put in class HashMap<K,V> cannot be applied to given types\n\
    \      required: Long,Long\n      found:    Long\n      reason: actual and formal\
    \ argument lists differ in length\n  where K,V are type-variables:\n    K extends\
    \ Object declared in class HashMap\n    V extends Object declared in class HashMap\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Long sum=0;\n\
    \        for(long i : l){\n            sum+=i;\n        }\n        if(sum==0){\n\
    \            return false;\n        }\n        for(long i : l){\n            if(i!=0\
    \ && l.indexOf(i)<l.lastIndexOf(i)){\n                return false;\n        \
    \    }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9_mlbt0d.java:23: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum=0;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ == 0) {\n            return false;\n        }\n        long xSum = 0, ySum =\
    \ 0, zSum = 0;\n        for (Long element : l) {\n            if (element < 0)\
    \ {\n                return false;\n            }\n            xSum += element;\n\
    \        }\n        for (Long element : l) {\n            if (element < 0) {\n\
    \                return false;\n            }\n            ySum += element;\n\
    \        }\n        for (Long element : l) {\n            if (element < 0) {\n\
    \                return false;\n            }\n            zSum += element;\n\
    \        }\n        if (xSum == ySum && ySum == zSum) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35v0lhjg.java:51)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // your\
    \ code goes here\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4whff9h.java:30)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        boolean\
    \ pairsToZero = false;\n        for (long i : l) {\n            for (long j :\
    \ l) {\n                if (i == j && i != 0) {\n                    if (i !=\
    \ j) {\n                        pairsToZero = true;\n                        break;\n\
    \                    } else {\n                        pairsToZero = true;\n \
    \                       break;\n                    }\n                }\n   \
    \         }\n        }\n        return pairsToZero;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctu7hu7h.java:40)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        long diff = 1;\n        boolean found = false;\n        for(int\
    \ i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n            diff\
    \ = sum - i;\n            found = (sum == i) || diff < 0;\n        }\n       \
    \ return found;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6429jp3y.java:35)\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        long sum\
    \ = 0;\n        long count = 0;\n        for (Long i : l) {\n            sum +=\
    \ i;\n            if (sum == 0)\n                count++;\n        }\n       \
    \ return (count >= 2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwa4mp1kf.java:36)\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        // initialize\
    \ a variable that will hold our answer\n        boolean a = false;\n        //\
    \ initialize a variable that will hold the value of a single element\n       \
    \ long singleElement = l.get(0);\n        // initialize a variable that will hold\
    \ the total of the elements in the arraylist\n        long total = 0;\n      \
    \  // initialize a variable that will hold an integer that we will use to count\
    \ the number of \n        //  elements that are greater than 0\n        int count\
    \ = 0;\n        // initialize a variable that will hold an integer that we will\
    \ use to count the number of \n        //  elements that are negative\n      \
    \  int negCount = 0;\n        // initialize a variable that will hold an integer\
    \ that we will use to count the number of \n        //  elements that are positive\n\
    \        int posCount = 0;\n        // initialize a variable that will hold an\
    \ integer that we will use to count the number of \n        //  elements that\
    \ are even numbers\n        int evenCount = 0;\n        // initialize a variable\
    \ that will hold an integer that we will use to count the number of \n       \
    \ //  elements that are odd numbers\n        int oddCount = 0;\n        // initialize\
    \ a variable that will hold an integer that we will use to count the number of\
    \ \n        //  elements that are multiples of 3\n        int multipleCount =\
    \ 0;\n        // initialize a variable that will hold an integer that we will\
    \ use to count the number of \n        //  elements that are multiples of 5\n\
    \        int multipleCount5 = 0;\n        // initialize a variable that will hold\
    \ an integer that we will use to count the number of \n        //  elements that\
    \ are multiples of 7\n        int multipleCount7 = 0;\n        // initialize a\
    \ variable that will hold an integer that we will use to count the number of \n\
    \        //  elements that are multiples of 11\n        int multipleCount11 =\
    \ 0;\n\n        for(int i = 0; i < l.size(); i++) {\n            // add the elements\
    \ from the arraylist to the total\n            total += l.get(i);\n          \
    \  // add 1 to the count\n            count++;\n        }\n        // loop through\
    \ the arraylist and check if any of the numbers is negative\n        for(int i\
    \ = 0; i < l.size(); i++) {\n            // check if the element is less than\
    \ zero\n            if(l.get(i) < 0)\n                // add 1 to the negCount\
    \ variable\n                negCount++;\n        }\n        // loop through the\
    \ arraylist and check if any of the numbers is positive\n        for(int i = 0;\
    \ i < l.size(); i++) {\n            // check if the element is greater than zero\n\
    \            if(l.get(i) > 0)\n                // add 1 to the posCount variable\n\
    \                posCount++;\n        }\n        // loop through the arraylist\
    \ and check if any of the numbers is even\n        for(int i = 0; i < l.size();\
    \ i++) {\n            // check if the element is even\n            if(l.get(i)\
    \ % 2 == 0)\n                // add 1 to the evenCount variable\n            \
    \    evenCount++;\n        }\n        // loop through the arraylist and check\
    \ if any of the numbers is odd\n        for(int i = 0; i < l.size(); i++) {\n\
    \            // check if the element is odd\n            if(l.get(i) % 2 == 1)\n\
    \                // add 1 to the oddCount variable\n                oddCount++;\n\
    \        }\n        // loop through the \n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk6lk4vzx.java:92: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ pairsSumToZero(l, 0, new ArrayList<Long>(), new ArrayList<Long>());\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5qkayqju.java:23: error: method pairsSumToZero in class Problem\
    \ cannot be applied to given types;\n        return pairsSumToZero(l, 0, new ArrayList<Long>(),\
    \ new ArrayList<Long>());\n               ^\n  required: ArrayList<Long>\n  found:\
    \    ArrayList<Long>,int,ArrayList<Long>,ArrayList<Long>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011625
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Map<Long,\
    \ Long> map = l.stream()\n                                  .collect(Collectors.groupingBy(aLong\
    \ -> aLong));\n        Set<Map.Entry<Long, Long>> set = new HashSet<>(map.entrySet());\n\
    \        return set.size() == 2 &&\n            map.get(map.entrySet().iterator().next().getKey())\
    \ == 0l;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuewghjxz.java:24: error: incompatible types: inference variable\
    \ R has incompatible bounds\n                                  .collect(Collectors.groupingBy(aLong\
    \ -> aLong));\n                                          ^\n    equality constraints:\
    \ Map<K,List<T#2>>\n    lower bounds: Map<Long,Long>,Object\n  where R,A,T#1,K,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    K\
    \ extends Object declared in method <T#2,K>groupingBy(Function<? super T#2,? extends\
    \ K>)\n    T#2 extends Object declared in method <T#2,K>groupingBy(Function<?\
    \ super T#2,? extends K>)\n1 error\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        return\
    \ l.stream().map(i -> Math.abs(i) == Math.abs(l.stream().filter(j -> Math.abs(j)\
    \ == Math.abs(i)).findAny().orElse(0l)).orElse(0l)).distinct().count() == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp87jhwe1b.java:23: error: long cannot be dereferenced\n        return\
    \ l.stream().map(i -> Math.abs(i) == Math.abs(l.stream().filter(j -> Math.abs(j)\
    \ == Math.abs(i)).findAny().orElse(0l)).orElse(0l)).distinct().count() == 2;\n\
    \                                                                            \
    \                                                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pairs = new ArrayList<>();\n        for (Long i : l) {\n            Integer\
    \ index = 0;\n            while (index < pairs.size()) {\n                long\
    \ tmp = pairs.get(index).longValue();\n                if (tmp == i) {\n     \
    \               break;\n                }\n                else if (tmp < i) {\n\
    \                    pairs.add(i, tmp);\n                    break;\n        \
    \        }\n                else {\n                    index++;\n           \
    \     }\n            }\n            if (index >= pairs.size()) {\n           \
    \     pairs.add(i);\n            }\n        }\n        if (pairs.size() == 1)\
    \ {\n            return false;\n        }\n        Integer index2 = 0;\n     \
    \   while (index2 < pairs.size()) {\n            long tmp = pairs.get(index2).longValue();\n\
    \            if (tmp == 0) {\n                break;\n            }\n        \
    \    index2++;\n        }\n        return index2 == pairs.size();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp___b95f5.java:32: error: incompatible types: Long cannot be converted\
    \ to int\n                    pairs.add(i, tmp);\n                           \
    \   ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n\n        ArrayList<Long> list\
    \ = new ArrayList<>(l);\n\n        list.remove(l.size() - 1);\n        list.remove(l.size()\
    \ - 1);\n\n        long sum = 0;\n        for (Long i : list) {\n            sum\
    \ += i;\n        }\n\n        return sum == 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 3 out of bounds for length 3\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.remove(ArrayList.java:504)\n\
    \tat Problem.pairsSumToZero(tmpd55n153l.java:30)\n\tat Problem.main(tmpd55n153l.java:40)\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) return false;\n        long[] arr=new long[l.size()];\n        for(int\
    \ i=0;i<l.size();i++){\n            arr[i]=l.get(i);\n        }\n        Arrays.sort(arr);\n\
    \        int s=0;\n        int k=0;\n        while( (arr[k] == 0) && (k<arr.length)\
    \ ){\n            s+=k;\n            k++;\n        }\n        return (s==0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8kees0r.java:38)\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        List<Long>\
    \ l2 = new ArrayList<Long>();\n        for (Long val : l)\n            l2.add(val);\n\
    \        l2.sort(null);\n        l2.remove(0);\n        boolean flag = false;\n\
    \        for (int i = 0; i < l2.size(); i++) {\n            for (int j = i + 1;\
    \ j < l2.size(); j++) {\n                if (l2.get(i) + l2.get(j) == 0) {\n \
    \                   flag = true;\n                    return flag;\n         \
    \       }\n            }\n        }\n        return flag;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hq9e75u.java:43)\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ == 2) {\n            long sum = l.get(0) + l.get(1);\n            if (sum ==\
    \ 0) {\n                return true;\n            }\n        }\n\n        for\
    \ (Long e : l) {\n            sum = e + sum;\n            if (sum == 0) {\n  \
    \              return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz1iixnfb.java:31: error: cannot find symbol\n            sum =\
    \ e + sum;\n            ^\n  symbol:   variable sum\n  location: class Problem\n\
    /tmp/tmpz1iixnfb.java:31: error: cannot find symbol\n            sum = e + sum;\n\
    \                      ^\n  symbol:   variable sum\n  location: class Problem\n\
    /tmp/tmpz1iixnfb.java:32: error: cannot find symbol\n            if (sum == 0)\
    \ {\n                ^\n  symbol:   variable sum\n  location: class Problem\n\
    3 errors\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ pair = new ArrayList<>();\n        ArrayList<Long> pair2 = new ArrayList<>();\n\
    \        Iterator<Long> i1 = l.iterator();\n        Iterator<Long> i2 = l.iterator();\n\
    \        Long value1 = i1.next();\n        Long value2 = i2.next();\n        Long\
    \ value3 = i1.next();\n        Long value4 = i2.next();\n        if (value1 ==\
    \ 0L) {\n            if (value2 == 0L) {\n                if (value3 == 0L) {\n\
    \                    if (value4 == 0L)\n                        return true;\n\
    \                    else {\n                        pair.add(value4);\n     \
    \                   pair2.add(value3);\n                    }\n              \
    \  } else {\n                    pair.add(value4);\n                    pair2.add(value2);\n\
    \                }\n            } else {\n                pair.add(value4);\n\
    \                pair2.add(value3);\n            }\n        } else {\n       \
    \     pair.add(value1);\n            pair2.add(value2);\n        }\n        if\
    \ (value2 == 0L) {\n            if (value3 == 0L) {\n                if (value4\
    \ == 0L)\n                    return true;\n                else {\n         \
    \           pair.add(value4);\n                    pair2.add(value3);\n      \
    \          }\n            } else {\n                pair.add(value4);\n      \
    \          pair2.add(value3);\n            }\n        } else {\n            pair.add(value2);\n\
    \            pair2.add(value3);\n        }\n        if (value3 == 0L) {\n    \
    \        if (value4 == 0L)\n                return true;\n            else {\n\
    \                pair.add(value4);\n                pair2.add(value3);\n     \
    \       }\n        } else {\n            pair.add(value3);\n            pair2.add(value4);\n\
    \        }\n        if (value4 == 0L)\n            return true;\n        else\
    \ {\n            pair.add(value4);\n            pair2.add(value3);\n        }\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_i0gjh5p.java:91)\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        Long[]\
    \ pair = new Long[2];\n        long total = 0;\n        for (long i : l) {\n \
    \           total += i;\n            for (long j : l) {\n                if (total\
    \ - j == 0)\n                    pair[0] = j;\n                else\n        \
    \            pair[1] = j;\n                return true;\n            }\n     \
    \   }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtuverkc.java:38)\n"
  stdout: ''
  timestamp: 1660011626
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are two distinct elements in the\
    \ array list that\n    // sum to zero, and false otherwise.\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l))))\n    // (true)\n    //\
    \ >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    // (false)\n\
    \    public static boolean pairsSumToZero(ArrayList<Long> l) {\n        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        if (l.size() == 2) {\n\
    \            return true;\n        }\n        ArrayList<Long> pair = new ArrayList<Long>();\n\
    \        pair.add(l.get(0l));\n        pair.add(l.get(1l));\n        ArrayList<Long>\
    \ pair1 = new ArrayList<Long>();\n        pair1.add(l.get(0l));\n        pair1.add(l.get(1l));\n\
    \        if (pair1.size() < 2) {\n            return false;\n        }\n     \
    \   ArrayList<Long> pair2 = new ArrayList<Long>();\n        pair2.add(l.get(1l));\n\
    \        pair2.add(l.get(2l));\n        ArrayList<Long> pair3 = new ArrayList<Long>();\n\
    \        pair3.add(l.get(1l));\n        pair3.add(l.get(3l));\n        ArrayList<Long>\
    \ pair4 = new ArrayList<Long>();\n        pair4.add(l.get(1l));\n        pair4.add(l.get(4l));\n\
    \        ArrayList<Long> pair5 = new ArrayList<Long>();\n        pair5.add(l.get(2l));\n\
    \        pair5.add(l.get(3l));\n        ArrayList<Long> pair6 = new ArrayList<Long>();\n\
    \        pair6.add(l.get(2l));\n        pair6.add(l.get(4l));\n        ArrayList<Long>\
    \ pair7 = new ArrayList<Long>();\n        pair7.add(l.get(3l));\n        pair7.add(l.get(4l));\n\
    \        ArrayList<Long> pair8 = new ArrayList<Long>();\n        pair8.add(l.get(4l));\n\
    \        if (pair2.size() < 3 && pair3.size() < 3 && pair4.size() < 3 && pair5.size()\
    \ < 3 && pair6.size() < 3 && pair7.size() < 3 && pair8.size() < 3) {\n       \
    \     return false;\n        }\n        if (pair2.size() == 3 && pair3.size()\
    \ == 3 && pair4.size() == 3 && pair5.size() == 3 && pair6.size() == 3 && pair7.size()\
    \ == 3 && pair8.size() == 3) {\n            if (pair2.contains(pair3) && pair2.contains(pair4)\
    \ && pair2.contains(pair5) && pair2.contains(pair6) && pair2.contains(pair7) &&\
    \ pair2.contains(pair8) && pair3.contains(pair4) && pair3.contains(pair5) && pair3.contains(pair6)\
    \ && pair3.contains(pair7) && pair3.contains(pair8) && pair4.contains(pair5) &&\
    \ pair4.contains(pair6) && pair4.contains(pair7) && pair4.contains(pair8) && pair5.contains(pair6)\
    \ && pair5.contains(pair7) && pair5.contains(pair8) && pair6.contains(pair7) &&\
    \ pair6.contains(pair\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi6bhj3rj.java:62: error: ')' expected\n            if (pair2.contains(pair3)\
    \ && pair2.contains(pair4) && pair2.contains(pair5) && pair2.contains(pair6) &&\
    \ pair2.contains(pair7) && pair2.contains(pair8) && pair3.contains(pair4) && pair3.contains(pair5)\
    \ && pair3.contains(pair6) && pair3.contains(pair7) && pair3.contains(pair8) &&\
    \ pair4.contains(pair5) && pair4.contains(pair6) && pair4.contains(pair7) && pair4.contains(pair8)\
    \ && pair5.contains(pair6) && pair5.contains(pair7) && pair5.contains(pair8) &&\
    \ pair6.contains(pair7) && pair6.contains(pair\n                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                         ^\n/tmp/tmpi6bhj3rj.java:63: error: illegal start of\
    \ statement\n    }\n    ^\n/tmp/tmpi6bhj3rj.java:64: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660011625

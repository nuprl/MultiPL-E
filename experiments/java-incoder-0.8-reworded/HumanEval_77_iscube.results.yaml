language: java
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a*a*a*a <= 1l*1l*1l*1l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5f630qbs.java:32)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long temp = a;\n        while ((temp % 3) != 0) {\n            temp =\
    \ (temp / 3);\n        }\n        return temp == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gp7yq8j.java:36)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0)\n            return false;\n        if (Math.pow(3,a)%1==0)\n\
    \            return true;\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_2104fqj.java:34)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a>=(1l) && a<=(1l*1l) && a>=1l*1l) {\n       \
    \     if (a%1l==0) {\n                return true;\n            } else {\n   \
    \             return false;\n            }\n        } else if (a>=(1l*1l) && a<=(1l*1l*1l))\
    \ {\n            if (a%1l==0&&a%1l==0) {\n                return true;\n     \
    \       } else {\n                return false;\n            }\n        } else\
    \ if (a>=1l*1l*1l) {\n            if (a%1l==0&&a%1l==0&&a%1l==0) {\n         \
    \       return true;\n            } else {\n                return false;\n  \
    \          }\n        } else {\n            return false;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplejjiqly.java:50)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        System.out.println(\"iscube(\"+a+\")\");\n       \
    \ return iscube(a);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.System$2.encodeASCII(System.java:2414)\n\
    \tat java.base/sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456)\n\tat\
    \ java.base/sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564)\n\tat java.base/java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:585)\n\
    \tat java.base/sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:293)\n\t\
    at java.base/sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282)\n\tat\
    \ java.base/sun.nio.cs.StreamEncoder.write(StreamEncoder.java:132)\n\tat java.base/java.io.OutputStreamWriter.write(OutputStreamWriter.java:205)\n\
    \tat java.base/java.io.BufferedWriter.flushBuffer(BufferedWriter.java:120)\n\t\
    at java.base/java.io.PrintStream.writeln(PrintStream.java:722)\n\tat java.base/java.io.PrintStream.println(PrintStream.java:1028)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:26)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(tmpzaq6s36w.java:27)\n\tat Problem.iscube(tmpzaq6s36w.java:27)\n\
    \tat Problem.iscube(t"
  stdout: 'iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1)

    iscube(1'
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((a^a)|(a^a))==0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ilofm_2.java:30)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a==0l) return true;\n        int i=1;\n       \
    \ for(;i<=a;i++) if((a%i==0)&&(i%2==0||i%3==0))return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptkxu_e0l.java:32)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        try {\n            int x = 1;\n            while (x\
    \ <= a) {\n                if (x == a) {\n                    return true;\n \
    \               } else {\n                    x *= x;\n                }\n   \
    \         }\n            return false;\n        } catch (ArithmeticException e1)\
    \ {\n            e1.printStackTrace();\n            return false;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a <= 0l) || (a >= 180l)) {\n            return\
    \ false;\n        }\n        if ((a <= 4l) && (a >= 0l)) {\n            return\
    \ true;\n        }\n        if ((a <= 9l) && (a >= 4l)) {\n            return\
    \ true;\n        }\n        if ((a <= 16l) && (a >= 9l)) {\n            return\
    \ true;\n        }\n        if ((a <= 64l) && (a >= 16l)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq440ssmz.java:45)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((long)Math.pow(Math.pow(3l, a), 3l) == 3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjvq_5x9i.java:29)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a > 0l) && (a < (1l<<63))) {\n            long\
    \ cube = a*a*a;\n            if (cube == (1l << 63)) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0h_6d75e.java:35)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        Long n = new Long(a);\n        return (n.longValue()\
    \ == Math.pow(n.longValue(), 3));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpopxry3ha.java:33)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0)\n            return true;\n        if\
    \ (a > 0)\n            return iscube(a * a * a);\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.java:29)\n\tat Problem.iscube(tmpypi5iu3m.java:29)\n\
    \tat Problem.iscube(tmpypi5iu3m.j"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a >= 0l && a <= 0l && a < 180l) return true;\n\
    \        if (a >= 180l && a < 360l) return true;\n        if (a >= 360l && a <\
    \ 720l) return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobvfnf71.java:32)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a==0l) return true; // Base case is trivial.\n\
    \        return (a*a*a) == ((a+1)*(a + 1)*(a + 1));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0ff_sdp.java:30)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a%1l == 0) return true;\n        if (a%2l == 0)\
    \ return false;\n        if (a%3l == 0) return false;\n        if (a%4l == 0)\
    \ return false;\n        if (a%5l == 0) return false;\n        if (a%6l == 0)\
    \ return false;\n        if (a%7l == 0) return false;\n        if (a%8l == 0)\
    \ return false;\n        if (a%9l == 0) return false;\n        if (a%10l == 0)\
    \ return false;\n        if (a%11l == 0) return false;\n        if (a%12l == 0)\
    \ return false;\n        if (a%13l == 0) return false;\n        if (a%14l == 0)\
    \ return false;\n        if (a%15l == 0) return false;\n        if (a%16l == 0)\
    \ return false;\n        if (a%17l == 0) return false;\n        if (a%18l == 0)\
    \ return false;\n        if (a%19l == 0) return false;\n        if (a%20l == 0)\
    \ return false;\n        if (a%21l == 0) return false;\n        if (a%22l == 0)\
    \ return false;\n        if (a%23l == 0) return false;\n        if (a%24l == 0)\
    \ return false;\n        if (a%25l == 0) return false;\n        if (a%26l == 0)\
    \ return false;\n        if (a%27l == 0) return false;\n        if (a%28l == 0)\
    \ return false;\n        if (a%29l == 0) return false;\n        if (a%30l == 0)\
    \ return false;\n        if (a%31l == 0) return false;\n        if (a%32l == 0)\
    \ return false;\n        if (a%33l == 0) return false;\n        if (a%34l == 0)\
    \ return false;\n        if (a%35l == 0) return false;\n        if (a%36l == 0)\
    \ return false;\n        if (a%37l == 0) return false;\n        if (a%38l == 0)\
    \ return false;\n        if (a%39l == 0) return false;\n        if (a%40l == 0)\
    \ return false;\n        if (a%41l == 0) return false;\n        if (a%42l == 0)\
    \ return false;\n        if (a%43l == 0) return false;\n        if (a%44l == 0)\
    \ return false;\n        if (a%45l == 0) return false;\n        if (a%46l == 0)\
    \ return false;\n        if (a%47l == 0) return false;\n        if (a%48l == 0)\
    \ return false;\n        if (a%49l == 0) return false;\n        if (a%50l == 0)\
    \ return false;\n        if (a%51l == 0) return false;\n        if (a%\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0bvfg7nb.java:78: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a*a*a == 360l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn74ttm69.java:29)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long x = 1;\n        while(true)\
    \ {\n            if(n == 1) return true;\n            if((n % x) == 0) return\
    \ false;\n            x *= x;\n            n /= x;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3eqo57zq.java:38)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % Long.parseLong(\"3\").equals(0)) {\n     \
    \       return true;\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye0t_988.java:26: error: long cannot be dereferenced\n        if\
    \ (a % Long.parseLong(\"3\").equals(0)) {\n                                  \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0)\n            return false;\n        long\
    \ cube = CubeModulus(a);\n        if (cube == a)\n            return true;\n \
    \       return false;\n    }\n    public static void main(String[] args) {\n \
    \   assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n  \
    \  assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n  \
    \  assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_ymkhcq.java:28: error: cannot find symbol\n        long cube\
    \ = CubeModulus(a);\n                    ^\n  symbol:   method CubeModulus(long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        // return a*a*a*a==a;\n\
    \        long aaa=a;\n        if(a==(aaa*aaa)) return true;\n        return false;\
    \ \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzo4ox506.java:35)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == (Long)Math.pow(3,0)) return false;\n    \
    \    if (a == (Long)Math.pow(3,1)) return false;\n        if (a == (Long)Math.pow(3,2))\
    \ return false;\n        if (a == (Long)Math.pow(3,3)) return true;\n        if\
    \ (a == (Long)Math.pow(3,4)) return true;\n        if (a == (Long)Math.pow(3,5))\
    \ return true;\n        if (a == (Long)Math.pow(3,6)) return true;\n        if\
    \ (a == (Long)Math.pow(3,7)) return true;\n        if (a == (Long)Math.pow(3,8))\
    \ return true;\n        if (a == (Long)Math.pow(3,9)) return true;\n        if\
    \ (a == (Long)Math.pow(3,10)) return true;\n        if (a == (Long)Math.pow(3,11))\
    \ return true;\n        if (a == (Long)Math.pow(3,12)) return true;\n        if\
    \ (a == (Long)Math.pow(3,13)) return true;\n        if (a == (Long)Math.pow(3,14))\
    \ return true;\n        if (a == (Long)Math.pow(3,15)) return true;\n        if\
    \ (a == (Long)Math.pow(3,16)) return true;\n        if (a == (Long)Math.pow(3,17))\
    \ return true;\n        if (a == (Long)Math.pow(3,18)) return true;\n        if\
    \ (a == (Long)Math.pow(3,19)) return true;\n        if (a == (Long)Math.pow(3,20))\
    \ return true;\n        if (a == (Long)Math.pow(3,21)) return true;\n        if\
    \ (a == (Long)Math.pow(3,22)) return true;\n        if (a == (Long)Math.pow(3,23))\
    \ return true;\n        if (a == (Long)Math.pow(3,24)) return true;\n        if\
    \ (a == (Long)Math.pow(3,25)) return true;\n        if (a == (Long)Math.pow(3,26))\
    \ return true;\n        if (a == (Long)Math.pow(3,27)) return true;\n        if\
    \ (a == (Long)Math.pow(3,28)) return true;\n        if (a == (Long)Math.pow(3,29))\
    \ return true;\n        if (a == (Long)Math.pow(3,30)) return true;\n        if\
    \ (a == (Long)Math.pow(3,31)) return true;\n        if (a == (Long)Math.pow(3,32))\
    \ return true;\n        if (a == (Long)Math.pow(3,33)) return true;\n        if\
    \ (a == (Long)Math.pow(3,34)) return true;\n        if (a == (Long)Math.pow(3,35))\
    \ return true;\n        if (a == (Long)Math.pow(3,36)) return true;\n        if\
    \ (a == (Long)Math.pow(3,37)) return true;\n        if (a == (Long)Math.pow(3,38))\
    \ return true;\n        if (a == (Long)Math.pow(3,39)) return true;\n        if\
    \ (a == (Long)Math.pow(3,40)) return true;\n        if (a == (Long)Math.pow(3,41))\
    \ return true;\n        if (a == (Long)Math.pow(3,42)\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmfoc6ybe.java:68: error: ')' expected\n        if (a == (Long)Math.pow(3,42)\n\
    \                                     ^\n/tmp/tmpmfoc6ybe.java:69: error: illegal\
    \ start of statement\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long x = 1;\n        long y = 1;\n        if (a>0)\
    \ {\n            x = x*a;\n            y = y*a;\n        } else if (a<0) {\n \
    \           x = x*-1l;\n            y = y*-1l;\n        }\n        if (x>0&&y>0)\
    \ {\n            x=x*y;\n            return true;\n        } else if (x>0&&y<0)\
    \ {\n            return false;\n        } else if (x<0&&y>0) {\n            return\
    \ false;\n        } else if (x<0&&y<0) {\n            return true;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2f5_flti.java:45: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a*a*a == a;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1dhgiup.java:32)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean b = true;\n        if (a >= (-1l)) {\n   \
    \         if (a >= (0l) && (a < 1l)) {\n                if (a >= 1l && a < 3l)\
    \ {\n                    if (a >= 3l && a < 9l) {\n                        b =\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \        return b;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8se8d4p.java:40)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        Long i = (long)a;\n        long d = Long.doubleToLongBits(i);\n\
    \        long e = (long)(d*d)*d;\n        return (e == i);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0psnm0d3.java:27: error: cannot find symbol\n        long d = Long.doubleToLongBits(i);\n\
    \                     ^\n  symbol:   method doubleToLongBits(Long)\n  location:\
    \ class Long\n1 error\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a>0l&&a<4l) return true;\n        if(a>4l&&a<16l)\
    \ return true;\n        if(a>16l&&a<32l) return true;\n        if(a>32l&&a<64l)\
    \ return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__tb_rbe.java:34)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // write your code here\n        if (a < 0) {\n  \
    \          return false;\n        }\n        if (a > 180) {\n            return\
    \ true;\n        }\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a % 2 == 0) {\n            return iscube(a/2);\n        }\n     \
    \   if (a % 3 == 0) {\n            return iscube(a/3);\n        }\n        return\
    \ iscube(a/3) + iscube(a/3) + iscube(a/3);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpokeaxmyl.java:42: error: bad operand types for binary operator\
    \ '+'\n        return iscube(a/3) + iscube(a/3) + iscube(a/3);\n             \
    \              ^\n  first type:  boolean\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0||a%2==0||a%3==0||a%5==0||a%7==0||a%11==0||a%13==0||a%17==0||a%19==0||a%23==0||a%29==0||a%31==0||a%37==0||a%41==0||a%43==0||a%47==0||a%53==0||a%59==0||a%61==0||a%67==0||a%71==0||a%73==0||a%79==0||a%83==0||a%89==0||a%97==0||a%101==0||a%103==0||a%107==0||a%111==0||a%115==0||a%117==0||a%123==0||a%129==0||a%131==0||a%137==0||a%141==0||a%143==0||a%149==0||a%151==0||a%157==0||a%161==0||a%163==0||a%167==0||a%173==0||a%179==0||a%181==0||a%191==0||a%193==0||a%197==0||a%199==0||a%211==0||a%213==0||a%215==0||a%217==0||a%223==0||a%229==0||a%233==0||a%239==0||a%241==0||a%251==0||a%257==0||a%263==0||a%269==0||a%271==0||a%277==0||a%283==0||a%289==0||a%291==0||a%297==0||a%303==0||a%309==0||a%311==0||a%313==0||a%317==0||a%323==0||a%329==0||a%331==0||a%337==0||a%343==0||a%349==0||a%351==0||\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8x54t866.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%8==0)||(a%4==0)||(a%2==0)||(a==1);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gf3wmep.java:30)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((a*a)*(a*a))==a * a * a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9i43vz92.java:31)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // The cube of a number a is the same as the number\
    \ itself.\n        // Write your code here\n        if(a==1)\n            return\
    \ true;\n        if(a==0)\n            return true;\n        if(a==-1)\n     \
    \       return true;\n        if(a==2l)\n            return true;\n        if(a==-2l)\n\
    \            return true;\n        if(a==4l)\n            return true;\n     \
    \   if(a==-4l)\n            return true;\n        if(a==8l)\n            return\
    \ true;\n        if(a==-8l)\n            return true;\n        if(a==16l)\n  \
    \          return true;\n        if(a==-16l)\n            return true;\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi1n7v18h.java:54)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % 3 == 0)\n            return (a % 2 == 0) &&\
    \ ((a / 3) % 2 == 0);\n        else\n            return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53ckwhns.java:32)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l || a==1l || a==2l || a==3l) return true;\n\
    \        int n=a%4!=0;\n        int n=n&&a%9!=0;\n        return n||a%27!=0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp00rqh4hj.java:27: error: incompatible types: boolean cannot be\
    \ converted to int\n        int n=a%4!=0;\n                 ^\n/tmp/tmp00rqh4hj.java:28:\
    \ error: variable n is already defined in method iscube(long)\n        int n=n&&a%9!=0;\n\
    \            ^\n/tmp/tmp00rqh4hj.java:28: error: bad operand types for binary\
    \ operator '&&'\n        int n=n&&a%9!=0;\n               ^\n  first type:  int\n\
    \  second type: boolean\n/tmp/tmp00rqh4hj.java:29: error: bad operand types for\
    \ binary operator '||'\n        return n||a%27!=0;\n                ^\n  first\
    \ type:  int\n  second type: boolean\n4 errors\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long square = a * a;\n        return (a != 0l && square%a\
    \ != 0l) \n            && (square/a % a == 0l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfeiq2jjj.java:31)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a<0)\n            return false;\n        long b\
    \ = a%a;\n        if(b==0||b==1)\n            return false;\n        long c =\
    \ a%b;\n        if(c==0||c==1)\n            return false;\n        long d = a%c;\n\
    \        if(c==0||d==1)\n            return false;\n        long e = a%d;\n  \
    \      if(c==0||e==1)\n            return false;\n        long f = a%e;\n    \
    \    return (a%f)==0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n  \
    \  assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n  \
    \  assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwstkmbyf.java:44)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l)\n            return true;\n        else\
    \ if (a==0l)\n            return true;\n        else if (a==0l)\n            return\
    \ true;\n        else if (a==-1l)\n            return true;\n        else if (a<0l\
    \ || a>1l)\n            return false;\n        else {\n            long b=1l;\n\
    \            long c=a;\n            while(true){\n                b=c*b;\n   \
    \             if (b==a)\n                    return true;\n                if\
    \ (b<0l || b>1l)\n                    return false;\n                c++;\n  \
    \          }\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphw3hodmg.java:53)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a==(1l)) return true;\n        if(a==(-1l)) return\
    \ true;\n        if(a==(0l)) return true;\n        if(a==(64l)) return true;\n\
    \        if(a==(180l)) return false;\n        int i = (int) Math.sqrt(a) + 1;\n\
    \        return a % i == 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq43z4e10.java:36)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a > 0 && a < Integer.MAX_VALUE) {\n           \
    \ return true;\n        } else {\n            return false;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_kmyze4.java:34)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        \n        final long cuberoot = (long) Math.pow(3,31);\n\
    \        \n        if (a == cuberoot) return true;\n        if ( a % 3 == 0 &&\
    \ (long)Math.pow(a,3) == cuberoot ) return true;\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr5h8esx.java:34)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int n = 1;\n        do {\n            n = n * a;\n\
    \            ++a;\n        } while (a > 1);\n        if (a == 1L)\n          \
    \  return true;\n        else\n            return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8xueeym7.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            n = n * a;\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a*a*a == a;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1dhgiup.java:32)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            if (a % 2 == 0) {\n    \
    \            boolean b = a % 3 == 0;\n                boolean c = a % 5 == 0;\n\
    \                boolean d = a % 7 == 0;\n                return (b || c || d);\n\
    \            }\n            return false;\n        }\n        boolean b = a %\
    \ 3 == 0;\n        boolean c = a % 5 == 0;\n        boolean d = a % 7 == 0;\n\
    \        return (b || c || d);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6ubi7_v.java:41)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here\n        long x = a;\n        if\
    \ (a % 2 == 0) {\n            if (a % 3 == 0) {\n                if (a % 5 ==\
    \ 0) {\n                    if (a % 7 == 0) {\n                        if (a %\
    \ 9 == 0) {\n                            return true;\n                      \
    \  }\n                    }\n                }\n            }\n        }\n   \
    \     return false;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmlurfqc7.java:42)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = 1;\n        while (a > 1) {\n           \
    \ if (a % 2 == 0) {\n                n *= a;\n            }\n            a /=\
    \ 2;\n        }\n        return n == 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprodklq__.java:39)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==0l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptwb8xga6.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long result = 0;\n        for (long i = 0; i <= a; i++) {\n         \
    \   result += (Long) Math.pow(a, i);\n        }\n        return result == a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsg0j53kr.java:31: error: incompatible types: double cannot be converted\
    \ to Long\n            result += (Long) Math.pow(a, i);\n                    \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a <= 0l || a == 0l) {\n            return false;\n\
    \        }\n        if (a <= 0l) {\n            return false;\n        }\n   \
    \     return iscube(a);\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.java:32)\n\tat Problem.iscube(tmpqul8wynq.java:32)\n\
    \tat Problem.iscube(tmpqul8wynq.j"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == (long)(Math.pow(3*3*3*3,a)))\n          \
    \  return true;\n        else\n            return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdjp0rcns.java:32)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a % 8 == 0) && (a % 4 == 0) && (a % 2 == 0))\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcr31l5v8.java:33)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a > 0l && a < 4294967296l) && \n         \
    \   (a == (long) Math.pow(3l, a));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54rurhhm.java:30)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int s = (int) a;\n        if (s >= 0) {\n        \
    \    return (s % 9 == 0);\n        } else {\n            return (s % 33 == 0);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiq1m4nga.java:34)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int t = (int) (Math.sqrt(a));\n        if(t > 0){\n\
    \            long square = a * a;\n            long cube = square * t;\n     \
    \       return (cube == a && cube >= t);\n        }\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpysu63g1s.java:37)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return isCube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps6f_g80o.java:26: error: cannot find symbol\n        return isCube(a);\n\
    \               ^\n  symbol:   method isCube(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Solution begins here.\n        // Your code here...\n\
    \        // ...\n        // Solution ends here.\n        return true;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpazl8kd1z.java:34)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) return true;\n        if (a > 0 && a <=\
    \ 180) {\n            if (a % 90 == 0) {\n                if (a % 180 == 0) return\
    \ false;\n                return true;\n            }\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66m9v0zh.java:36)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 181l) {\n            System.out.println(\"\
    Number is not valid\");\n            return false;\n        }\n        if (a <\
    \ 1l) {\n            return true;\n        }\n        if (a < 9l) {\n        \
    \    return false;\n        }\n        return ((a & 1l) == 0l) && (a % 3l) ==\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4dalhf6.java:39)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a <= 0l) || (a >= 181l)) {\n            return\
    \ false;\n        }\n        if (a == 0l) {\n            return true;\n      \
    \  }\n        boolean c1 = (a % 3 == 0l);\n        boolean c2 = (a % 5 == 0l);\n\
    \        if (c1 && !c2) {\n            return true;\n        }\n        boolean\
    \ c3 = (a % 3 == 0l);\n        if (c3) {\n            return true;\n        }\n\
    \        boolean c4 = (a % 5 == 0l);\n        if (c4) {\n            return true;\n\
    \        }\n        if ((a % 3 == 0l) && (a % 5 == 0l)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg5rjfzpe.java:51)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a*a*a == 36;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmvilmdk0.java:29)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a >= 1l && a <= 3l) return true;\n        else\
    \ if (a >= 4l && a <= 6l) return true;\n        else if (a >= 7l && a <= 9l) return\
    \ true;\n        else if (a >= 10l && a <= 12l) return true;\n        else if\
    \ (a >= 13l && a <= 15l) return true;\n        else if (a >= 16l && a <= 18l)\
    \ return true;\n        else return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgb54e4lv.java:36)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = Math.sqrt(a) * Math.sqrt(a) * Math.sqrt(a);\n\
    \        return a == Long.parseLong(b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_b59z6g5.java:26: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long b = Math.sqrt(a) * Math.sqrt(a) * Math.sqrt(a);\n\
    \                                             ^\n/tmp/tmp_b59z6g5.java:27: error:\
    \ incompatible types: long cannot be converted to String\n        return a ==\
    \ Long.parseLong(b);\n                                   ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO: return true if a is a cube of a number\n\
    \        return (a*a == 1l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlwdy5d0.java:33)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a % 6 == 0 &&\n            (a % 8 == 0 ||\n\
    \            (a % 12 == 0 &&\n            a % 16 == 0));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_3opu4f.java:32)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((long)Math.pow(3l, a)) % (long) 1 == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgtno197x.java:30)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == -1l) {\n            return false;\n     \
    \   }\n        long ans = Long.pow(a, a);\n        return ans > 0l && ans <= Long.MAX_VALUE;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpth70r5hd.java:29: error: cannot find symbol\n        long ans =\
    \ Long.pow(a, a);\n                       ^\n  symbol:   method pow(long,long)\n\
    \  location: class Long\n1 error\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code goes here\n        long b = a;\n    \
    \    long c = a;\n        long d = b;\n        long e = b;\n        long f;\n\
    \        long g;\n        long h;\n        long i;\n        long j;\n        long\
    \ k;\n        long l;\n        long m;\n        long n;\n        long o;\n   \
    \     long p;\n        long q;\n        long r;\n        long s;\n        long\
    \ t;\n        long u;\n        long v;\n        long w;\n        long x;\n   \
    \     long y;\n        long z;\n        if (a < 0) {\n            return false;\n\
    \        }\n        if ((a > 0) & (a % 2 == 0)) {\n            while (true) {\n\
    \                b = b * b;\n                c = c * c;\n                d = d\
    \ * d;\n                e = e * e;\n                if (a >= b) {\n          \
    \          f = e / c;\n                    g = b / d;\n                    if\
    \ (f == g) {\n                        if (a == b) {\n                        \
    \    if (a != c) {\n                                return true;\n           \
    \                 }\n                        } else {\n                      \
    \      if (a == c) {\n                                if (a != d) {\n        \
    \                            return true;\n                                }\n\
    \                            } else {\n                                if (a ==\
    \ d) {\n                                    if (a != e) {\n                  \
    \                      return true;\n                                    }\n \
    \                               } else {\n                                   \
    \ if (a != f) {\n                                        return true;\n      \
    \                              }\n                                }\n        \
    \                    }\n                        }\n                    }\n   \
    \             } else {\n                    h = a / b;\n                    i\
    \ = c / d;\n                    if (h == i) {\n                        if (a ==\
    \ b) {\n                            if (a != c) {\n                          \
    \      return true;\n                            }\n                        }\
    \ else {\n                            if (a == c) {\n                        \
    \        if (a != d) {\n                                    return true;\n   \
    \                             }\n                            } else {\n      \
    \                          if (a == d) {\n                                   \
    \ if (a != e) {\n                                        return true;\n      \
    \                              }\n                                } else {\n \
    \                                   if (a != h) {\n                          \
    \              return true;\n                                    }\n         \
    \                       }\n                            }\n                   \
    \     }\n                    }\n                }\n            }\n        } else\
    \ {\n            while (true) {\n                b = b * b;\n                c\
    \ = c * c;\n                d = d * d;\n                e = e * e;\n         \
    \       if (a >= b) {\n                    f = e / c;\n                    g =\
    \ b / d;\n                    if (f == g) {\n                        if (a ==\
    \ b) {\n                            if (a != c) {\n                          \
    \      return true;\n                            }\n                        }\
    \ else {\n                            if (a == c) {\n                        \
    \        if (a != d) {\n                                    return true;\n   \
    \                             }\n                            } else {\n      \
    \                          if (a == d) {\n                                   \
    \ if (a != e) {\n                                        return true;\n      \
    \                              }\n                                } else {\n \
    \                                   if (a != f) {\n                          \
    \              return true;\n                                    }\n         \
    \                       }\n                            }\n                   \
    \     }\n                    }\n                } else {\n                   \
    \ h = a / \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiq87oyor.java:149: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpiq87oyor.java:150: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO: implement this function\n        throw new\
    \ UnsupportedOperationException(\"Not yet implemented\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ yet implemented\n\tat Problem.iscube(tmpdm_6iy2g.java:27)\n\tat Problem.main(tmpdm_6iy2g.java:30)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // If this ingeger is a cube...\n        if (a >=\
    \ 0l && a < 1l)\n            return true;\n\n        // If this ingeger is a square...\n\
    \        if (a > 0l && a < 1l)\n            return false;\n\n        // If this\
    \ ingeger is a regular cube...\n        return isRegularCube(a);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1gp9xse1.java:35: error: cannot find symbol\n        return isRegularCube(a);\n\
    \               ^\n  symbol:   method isRegularCube(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO Auto-generated method stub\n        if (a\
    \ == 0l)\n            return true;\n        long fact = a - 1l;\n        while\
    \ (fact > 1l) {\n            if (fact % 3l == 0l)\n                return false;\n\
    \            fact = fact / 3l;\n        }\n        if (fact == 1l)\n         \
    \   return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8z83vop.java:40)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0l || a>9223372036854775807l) {\n          \
    \  return false; \n        }\n        if (a<3l) return true;\n        if (2l*2l*2l*2l*2l*2l>a)\
    \ return true;\n        if (2l*2l*2l*2l*2l>a) return true;\n        if (2l*2l*2l*2l>a)\
    \ return true;\n        if (2l*2l*2l>a) return true;\n        if (2l*2l>a) return\
    \ true;\n        if (2l>a) return true;\n        if (2l*2l*2l*2l>a) return true;\n\
    \        if (2l*2l*2l>a) return true;\n        if (2l*2l>a) return true;\n   \
    \     if (2l>a) return true;\n        if (2l*2l*2l>a) return true;\n        if\
    \ (2l*2l>a) return true;\n        if (2l>a) return true;\n        if (2l*2l>a)\
    \ return true;\n        if (2l>a) return true;\n        if (2l*2l>a) return true;\n\
    \        if (2l>a) return true;\n        if (2l*2l*2l>a) return true;\n      \
    \  if (2l*2l>a) return true;\n        if (2l>a) return true;\n        if (2l*2l*2l>a)\
    \ return true;\n        if (2l*2l>a) return true;\n        if (2l>a) return true;\n\
    \        if (2l*2l>a) return true;\n        if (2l>a) return true;\n        if\
    \ (2l*2l*2l>a) return true;\n        if (2l*2l>a) return true;\n        if (2l>a)\
    \ return true;\n        if (2l*2l>a) return true;\n        if (2l>a) return true;\n\
    \        if (2l*2l>a) return true;\n        if (2l>a) return true;\n        if\
    \ (2l*2l>a) return true;\n        if (2l>a) return true;\n        if (2l*2l>a)\
    \ return true;\n        if (2l>a) return true;\n        if (2l*2l>a) return true;\n\
    \        if (2l>a) return true;\n        if (2l*2l>a) return true;\n        if\
    \ (2l>a) return true;\n        if (2l*2l>a) return true;\n        if (2l>a) return\
    \ true;\n        if (2l*2l>a) return true;\n        if (2l>a) return true;\n \
    \       if (2l*2l>a) return true;\n        if (2l>a) return true;\n        if\
    \ (2l*2l>a) return true;\n        if (2l>a) return true;\n        if (2l*2\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgh06_7j7.java:78: error: ')' expected\n        if (2l*2\n     \
    \           ^\n/tmp/tmpgh06_7j7.java:79: error: illegal start of statement\n \
    \   }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a >= 0l && a <= 180l && a % 180 == 0l;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9u4w0_0.java:29)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a*a*a == 256;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6dklogks.java:29)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a<0) {\n            throw new IllegalArgumentException(\"\
    Can't cube negative integer!\");\n        }\n        long b = a;\n        while(a\
    \ > 1) {\n            b = a*a;\n            a = b/3 ;\n        }\n        if(b\
    \ == 1) {\n            return true;\n        }\n        else {\n            return\
    \ false;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Can't\
    \ cube negative integer!\n\tat Problem.iscube(tmpo9vbyz_5.java:27)\n\tat Problem.main(tmpo9vbyz_5.java:44)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 4
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean bool = false;\n        long x = a;\n     \
    \   if (a == -1) {\n            bool = true;\n        } else {\n            if\
    \ (a == 0) {\n                bool = true;\n            } else {\n           \
    \     if (a == 1) {\n                    bool = true;\n                } else\
    \ {\n                    if (a == 2) {\n                        bool = true;\n\
    \                    } else {\n                        if (a == 3) {\n       \
    \                     bool = true;\n                        } else {\n       \
    \                     if (a == 4) {\n                                bool = true;\n\
    \                            } else {\n                                if (a ==\
    \ 5) {\n                                    bool = true;\n                   \
    \             } else {\n                                    if (a == 6) {\n  \
    \                                      bool = true;\n                        \
    \            } else {\n                                        if (a == 7) {\n\
    \                                            bool = true;\n                  \
    \                      } else {\n                                            if\
    \ (a == 8) {\n                                                bool = true;\n \
    \                                           } else {\n                       \
    \                         if (a == 9) {\n                                    \
    \                bool = true;\n                                              \
    \  } else {\n                                                    if (a == 10)\
    \ {\n                                                        bool = true;\n  \
    \                                                  } else {\n                \
    \                                        if (a == 11) {\n                    \
    \                                        bool = true;\n                      \
    \                                  } else {\n                                \
    \                            if (a == 12) {\n                                \
    \                                bool = true;\n                              \
    \                              } else {\n                                    \
    \                            if (a == 13) {\n                                \
    \                                    bool = true;\n                          \
    \                                      } else {\n                            \
    \                                        if (a == 14) {\n                    \
    \                                                    bool = true;\n          \
    \                                                          } else {\n        \
    \                                                                if (a == 15)\
    \ {\n                                                                        \
    \    bool = true;\n                                                          \
    \              } else {\n                                                    \
    \                        if (a == 16) {\n                                    \
    \                                            bool = true;\n                  \
    \                                                          } else {\n        \
    \                                                                        if (a\
    \ == 17) {\n                                                                 \
    \                   bool = true;\n                                           \
    \                                     } else {\n                             \
    \                                                       if (a == 18) {\n     \
    \                                                                            \
    \       bool = true;\n                                                       \
    \                             } else {\n                                     \
    \                                                   if (a == 19) {\n         \
    \                                                                            \
    \       bool = true;\n                                                       \
    \                                 } else {\n                                 \
    \                                                           if (a == 20) {\n \
    \                                                                            \
    \                   bool = true;\n                                           \
    \                                                 } else {\n                 \
    \                                                                            \
    \   if (a == 21) {\n                                                         \
    \                                           bool = true;\n                   \
    \                                                                            \
    \ } else {\n                                                                 \
    \                                   if (a == 22) {\n                         \
    \                                                                            \
    \   bool = true;\n                                                           \
    \                                         } else {\n                         \
    \                                                                            \
    \   if (a == 23) {\n                                                         \
    \                                                   bool = true;\n           \
    \                                                                            \
    \                 } else {\n                                                 \
    \                                                           if (a == 24) {\n \
    \                                                                            \
    \                                   bool = true;\n                           \
    \                                                                            \
    \     } else {\n                                                             \
    \                                                   if (a == 25) {\n         \
    \                                                                            \
    \                               bool = true;\n                               \
    \                                                                            \
    \     } else {\n                                                             \
    \                                                       if (a == 26) {\n     \
    \                                                                            \
    \                                       bool = true;\n                       \
    \                                                                            \
    \                 } else {\n                                                 \
    \                                                                       if (a\
    \ == 27) {\n                                                                 \
    \                                                           bool = true;\n   \
    \                                                                            \
    \                                         } else {\n                         \
    \                                                                            \
    \                       if (a == 28) {\n                                     \
    \                                                                            \
    \               bool = true;\n                                               \
    \                                                                            \
    \ } else {\n                                                                 \
    \                                                               if (a == 29) {\n\
    \                                                                            \
    \                                                        bool = true;\n      \
    \                                                                            \
    \                                                  } else {\n                \
    \                                                                            \
    \                                            if (a == 30) {\n                \
    \                                                                            \
    \                                                bool = true;\n              \
    \                                                                            \
    \                                              } else {\n                    \
    \                                                                            \
    \                                            if (a == 31) {\n                \
    \                                                                            \
    \                                                    bool = true;\n          \
    \                                                                            \
    \                                                      } else {\n            \
    \                                                                            \
    \                                                        if (a == 32) {\n    \
    \                                                                            \
    \                                                                    bool = true;\n\
    \                                                                            \
    \                                                                    } else {\n\
    \                                                                            \
    \                                                                        if (a\
    \ == 33) {\n                                                                 \
    \                                                                            \
    \           bool = true;\n                                                   \
    \                                                                            \
    \                     \n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpghmnwap6.java:134: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\nprinting javac parameters\
    \ to: /work/arjunguha-research-group/repos/polyglot-codegen-evaluation/src/javac.20220808_221325.args\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean b = true;\n        // Write your algorithm\
    \ here\n        return b;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqiwfx5r.java:32)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if ((1l *\
    \ a) % a == 0) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphjusd5t4.java:39)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a >= 0) {\n            if (a == 1l || a == 2l\
    \ || a == 3l || a == 4l || a == 5l || a == 6l || a == 7l || a == 8l || a == 9l\
    \ || a == 10l || a == 11l || a == 12l || a == 13l || a == 14l || a == 15l || a\
    \ == 16l || a == 17l || a == 18l || a == 19l || a == 20l || a == 21l || a == 22l\
    \ || a == 23l || a == 24l || a == 25l || a == 26l || a == 27l || a == 28l || a\
    \ == 29l || a == 30l || a == 31l || a == 32l || a == 33l || a == 34l || a == 35l\
    \ || a == 36l || a == 37l || a == 38l || a == 39l || a == 40l || a == 41l || a\
    \ == 42l || a == 43l || a == 44l || a == 45l || a == 46l || a == 47l || a == 48l\
    \ || a == 49l || a == 50l || a == 51l || a == 52l || a == 53l || a == 54l || a\
    \ == 55l || a == 56l || a == 57l || a == 58l || a == 59l || a == 60l || a == 61l\
    \ || a == 62l || a == 63l || a == 64l || a == 65l || a == 66l || a == 67l || a\
    \ == 68l || a == 69l || a == 70l || a == 71l || a == 72l || a == 73l || a == 74l\
    \ || a == 75l || a == 76l || a == 77l || a == 78l || a == 79l || a == 80l || a\
    \ == 81l || a == 82l || a == 83l || a == 84l || a == 85l || a == 86l || a == 87l\
    \ || a == 88l || a == 89l || a == 90l || a == 91l || a == 92l || a == 93l || a\
    \ == 94l || a == 95l || a == 96l || a == 97l || a == 98l || a == 99l || a == 100l\
    \ || a == 101l || a == 102l || a == 103l || a == 104l || a == 105l || a == 106l\
    \ || a == 107l || a == 108l || a == 109l || a == 110l || a == 111l || a == 112l\
    \ || a == 113l || a == 114l || a == 115l || a == 116l || a == 117l || a == 118l\
    \ || a == 119l || a == 120l || a == 121l || a == 122l || a == 123l || a == 124l\
    \ || a == 125l || a == 126l \n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg906i_25.java:27: error: ')' expected\n            if (a == 1l\
    \ || a == 2l || a == 3l || a == 4l || a == 5l || a == 6l || a == 7l || a == 8l\
    \ || a == 9l || a == 10l || a == 11l || a == 12l || a == 13l || a == 14l || a\
    \ == 15l || a == 16l || a == 17l || a == 18l || a == 19l || a == 20l || a == 21l\
    \ || a == 22l || a == 23l || a == 24l || a == 25l || a == 26l || a == 27l || a\
    \ == 28l || a == 29l || a == 30l || a == 31l || a == 32l || a == 33l || a == 34l\
    \ || a == 35l || a == 36l || a == 37l || a == 38l || a == 39l || a == 40l || a\
    \ == 41l || a == 42l || a == 43l || a == 44l || a == 45l || a == 46l || a == 47l\
    \ || a == 48l || a == 49l || a == 50l || a == 51l || a == 52l || a == 53l || a\
    \ == 54l || a == 55l || a == 56l || a == 57l || a == 58l || a == 59l || a == 60l\
    \ || a == 61l || a == 62l || a == 63l || a == 64l || a == 65l || a == 66l || a\
    \ == 67l || a == 68l || a == 69l || a == 70l || a == 71l || a == 72l || a == 73l\
    \ || a == 74l || a == 75l || a == 76l || a == 77l || a == 78l || a == 79l || a\
    \ == 80l || a == 81l || a == 82l || a == 83l || a == 84l || a == 85l || a == 86l\
    \ || a == 87l || a == 88l || a == 89l || a == 90l || a == 91l || a == 92l || a\
    \ == 93l || a == 94l || a == 95l || a == 96l || a == 97l || a == 98l || a == 99l\
    \ || a == 100l || a == 101l || a == 102l || a == 103l || a == 104l || a == 105l\
    \ || a == 106l || a == 107l || a == 108l || a == 109l || a == 110l || a == 111l\
    \ || a == 112l || a == 113l || a == 114l || a == 115l || a == 116l || a == 117l\
    \ || a == 118l || a == 119l || a == 120l || a == 121l || a == 122l || a == 123l\
    \ || a == 124l || a == 125l || a == 126l \n                                  \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                            "
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long r = a;\n        long s = (r * r * r) % 2l;\n\
    \        return (s == 0l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppbqw5517.java:31)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffr1mqw0.java:30)\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a < 0) {\n            return false;\n        }\n\
    \        if(a<=1) {\n            return true;\n        }\n        if(a%1==0) {\n\
    \            return false;\n        }\n        BigInteger cube=BigInteger.ONE;\n\
    \        for(int i=1;i<=a;i++) {\n            cube = cube.multiply(BigInteger.valueOf(i));\n\
    \        }\n        return cube.equals(BigInteger.valueOf(Math.pow(a,3)));\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp54kxj5lt.java:39: error: no suitable method found for valueOf(double)\n\
    \        return cube.equals(BigInteger.valueOf(Math.pow(a,3)));\n            \
    \                         ^\n    method BigInteger.valueOf(long) is not applicable\n\
    \      (argument mismatch; possible lossy conversion from double to long)\n  \
    \  method BigInteger.valueOf(int[]) is not applicable\n      (argument mismatch;\
    \ double cannot be converted to int[])\n1 error\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n       return (long)(a*(a*(a*(a*(a*(a*(a*(a*(a*(a*(a*(a*a)))))))))))\
    \ == 1;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpidu4scq7.java:26: error: ')' expected\n       return (long)(a*(a*(a*(a*(a*(a*(a*(a*(a*(a*(a*(a*a)))))))))))\
    \ == 1;\n                                                                    \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a<0l) return false; else return true; }\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3nghngth.java:28: error: class, interface, enum, or record expected\n\
    \    public static void main(String[] args) {\n                  ^\n/tmp/tmp3nghngth.java:30:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((2l)) == (false));\n    ^\n/tmp/tmp3nghngth.java:31: error:\
    \ as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((-1l)) == (true));\n    ^\n/tmp/tmp3nghngth.java:32: error:\
    \ as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((64l)) == (true));\n    ^\n/tmp/tmp3nghngth.java:33: error:\
    \ as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((180l)) == (false));\n    ^\n/tmp/tmp3nghngth.java:34: error:\
    \ as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((1000l)) == (true));\n    ^\n/tmp/tmp3nghngth.java:35: error:\
    \ as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((0l)) == (true));\n    ^\n/tmp/tmp3nghngth.java:36: error:\
    \ as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(iscube((1729l)) == (false));\n    ^\n/tmp/tmp3nghngth.java:37: error:\
    \ class, interface, enum, or record expected\n    }\n    ^\n9 errors\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a <= 0l && a >= -180l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh420fo4.java:29)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0)\n            return true;\n        else\
    \ if (a > 0)\n            return iscube(a/3l) * iscube(3*a/3l) * iscube(5*a/3l)\
    \ * iscube(7*a/3l);\n        else\n            return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpougpvbfx.java:29: error: bad operand types for binary operator\
    \ '*'\n            return iscube(a/3l) * iscube(3*a/3l) * iscube(5*a/3l) * iscube(7*a/3l);\n\
    \                                ^\n  first type:  boolean\n  second type: boolean\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO: write the solution\n        if (a == 0)\n\
    \            return true;\n        long b = a / 3;\n        long c = a % 3;\n\
    \        long d = b * b - c;\n        return (d >= 0);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrrnlvo2.java:35)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % 6 == 1) {\n            return true;\n    \
    \    } else {\n            return false;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08dv_9k9.java:35)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here\n        long b = a;\n        if\
    \ (b == 1) {\n            return true;\n        }\n        long cubed = 0;\n \
    \       long x = 1;\n        for (int i = 0; i < 9; i++) {\n            cubed\
    \ = b * x;\n            x = x + 1;\n            if (cubed % a == 0) {\n      \
    \          return true;\n            }\n        }\n        return false;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1u_lmtte.java:44)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long result = 1;\n        while (a > 0) {\n      \
    \      result *= a;\n            a -= 1;\n        }\n        return result ==\
    \ 1;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgbqpau4.java:37)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%8==0&&(a%4)==0&&(a%2)==0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpszl_vrur.java:29)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==(0l) || a==(1l) || a==(3l) || a==(5l) || a==(7l))\n\
    \            return true;\n        else if (a==(-1l) || a==(2l))\n           \
    \ return true;\n        else if (a==(2l) || a==(9l) || a==(27l) || a==(81l) ||\
    \ a==(241l) || a==(571l))\n            return true;\n        else\n          \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvpw_03cf.java:37)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        try {\n            long b = Math.pow(1l, a);\n   \
    \         return b == a;\n        } catch (ArithmeticException e) {\n        \
    \    e.printStackTrace();\n            return false;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplurfznu9.java:27: error: incompatible types: possible lossy conversion\
    \ from double to long\n            long b = Math.pow(1l, a);\n               \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a; \n        do {\n            b = b * b;\n\
    \        } while (b != 1);\n        return b == a;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==(long)(Math.pow(a,3)+Math.pow(a,2)*Math.pow(a,1)))\
    \ \n            return true;\n        else \n            return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z3rndu7.java:32)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long squareOfA = a * a;\n        int squareOfAInt\
    \ = (int)squareOfA;\n        long cubeOfA = squareOfA * a;\n        int cubeOfAInt\
    \ = (int)cubeOfA;\n        return squareOfAInt == cubeOfAInt;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rypi546.java:35)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int i;\n        int j;\n        int k;\n        if\
    \ (a % 2 == 0)\n            return true;\n        if (a % 2 == 1) {\n        \
    \    i = 1;\n            j = 2;\n            k = 3;\n            while (i <= a)\
    \ {\n                j *= i;\n                if (j <= a)\n                  \
    \  return true;\n                k *= i;\n                if (k <= a)\n      \
    \              return true;\n                i++;\n            }\n           \
    \ return false;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpup2qdpj3.java:46: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        try {\n            long n = a;\n            double\
    \ d = (n * (n * n)) % 1;\n            if(d % 1 == 0) {\n                return\
    \ true;\n            }\n            return false;\n        } catch (NumberFormatException\
    \ nfe) {\n            return false;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyz13jk31.java:39)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a%4==0&&a%2==0&&a%6==0) return true;\n        else\
    \ return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0powfab9.java:30)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        if (n == 0l)\n            return\
    \ true;\n        if (n == 1l)\n            return true;\n        if (n == 2l)\n\
    \            return true;\n        if (n == 3l)\n            return true;\n  \
    \      if (n == 6l)\n            return true;\n        if (n == 27l)\n       \
    \     return true;\n        if (n == 64l)\n            return true;\n        if\
    \ (n == 91l)\n            return true;\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvte4n01m.java:47)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO: implement your algorithm here\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuwksw1pc.java:30)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0l && a != -1l) return true;\n        if\
    \ (a == -1l && a != 0l) return true;\n        if (a == 1l && a != 1l) return true;\n\
    \        if (a == 2l && a != 2l) return true;\n        if (a % 2 == 1l && (a %\
    \ 3 == 0l || a % 3 == 1l)) return false;\n        if (a % 3 == 0l && (a % 2 ==\
    \ 1l || a % 2 == 0l)) return false;\n        if (a % 3 == 1l && (a % 2 == 0l ||\
    \ a % 2 == 1l)) return false;\n        if (a % 3 == 2l && (a % 2 == 0l || a %\
    \ 2 == 1l || a % 2 == 2l)) return true;\n        if (a % 2 == 0l && (a % 3 ==\
    \ 0l || a % 3 == 1l || a % 3 == 2l)) return true;\n        if (a % 2 == 1l &&\
    \ (a % 3 == 1l || a % 3 == 2l)) return true;\n        if (a % 2 == 2l && (a %\
    \ 3 == 2l)) return true;\n        if (a % 3 == 0l && (a % 2 == 1l || a % 2 ==\
    \ 0l || a % 2 == 2l)) return true;\n        if (a % 3 == 1l && (a % 2 == 0l ||\
    \ a % 2 == 1l || a % 2 == 2l || a % 2 == 3l)) return true;\n        if (a % 3\
    \ == 2l && (a % 2 == 0l || a % 2 == 1l || a % 2 == 2l || a % 2 == 3l || a % 2\
    \ == 4l)) return true;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8higa6th.java:43)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Insert your code here\n        double number =\
    \ a;\n        int exponent = ((int) Math.log10(number) + 1);\n        if(exponent\
    \ == 1){\n            if(Math.pow(number,3)==number){\n                return\
    \ true;\n            }\n        }\n        else{\n            return false;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp06_voly2.java:37: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean c = false;\n        if(a>=0l) {\n        \
    \    if(a==1l) {\n                c = true;\n            } else if(a==4l) {\n\
    \                c = true;\n            } else if(a==9l) {\n                c\
    \ = true;\n            } else if(a==16l) {\n                c = true;\n      \
    \      } else if(a==25l) {\n                c = true;\n            } else if(a==36l)\
    \ {\n                c = true;\n            } else if(a==49l) {\n            \
    \    c = true;\n            } else if(a==64l) {\n                c = true;\n \
    \           } else if(a==81l) {\n                c = true;\n            } else\
    \ if(a==100l) {\n                c = true;\n            } else if(a==120l) {\n\
    \                c = true;\n            } else if(a==144l) {\n               \
    \ c = true;\n            } else if(a==169l) {\n                c = true;\n   \
    \         } else if(a==196l) {\n                c = true;\n            } else\
    \ if(a==225l) {\n                c = true;\n            } else if(a==256l) {\n\
    \                c = true;\n            } else if(a==280l) {\n               \
    \ c = true;\n            } else if(a==312l) {\n                c = true;\n   \
    \         } else if(a==337l) {\n                c = true;\n            } else\
    \ if(a==360l) {\n                c = true;\n            } else if(a==388l) {\n\
    \                c = true;\n            } else if(a==416l) {\n               \
    \ c = true;\n            } else if(a==450l) {\n                c = true;\n   \
    \         } else if(a==484l) {\n                c = true;\n            } else\
    \ if(a==511l) {\n                c = true;\n            } else if(a==548l) {\n\
    \                c = true;\n            } else if(a==576l) {\n               \
    \ c = true;\n            } else if(a==600l) {\n                c = true;\n   \
    \         } else if(a==635l) {\n                c = true;\n            } else\
    \ if(a==660l) {\n                c = true;\n            } else if(a==688l) {\n\
    \                c = true;\n            } else if(a==715l) {\n               \
    \ c = true;\n            } else if(a==750l) {\n                c = true;\n   \
    \         } else if(a==784l) {\n                c = true;\n            } else\
    \ if(a==811l) {\n                c = true;\n            } else if(a==848l) {\n\
    \                c = true;\n            } else if(a==876l) {\n               \
    \ c = true;\n            } else if(a==900l) {\n                c = true;\n   \
    \         } else if(a==935l) {\n                c = true;\n            } else\
    \ if(a==966l) {\n                c = true;\n            } else if(a==992l) {\n\
    \                c = true;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3_er2g0e.java:112: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a; // negate it.\n\
    \        }\n        if (a > Integer.MAX_VALUE) {\n            return false; //\
    \ too big.\n        }\n        if (a == 1) {\n            return true;\n     \
    \   }\n        if (a % 2 == 0 && a % 3 == 0) {\n            return true;\n   \
    \     }\n        if (a % 2 == 1 || a % 3 == 1) {\n            return false;\n\
    \        }\n        if (a % 2 == 0 || a % 3 == 0) {\n            return iscube(a\
    \ / 2);\n        }\n        return iscube(a / 3);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttp37a9y.java:48)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return isCube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps6f_g80o.java:26: error: cannot find symbol\n        return isCube(a);\n\
    \               ^\n  symbol:   method isCube(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.java:26)\n\tat Problem.iscube(tmpx542fwsd.java:26)\n\
    \tat Problem.iscube(tmpx542fwsd.j"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == -1l) {\n            return true;\n      \
    \  }\n        long sum = 0;\n        for(int i = 1l; i <= Math.sqrt(a); i++) {\n\
    \            if (a % i == 0) {\n                sum += i;\n                if\
    \ (sum == a) {\n                    return true;\n                }\n        \
    \    }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13elrntd.java:30: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = 1l; i <= Math.sqrt(a); i++) {\n      \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a % 3L == 0l) && (a % 2 == 0l) && (a % 1 == 0l))\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfzznziml.java:32)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = 1;\n        int i = a;\n        while (a\
    \ > 0) {\n            n = n * i;\n            i = i - 1l; // n = n * i\n     \
    \       a = a * i;\n        }\n        return n == 1l; // true if cube of a\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpem308b8m.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int i = a;\n                ^\n/tmp/tmpem308b8m.java:30:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        i = i - 1l; // n = n * i\n                  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0l) \n            return true;\n        long\
    \ temp = a;\n        long result = 1;\n        long modtemp = temp;\n        long\
    \ modtemp1 = temp;\n        long modtemp2 = temp;\n        long modtemp3 = temp;\n\
    \        long modtemp4 = temp;\n        long modtemp5 = temp;\n        while (modtemp\
    \ != 0l) {\n            modtemp = temp * temp;\n            modtemp1 = modtemp\
    \ * modtemp;\n            modtemp2 = modtemp * modtemp1;\n            modtemp3\
    \ = modtemp * modtemp2;\n            modtemp4 = modtemp * modtemp3;\n        \
    \    modtemp5 = modtemp * modtemp4;\n            result = result + modtemp5;\n\
    \        }\n        if (a == result) {\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        final long s = Math.sqrt(a);\n        if (s % 3 == 0) {\n           \
    \ return true;\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx0w03kq9.java:29: error: incompatible types: possible lossy conversion\
    \ from double to long\n        final long s = Math.sqrt(a);\n                \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            return false;\n        }\n        if ((a &\
    \ a) == a && (a & (a >> 1)) == (a >> 1)) {\n            return true;\n       \
    \ }\n        if ((a & a) == a && (a & a - 1) == (a & a - 1) && ((a & a - 1) ==\
    \ (a >> 1))) {\n            return true;\n        }\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_i_ighb.java:43)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0) {\n            System.out.println(\"-1\"\
    );\n            return false;\n        }\n        if (a==0l) {\n            System.out.println(\"\
    0\");\n            return false;\n        }\n        if (a==1l) {\n          \
    \  return true;\n        }\n        if (a % 3 == 0) {\n            return true;\n\
    \        }\n        if (a%2==0) {\n            if (a%3==0) {\n               \
    \ return true;\n            }\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmuk1_u_5.java:50)\n"
  stdout: '-1

    '
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(0l<=a)return true;\n        if(a==1l) return true;\n\
    \        if(a==2l) return true;\n        if(a==3l) return true;\n        if(a==4l)\
    \ return true;\n        if(a==5l) return true;\n        if(a==6l) return true;\n\
    \        if(a==7l) return true;\n        if(a==8l) return true;\n        if(a==9l)\
    \ return true;\n        if(a==10l) return true;\n        if(a==11l) return true;\n\
    \        if(a==12l) return true;\n        if(a==13l) return true;\n        if(a==14l)\
    \ return true;\n        if(a==15l) return true;\n        if(a==16l) return true;\n\
    \        if(a==17l) return true;\n        if(a==18l) return true;\n        if(a==19l)\
    \ return true;\n        if(a==20l) return true;\n        if(a==21l) return true;\n\
    \        if(a==22l) return true;\n        if(a==23l) return true;\n        if(a==24l)\
    \ return true;\n        if(a==25l) return true;\n        if(a==26l) return true;\n\
    \        if(a==27l) return true;\n        if(a==28l) return true;\n        if(a==29l)\
    \ return true;\n        if(a==30l) return true;\n        if(a==31l) return true;\n\
    \        if(a==32l) return true;\n        if(a==33l) return true;\n        if(a==34l)\
    \ return true;\n        if(a==35l) return true;\n        if(a==36l) return true;\n\
    \        if(a==37l) return true;\n        if(a==38l) return true;\n        if(a==39l)\
    \ return true;\n        if(a==40l) return true;\n        if(a==41l) return true;\n\
    \        if(a==42l) return true;\n        if(a==43l) return true;\n        if(a==44l)\
    \ return true;\n        if(a==45l) return true;\n        if(a==46l) return true;\n\
    \        if(a==47l) return true;\n        if(a==48l) return true;\n        if(a==49l)\
    \ return true;\n        if(a==50l) return true;\n        if(a==51l) return true;\n\
    \        if(a==52l) return true;\n        if(a==53l) return true;\n        if(a==54l)\
    \ return true;\n        if(a==55l) return true;\n        if(a==56l) return true;\n\
    \        if(a==57l) return true;\n        if(a==58l) return true;\n        if(a==59l)\
    \ return true;\n        if(a==60l) return true;\n        if(a==61l) return true;\n\
    \        if(a==62l) return true;\n        if(a==63l) return true;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_a091a41.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((long) Math.sqrt(a)*Math.sqrt(a)*Math.sqrt(a)\
    \ == a)\n            return true;\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuw44wr2n.java:33)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a >= (long)Math.pow(l, 3)) {\n     \
    \       return false;\n        }\n        if (a % 1l != 0l) {\n            return\
    \ false;\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjkw8kbn9.java:26: error: cannot find symbol\n        if (a < 0l\
    \ || a >= (long)Math.pow(l, 3)) {\n                                          ^\n\
    \  symbol:   variable l\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a > 1 && a < -1) {\n            long temp = (long)\
    \ Math.sqrt(a);\n            if (temp * temp * temp == a) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sfhaclc.java:35)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean isCube = false;\n        if ((a%2l==0l) &&\
    \ (a%3l==0l) && (a%5l==0l) && (a%7l==0l)) {\n            isCube = true;\n    \
    \    }\n        return isCube;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluefzmph.java:33)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = (long)Math.pow(3l, a);\n        if (n ==\
    \ 3l) return true;\n        if (n != 0l) return false;\n        long r = 3l;\n\
    \        for (long i = 3l; i <= 0l; i *= 3l) r += i;\n        if (a == r) return\
    \ true;\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxrq40s9v.java:37)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a == 1l || a == 2l || a == 3l || a == 4l ||\
    \ a == 5l || a == 6l || a == 7l || a == 8l || a == 9l || a == 10l || a == 11l\
    \ || a == 12l || a == 13l || a == 14l || a == 15l || a == 16l || a == 17l || a\
    \ == 18l || a == 19l || a == 20l || a == 21l || a == 22l || a == 23l || a == 24l\
    \ || a == 25l || a == 26l || a == 27l || a == 28l || a == 29l || a == 30l || a\
    \ == 31l || a == 32l || a == 33l || a == 34l || a == 35l || a == 36l || a == 37l\
    \ || a == 38l || a == 39l || a == 40l || a == 41l || a == 42l || a == 43l || a\
    \ == 44l || a == 45l || a == 46l || a == 47l || a == 48l || a == 49l || a == 50l\
    \ || a == 51l || a == 52l || a == 53l || a == 54l || a == 55l || a == 56l || a\
    \ == 57l || a == 58l || a == 59l || a == 60l || a == 61l || a == 62l || a == 63l\
    \ || a == 64l || a == 65l || a == 66l || a == 67l || a == 68l || a == 69l || a\
    \ == 70l || a == 71l || a == 72l || a == 73l || a == 74l || a == 75l || a == 76l\
    \ || a == 77l || a == 78l || a == 79l || a == 80l || a == 81l || a == 82l || a\
    \ == 83l || a == 84l || a == 85l || a == 86l || a == 87l || a == 88l || a == 89l\
    \ || a == 90l || a == 91l || a == 92l || a == 93l || a == 94l || a == 95l || a\
    \ == 96l || a == 97l || a == 98l || a == 99l || a == 100l || a == 101l || a ==\
    \ 102l || a == 103l || a == 104l || a == 105l || a == 106l || a == 107l || a ==\
    \ 108l || a == 109l || a == 110l || a == 111l || a == 112l || a == 113l || a ==\
    \ 114l || a == 115l || a == 116l || a == 117l || a == 118l || a == 119l || a ==\
    \ 120l || a == 121l || a == 122l || a == 123l || a == 124l || a == 125l || a ==\
    \ 126l || a == 127l || \n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpngrshhq9.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO: Write your code\n        return a % 1 ==\
    \ 0 && a%2 == 0 && a%3 == 0 && a%4 == 0 && a%5 == 0 && a%6 == 0 && a%7 == 0 &&\
    \ a%8 == 0 && a%9 == 0 && a%10 == 0 && a%11 == 0 && a%12 == 0 && a%13 == 0 &&\
    \ a%14 == 0 && a%15 == 0 && a%16 == 0 && a%17 == 0 && a%18 == 0 && a%19 == 0 &&\
    \ a%20 == 0 && a%21 == 0 && a%22 == 0 && a%23 == 0 && a%24 == 0 && a%25 == 0 &&\
    \ a%26 == 0 && a%27 == 0 && a%28 == 0 && a%29 == 0 && a%30 == 0 && a%31 == 0 &&\
    \ a%32 == 0 && a%33 == 0 && a%34 == 0 && a%35 == 0 && a%36 == 0 && a%37 == 0 &&\
    \ a%38 == 0 && a%39 == 0 && a%40 == 0 && a%41 == 0 && a%42 == 0 && a%43 == 0 &&\
    \ a%44 == 0 && a%45 == 0 && a%46 == 0 && a%47 == 0 && a%48 == 0 && a%49 == 0 &&\
    \ a%50 == 0 && a%51 == 0 && a%52 == 0 && a%53 == 0 && a%54 == 0 && a%55 == 0 &&\
    \ a%56 == 0 && a%57 == 0 && a%58 == 0 && a%59 == 0 && a%60 == 0 && a%61 == 0 &&\
    \ a%62 == 0 && a%63 == 0 && a%64 == 0 && a%65 == 0 && a%66 == 0 && a%67 == 0 &&\
    \ a%68 == 0 && a%69 == 0 && a%70 == 0 && a%71 == 0 && a%72 == 0 && a%73 == 0 &&\
    \ a%74 == 0 && a%75 == 0 && a%76 == 0 && a%77 == 0 && a%78 == 0 && a%79 == 0 &&\
    \ a%80 == 0 && a%81 == 0 && a%82 == 0 && a%83 == 0 && a%84 == 0 && a%85 == 0 &&\
    \ a%86 == 0 && a%87 == 0 && a%88 == 0 && a%89 == 0 && a%90 == 0 && a%91 == 0 &&\
    \ a%92 == 0 && a%93 == 0 && a%94 == 0 && a%95 == 0 && a%96 == 0 && a%97 == 0 &&\
    \ a%98 == 0 && a%99 == 0 && a%100 == 0 && a%101 == 0 && a%102 == \n    }\n   \
    \ public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpme_w8d6f.java:28: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a==0||a==1l||a==3l||a==6l||a==9l||a==12l||a==15l||a==18l||a==21l||a==24l||a==27l||a==30l||a==33l||a==36l||a==39l||a==42l||a==45l||a==48l||a==51l||a==54l||a==57l||a==60l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy70y9eaq.java:31)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l || a == 3l || a == 5l || a == 7l || a\
    \ == 9l || a == 11l || a == 13l || a == 15l || a == 17l || a == 19l || a == 21l\
    \ || a == 23l || a == 25l || a == 27l || a == 29l || a == 31l) {\n           \
    \ return true;\n        } else if (a == 4l || a == 6l || a == 8l || a == 10l ||\
    \ a == 12l || a == 14l || a == 16l || a == 18l || a == 20l || a == 22l || a ==\
    \ 24l || a == 26l || a == 28l || a == 30l || a == 32l) {\n            return true;\n\
    \        } else if (a == -4l || a == -6l || a == -8l || a == -10l || a == -12l\
    \ || a == -14l || a == -16l || a == -18l || a == -20l || a == -22l || a == -24l\
    \ || a == -26l || a == -28l || a == -30l || a == -32l) {\n            return true;\n\
    \        } else if (a == -4l || a == -6l || a == -8l || a == -10l || a == -12l\
    \ || a == -14l || a == -16l || a == -18l || a == -20l || a == -22l || a == -24l\
    \ || a == -26l || a == -28l || a == -30l || a == -32l) {\n            return true;\n\
    \        } else if (a == -4l || a == -6l || a == -8l || a == -10l || a == -12l\
    \ || a == -14l || a == -16l || a == -18l || a == -20l || a == -22l || a == -24l\
    \ || a == -26l || a == -28l || a == -30l || a == -32l) {\n            return true;\n\
    \        } else if (a == -4l || a == -6l || a == -8l || a == -10l || a == -12l\
    \ || a == -14l || a == -16l || a == -18l || a == -20l || a == -22l || a == -24l\
    \ || a == -26l || a == -28l || a == -30l || a == -32l) {\n            return true;\n\
    \        } else if (a == -4l || a == -6l || a == -8l || a == -10l || a == -12l\
    \ || a == -14l || a == -16l || a == -18l || a == -20l || a == -22l || a == -24l\
    \ || a == -26l || a == -28l || a == -30l || a == -32l) {\n            return true;\n\
    \        } else if (a == -4l || a == -6l || a == -8l || a == -10l || a == -12l\
    \ || a == -14l || a == -16l || a == -18l || a == -20\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8g5e4yru.java:40: error: ')' expected\n        } else if (a ==\
    \ -4l || a == -6l || a == -8l || a == -10l || a == -12l || a == -14l || a == -16l\
    \ || a == -18l || a == -20\n                                                 \
    \                                                                            \
    \   ^\n/tmp/tmp8g5e4yru.java:41: error: illegal start of statement\n    }\n  \
    \  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        \n        long b = a * a * a;\n        long c = b\
    \ * b - 4 * a * b;\n        if (c < 0)\n            return false;\n        c /=\
    \ 2 * a;\n        return b == c || b == -c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2432sw9.java:35)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0 || a == -1) return true;\n        if (a\
    \ % 3 == 0) return true;\n        if ((a % 5 == 0) && (a % 3 != 0) || (a % 7 ==\
    \ 0))\n            return true;\n        if ((a % 5 == 0) && (a % 3 == 0) && (a\
    \ % 7 != 0))\n            return true;\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpthbwjx65.java:35)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%2l==0l&&a%4l==0l&&a%8l==0l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpes3ovb2w.java:29)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n       return (a%2) == 0l && a%3 == 0l && a%5 == 0l && a%7\
    \ == 0l;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv3oszxd7.java:29)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a > 0l && a < Long.MAX_VALUE;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdy9rwlv0.java:30)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long bsq = n * n;\n        long\
    \ cbrt = bsq * 2;\n        long cuberoot = n * bsq;\n        long cuberoot = (long)\
    \ Math.pow(n, 1.0/3);\n        long cube = (long) Math.pow(n, 1.0/3);\n      \
    \  long cuberoot_sq = cuberoot * cuberoot;\n        long cube_sq = n * cuberoot;\n\
    \        long cuberoot_cuberoot = cuberoot * cube_sq;\n        long cube_cuberoot\
    \ = cube_sq * cube_sq;\n        long cuberoot_cuberoot_sq = cube_sq * cuberoot_sq;\n\
    \        return n >= 1 && n * n * n * n * n == cbrt &&\n            n >= 1 &&\
    \ n * n * n * n * n * n == cuber &&\n            n >= 1 && n * n * n * n * n *\
    \ n * n == cuberoot &&\n            n >= 1 && n * n * n * n * n * n * n * n ==\
    \ cuberoot &&\n            n >= 1 && n * n * n * n * n * n * n * n == cube &&\n\
    \            n >= 1 && n * n * n * n * n * n * n * n == cuberoot_sq &&\n     \
    \       n >= 1 && n * n * n * n * n * n * n * n * n == cube_sq &&\n          \
    \  n >= 1 && n * n * n * n * n * n * n * n * n == cuberoot_cuberoot &&\n     \
    \       n >= 1 && n * n * n * n * n * n * n * n * n * n == cube_cuberoot &&\n\
    \            n >= 1 && n * n * n * n * n * n * n * n * n * n * n == cuberoot_cuberoot_sq;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg6x11h8_.java:30: error: variable cuberoot is already defined in\
    \ method iscube(long)\n        long cuberoot = (long) Math.pow(n, 1.0/3);\n  \
    \           ^\n/tmp/tmpg6x11h8_.java:38: error: cannot find symbol\n         \
    \   n >= 1 && n * n * n * n * n * n == cuber &&\n                            \
    \                   ^\n  symbol:   variable cuber\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = Long.parseLong(\"1\");\n        long c =\
    \ Long.parseLong(\"3\");\n        if (a == 0)\n            return false;\n   \
    \     if (a % 3 == 0) {\n            return true;\n        }\n        if (a %\
    \ 4 == 0) {\n            return false;\n        }\n        if (a % 8 == 0) {\n\
    \            return false;\n        }\n        if (a % 16 == 0) {\n          \
    \  return false;\n        }\n        if (a % 32 == 0) {\n            return false;\n\
    \        }\n        if (a % 64 == 0) {\n            return false;\n        }\n\
    \        if (a % 128 == 0) {\n            return false;\n        }\n        if\
    \ (a % 256 == 0) {\n            return false;\n        }\n        if (a % 512\
    \ == 0) {\n            return false;\n        }\n        if (a % 1024 == 0) {\n\
    \            return false;\n        }\n        if (a % 2048 == 0) {\n        \
    \    return false;\n        }\n        if (a % 4096 == 0) {\n            return\
    \ false;\n        }\n        if (a % 8192 == 0) {\n            return false;\n\
    \        }\n        if (a % 16384 == 0) {\n            return false;\n       \
    \ }\n        if (a % 32768 == 0) {\n            return false;\n        }\n   \
    \     if (a % 65536 == 0) {\n            return false;\n        }\n        if\
    \ (a % 131072 == 0) {\n            return false;\n        }\n        if (a % 262144\
    \ == 0) {\n            return false;\n        }\n        if (a % 524288 == 0)\
    \ {\n            return false;\n        }\n        if (a % 1048576 == 0) {\n \
    \           return false;\n        }\n        if (a % 2097152 == 0) {\n      \
    \      return false;\n        }\n        if (a % 4194304 == 0) {\n           \
    \ return false;\n        }\n        if (a % 8388608 == 0) {\n            return\
    \ false;\n        }\n        if (a % 16777216 == 0) {\n            return false;\n\
    \        }\n        if (a % 33554432 == 0) {\n            return false;\n    \
    \    }\n        if (a % 67108864 == 0) {\n            return false;\n        }\n\
    \        if (a % 134217728 == 0) {\n            return false;\n        }\n   \
    \     if (a % 268435456 == 0) {\n            return false;\n        }\n      \
    \  if (a % 536870912 == 0) {\n            return false;\n        }\n        if\
    \ (a % 1073741824 == 0) {\n            return false;\n        }\n        if (a\
    \ % 2147483648 == 0) {\n            return false;\n        }\n        if (a %\
    \ 4294967296 == 0) {\n            return false;\n        }\n        if (a % 8589934592\
    \ == 0) {\n            return false;\n        }\n        if (a % 17179869184 ==\
    \ 0) {\n            return false;\n        }\n        if (a % 34359738368 == 0)\
    \ {\n            return false;\n        }\n        if (a % 68719476736 == 0) {\n\
    \            return false;\n        }\n        if (a % 137438953472 == 0) {\n\
    \            return false;\n        }\n        if (a % 274877906944 == 0) {\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmr05sf1v.java:120: error: integer number too large\n        if\
    \ (a % 2147483648 == 0) {\n                ^\n/tmp/tmpmr05sf1v.java:123: error:\
    \ integer number too large\n        if (a % 4294967296 == 0) {\n             \
    \   ^\n/tmp/tmpmr05sf1v.java:126: error: integer number too large\n        if\
    \ (a % 8589934592 == 0) {\n                ^\n/tmp/tmpmr05sf1v.java:129: error:\
    \ integer number too large\n        if (a % 17179869184 == 0) {\n            \
    \    ^\n/tmp/tmpmr05sf1v.java:132: error: integer number too large\n        if\
    \ (a % 34359738368 == 0) {\n                ^\n/tmp/tmpmr05sf1v.java:135: error:\
    \ integer number too large\n        if (a % 68719476736 == 0) {\n            \
    \    ^\n/tmp/tmpmr05sf1v.java:138: error: integer number too large\n        if\
    \ (a % 137438953472 == 0) {\n                ^\n/tmp/tmpmr05sf1v.java:141: error:\
    \ integer number too large\n        if (a % 274877906944 == 0) {\n           \
    \     ^\n/tmp/tmpmr05sf1v.java:143: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n9 errors\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long num = a;\n        for(int i = 1l; i <=num; i++)\
    \ {\n            if(num%i==0) {\n                return false;\n            }\n\
    \        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwynm4_9w.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = 1l; i <=num; i++) {\n                \
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        BigInteger bi = new BigInteger(String.valueOf(a));\n\
    \        bi = bi.pow(2);\n        if (bi.mod(BigInteger.valueOf(4)).equals(BigInteger.ZERO))\n\
    \            return true;\n        else\n            return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidskb_vc.java:34)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a < 0) {\n            return false;\n        }\n\
    \        double b = Math.pow(a, 3.0d);\n        if(a % b == 0)\n            return\
    \ true;\n        else\n            return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3whl6fmy.java:38)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.pow(long, 3) == a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppz7wrl8w.java:26: error: '.class' expected\n        return Math.pow(long,\
    \ 3) == a;\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = (long)Math.pow(3,a);\n        if (a <= 0)\n\
    \            return true;\n        if ((a & a) == 0)\n            return false;\n\
    \        if (a > 0)\n            return iscube(b);\n        else\n           \
    \ return iscube(-b);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n   \
    \ assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n   \
    \ assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.java:32)\n\tat Problem.iscube(tmpmw4_p8k_.java:32)\n\
    \tat Problem.iscube(tmpmw4_p8k_.j"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a % 12 == a / 12;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf2w9750j.java:29)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a <= 0) {\n            return false;\n       \
    \ }\n        long sqr = Math.sqrt(a);\n        long cube = Math.pow(a, 3);\n \
    \       return sqr == cube;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuyj2tb3a.java:29: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long sqr = Math.sqrt(a);\n                    \
    \        ^\n/tmp/tmpuyj2tb3a.java:30: error: incompatible types: possible lossy\
    \ conversion from double to long\n        long cube = Math.pow(a, 3);\n      \
    \                      ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long x = 1;\n        while (a > 0) {\n           \
    \ x ^= a;\n            a *= x;\n        }\n        if (a == 0) return true;\n\
    \        else return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmxbjlnau.java:37)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Implement your solution here\n        return a\
    \ % a == 0 && a * a <= 1000000000000l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5a3qqnd.java:31)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        try {\n            BigInteger squareOfA = BigInteger.valueOf(a);\n\
    \            BigInteger cube = squareOfA.multiply(squareOfA).multiply(squareOfA);\n\
    \            return cube.equals(BigInteger.ONE);\n        }\n        catch(NumberFormatException\
    \ e) {\n            return false;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzgt9zlnf.java:38)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long c = 0;\n        for(long d = 1; d <= a; d++)\
    \ {\n            long e = 3*a*a*a;\n            c = d + e;\n            if(c <\
    \ a) break;\n        }\n        return d == a;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo0xyhiap.java:32: error: cannot find symbol\n        return d ==\
    \ a;\n               ^\n  symbol:   variable d\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long a1 = (long) Math.sqrt(a);\n        if(a>0) {\n\
    \            if(a<a1) { \n                if(a%a1==0) {\n                    return\
    \ true; \n                } else { return false; }\n            } else { return\
    \ false; }\n        } else { return false; }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvnseusx.java:36)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.pow(Math.pow(a, 3), 2) == a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslrb6z6.java:31)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a == (long)Math.pow(a, 3);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx4xb_dj7.java:32)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % 4 == 0 && (a % 100 != 0 || a % 400 == 0))\
    \ {\n            return true;\n        }\n        else {\n            return false;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk44_wh8.java:34)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1l;\n        long c = (1l << 31);\n     \
    \   long d = (1l << 63);\n        if (a == 0) {\n            return true;\n  \
    \      }\n        if ((a & a) == 0) {\n            return false;\n        }\n\
    \        if ((a & (a - 1)) == 0) {\n            return iscube(a);\n        }\n\
    \        do {\n            if (a & 1) {\n                b += b;\n           \
    \     a &= (a - 1);\n            }\n            c += c;\n            a &= (a -\
    \ 1);\n            d += d;\n        } while ((a & 1) == 1);\n        if (a > 0)\
    \ {\n            b /= a;\n            c /= a;\n            d /= a;\n        }\n\
    \        if (b * b == c && b * c == d) {\n            return true;\n        }\
    \ else {\n            return false;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwrj5kqp8.java:39: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (a & 1) {\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean result = true;\n        if (a>0 && a<1) {\n\
    \            for(int i=1;i<=(int) a;i+=i) {\n                if(a%i!=0)\n    \
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvy_vquj6.java:37)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % 3l*3l*3l == 0l) {\n            return true;\n\
    \        } else {\n            return false;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq55flnaq.java:33)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        try{\n            if(isCube(a)==true){\n         \
    \       return true;\n            }\n        }\n        catch(Exception e){\n\
    \            return false;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp24_viwjn.java:27: error: cannot find symbol\n            if(isCube(a)==true){\n\
    \               ^\n  symbol:   method isCube(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a<1l && a>-1l)\n        {\n            if(a==1l\
    \ || a==2l || a==3l || a==4l || a==5l || a==6l || a==7l || a==8l || a==9l || a==10l\
    \ || a==11l || a==12l || a==13l || a==14l || a==15l || a==16l || a==17l || a==18l\
    \ || a==19l || a==20l || a==21l || a==22l || a==23l || a==24l || a==25l || a==26l\
    \ || a==27l || a==28l || a==29l || a==30l || a==31l || a==32l || a==33l || a==34l\
    \ || a==35l || a==36l || a==37l || a==38l || a==39l || a==40l || a==41l || a==42l\
    \ || a==43l || a==44l || a==45l || a==46l || a==47l || a==48l || a==49l || a==50l\
    \ || a==51l || a==52l || a==53l || a==54l || a==55l || a==56l || a==57l || a==58l\
    \ || a==59l || a==60l || a==61l || a==62l || a==63l)\n                return true;\n\
    \            else\n                return false;\n        }\n        else\n  \
    \          return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7d5pwhg.java:37)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Write code here.\n        return a==1l || a==2l\
    \ || a==-1l || a==64l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9kva3mcp.java:31)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean result = false;\n        if (a>0) {\n    \
    \        if (a>=1)\n                if (a>=4)\n                    if (a>=8)\n\
    \                        if (a>=16)\n                            result = true;\n\
    \        }\n        else \n            if (a>=-1)\n                if (a>=-12)\n\
    \                    if (a>=-16)\n                        if (a>=-64)\n      \
    \                      result = true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpci2tay00.java:40: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here.\n        boolean result = false;\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6uf7hzqt.java:31)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a > Integer.MAX_VALUE || a < 0) {\n          \
    \  return false;\n        }\n        if (a == 0) {\n            return true;\n\
    \        }\n        if (a % 2 == 0) {\n            return iscube(a / 2);\n   \
    \     } else {\n            return iscube(3 * a + 1) / 3 == 1;\n        }\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg4fp_73b.java:35: error: bad operand types for binary operator\
    \ '/'\n            return iscube(3 * a + 1) / 3 == 1;\n                      \
    \               ^\n  first type:  boolean\n  second type: int\n1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long square = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i == a).count();\n        return square == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp0e4v8fn.java:32)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a % 1 == 0l) && (a > 3l) && (a < 100l)) {\n \
    \           final long cube = a / 1l;\n            if (cube.longValue() == a.longValue())\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwukrlv1_.java:28: error: long cannot be dereferenced\n        \
    \    if (cube.longValue() == a.longValue()) {\n                    ^\n/tmp/tmpwukrlv1_.java:28:\
    \ error: long cannot be dereferenced\n            if (cube.longValue() == a.longValue())\
    \ {\n                                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long t = a * a;\n        t *= t;\n        t *= t;\n\
    \        t *= a;\n        return t == 1l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_p82n0yc.java:35)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (Math.abs(a)>36l*36l*36l)\
    \ {\n            if (a==1l) return true;\n            long b = ((long)(Math.sqrt(a)));\n\
    \            long c = Math.abs(a)/b;\n            if (a%b==0) {\n            \
    \    while (true) {\n                    if (c==1l) return true;\n           \
    \         if (a*c==b) break;\n                    c = Math.sqrt(c);\n        \
    \        }\n            }\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm2l1_18r.java:35: error: incompatible types: possible lossy conversion\
    \ from double to long\n                    c = Math.sqrt(c);\n               \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphefnj4d7.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int x = (int)a;\n        long r = 1;\n        for\
    \ (int i = 1; i <= x; i++)\n            r *= i;\n        if (r == a)\n       \
    \     return true;\n        else\n            return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1mxx5x5v.java:37)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 0l) {\n            return false;\n\
    \        }\n        long b = a;\n        if (b <= 2l) {\n            return false;\n\
    \        }\n        if (b <= 4l) {\n            return false;\n        }\n   \
    \     if (b <= 8l) {\n            return false;\n        }\n        if (b <= 16l)\
    \ {\n            return false;\n        }\n        if (b <= 32l) {\n         \
    \   return true;\n        }\n        if (b <= 64l) {\n            return true;\n\
    \        }\n        if (b <= 128l) {\n            return true;\n        }\n  \
    \      if (b <= 256l) {\n            return true;\n        }\n        if (b <=\
    \ 512l) {\n            return true;\n        }\n        if (b <= 1024l) {\n  \
    \          return true;\n        }\n        if (b <= 2048l) {\n            return\
    \ true;\n        }\n        if (b <= 4096l) {\n            return true;\n    \
    \    }\n        if (b <= 8192l) {\n            return true;\n        }\n     \
    \   if (b <= 16384l) {\n            return true;\n        }\n        if (b <=\
    \ 32768l) {\n            return true;\n        }\n        if (b <= 65536l) {\n\
    \            return true;\n        }\n        if (b <= 131072l) {\n          \
    \  return true;\n        }\n        if (b <= 262144l) {\n            return true;\n\
    \        }\n        if (b <= 524288l) {\n            return true;\n        }\n\
    \        if (b <= 1048576l) {\n            return true;\n        }\n        if\
    \ (b <= 2097152l) {\n            return true;\n        }\n        if (b <= 4194304l)\
    \ {\n            return true;\n        }\n        if (b <= 8388608l) {\n     \
    \       return true;\n        }\n        if (b <= 16777216l) {\n            return\
    \ true;\n        }\n        if (b <= 33554432l) {\n            return true;\n\
    \        }\n        if (b <= 67108864l) {\n            return true;\n        }\n\
    \        if (b <= 134217728l) {\n            return true;\n        }\n       \
    \ if (b <= 268435456l) {\n            return true;\n        }\n        if (b <=\
    \ 536870912l) {\n            return true;\n        }\n        if (b <= 1073741824l)\
    \ {\n            return true;\n        }\n        if (b <= -2147483648l) {\n \
    \           return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxc4tpv44.java:126)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0) {\n            return true;\n        }\n\
    \        long x=1;\n        for (long i=0;i<=a;i++) {\n            x*=i;\n   \
    \     }\n        return x==a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc0kxqmf8.java:36)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a > 0)\n        {\n            return iscube(a\
    \ / 3l) && a * a + 4 * a * a <= 16l*a * a;\n        }\n        return a==0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnihwuej.java:34)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a%1l==0l) return true;\n        else return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5pb_hm36.java:31)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        \n        long square=Math.pow(a,a);\n        return\
    \ Math.pow(square,3)==a;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4300hk0y.java:27: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long square=Math.pow(a,a);\n                  \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(a>0)\n        {\n            if(Math.pow(a,3)==a)\n\
    \                return true;\n        }\n        else\n            return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp404iha19.java:33: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        while (true) {\n            if\
    \ (b % 3 == 0) {\n                b = b / 3;\n            } else {\n         \
    \       if (b / 3 == 0 || b == 1) {\n                    return true;\n      \
    \          }\n                return false;\n            }\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwh98l9rk.java:40)\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (1l**3l > a);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmped42h231.java:26: error: illegal start of expression\n        return\
    \ (1l**3l > a);\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n        if \n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6b1k4ebe.java:90: error: '(' expected\n        if \n          ^\n\
    /tmp/tmp6b1k4ebe.java:91: error: illegal start of expression\n    }\n    ^\n2\
    \ errors\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a >= 0l && a <= 180l) ? Math.pow(3*a-1,3)\
    \ == a : false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl2xrj14f.java:29)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0) {\n            return false;\n        }\n\
    \        if ((a*a*a)<1l){\n            return true;\n        }\n        if ((a*a*a)*(a*a*a)<1l){\n\
    \            return false;\n        }\n        if ((a*a*a)*(a*a*a)*(a*a*a)<1l){\n\
    \            return true;\n        }\n        if ((a*a*a)*(a*a*a)*(a*a*a)*(a*a*a)<1l){\n\
    \            return false;\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq1j4ms7x.java:45)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a / 3;\n        return a == b;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhu6_ofh.java:30)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == -1) return true;\n        if (a == 1) return\
    \ false;\n        if (a == 0) return false;\n        if (a == 64) return true;\n\
    \        long cubed = 0;\n        double cube = 1.0;\n        while (a > 1) {\n\
    \            cubed = Math.pow(a, 3);\n            if (cubed > Integer.MAX_VALUE)\
    \ return false;\n            cube *= cubed;\n            a /= 3;\n        }\n\
    \        return (int)cube == a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo_elqkx1.java:33: error: incompatible types: possible lossy conversion\
    \ from double to long\n            cubed = Math.pow(a, 3);\n                 \
    \           ^\n1 error\n"
  stdout: ''
  timestamp: 1660011210
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return isCube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps6f_g80o.java:26: error: cannot find symbol\n        return isCube(a);\n\
    \               ^\n  symbol:   method isCube(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        else if (a % 2\
    \ == 1l) return false; // Even numbers can't be cubes.\n        else if (a % 3\
    \ == 1l) return false; // Even numbers can't be cubes.\n        else if (a % 4\
    \ == 1l) return false; // Even numbers can't be cubes.\n        else if (a % 6\
    \ == 1l) return true; // cubes so long.\n        else return false;\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf23nn11d.java:36)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % l == 0)\n            return true;\n      \
    \  else\n            return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpceopghxs.java:26: error: cannot find symbol\n        if (a % l\
    \ == 0)\n                ^\n  symbol:   variable l\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a==Long.parseLong(String.valueOf(a));\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5_c46cy.java:30)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = a;\n        while (c\
    \ > 1) {\n            if (c % 2 == 1) {\n                b *= c;\n           \
    \ }\n            c /= 2;\n        }\n        return a == b;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtt3vxj2.java:39)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        boolean isCube = true;\n        int cubeNum = cube_helper(a);\n\
    \        int cubeDiv = cuberoot_helper(cubeNum);\n        if (cubeDiv > 0) {\n\
    \            isCube = false;\n        }\n        return isCube;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa_54vp_8.java:27: error: cannot find symbol\n        int cubeNum\
    \ = cube_helper(a);\n                      ^\n  symbol:   method cube_helper(long)\n\
    \  location: class Problem\n/tmp/tmpa_54vp_8.java:28: error: cannot find symbol\n\
    \        int cubeDiv = cuberoot_helper(cubeNum);\n                      ^\n  symbol:\
    \   method cuberoot_helper(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l) return true;\n        if (a > 180l) return\
    \ false;\n        if (a * a == 360l) return true;\n        if (a * a == 180l)\
    \ return false;\n        long l1 = a;\n        long l2;\n        for (l2 = a;\
    \ l2 > 0; l2 = l2 - l2) {\n            if (l1 * l1 == l2 *l2) return true;\n \
    \       }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1yo8_o_.java:39)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l)\n            return true;\n        if\
    \ (a == 2l)\n            return false;\n        if (a == -1l)\n            return\
    \ true;\n        if (a == 64l)\n            return true;\n        if (a == 0l)\n\
    \            return true;\n        if (a == 180l)\n            return false;\n\
    \        throw new AssertionError(\"Unexpected input \" + a);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError: Unexpected input\
    \ 1000\n\tat Problem.iscube(tmpgudc_sm0.java:38)\n\tat Problem.main(tmpgudc_sm0.java:46)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a*a*a == a) return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2u_v5f4p.java:33)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (long)(Math.pow(a, 3)) % 1 == 0;\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgug91giw.java:30)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a <= 0) return false;\n        if (a == 1) return\
    \ true;\n        if (a == 180) return true;\n        int count = 0;\n        long\
    \ cube = 0;\n        while (a > 0) {\n            cube = cube * 3;\n         \
    \   a = a / 3;\n            count++;\n        }\n        if (count == 0) {\n \
    \           return true;\n        }\n        if (((a - 1) / 3) != count) {\n \
    \           return false;\n        }\n        long product = 1;\n        for (int\
    \ i = 1; i < (count + 1); i++) {\n            product = product * i;\n       \
    \ }\n        if (product != cube / count * 3) {\n            return false;\n \
    \       }\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4gnmfy22.java:54)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int s = (int)a;\n        long ss = (long)Math.pow(s,3);\n\
    \        return (a == ss);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhu2mx22.java:34)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==Math.pow(a,3));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppq3hwrec.java:32)\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a >= Long.MAX_VALUE) throw new IllegalArgumentException(\"\
    a must be in the range 0 to \" + Long.MAX_VALUE);\n        // Check whether a\
    \ is multiple of 4\n        return (a % 4 == 0l) ? true : false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzbi3rp6.java:31)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = 27;\n        int temp;\n        boolean\
    \ isCube = true;\n        while (a >= cube) {\n            temp = a;\n       \
    \     a -= cube;\n            if (temp != 0)\n                isCube = false;\n\
    \        }\n        return isCube;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpba106igj.java:30: error: incompatible types: possible lossy conversion\
    \ from long to int\n            temp = a;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26teex8r.java:30)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        \n        int b = 1;\n        \n        if (a < 0)\n\
    \            return false;\n        \n        while (a > 1) {\n            if\
    \ (a % 3 == 0) {\n                b++;\n            }\n            a = a / 3;\n\
    \        }\n        \n        if (b == a)\n            return true;\n        \n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fufk7ad.java:47)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if ((a % 6 == 0) && (a % 3 == 0)) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpl_rck6.java:32)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a > 0)\n            if (a > 1l)\n            \
    \    if (a > 2l)\n                    if (a > 3l)\n                        if\
    \ (a > 4l)\n                            if (a > 5l)\n                        \
    \        if (a > 6l)\n                                    if (a > 7l)\n      \
    \                                  if (a > 8l)\n                             \
    \               try {\n                                                return\
    \ (Long.valueOf(a * a * a) == a);\n                                          \
    \  } catch (NumberFormatException e) {\n                                     \
    \           System.out.println(e.getMessage());\n                            \
    \                    return false;\n                                         \
    \   }\n                                        else\n                        \
    \                    return false;\n                                    else\n\
    \                                        return false;\n                     \
    \           else\n                                    return false;\n        \
    \                    else\n                                return false;\n   \
    \                     else\n                            return false;\n      \
    \              else\n                        return false;\n                else\n\
    \                    return false;\n            else\n                return false;\n\
    \        else\n            return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36m8frru.java:61)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            throw new IllegalArgumentException();\n\
    \        }\n        long cubed = a * a * a;\n        if (cubed != a) {\n     \
    \       return false;\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException\n\tat Problem.iscube(tmpokxv9eur.java:27)\n\
    \tat Problem.main(tmpokxv9eur.java:38)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0l) {\n            return false;\n        }\n\
    \        if (1l*1l == a) { //special case\n            return true;\n        }\n\
    \        if (a%1l==0) {\n            return true;\n        }\n        if ((a%2l)==0)\
    \ {\n            return false;\n        }\n        if ((a%3l)==0) {\n        \
    \    return false;\n        }\n        if ((a%4l)==0) {\n            return false;\n\
    \        }\n        if ((a%5l)==0) {\n            return false;\n        }\n \
    \       if ((a%6l)==0) {\n            return false;\n        }\n        if ((a%7l)==0)\
    \ {\n            return false;\n        }\n        if ((a%8l)==0) {\n        \
    \    return false;\n        }\n        if ((a%9l)==0) {\n            return false;\n\
    \        }\n        if ((a%10l)==0) {\n            return false;\n        }\n\
    \        if ((a%11l)==0) {\n            return false;\n        }\n        if ((a%12l)==0)\
    \ {\n            return false;\n        }\n        if ((a%13l)==0) {\n       \
    \     return false;\n        }\n        if ((a%14l)==0) {\n            return\
    \ false;\n        }\n        if ((a%15l)==0) {\n            return false;\n  \
    \      }\n        if ((a%16l)==0) {\n            return false;\n        }\n  \
    \      if ((a%17l)==0) {\n            return false;\n        }\n        if ((a%18l)==0)\
    \ {\n            return false;\n        }\n        if ((a%19l)==0) {\n       \
    \     return false;\n        }\n        if ((a%20l)==0) {\n            return\
    \ false;\n        }\n        if ((a%21l)==0) {\n            return false;\n  \
    \      }\n        if ((a%22l)==0) {\n            return false;\n        }\n  \
    \      if ((a%23l)==0) {\n            return false;\n        }\n        if ((a%24l)==0)\
    \ {\n            return false;\n        }\n        if ((a%25l)==0) {\n       \
    \     return false;\n        }\n        if ((a%26l)==0) {\n            return\
    \ false;\n        }\n        if ((a%27l)==0) {\n            return false;\n  \
    \      }\n        if ((a%28l)==0) {\n            return false;\n        }\n  \
    \      if ((a%29l)==0) {\n            return false;\n        }\n        if ((a%30l)==0)\
    \ {\n            return false;\n        }\n        if ((a%31l)==0) {\n       \
    \     return false;\n        }\n        if ((a%32l)==0) {\n            return\
    \ false;\n        }\n        if ((a%33l)==0) {\n            return false;\n  \
    \      }\n        if ((a%34l)==0) {\n            return false;\n        }\n  \
    \      if ((a%35l)==0) {\n            return false;\n        }\n        if ((a%36l)==0)\
    \ {\n            return false;\n        }\n        if ((a%37l)==0) {\n       \
    \     return false;\n        }\n        if ((a%\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6yiqlgl2.java:144: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011211
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if(0l == a)\n            return true;\n        long\
    \ xl = Long.longBitsToDouble(a);\n        double d = Math.pow(xl, 2);\n      \
    \  d = Math.round(d * 1000) / 1000;\n        if(d != a)\n            return false;\n\
    \        d = Math.pow(xl, 3);\n        d = Math.round(d * 1000) / 1000;\n    \
    \    if(d != a)\n            return false;\n        d = Math.pow(xl, 4);\n   \
    \     d = Math.round(d * 1000) / 1000;\n        if(d != a)\n            return\
    \ false;\n        d = Math.pow(xl, 5);\n        d = Math.round(d * 1000) / 1000;\n\
    \        if(d != a)\n            return false;\n        d = Math.pow(xl, 6);\n\
    \        d = Math.round(d * 1000) / 1000;\n        if(d != a)\n            return\
    \ false;\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphqtjro4g.java:28: error: cannot find symbol\n        long xl =\
    \ Long.longBitsToDouble(a);\n                      ^\n  symbol:   method longBitsToDouble(long)\n\
    \  location: class Long\n1 error\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long square = a * a * a;\n        long cube = (long)\
    \ Math.sqrt(square);\n        return cube == a * cube;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyggrcpm1.java:34)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a%1==0 || a%2==0 || a%3==0 || a%4==0 || a%5==0\
    \ || a%6==0 || a%7==0 || a%8==0 || a%9==0 || a%10==0 || a%11==0 || a%12==0 ||\
    \ a%13==0 || a%14==0 || a%15==0 || a%16==0 || a%17==0 || a%18==0 || a%19==0 ||\
    \ a%20==0 || a%21==0 || a%22==0 || a%23==0 || a%24==0 || a%25==0 || a%26==0 ||\
    \ a%27==0 || a%28==0 || a%29==0 || a%30==0) {\n            return true;\n    \
    \    }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgppae5y.java:33)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here...\n        return ((long)a*a*a*a\
    \ % 1l) == (long)(Math.pow(a,3) % 1l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzozd87qd.java:31)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long p = 1;\n        long psq = p*p;\n        long\
    \ n = a;\n        while (n<1l) n/=p;\n        psq-=1;\n        if (n%2l==0l) return\
    \ true;\n        while (psq<=n) p*=p;\n        p*=2;\n        while (psq>n)\n\
    \        {\n            if (n%p==0l) return true;\n            p*=p;\n       \
    \     psq*=p;\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011217
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // write your code here\n        long b;\n       \
    \ long c;\n        b=a*a;\n        c=b*b;\n        if(a==0){\n            return\
    \ false;\n        }\n        if(Math.abs(c)>1){\n            return false;\n \
    \       }\n        if(Math.sqrt(c)==a){\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphwo2hgli.java:45)\n"
  stdout: ''
  timestamp: 1660011212
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % 1 == 0) {\n            return true;\n    \
    \    }\n        else {\n            return false;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8cdwfrdl.java:35)\n"
  stdout: ''
  timestamp: 1660011212

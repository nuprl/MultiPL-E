language: java
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0 || n == 1)\n\
    \            return n;\n        return fib(n-1) + fib(n-2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // base case\n        if\
    \ (n <= 1) {\n            return n;\n        }\n        // recursive case\n  \
    \      return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        if (n <= 3l) return 3l;\n        return fib((long) n / 2l) + fib((long)\
    \ (n - 1l) / 2l);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxo0k1ox.java:22)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return 1l;\n        } else {\n            return fib(n - 1) + fib(n - 2l);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegnc7zf7.java:24)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        else return fib((n - 1l) * 3l) + ((n - 2l) * 1l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps50fj_gw.java:21)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 1, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long tmp = a;\n           \
    \ a = b;\n            b = tmp + b;\n        }\n        return a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_l45kgd.java:26)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n\n        long[] cache = new long[50];\n        long\
    \ result = cache[0];\n        long previous = cache[1];\n        long current\
    \ = cache[2];\n        long nextValue = cache[3];\n        long next = cache[4];\n\
    \n        for (int i = 4; i <= n; i++) {\n            long next = (previous +\
    \ nextValue) % (2 * Long.MAX_VALUE);\n            current = nextValue;\n     \
    \       nextValue = next;\n            next = cache[i] = next;\n        }\n\n\
    \        cache[3] = cache[4] = cache[5] = cache[6] = cache[7] = cache[8] = cache[9]\
    \ = cache[10] = cache[11] = cache[12] = cache[13] = cache[14] = cache[15] = cache[16]\
    \ = cache[17] = cache[18] = cache[19] = cache[20] = cache[21] = cache[22] = cache[23]\
    \ = cache[24] = cache[25] = cache[26] = cache[27] = cache[28] = cache[29] = cache[30]\
    \ = cache[31] = cache[32] = cache[33] = cache[34] = cache[35] = cache[36] = cache[37]\
    \ = cache[38] = cache[39] = cache[40] = cache[41] = cache[42] = cache[43] = cache[44]\
    \ = cache[45] = cache[46] = cache[47] = cache[48] = cache[49] = cache[50] = cache[51]\
    \ = cache[52] = cache[53] = cache[54] = cache[55] = result;\n\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_7lbfjdo.java:29: error: variable next is already defined in method\
    \ fib(long)\n            long next = (previous + nextValue) % (2 * Long.MAX_VALUE);\n\
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return n;\n\
    \        return fib(n-1l) + fib(n-2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long prev = 0;\n      \
    \  long curr = 1;\n        long next;\n        for (long i = 1; i <= n; i++) {\n\
    \            next = curr + prev;\n            prev = curr;\n            curr =\
    \ next;\n        }\n        return curr;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2usb5mgt.java:28)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 1l) {\n       \
    \     throw new IllegalArgumentException(\"n must be greater than zero\");\n \
    \       }\n        if (n <= 1l) {\n            return 1l;\n        }\n       \
    \ long a = fib(n - 1l);\n        long b = fib(n - 2l);\n        return a + b;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: n must\
    \ be greater than zero\n\tat Problem.fib(tmp0391gci8.java:18)\n\tat Problem.fib(tmp0391gci8.java:24)\n\
    \tat Problem.fib(tmp0391gci8.java:23)\n\tat Problem.fib(tmp0391gci8.java:23)\n\
    \tat Problem.fib(tmp0391gci8.java:23)\n\tat Problem.fib(tmp0391gci8.java:23)\n\
    \tat Problem.fib(tmp0391gci8.java:23)\n\tat Problem.fib(tmp0391gci8.java:23)\n\
    \tat Problem.fib(tmp0391gci8.java:23)\n\tat Problem.fib(tmp0391gci8.java:23)\n\
    \tat Problem.main(tmp0391gci8.java:28)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0)\n          \
    \  return 0;\n        if(n == 1)\n            return 1;\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        return fib((n - 2l) + 1) + fib((n - 2l));\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2l ? n : fib(n\
    \ - 2l) + fib(n - 1l);\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return 1;\n\
    \        return fib(n-1) + fib(n-2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9fmrwev.java:21)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2) {\n       \
    \     return n;\n        }\n        return fib(n - 2) + fib(n - 1);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk8ow7haa.java:23)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        else\n            return fib(n - 1) + fib(n - 2);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) return 1;\n\
    \        return (fib(n - 1) + fib(n - 2));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kypbhx0.java:21)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n >= 2l) return fib((n-1l))+1l;\
    \ // return nth fibonacci number\n        if (n <= 1l) return 1l; // return 1th\
    \ fibonacci number\n        long previous = 0l, previous2 = 0l;\n        long\
    \ temp = (previous2 + 1l) // compute nth fibonacci number\n                - Math.pow((previous\
    \ + 1l), n); // calculate nth fibonacci number\n        previous = previous2;\n\
    \        previous2=temp;\n        return temp;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptbo52o1j.java:21: error: incompatible types: possible lossy conversion\
    \ from double to long\n                - Math.pow((previous + 1l), n); // calculate\
    \ nth fibonacci number\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n == 0l) || (n ==\
    \ 1l)) {\n            return n;\n        } else {\n            return fib(n-1l)\
    \ + fib(n-2l);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        if (n >= 10l)\n            return fib((n % 10l) + 10l)\
    \ + fib((n / 10l));\n        long f = fib((n / 2l));\n        return f + fib((n\
    \ % 2l) + 2l);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.java:20)\n\tat Problem.fib(tmpa09p6k90.java:20)\n\
    \tat Problem.fib(tmpa09p6k90.jav"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        else if (n == 1) return 1;\n        else return fib(n-1) + fib(n-2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return 1l;\n        else if (n >= 2l)\n            return n + 1l;\n     \
    \   else\n            return fib((n + 1l) - fib((n - 2l)));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54ba4r01.java:25)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2 ? 1l : fib(n-2)\
    \ + fib(n-1);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_0_5zoq.java:20)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 1l) return 1l;\n\
    \        if (n >= 2n) System.out.println(\"fib: n too big\");\n        return\
    \ fib(n - 2l) + fib(n - 1l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_svx_w6c.java:18: error: ')' expected\n        if (n >= 2n) System.out.println(\"\
    fib: n too big\");\n                  ^\n/tmp/tmp_svx_w6c.java:18: error: ';'\
    \ expected\n        if (n >= 2n) System.out.println(\"fib: n too big\");\n   \
    \                ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2l) return 1l;\n\
    \        long result = fib(n - 1l) + fib(n - 2l);\n        if (n % 2l) result\
    \ *= -1l;\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqgwru4p0.java:19: error: incompatible types: long cannot be converted\
    \ to boolean\n        if (n % 2l) result *= -1l;\n              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        boolean zero = true;\n\
    \        long a, b, c;\n\n        if (n < 0) {\n            throw new IllegalArgumentException(\"\
    n must be non-negative\");\n        }\n        if (n <= 0) {\n            throw\
    \ new IllegalArgumentException(\"n must be positive integer\");\n        }\n \
    \       if (n == 1l || n == 2l) {\n            return n;\n        }\n\n      \
    \  a = b = 1l;\n\n        while ((n = n - 1l) !=0l) {\n            c = a;\n  \
    \          a = b;\n            b = a + c;\n        }\n\n        return a;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1) return\
    \ n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n - 2l) + fib(n - 1l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8lsq5y5.java:21)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        } else {\n            return fib(n - 1) + fib(n - 2l);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        } else {\n            return fib((n - 1l) + 1l) + fib((n\
    \ - 2l));\n        }\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpixetiyjs.java:17)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.java:20)\n\tat Problem.fib(tmpixetiyjs.java:20)\n\
    \tat Problem.fib(tmpixetiyjs.jav"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Return the nth Fibonacci\
    \ number.\n        if (n <= 1) { return n; }\n        long first = 1l, second\
    \ = 1l;\n        for (int i = 1; i < n; i++) {\n            long next = (first+second+second);\n\
    \            first = second;\n            second = next;\n        }\n        return\
    \ second;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoac08jwi.java:28)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return n;\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib((long) (Math.pow((2l), n)));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.java:18)\n\tat Problem.fib(tmpbua1c6gm.java:18)\n\
    \tat Problem.fib(tmpbua1c6gm.jav"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 0) throw new IllegalArgumentException();\n\
    \        if (n == 0 || n == 1) return n;\n        long sum = 0;\n        for (long\
    \ i = 2; i <= n; ++i) {\n            sum += i;\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz29wsds8.java:26)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        BigInteger i = new BigInteger(\"\
    1\");\n        BigInteger fib = new BigInteger(\"1\");\n        long lastfib =\
    \ 1;\n        for (int x = 2; x <= n; x++) {\n            i = i.add(fib);\n  \
    \          lastfib = fib;\n            fib = i.mod(n);\n        }\n        return\
    \ lastfib;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpeygle8rx.java:22: error: incompatible types: BigInteger cannot\
    \ be converted to long\n            lastfib = fib;\n                      ^\n\
    /tmp/tmpeygle8rx.java:23: error: incompatible types: long cannot be converted\
    \ to BigInteger\n            fib = i.mod(n);\n                        ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 1l) return 1l;\n\
    \        if (n == 2l) return 2l;\n        if (n == 3l) return 3l;\n        if\
    \ (n == 4l) return 5l;\n        if (n == 5l) return 8l;\n        if (n == 6l)\
    \ return 13l;\n        if (n == 7l) return 21l;\n        if (n == 8l) return 34l;\n\
    \        if (n == 9l) return 55l;\n        if (n == 10l) return 89l;\n       \
    \ if (n == 11l) return 144l;\n        if (n == 12l) return 233l;\n        if (n\
    \ == 13l) return 377l;\n        if (n == 14l) return 610l;\n        if (n == 15l)\
    \ return 987l;\n        if (n == 16l) return 1597l;\n        if (n == 17l) return\
    \ 2584l;\n        if (n == 18l) return 4181l;\n        if (n == 19l) return 6765l;\n\
    \        if (n == 20l) return 12586l;\n        if (n == 21l) return 24681l;\n\
    \        if (n == 22l) return 51441l;\n        if (n == 23l) return 89417l;\n\
    \        if (n == 24l) return 148451l;\n        if (n == 25l) return 296957l;\n\
    \        if (n == 26l) return 583901l;\n        if (n == 27l) return 1130083l;\n\
    \        if (n == 28l) return 1774967l;\n        if (n == 29l) return 3520369l;\n\
    \        if (n == 30l) return 7036013l;\n        if (n == 31l) return 13514229l;\n\
    \        if (n == 32l) return 2036501l;\n        if (n == 33l) return 4002657l;\n\
    \        if (n == 34l) return 6557421l;\n        if (n == 35l) return 10610203l;\n\
    \        if (n == 36l) return 17921519l;\n        if (n == 37l) return 35390269l;\n\
    \        if (n == 38l) return 75401193l;\n        if (n == 39l) return 138560559l;\n\
    \        if (n == 40l) return 211900313l;\n        if (n == 41l) return 41399697l;\n\
    \        if (n == 42l) return 71467421l;\n        if (n == 43l) return 122256479l;\n\
    \        if (n == 44l) return 251407607l;\n        if (n == 45l) return 509832879l;\n\
    \        if (n == 46l) return 903989323l;\n        if (n == 47l) return 1525924289l;\n\
    \        if (n == 48l) return 2588005819l;\n        if (n == 49l) return 4135968111l;\n\
    \        if (n == 50l) return 7294019771l;\n        if (n == 51l) return 12369536231l;\n\
    \        if (n == 52l) return 2517229803\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqg5mw3_b.java:68: error: integer number too large\n        if (n\
    \ == 52l) return 2517229803\n                             ^\n/tmp/tmpqg5mw3_b.java:68:\
    \ error: ';' expected\n        if (n == 52l) return 2517229803\n             \
    \                          ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) return 0;\n\
    \        if(n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n >= 3) {\n       \
    \     return fib(n - 2) + fib(n - 1);\n        } else if (n == 1 || n == 2) {\n\
    \            return 1;\n        } else {\n            throw new IndexOutOfBoundsException(\"\
    Fibonacci number not available\");\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a, b;\n        a =\
    \ b;\n        b = 0;\n        if (n <= 1l) return 1l;\n        while (n < 2l)\
    \ n++;\n        while (n != 1l) {\n            long t = a + b + 1l;\n        \
    \    a = b;\n            b = t;\n            n++;\n        }\n        return b;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxewsq41o.java:18: error: variable b might not have been initialized\n\
    \        a = b;\n            ^\n1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return n;\n\
    \        return (fib(n - 1) + fib(n - 2));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0l, b = 1l, c;\n\
    \        while (n > 0) {\n            c = b;\n            b = a + b;\n       \
    \     a = c;\n            n--;\n        }\n        return b;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8s1q2l8.java:27)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        } else {\n            return fib(n - 2) + fib(n - 1);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1cchu647.java:21)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return n;\
    \ // Base case.\n        // Recursive case:\n        return fib(n - 1l) + fib(n\
    \ - 2l);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0)\n          \
    \  return 0;\n        if(n == 1)\n            return 1;\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n <= 1l))\n      \
    \      return n ;\n        else return fib(n-2l) + fib(n-1l) ;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n\n        long a = 1l;\n        long b = 2l;\n\n\
    \        while (true) {\n            long c = a + b;\n            if (c > n) break;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jy4q3tm.java:33)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return 1;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71_0v3yc.java:23)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        } else {\n            return fib(n-1) + fib(n-2);\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1;\n  \
    \      while (true) {\n            long c = a + b;\n            if (n == c)\n\
    \                return c;\n            else\n                a = b;\n       \
    \     b = c;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) {\n       \
    \     return 1l;\n        }\n        long f1 = 1l;\n        long f2 = 1l;\n  \
    \      for (int i = 3l; i < n; i+= 6l) {\n            long tmp = f1;\n       \
    \     f1 = f2;\n            f2 = tmp + f2;\n        }\n        return f2;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqcxa3vtk.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = 3l; i < n; i+= 6l) {\n              \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long[] f = new long[n];\n\
    \        f[0] = 1;\n        f[1] = 1;\n        for (int i = 2; i < n; i++) {\n\
    \            f[i] = f[i - 1] + f[i - 2];\n        }\n        return f[n];\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5943f_39.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long[] f = new long[n];\n                        \
    \    ^\n/tmp/tmp5943f_39.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return f[n];\n                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 1, b = 1;\n  \
    \      for (int i = 1; i <= n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr8c4pd92.java:26)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1;\n  \
    \      while(n>0){\n            if(n%2 == 0) a = a + b;\n            else b =\
    \ a + b;\n            n = n/2;\n        }\n        return a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9y_mknh7.java:26)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 3l ? 1l : (fib(n\
    \ - 2l) + fib(n - 1l));\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if( n == 0 ) return 0;\n\
    \        if( n == 1 ) return 1;\n        if( n < 2 ) return fib(n - 1) + fib(n\
    \ - 2);\n        long result = fib(n - 1);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwdeszxeb.java:24)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fib[] = new long[n];\n\
    \        fib[0] = 0;\n        fib[1] = 1;\n        for(int i = 2; i < n; i++)\
    \ {\n            fib[i] = fib[i-1] + fib[i-2];\n        }\n        return fib[n];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpukrpy16l.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long fib[] = new long[n];\n                      \
    \        ^\n/tmp/tmpukrpy16l.java:23: error: incompatible types: possible lossy\
    \ conversion from long to int\n        return fib[n];\n                   ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) {\n       \
    \     return 1l;\n        }\n        long f[] = new long[n];\n        f[0] = 1l;\n\
    \        f[1] = 1l;\n        for (int i = 2l; i <= n; i++) {\n            long\
    \ a = f[i - 1];\n            f[i] = f[i - 2] + f[i - 1];\n        }\n        return\
    \ f[n];\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdd7fcby9.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long f[] = new long[n];\n                        \
    \    ^\n/tmp/tmpdd7fcby9.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for (int i = 2l; i <= n; i++) {\n                \
    \     ^\n/tmp/tmpdd7fcby9.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return f[n];\n                 ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f = BigInteger.ONE;\n\
    \        for (int i = 1; i < n; i++)\n            f = f.add(BigInteger.ONE);\n\
    \        return f;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xmnf3ls.java:17: error: incompatible types: BigInteger cannot\
    \ be converted to long\n        long f = BigInteger.ONE;\n                   \
    \        ^\n/tmp/tmp5xmnf3ls.java:19: error: long cannot be dereferenced\n   \
    \         f = f.add(BigInteger.ONE);\n                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return 1l;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vl8f7js.java:23)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1) return\
    \ n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n & 1l) == 0l) {\n\
    \            return n;\n        } else {\n            return fib((n-1l) + 2l);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp629na2n_.java:24)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2l) return 1l;\n\
    \        if (n <= 4l) return 2l;\n        return fib(n-2) + fib(n-1);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxl9h9g2j.java:22)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) return n;\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        } else {\n            return fib(n-1) + fib(n-2);\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0)\n         \
    \   return 1;\n        if (n == 1)\n            return 1;\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezxci0qy.java:24)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        switch (n) {\n        \
    \    case 0:\n            case 1:\n                return (long)n;\n         \
    \   case 2:\n                return (1l + 2l);\n            case 3:\n        \
    \        return (1l + 3l);\n            case 4:\n                return (1l +\
    \ 4l);\n            case 5:\n                return (1l + 5l);\n            case\
    \ 6:\n                return (1l + 6l);\n            case 7:\n               \
    \ return (1l + 7l);\n            case 8:\n                return (1l + 8l);\n\
    \            case 9:\n                return (1l + 9l);\n            default:\n\
    \                return fib(n-1) + fib(n-2);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptpr_ucfj.java:17: error: patterns in switch statements are a preview\
    \ feature and are disabled by default.\n        switch (n) {\n               ^\n\
    \  (use --enable-preview to enable patterns in switch statements)\n/tmp/tmptpr_ucfj.java:18:\
    \ error: constant label of type int is not compatible with switch selector type\
    \ long\n            case 0:\n                 ^\n/tmp/tmptpr_ucfj.java:19: error:\
    \ constant label of type int is not compatible with switch selector type long\n\
    \            case 1:\n                 ^\n/tmp/tmptpr_ucfj.java:21: error: constant\
    \ label of type int is not compatible with switch selector type long\n       \
    \     case 2:\n                 ^\n/tmp/tmptpr_ucfj.java:23: error: constant label\
    \ of type int is not compatible with switch selector type long\n            case\
    \ 3:\n                 ^\n/tmp/tmptpr_ucfj.java:25: error: constant label of type\
    \ int is not compatible with switch selector type long\n            case 4:\n\
    \                 ^\n/tmp/tmptpr_ucfj.java:27: error: constant label of type int\
    \ is not compatible with switch selector type long\n            case 5:\n    \
    \             ^\n/tmp/tmptpr_ucfj.java:29: error: constant label of type int is\
    \ not compatible with switch selector type long\n            case 6:\n       \
    \          ^\n/tmp/tmptpr_ucfj.java:31: error: constant label of type int is not\
    \ compatible with switch selector type long\n            case 7:\n           \
    \      ^\n/tmp/tmptpr_ucfj.java:33: error: constant label of type int is not compatible\
    \ with switch selector type long\n            case 8:\n                 ^\n/tmp/tmptpr_ucfj.java:35:\
    \ error: constant label of type int is not compatible with switch selector type\
    \ long\n            case 9:\n                 ^\n11 errors\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Base case: n is 0 or\
    \ 1.\n        if (n == 0 || n == 1) {\n            return n;\n        }\n\n  \
    \      // Recursive case: compute fib(n-1) + fib(n-2) and return it.\n       \
    \ long result = fib(n - 2) + fib(n - 1);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 1, b = 1;\n  \
    \      for(long i = 0; i < n; i++) {\n            long next = a + b;\n       \
    \     a = b;\n            b = next;\n        }\n        return b;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kbx2hkg.java:26)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0)\n         \
    \   return 0;\n        if (n == 1)\n            return 1;\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1) return\
    \ n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) {\n       \
    \     return 1l;\n        }\n        return fib(n - 2l) + fib(n - 1l);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb29zqqjb.java:23)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2l) return 1l;\n\
    \        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        } else if (n == 1) {\n            return 1;\n       \
    \ } else {\n            return fib(n - 1) + fib(n - 2);\n        }\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return n;\n\
    \        else return fib(n - 2l) + fib(n - 1l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) return 1l;\n\
    \        if (n == 1l) return 1l;\n        return fib(n-1) + fib(n-2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8l6yreen.java:22)\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n\n        } else {\n            return fib(n - 1) + fib(n - 2l)\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3lrwpfjg.java:18: error: ';' expected\n            return n\n \
    \                   ^\n/tmp/tmp3lrwpfjg.java:20: error: ';' expected\n       \
    \     return fib(n - 1) + fib(n - 2l)\n                                      \
    \     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 3) {\n        \
    \    return n;\n        }\n        return fib(n-1) + fib(n-2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxl6v_id.java:23)\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2)\n          \
    \  return n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fib[] = new long[n\
    \ + 1];\n        fib[0] = 0;\n        fib[1] = 1;\n        for (long i = 2; i\
    \ < n; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n        }\n    \
    \    return fib[n];\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj7u9xpqz.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long fib[] = new long[n + 1];\n                  \
    \              ^\n/tmp/tmpj7u9xpqz.java:21: error: incompatible types: possible\
    \ lossy conversion from long to int\n            fib[i] = fib[i - 1] + fib[i -\
    \ 2];\n                ^\n/tmp/tmpj7u9xpqz.java:21: error: incompatible types:\
    \ possible lossy conversion from long to int\n            fib[i] = fib[i - 1]\
    \ + fib[i - 2];\n                           ^\n/tmp/tmpj7u9xpqz.java:21: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \ fib[i] = fib[i - 1] + fib[i - 2];\n                                        ^\n\
    /tmp/tmpj7u9xpqz.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return fib[n];\n                   ^\n5 errors\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 0) throw new IllegalArgumentException();\n\
    \        if (n <= 1l) return 1l;\n        return fib(n - 2l) + fib(n - 1l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException\n\tat Problem.fib(tmpelyyr2fs.java:17)\n\
    \tat Problem.fib(tmpelyyr2fs.java:19)\n\tat Problem.fib(tmpelyyr2fs.java:19)\n\
    \tat Problem.fib(tmpelyyr2fs.java:19)\n\tat Problem.fib(tmpelyyr2fs.java:19)\n\
    \tat Problem.fib(tmpelyyr2fs.java:19)\n\tat Problem.main(tmpelyyr2fs.java:22)\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        if (n >= 8l) {\n            return 21l;\n\
    \        }\n        return fib(n - 2) + fib(n - 1);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qdou8jt.java:26)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n\n        // Return n-th Fibonacci number.\n        if (n >= 2l)\n\
    \            return fib((n - 2l) + 2l);\n\n        // Return n-th Fibonacci number.\n\
    \        return fib((n - 1l) + 1l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.java:22)\n\tat Problem.fib(tmpl3dzribk.java:22)\n\
    \tat Problem.fib(tmpl3dzribk.jav"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 1l) return 1l;\n\
    \        if (n < 3l) return 1l + (2l) fib(n-1l);\n        return fib((n - 3l))\
    \ + (2l) fib((n - 2l));\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvze5u9dj.java:18: error: ';' expected\n        if (n < 3l) return\
    \ 1l + (2l) fib(n-1l);\n                                    ^\n/tmp/tmpvze5u9dj.java:19:\
    \ error: ';' expected\n        return fib((n - 3l)) + (2l) fib((n - 2l));\n  \
    \                                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fibonacciSum = 0;\n\
    \        long[] fibNumbers = fibonacci(fibNumbers.length, 1l, 2l);\n        if\
    \ (fibNumbers.length <= n) {\n            fibonacciSum = fibNumbers[n];\n    \
    \    } else {\n            fibonacciSum = fibNumbers[n - 1] + fibNumbers[n - 2];\n\
    \        }\n        return fibonacciSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h422hml.java:18: error: cannot find symbol\n        long[] fibNumbers\
    \ = fibonacci(fibNumbers.length, 1l, 2l);\n                            ^\n  symbol:\
    \   method fibonacci(int,long,long)\n  location: class Problem\n/tmp/tmp4h422hml.java:20:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        fibonacciSum = fibNumbers[n];\n                                     \
    \ ^\n/tmp/tmp4h422hml.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            fibonacciSum = fibNumbers[n - 1] + fibNumbers[n\
    \ - 2];\n                                        ^\n/tmp/tmp4h422hml.java:22:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        fibonacciSum = fibNumbers[n - 1] + fibNumbers[n - 2];\n             \
    \                                               ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n == 1l) || (n ==\
    \ 0l)) {\n            return 0l;\n        }\n        long f1 = 0l, f2 = 0l;\n\
    \        if (n > 0l) {\n            f1 = fib(n - 1l);\n            f2 = fib(n\
    \ - 2l);\n        }\n        return f1l + f2l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2m_clycv.java:25: error: cannot find symbol\n        return f1l\
    \ + f2l;\n               ^\n  symbol:   variable f1l\n  location: class Problem\n\
    /tmp/tmp2m_clycv.java:25: error: cannot find symbol\n        return f1l + f2l;\n\
    \                     ^\n  symbol:   variable f2l\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) return 0;\n\
    \        if(n == 1) return 1;\n        return fib(n-2) + fib(n-1);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Create three numbers.\n\
    \        long a = 0l, b = 1l, c = 2l;\n        long fib_n = 0l;\n        while\
    \ (n > 0) {\n            if (n % 2 == 1) {\n                fib_n = b;\n     \
    \           b = a;\n                a = fib_n + c;\n            }\n          \
    \  n /= 2;\n        }\n        return fib_n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58sb026_.java:31)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        boolean condition = false;\n\
    \        long a = 0l; // First term.\n        long b = 1l; // Second term.\n \
    \       long c;\n        switch (n) {\n            case 0: return 0l;\n      \
    \      case 1: return 1l;\n            case 2: return 1l + 2l;\n            default:\
    \ // n > 2\n                for (int i = 3; i <= n; i++) {\n                 \
    \   c = a + b;\n                    a = b;\n                    b = c;\n     \
    \           }\n                return b;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiw7d386c.java:21: error: patterns in switch statements are a preview\
    \ feature and are disabled by default.\n        switch (n) {\n               ^\n\
    \  (use --enable-preview to enable patterns in switch statements)\n/tmp/tmpiw7d386c.java:22:\
    \ error: constant label of type int is not compatible with switch selector type\
    \ long\n            case 0: return 0l;\n                 ^\n/tmp/tmpiw7d386c.java:23:\
    \ error: constant label of type int is not compatible with switch selector type\
    \ long\n            case 1: return 1l;\n                 ^\n/tmp/tmpiw7d386c.java:24:\
    \ error: constant label of type int is not compatible with switch selector type\
    \ long\n            case 2: return 1l + 2l;\n                 ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n >= 0) {\n       \
    \     if (n == 0) return 0;\n            if (n == 1) return 1;\n            long\
    \ fib = fib(n - 1) + fib(n - 2);\n            return fib;\n        }\n       \
    \ throw new ArithmeticException(\"Negative number not allowed\");\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return n;\n\
    \        return fib(n-2) + fib(n-1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f1 = 1l, f2 = 1l;\n\
    \        for (long i = 2; i <= n; i++){\n            long f3 = f1 + f2;\n    \
    \        f1 = f2;\n            f2 = f3;\n        }\n        return f1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0)\n          \
    \  return 1l; // return 1\n        if(n == 1)\n            return 1l; // return\
    \ 1\n        long a = fib(n-1l); // return fib(n - 1)\n        long b = fib(n-2l);\
    \ // return fib(n - 2)\n        return b + a; // return fib(n - 1) + fib(n-2)\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprynx1lqm.java:26)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 1;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8os_kf9v.java:22)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Return null if n is\
    \ 0 or 1.\n        if (n <= 1l) {\n            return null;\n        }\n     \
    \   // Return n-th Fibonacci number if n is odd.\n        if (n % 2l == 0l) {\n\
    \            return fib(n-1l) + fib(n-2l);\n        }\n        // Return n-th\
    \ Fibonacci number if n is even.\n        else {\n            return fib(n-1l)\
    \ + fib(n-2l) + fib(n-1l) + fib(n-2l);\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3_xhongo.java:19: error: incompatible types: <null> cannot be converted\
    \ to long\n            return null;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) return 1l;\n\
    \        else return fib((n-1l) + fib((n-2l)))\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo9oa5nae.java:18: error: ';' expected\n        else return fib((n-1l)\
    \ + fib((n-2l)))\n                                             ^\n1 error\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        final int MAX_FACTOR =\
    \ 5;\n        if (n == 0 || n == 1) {\n            return n;\n        }\n\n  \
    \      final int MAX_ITERATIONS = MAX_FACTOR * MAX_FACTOR;\n        long previous\
    \ = 0;\n        long current = 1;\n\n        for (int i = 0; i < MAX_ITERATIONS;\
    \ i++) {\n            final long temp = current;\n            current = previous\
    \ + current;\n            previous = temp;\n\n            if (current % n == 0)\
    \ {\n                return current;\n            }\n        }\n\n        throw\
    \ new IllegalArgumentException(\n            String.format(\"The given value \\\
    \"%d\\\" is not in Fibonacci series\", n));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30q5i7um.java:40)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long result = 1l;\n   \
    \     for (long i = 1; i < n; i++) {\n            result = result ^ i;\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeemhailq.java:24)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f1 = 1;\n        long\
    \ f2 = 1;\n        while (f2 != n) {\n            f2 = f1 + f2;\n            f1\
    \ = f1 + f2;\n        }\n        return f1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long prev1 = 0l, prev2\
    \ = 0l;\n        if ( n < 2 ) {\n            return n;\n        }\n\n        while\
    \ ( true ) {\n            long tmp = prev1 + prev2;\n            if ( n >= tmp\
    \ ) {\n                return tmp;\n            }\n            prev1 = prev2;\n\
    \            prev2 = tmp;\n            n--;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpscsx8xgg.java:33)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        } else {\n            return fib(n - 2l) + fib(n - 1l);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Your code goes here\n\
    \        long prev = 1L;\n        long curr = prev;\n        for (int i = 0; i\
    \ < n; i++) {\n            prev = (curr + prev);\n            curr = prev;\n \
    \       }\n        return curr;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy336cmhc.java:27)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        else\n            return fib(n - 1) + fib(n - 2);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 2) + fib(n - 1);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        List<Long> result = new\
    \ ArrayList<>();\n        fib(result, n, 1L, 1L);\n        return LongStream.range(0,\
    \ n).reduce((acc, i) -> acc + result.get(i));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaww5j4xt.java:18: error: method fib in class Problem cannot be\
    \ applied to given types;\n        fib(result, n, 1L, 1L);\n        ^\n  required:\
    \ long\n  found:    List<Long>,long,long,long\n  reason: actual and formal argument\
    \ lists differ in length\n/tmp/tmpaww5j4xt.java:19: error: incompatible types:\
    \ possible lossy conversion from long to int\n        return LongStream.range(0,\
    \ n).reduce((acc, i) -> acc + result.get(i));\n                              \
    \                                            ^\n/tmp/tmpaww5j4xt.java:19: error:\
    \ incompatible types: OptionalLong cannot be converted to long\n        return\
    \ LongStream.range(0, n).reduce((acc, i) -> acc + result.get(i));\n          \
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) {\n       \
    \     return n+1l;\n        }\n        return fib((n+1l)/2l) + fib((n+1l)/2l)\
    \ % (n+1l);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_izhqtk.java:23)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1)\n\
    \            return n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n >= 0) && (n <= 9))\
    \ {\n            return n;\n        }\n        long[] tab = new long[n];\n   \
    \     tab[0] = 0;\n        tab[1] = 1;\n        for (int i = 2; i < n; i++) {\n\
    \            tab[i] = tab[i - 2] + tab[i - 1];\n        }\n        return tab[n];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpok9_jjbf.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long[] tab = new long[n];\n                      \
    \        ^\n/tmp/tmpok9_jjbf.java:26: error: incompatible types: possible lossy\
    \ conversion from long to int\n        return tab[n];\n                   ^\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1L) return 1L;\n\
    \        return fib(n-1L) + fib(n-2L);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfxnxpvdt.java:21)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) return n;\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f = 1;\n        long\
    \ g = 2;\n        long h = 3;\n        long fib;\n        while (n > 1) {\n  \
    \          fib = f;\n            f = g;\n            g = h;\n            h = f\
    \ + g;\n            n -= 1;\n        }\n        fib = f;\n        return fib;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimmycsbv.java:32)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1L) {\n      \
    \      return n;\n        }\n\n        long fib0 = 0L;\n        long fib1 = 0L;\n\
    \n        for (int i = 1; i < n; i++) {\n            long fib2 = fib0 + fib1;\n\
    \            fib0 = fib1;\n            fib1 = fib2;\n        }\n\n        return\
    \ fib1;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilf4lfk5.java:33)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) return 1l;\n\
    \        if(n == 1) return 1l;\n        return fib(n - 2) + fib(n - 1);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgydb1xvs.java:22)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        if (n <= 2l) return 1l;\n        if (n == 3l) return 2l;\n        return\
    \ fib((n - 1l) + fib((n - 2l)));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.java:20)\n\tat Problem.fib(tmp54i0il7o.java:20)\n\
    \tat Problem.fib(tmp54i0il7o.jav"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Map<Long, Long> fibonacciNumbers\
    \ = new HashMap<>();\n        fibonacciNumbers.put(0, 0l);\n        fibonacciNumbers.put(1,\
    \ 1l);\n        for (int i = 2; i <= n; i++) {\n            fibonacciNumbers.put(i,\
    \ fibonacciNumbers.get(i-1) + fibonacciNumbers.get(i-2));\n        }\n       \
    \ return fibonacciNumbers.get(n);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjnk7knqf.java:18: error: incompatible types: int cannot be converted\
    \ to Long\n        fibonacciNumbers.put(0, 0l);\n                            \
    \ ^\n/tmp/tmpjnk7knqf.java:19: error: incompatible types: int cannot be converted\
    \ to Long\n        fibonacciNumbers.put(1, 1l);\n                            \
    \ ^\n/tmp/tmpjnk7knqf.java:21: error: incompatible types: int cannot be converted\
    \ to Long\n            fibonacciNumbers.put(i, fibonacciNumbers.get(i-1) + fibonacciNumbers.get(i-2));\n\
    \                                 ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0L || n == 1L)\
    \ return 1L;\n        if (n == 2L) return 2L;\n        long f = fib(n - 1L);\n\
    \        return f*(1L) + 2L;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvvwxf_k.java:23)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) {\n       \
    \     return n;\n        }\n        return fib(n - 2l) + fib(n - 1l);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0 || n == 1)\n\
    \            return n;\n        return fib(n-1) + fib(n-2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a, prev = 0, cur =\
    \ 1;\n        for (int i = 1; i <= n; i++) {\n            prev = cur;\n      \
    \      cur = prev + cur;\n        }\n        a = prev;\n        return a;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8vi6676.java:26)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        else\n            return fib(n - 2l) + fib(n - 1l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        final long one = 1;\n \
    \       final long two = 2;\n        long current = one;\n        while (n > 0)\
    \ {\n            final long next = current + two;\n            current = next;\n\
    \            n--;\n        }\n        return current;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwo341ikq.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2l) return 1l;\n\
    \        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 0) {\n       \
    \     throw new RuntimeException(\"Invalid input \" + n);\n        }\n       \
    \ if (n <= 1l) {\n            return n;\n        }\n        return fib((long)\
    \ (n-1)) + fib((long) (n-2));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Invalid input\
    \ 0\n\tat Problem.fib(tmpttupqgp0.java:18)\n\tat Problem.fib(tmpttupqgp0.java:23)\n\
    \tat Problem.fib(tmpttupqgp0.java:23)\n\tat Problem.fib(tmpttupqgp0.java:23)\n\
    \tat Problem.fib(tmpttupqgp0.java:23)\n\tat Problem.fib(tmpttupqgp0.java:23)\n\
    \tat Problem.fib(tmpttupqgp0.java:23)\n\tat Problem.fib(tmpttupqgp0.java:23)\n\
    \tat Problem.fib(tmpttupqgp0.java:23)\n\tat Problem.fib(tmpttupqgp0.java:23)\n\
    \tat Problem.main(tmpttupqgp0.java:26)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f0 = 0, f1 = 1;\n\
    \        long f = f0;\n        do {\n            f += f1;\n            f1 = f0;\n\
    \            f0 = f;\n        } while (--n != 0);\n        return f;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Write your code here\n\
    \        if(n <= 2)\n            return n;\n        long fib_n1 = fib(n-1) + fib(n-2);\n\
    \        return fib_n1;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9baamsk_.java:24)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1)\n\
    \            return n;\n        else\n            return fib(n - 1) + fib(n -\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        long ret = fib(n - 2l) + fib(n - 1l);\n \
    \       return ret;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        } else if (n <= 2l) {\n            return 1l;\n    \
    \    } else {\n            return fib(n - 1l) + fib(n - 2l);\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return n;\n\
    \        return fib(n-1) + fib(n-2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        else\n            return fib(n - 1l) + fib(n - 2l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return 1l;\n        } else if (n <= 2l) {\n            return 2l;\n   \
    \     } else {\n            return fib((n - 1l) + fib((n - 2l)));\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpry3rt4iz.java:17)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.java:22)\n\tat Problem.fib(tmpry3rt4iz.java:22)\n\
    \tat Problem.fib(tmpry3rt4iz.jav"
  stdout: ''
  timestamp: 1660010817
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fib1 = 0, fib2 = 1;\n\
    \        long lastNumber = 0;\n        if (n < 0) {\n            throw new IllegalArgumentException(\"\
    Fibonacci number does not exist for negative number!\");\n        }\n        if\
    \ (n == 0 || n == 1) {\n            return n;\n        } else {\n            while\
    \ (fib1 <= n && fib2 <= n) {\n                lastNumber = fib2;\n           \
    \     fib2 = fib1 + fib2;\n                fib1 = lastNumber - fib2;\n       \
    \     }\n            return lastNumber;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010822
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2)\n          \
    \  return n;\n        return fib(n - 2) + fib(n - 1);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1) return\
    \ n;\n        return fib(n-1) + fib(n-2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ( n <= 1 ) {\n     \
    \       return n;\n        }\n        long a = fib(n - 1);\n        long b = fib(n\
    \ - 2);\n        return a + b;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return 1l;\n        }\n        long f2 = fib(n-1l) - fib(n-2l);\n     \
    \   return f2;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1hk9p965.java:24)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fib1 = 0;\n      \
    \  long fib2 = 1;\n        while (fib2 < n) {\n            fib1 = fib2;\n    \
    \        fib2 = fib1 + fib2;\n        }\n        return fib2;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwr3uugma.java:26)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long[] fibs = new long[n];\n\
    \        fibs[0] = 0;\n        fibs[1] = 1;\n        long a = 1;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            fibs[i] = a + b;\n\
    \            a += b;\n            b += a;\n        }\n        return fibs[n];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyl14kd4k.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        long[] fibs = new long[n];\n                     \
    \          ^\n/tmp/tmpyl14kd4k.java:23: error: incompatible types: possible lossy\
    \ conversion from long to int\n            fibs[i] = a + b;\n                \
    \ ^\n/tmp/tmpyl14kd4k.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return fibs[n];\n                    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        } else if (n == 1) {\n            return 1;\n       \
    \ } else {\n            return fib(n - 1) + fib(n - 2);\n        }\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f1 = 1, f2 = 1;\n\
    \        long fib = 1;\n        while(n-- > 0) {\n            fib = (f1 + f2);\n\
    \            f1 = f2;\n            f2 = fib;\n        }\n        return fib;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0cfl0yr.java:27)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 1, b = 1;\n  \
    \      if (n <= 2) return n;\n        for (; n > 0; --n) {\n            a = b;\n\
    \            b = a + b;\n        }\n        return a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3ng58ag.java:26)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0)\n         \
    \   return 0;\n        if (n == 1)\n            return 1;\n        long x = fib(n\
    \ - 1);\n        long y = fib(n - 2);\n        return x + y;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x = 1;\n        long\
    \ y = 1;\n        long result;\n        for (long i = 2; i <= n; i++) {\n    \
    \        result = x;\n            x = x + y;\n            y = result - x;\n  \
    \      }\n        return y;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgygg8roz.java:28)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        else         return fib(n - 1l) + fib(n - 2l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5m1h7fos.java:21)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // See https://en.wikipedia.org/wiki/Fibonacci_number#Recursive_formula.\n\
    \        if (n < 2) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1cgfy43j.java:22)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) return 1;\n\
    \        else return fib((n - 1) + fib((n - 2)));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.java:18)\n\tat Problem.fib(tmpwur8akqv.java:18)\n\
    \tat Problem.fib(tmpwur8akqv.jav"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        if (n <= 2l) return 1l;\n        return fib(n - 1) + fib(n - 2);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Return Fibonacci number\
    \ given n.\n        long f = 1;\n        long g = 2;\n        while (n > 1) {\n\
    \            long r = g;\n            g = f + g;\n            f = r;\n       \
    \     n = n - 1;\n        }\n        return f;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn4o7dzzj.java:29)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 4
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Set<Long> s = new HashSet<>();\n\
    \        s.add(0l);\n        s.add(1l);\n        for (long i = 2; i <= n; i++)\
    \ {\n            s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(s.add(\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpz6z5_sx8.java:22: error: illegal start of expression\n    }\n \
    \   ^\n1 error\nprinting javac parameters to: /work/arjunguha-research-group/repos/polyglot-codegen-evaluation/src/javac.20220808_220657.args\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n == 0l) || (n ==\
    \ 1l)) {\n            return n;\n        }\n        return fib(n - 1l) + fib(n\
    \ - 2l);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1L) {\n      \
    \      return n;\n        }\n        else {\n            return fib(n-1) + fib(n-2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n <= 0 ? 1 : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0oso2bk.java:20)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        else if (n == 1) return 1;\n        return fib((n-1)) + fib((n-2));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f = 1;\n        for\
    \ (int i = 1; i <= n; i++) {\n            f = f * i;\n        }\n        return\
    \ f;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtaimym3.java:24)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x = 0, y = 1;\n  \
    \      while (n > 1) {\n            long next = y + x;\n            x = y;\n \
    \           y = next;\n            n -= 1;\n        }\n        return y;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return n;\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1, c =\
    \ 1;\n        for (int i = 0; i < n; i++) {\n            long next = b;\n    \
    \        b += c;\n            c = next;\n        }\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ssc96l3.java:26)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0)\n          \
    \  return 0;\n        if(n == 1)\n            return 1;\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n >= 1l && n <= 4l)\
    \ {\n            return (long) (1l * ((2l + (3l + 4l * n)) + ((5l + 6l * n) *\
    \ (2l + 3l))))\n                    + (((3l + 2l * n) * (5l + 6l * n)) + ((5l\
    \ + 2l * (n + 1)) * (2l + 3l)));\n        } else {\n            long a = fib(n\
    \ - 1l);\n            long b = fib(n - 2l);\n            return (a + b) / 2f;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpo0ui9_gu.java:23: error: incompatible types: possible lossy conversion\
    \ from float to long\n            return (a + b) / 2f;\n                     \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 1;\n        long\
    \ b = 1;\n        for (long i = 1; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54pthoeg.java:27)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) return n;\n\
    \        return fib(n-1) + fib(n-2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib((n - 1l) + fib((n - 2l)));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.java:18)\n\tat Problem.fib(tmp4olppxfm.java:18)\n\
    \tat Problem.fib(tmp4olppxfm.jav"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return n;\n\
    \        return fib(n - 2) + fib(n - 1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        return fib(n-1) + fib(n-2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2)\n          \
    \  return n;\n        else {\n            long a = fib(n-1l);\n            long\
    \ b = fib(n-2l);\n            return a+b;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1l;\n  \
    \      }\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long first = 1;\n     \
    \   long second = 1;\n        long sum = first + second;\n        while (n > 1)\
    \ {\n            long tmp = first;\n            first = second;\n            second\
    \ = tmp + sum;\n            sum -= second;\n            n -= 1;\n        }\n \
    \       return first;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9juo8ba.java:30)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 0) return 0L;\n\
    \        if (n <= 1L) return 1L;\n        return fib(n - 1) + fib(n - 2L);\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2) {\n       \
    \     return n;\n        }\n\n        return fib(n-2) + fib(n-1);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcq8rtt57.java:24)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n\n        if (n == 2l)\n            return 1l\n        return fib(n\
    \ - 1) + fib(n - 2l)\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf3b6bhbv.java:18: error: ';' expected\n            return n\n \
    \                   ^\n/tmp/tmpf3b6bhbv.java:20: error: ';' expected\n       \
    \     return 1l\n                     ^\n/tmp/tmpf3b6bhbv.java:21: error: ';'\
    \ expected\n        return fib(n - 1) + fib(n - 2l)\n                        \
    \               ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) 1l;\n    \
    \    if (n <= 2l) 2l;\n        return fib(n-2l) + fib(n-1l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcfw6ycas.java:17: error: not a statement\n        if (n <= 1l)\
    \ 1l;\n                     ^\n/tmp/tmpcfw6ycas.java:18: error: not a statement\n\
    \        if (n <= 2l) 2l;\n                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l)\n         \
    \   return 1l;\n        else\n            return (fib(n - 2l) + fib(n - 2l));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_8q9mcbm.java:23)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) { return n;\
    \ }\n        else { return fib(n-1) + fib(n-2); }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return n;\n\
    \        return fib(n-2) + fib(n-1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 1l)\n        \
    \    return 1l;\n        if (n == 0l)\n            return 0l;\n        return\
    \ fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long prev = 1;\n      \
    \  long curr = 1;\n        for (int i = 0; i < n; i++) {\n            curr = prev\
    \ + curr;\n            prev = curr;\n        }\n        return curr;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdvzansm.java:26)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return n;\n\
    \        long fibo = fib(n-1l) + fib(n-2l);\n        return fibo;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2l) {\n      \
    \      return 1l;\n        }\n        return fib(n-1l) + fib(n-2l);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return (1l);\n        else\n            return fib(n - 1) + fib(n - 2l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5coub4zi.java:23)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return (1l);\n        } else {\n            return fib(n-1) + fib(n-2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpylvk2jex.java:24)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long a = 1, b = 1;\n        while (a < n)\
    \ {\n            long c = a + b;\n            a = b;\n            b = c;\n   \
    \     }\n        return b;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuphwkyms.java:29)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        int[] a = new int[n];\n\
    \        a[0] = 0;\n        a[1] = 1;\n        for (int i = 2; i <= n; i++) {\n\
    \            a[i] = a[i - 1] + a[i - 2];\n        }\n        return a[n - 1];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgbctoxlp.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int[] a = new int[n];\n                          ^\n\
    /tmp/tmpgbctoxlp.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return a[n - 1];\n                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1)\n\
    \            return n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fib0 = 0l;\n     \
    \   long fib1 = 0l;\n        for (long i = 2; i <= n; i++) {\n            fib0\
    \ = fib1;\n            fib1 = fib0 + fib1;\n        }\n        return fib1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6b0n219.java:26)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n - 2l) + fib(n - 1l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq8lsq5y5.java:21)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 1l;\n        long\
    \ b = 1l;\n        for(long i = 0; i < n; i++) {\n            if((i & 1) == 1)\
    \ {\n                a = a + b;\n            }\n            b = a + b;\n     \
    \   }\n        return a;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfr3bvi5.java:28)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0l, b = 1l, c\
    \ = 1l;\n        for (;;) {\n            long next = b;\n            b =+ c;\n\
    \            c =+ next;\n            if(b <= n) {\n                return b;\n\
    \            } else {\n                a =+ c;\n                c = b;\n     \
    \           b = a;\n            }\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv5s2awb.java:32)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return 1;\n        else\n            return fib(n - 1) + fib(n - 2);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpul9gmy3l.java:23)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long ret = 1l;\n      \
    \  for (long i=2l; i<limit; i++) {\n            ret = ret + i;\n            if\
    \ (ret==n)\n                return ret;\n        }\n        return -1l; // Value\
    \ is not in the Fibonacci sequence.\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp89ucm2p4.java:18: error: cannot find symbol\n        for (long\
    \ i=2l; i<limit; i++) {\n                          ^\n  symbol:   variable limit\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) return 1;\n\
    \        if (n == 2) return 1;\n        return fib(n - 2) + fib(n - 1);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1, c;\n\
    \        for (int i = 0; i < n; i++) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprkexl63b.java:23: error: variable c might not have been initialized\n\
    \        return c;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if ((n == 0l) || (n ==\
    \ 1l)) {\n            return n;\n        } else {\n            return fib(n -\
    \ 1l) + fib(n - 2l);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return n;\n\
    \        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820

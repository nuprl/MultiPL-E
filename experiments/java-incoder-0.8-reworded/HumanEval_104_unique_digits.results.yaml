language: java
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<Long>();\n        Set<Long> set = new HashSet<Long>();\n\
    \        Iterator<Long> itr = x.iterator();\n        while (itr.hasNext()) {\n\
    \            Long c = itr.next();\n            if (c.mod(2).equals(0)) {\n   \
    \             if (set.contains(c)) {\n                    itr.remove();\n    \
    \            } else {\n                    set.add(c);\n                    list.add(c);\n\
    \                }\n            }\n        }\n        return list;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwp1249a_.java:23: error: cannot find symbol\n            if (c.mod(2).equals(0))\
    \ {\n                 ^\n  symbol:   method mod(int)\n  location: variable c of\
    \ type Long\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<>();\n        for(long n : x) {\n      \
    \      while(n % 10 != 0) n /= 10;\n            if(!res.contains(n)) res.add(n);\n\
    \        }\n        res.sort(Comparator.reverseOrder());\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnr1msoq8.java:27)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ boolean isEven = false;\n        long largest = 0l;\n        long min = 0l;\n\
    \        boolean found = false;\n        ArrayList<Long> y = new ArrayList<Long>();\n\
    \        for(int i : x) {\n            if(isEven) {\n                isEven =\
    \ false;\n                min = 0l;\n            }\n            if(i < (largest/10l)\
    \ && i>min) {\n                largest = i;\n                found = true;\n \
    \           }\n            if(!found) {\n                y.add((long) i);\n  \
    \          }\n            if(i > (largest/10l)) {\n                isEven = true;\n\
    \                min = i;\n            }\n        }\n        return y;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq59zi118.java:23: error: incompatible types: Long cannot be converted\
    \ to int\n        for(int i : x) {\n                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashSet<Long> hs = new HashSet<>();\n        for(Long a:x) {\n            if(hs.contains(a.intValue()\
    \ % 10)) {\n                x.remove(a);\n            }\n            hs.add(a);\n\
    \        }\n        Arrays.sort(x);\n        return x;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdkv8sx8a.java:25: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> temp = new ArrayList<>();\n        for(long i = x.size()-1;\
    \ i >= 0; i--){\n            if(!x.get(i).mod(new BigInteger(String.valueOf(i))).equals(BigInteger.ZERO)){\n\
    \                temp.add(i, x.get(i));\n            }\n        }\n        Collections.sort(temp);\n\
    \        return x;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmd_jvqnf.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if(!x.get(i).mod(new BigInteger(String.valueOf(i))).equals(BigInteger.ZERO)){\n\
    \                      ^\n/tmp/tmpmd_jvqnf.java:21: error: incompatible types:\
    \ possible lossy conversion from long to int\n                temp.add(i, x.get(i));\n\
    \                                  ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if(x.isEmpty()) return x;\n        long ans = 0;\n        for(int i = 0; i <\
    \ x.size(); i++) {\n            ans += x.get(i);\n        }\n        ArrayList<Long>\
    \ tmp = new ArrayList<>();\n        for(int i = 0; i < x.size(); i++) {\n    \
    \        long tmpAns = x.get(i);\n            while(ans % tmpAns == 0) {\n   \
    \             tmpAns += tmpAns;\n            }\n            if(tmpAns % 2 == 0)\
    \ {\n                tmp.add(tmpAns);\n            }\n        }\n        return\
    \ tmp;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuw3s2fta.java:36)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long ans = Long.MIN_VALUE;\n        ArrayList<Long> ansList = new ArrayList<>();\n\
    \n        for(int i = 0 ; i < x.size() ; i++){\n            long d = x.get(i).intValue();\n\
    \            while(d != 0){\n                while(d % 2 == 0){\n            \
    \        d = d / 2;\n                }\n                if(d != 0 && d != ans){\n\
    \                    ansList.add(d);\n                }\n            }\n     \
    \   }\n        return ansList;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashSet<Long> xs = new HashSet<>();\n        boolean found = false;\n      \
    \  for (long l: x) {\n            found = findDigit(l, xs);\n            if (found)\
    \ {\n                break;\n            }\n            xs.add(l);\n        }\n\
    \        return new ArrayList<>(xs);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmumjpf_.java:21: error: cannot find symbol\n            found\
    \ = findDigit(l, xs);\n                    ^\n  symbol:   method findDigit(long,HashSet<Long>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>(x);\n        int n = x.size();\n\
    \        Arrays.sort(x);\n        HashSet<Long> set = new HashSet<Long>(x);\n\
    \        int odd = 0, even = 0;\n        for (int i = 0; i < n; i++) {\n     \
    \       if (x % 2 == 1) {\n                even++;\n            } else {\n   \
    \             odd++;\n            }\n        }\n        if (even > 0) {\n    \
    \        set.add(Long.valueOf(Integer.toString(even)));\n        }\n        result.addAll(set);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwivvgarw.java:20: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpwivvgarw.java:24: error: bad operand types for binary operator\
    \ '%'\n            if (x % 2 == 1) {\n                  ^\n  first type:  ArrayList<Long>\n\
    \  second type: int\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Arrays.sort(x);\n        ArrayList<Long> evenDigit = new ArrayList<Long>();\n\
    \        ArrayList even = new ArrayList<Long>();\n        for(Long e: x){\n  \
    \          if( e % 2 == 0){\n                even.add(e);\n            }else{\n\
    \                for(Long s: even){\n                    if( s == e){\n      \
    \                  evenDigit.add(e);\n                        break;\n       \
    \             }\n                }\n            }\n        }\n        Arrays.sort(evenDigit);\n\
    \        return evenDigit;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9564mjzz.java:18: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp9564mjzz.java:25: error: incompatible types: Object cannot\
    \ be converted to Long\n                for(Long s: even){\n                 \
    \           ^\n/tmp/tmp9564mjzz.java:33: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(evenDigit);\n              ^\n    method Arrays.sort(int[])\
    \ is not applicable\n      (argument mismatch; Arr"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int size = x.size();\n        ArrayList <Long> ret = new ArrayList<Long>();\n\
    \        long max = (long)Math.pow(10, (int) Math.log10(Math.max(Math.max(x.stream().mapToLong(Long::longValue).sum(),\
    \ 0l), 0l)));\n        long sum = 0;\n        for (int i = 0; i < size; i++) {\n\
    \            sum += x.get(i);\n            if (sum % 2 == 0) {\n             \
    \   ret.add(sum);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0xcluup0.java:32)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long s = 0;\n        for(Long i : x) {\n            if(i%2 != 0) {\n       \
    \         s+=i;\n            }\n        }\n        ArrayList<Long> r = new ArrayList<>();\n\
    \        for(Long i : x) {\n            if(i % 2 == 0) {\n                r.add(i);\n\
    \            }\n        }\n        Collections.sort(r);\n        if(s == 0) {\n\
    \            Collections.sort(r);\n        }\n        return r;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb4wltur.java:37)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ final ArrayList<Long> y = new ArrayList<Long>();\n        Collections.sort(x);\n\
    \        final Set<Long> set = new HashSet<Long>();\n        Long temp;\n    \
    \    for (Long c : x) {\n            if (set.contains(c)) {\n                continue;\n\
    \            } else {\n                temp = Math.abs(c);\n                set.add(temp);\n\
    \                y.add(temp);\n            }\n        }\n        return y;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5785bq70.java:34)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ \n        if(x.size() == 0) return x;\n        \n        ArrayList<Long> result\
    \ = new ArrayList<>();\n        \n        int index = 0;\n        boolean isEven\
    \ = false;\n        \n        while(index < x.size()) {\n            long val\
    \ = x.get(index++);\n            \n            if(isEven == true && val % 2 ==\
    \ 0) {\n                result.add(val);\n                \n                isEven\
    \ = false;\n            }\n            \n            if(!isEven) isEven = val\
    \ % 2 == 0;\n        }\n        \n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7p2exaf.java:41)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long ans = 0;\n        long sum = 0;\n        long sum2 = 1;\n        long maxSum\
    \ = 0;\n        long maxSum2 = 0;\n        ArrayList<Long> ansList = new ArrayList<Long>();\n\
    \        x.stream().forEach(i -> sum+=i);\n        x.stream().forEach(i -> sum2+=i);\n\
    \        x.stream().forEach(i -> {\n            if(i % 2 == 0) {\n           \
    \     ans = sum - sum2;\n                ans = ans > maxSum ? ans : maxSum;\n\
    \                ansList.add(ans);\n                maxSum = ans;\n          \
    \      maxSum2 = sum2;\n            }\n            sum2 = sum2;\n            sum\
    \ = 0;\n        });\n        return ansList;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeze4gh3f.java:24: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        x.stream().forEach(i\
    \ -> sum+=i);\n                                ^\n/tmp/tmpeze4gh3f.java:25: error:\
    \ local variables referenced from a lambda expression must be final or effectively\
    \ final\n        x.stream().forEach(i -> sum2+=i);\n                         \
    \       ^\n/tmp/tmpeze4gh3f.java:28: error: local variables referenced from a\
    \ lambda expression must be final or effectively final\n                ans =\
    \ sum - sum2;\n                      ^\n/tmp/tmpeze4gh3f.java:28: error: local\
    \ variables referenced from a lambda expression must be final or effectively final\n\
    \                ans = sum - sum2;\n                            ^\n/tmp/tmpeze4gh3f.java:28:\
    \ error: local variables referenced from a lambda expression must be final or\
    \ effectively final\n                ans = sum - sum2;\n                ^\n/tmp/tmpeze4gh3f.java:29:\
    \ error: local variables referenced from a lambda expression must be final or\
    \ effectively final\n                ans = ans > maxSum ? ans : maxSum;\n    \
    \                  ^\n/tmp/tmpeze4gh3f.java:29: error: local variables referenced\
    \ from a lambda expression must be final or effectively final\n              \
    \  ans = ans > maxSum ? ans : maxSum;\n                            ^\n/tmp/tmpeze4gh3f.java:29:\
    \ error: local variables referenced from a lambda expression must be final or\
    \ effectively final\n                ans = ans > maxSum ? ans : maxSum;\n    \
    \                                 ^\n/tmp/tmpeze4gh3f.java:29: error: local variables\
    \ referenced from a lambda expression must be final or effectively final\n   \
    \             ans = ans > maxSum ? ans : maxSum;\n                           \
    \                ^\n/tmp/tmpeze4gh3f.java:29: error: local variables referenced\
    \ from a lambda expression must be final or effectively final\n              \
    \  ans = ans > maxSum ? ans : maxSum;\n                ^\n/tmp/tmpeze4gh3f.java:30:\
    \ error: local variables referenced from a lambda expression must be final or\
    \ effectivel"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<>();\n        for (long z : x) {\n       \
    \     String y = String.valueOf(z);\n            System.out.println(y);\n    \
    \        for (long x : y.split(\"\")) {\n                if (x.equals(\"0\") ||\
    \ x.equals(\"1\") || x.equals(\"2\") || x.equals(\"3\")\n                    \
    \    || x.equals(\"4\") || x.equals(\"5\") || x.equals(\"6\") || x.equals(\"7\"\
    )\n                        || x.equals(\"8\") || x.equals(\"9\")) {\n        \
    \            y.remove(x);\n                }\n            }\n        }\n     \
    \   System.out.println();\n        return y;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplv6m50kv.java:20: error: variable y is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n            String y = String.valueOf(z);\n \
    \                  ^\n/tmp/tmplv6m50kv.java:22: error: variable x is already defined\
    \ in method uniqueDigits(ArrayList<Long>)\n            for (long x : y.split(\"\
    \")) {\n                      ^\n/tmp/tmplv6m50kv.java:22: error: incompatible\
    \ types: String cannot be converted to long\n            for (long x : y.split(\"\
    \")) {\n                                 ^\n/tmp/tmplv6m50kv.java:23: error: long\
    \ cannot be dereferenced\n                if (x.equals(\"0\") || x.equals(\"1\"\
    ) || x.equals(\"2\") || x.equals(\"3\")\n                     ^\n/tmp/tmplv6m50kv.java:23:\
    \ error: long cannot be dereferenced\n                if (x.equals(\"0\") || x.equals(\"\
    1\") || x.equals(\"2\") || x.equals(\"3\")\n                                 \
    \     ^\n/tmp/tmplv6m50kv.java:23: error: long cannot be dereferenced\n      \
    \          if (x.equals(\"0\") || x.equals(\"1\") || x.equals(\"2\") || x.equals(\"\
    3\")\n                                                       ^\n/tmp/tmplv6m50kv.java:23:\
    \ error: long cannot be dereferenced\n                if (x.equals(\"0\") || x.equals(\"\
    1\") || x.equals(\"2\") || x.equals(\"3\")\n                                 \
    \                                       ^\n/tmp/tmplv6m50kv.java:24: error: long\
    \ cannot be dereferenced\n                        || x.equals(\"4\") || x.equals(\"\
    5\") || x.equals(\"6\") || x.equals(\"7\")\n                            ^\n/tmp/tmplv6m50kv.java:24:\
    \ error: long cannot be dereferenced\n                        || x.equals(\"4\"\
    ) || x.equals(\"5\") || x.equals(\"6\") || x.equals(\"7\")\n                 \
    \                            ^\n/tmp/tmplv6m50kv.java:24: error: long cannot be\
    \ dereferenced\n                        || x.equals(\"4\") || x.equals(\"5\")\
    \ || x.equals(\"6\") || x.equals(\"7\")\n                                    \
    \                          ^\n/tmp/tmplv6m50kv.java:24: error: long cannot be\
    \ dereferenced\n                        || x.equals(\"4\") || x.equals(\"5\")\
    \ || x.equals(\"6\") || x.equals(\"7\")\n                   "
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (long element : x) {\n\
    \            int d = (int) Math.log10(element);\n            int i = d / 2;\n\
    \            if (element % 2 == 0) {\n                while (i >= 0 && element\
    \ % 10 == 0) {\n                    y.add((long) element);\n                 \
    \   element = element / 10;\n                    --i;\n                }\n   \
    \         } else {\n                while (i >= 0 && element % 10 != 0) {\n  \
    \                  y.add((long) element);\n                    element = element\
    \ / 10;\n                    --i;\n                }\n            }\n        }\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7w5nb9o_.java:39)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Map<Long, Integer>\
    \ map = new HashMap<>();\n        x.forEach(x -> {\n            if (map.containsKey(x))\
    \ {\n                int count = map.get(x);\n                map.put(x, ++count);\n\
    \            } else {\n                map.put(x, 1);\n            }\n       \
    \ });\n        for (Map.Entry<Long, Integer> entry : map.entrySet()) {\n     \
    \       if (entry.getValue() == 0 || entry.getValue() == 1) {\n              \
    \  result.add(entry.getKey());\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfzy5d6u6.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        x.forEach(x -> {\n                  ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ \n        if (x.isEmpty()) {\n            return x;\n        }\n        \n \
    \       ArrayList<Long> ret = new ArrayList<>(); \n        \n        for (Long\
    \ e : x) {\n            \n            if (e % 2 == 0) {\n                \n  \
    \              Long temp = 0;\n                \n                for (Long t :\
    \ ret) {\n                    \n                    if (t % 2 == 0) {\n      \
    \                  \n                        temp = temp * 10 + t;\n         \
    \               \n                    } else {\n                        \n   \
    \                     break;\n                        \n                    }\n\
    \                    \n                }\n                \n                if\
    \ (temp == 0) {\n                    \n                    ret.add(e);\n     \
    \               \n                }\n                \n            }\n       \
    \     \n        }\n        \n        return ret;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu88kv58g.java:29: error: incompatible types: int cannot be converted\
    \ to Long\n                Long temp = 0;\n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> s = new HashSet<>();\n        x.stream().forEach(x -> {\n        \
    \    while (x > 0) {\n                long remain = x / 10;\n                if\
    \ (s.contains(remain))\n                    break;\n                s.add(remain);\n\
    \                x = x % 10;\n            }\n        });\n        return new ArrayList<>(s);\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr2i92dko.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        x.stream().forEach(x -> {\n         \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> newList = new ArrayList<>(x);\n        int i = 0;\n        HashSet<Long>\
    \ hs = new HashSet<>();\n        for(Long i: newList) {\n            while(hs.contains(i))\
    \ {\n                i++;\n            }\n            hs.add(i);\n           \
    \ newList.set(i, i);\n        }\n        System.out.println(\"newList: \" + newList);\n\
    \        return newList;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphg3dkrn1.java:21: error: variable i is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for(Long i: newList) {\n            \
    \     ^\n/tmp/tmphg3dkrn1.java:26: error: incompatible types: Long cannot be converted\
    \ to int\n            newList.set(i, i);\n                        ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ x.stream().distinct().filter(x -> x % 2 == 0).collect(Collectors.toCollection(ArrayList::new));\n\
    \        return x.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe8od0oka.java:18: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        x.stream().distinct().filter(x -> x %\
    \ 2 == 0).collect(Collectors.toCollection(ArrayList::new));\n                \
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<>();\n        for(int i=0; i < x.size();\
    \ i++) {\n            if(i % 2 == 0)\n                ret.add(x.get(i));\n   \
    \     }\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7cwcrg7f.java:26)\n"
  stdout: ''
  timestamp: 1660010891
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        ArrayList<Long> even =\
    \ new ArrayList<Long>();\n        ArrayList<Long> odd = new ArrayList<Long>();\n\
    \        for (long number : x) {\n            long sum = 0;\n            while\
    \ (number > 0) {\n                int remain = number % 10;\n                number\
    \ = number / 10;\n                sum += (remain % 2 == 0) ? remain : -remain;\n\
    \            }\n            if (sum % 2 == 0) {\n                even.add(number);\n\
    \            } else {\n                odd.add(number);\n            }\n     \
    \   }\n        for (long number : even) {\n            if (!ret.contains(number))\
    \ {\n                ret.add(number);\n            }\n        }\n        for (long\
    \ number : odd) {\n            if (!ret.contains(number)) {\n                ret.add(number);\n\
    \            }\n        }\n        Collections.sort(ret);\n        return ret;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk4derazp.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int remain = number % 10;\n              \
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n\n        for (Long i : x)\
    \ {\n            Long num = i;\n            while (num > 0) {\n              \
    \  long rem = num % 10;\n                if (rem % 2 == 0) {\n               \
    \     temp.add(num);\n                    set.add(num);\n                    break;\n\
    \                }\n                num = num / 10;\n            }\n        }\n\
    \n        for (Long i : set) {\n            if (!result.contains(i)) {\n     \
    \           result.add(i);\n            }\n        }\n\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmploaoz3yl.java:44)\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        ArrayList<Long> odd = new ArrayList<Long>();\n        Set<Long> unique\
    \ = new HashSet<Long>();\n        for(long n:x){\n            if((n % 2 == 0)\
    \ && (!unique.contains(n))){\n                even.add(n);\n                unique.add(n);\n\
    \            }else{\n                odd.add(n);\n            }\n        }\n \
    \       return even.stream().sorted().concat(unique.stream().sorted()).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps3zt3o8b.java:30: error: method concat in interface Stream<T#2>\
    \ cannot be applied to given types;\n        return even.stream().sorted().concat(unique.stream().sorted()).collect(Collectors.toList());\n\
    \                                     ^\n  required: Stream<? extends T#1>,Stream<?\
    \ extends T#1>\n  found:    Stream<Long>\n  reason: cannot infer type-variable(s)\
    \ T#1\n    (actual and formal argument lists differ in length)\n  where T#1,T#2\
    \ are type-variables:\n    T#1 extends Object declared in method <T#1>concat(Stream<?\
    \ extends T#1>,Stream<? extends T#1>)\n    T#2 extends Object declared in interface\
    \ Stream\n/tmp/tmps3zt3o8b.java:30: error: illegal static interface method call\n\
    \        return even.stream().sorted().concat(unique.stream().sorted()).collect(Collectors.toList());\n\
    \                                            ^\n  the receiver expression should\
    \ be replaced with the type qualifier 'Stream<Long>'\n2 errors\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for (Long val : x) {\n\
    \            int digits[] = val.toString().chars().mapToObj(c -> c % 10l).collect(Collectors.toList());\n\
    \            int count = 0;\n            for (int i = 0; i < digits.length; ++i)\
    \ {\n                if (digits[i] % 2 == 0) {\n                    count++;\n\
    \                }\n            }\n            if (count > 0) {\n            \
    \    result.add(val);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpansafn0l.java:20: error: incompatible types: inference variable\
    \ R has incompatible bounds\n            int digits[] = val.toString().chars().mapToObj(c\
    \ -> c % 10l).collect(Collectors.toList());\n                                \
    \                                                ^\n    equality constraints:\
    \ List<T#2>\n    lower bounds: int[],Object\n  where R,A,T#1,T#2 are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    T#1 extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        // sort array list\n \
    \       Collections.sort(x);\n        // find all odd digit element\n        for(long\
    \ x : x) {\n            if(x % 2 != 0) {\n                ret.add(x);\n      \
    \      }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp94mn71gz.java:22: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for(long x : x) {\n                 ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> set = new HashSet<>();\n        for (long l : x) {\n            if\
    \ (set.add(l)) {\n                Long l = l;\n                while (l % 10 ==\
    \ 0) {\n                    l /= 10;\n                }\n                if (!set.contains(l))\n\
    \                    set.remove(l);\n            }\n        }\n        return\
    \ new ArrayList<Long>(set);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6vo2a9yv.java:21: error: variable l is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n                Long l = l;\n               \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long y : x)\n\
    \        {\n            int even = y.intValue() % 2;\n            while (even\
    \ > 0 && result.size() != 0)\n            {\n                if (result.get(result.size()\
    \ - 1) == y)\n                {\n                    break;\n                }\n\
    \                else\n                {\n                    result.add(y);\n\
    \                }\n                even -= 1;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0jz0kzf.java:38)\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for(long i = 0; i < x.size();\
    \ i++) {\n            long value = x.get(i);\n            long temp = 1;\n   \
    \         while(value != 0) {\n                long mod = value % 10;\n      \
    \          if(mod == 0) {\n                    res.add(value);\n             \
    \   }\n                value /= 10;\n            }\n        }\n        res.sort(Comparator.comparingLong(Long::longValue).reversed());\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpusizkuh8.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long value = x.get(i);\n                     \
    \          ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        long carry = 1;\n      \
    \  for(long i = x.size() - 1; i >= 0; i--) {\n            long a = x.get(i);\n\
    \            long sum = a * (10 + carry);\n            y.add((sum % 10) == 0 ?\
    \ sum : sum / 10);\n            carry = sum / 10;\n        }\n        if(carry\
    \ == 1) {\n            y.add(carry);\n        }\n        return y;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxa_v7yvg.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long a = x.get(i);\n                         \
    \  ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>(x);\n        boolean done = false;\n\
    \        while (!done) {\n            done = true;\n            for (int i = 0;\
    \ i < result.size(); i++) {\n                long digit = result.get(i);\n   \
    \             for (int j = 0; j < i; j++) {\n                    if (Math.abs(digit\
    \ - result.get(j)) % 2 == 0) {\n                        done = false;\n      \
    \                  break;\n                    }\n                }\n        \
    \    }\n            result.add(result.size());\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo_tl5q62.java:31: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(result.size());\n                          \
    \        ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> answer = new ArrayList<Long>();\n        Collections.sort(x);\n\
    \        Long xx = new Long(x.size());\n        Long y = new Long(x.size());\n\
    \        Long zz = new Long(x.size());\n        Long zz2 = new Long(x.size());\n\
    \        Long zz3 = new Long(x.size());\n        Long zz4 = new Long(x.size());\n\
    \        Long zz5 = new Long(x.size());\n        Long zz6 = new Long(x.size());\n\
    \        Long zz7 = new Long(x.size());\n        Long zz8 = new Long(x.size());\n\
    \        Long zz9 = new Long(x.size());\n        for (Long i : x)\n          \
    \  if (i % 2 != 0) {\n                answer.add(i);\n            }\n        for\
    \ (Long i : x)\n            if (i % 4 == 0) {\n                zz = i;\n     \
    \           zz2 = i;\n                zz3 = i;\n                zz4 = i;\n   \
    \             zz5 = i;\n                zz6 = i;\n                zz7 = i;\n \
    \               zz8 = i;\n                zz9 = i;\n            }\n        for\
    \ (Long i : x) {\n            if (i % 2 != 0 && i % 4 != 0) {\n              \
    \  y++;\n                zz = i;\n                zz2 = i;\n                zz3\
    \ = i;\n                zz4 = i;\n                zz5 = i;\n                zz6\
    \ = i;\n                zz7 = i;\n                zz8 = i;\n                zz9\
    \ = i;\n            }\n        }\n        for (Long i : x) {\n            if (i\
    \ % 2 != 0 && i % 4 == 0) {\n                y--;\n                zz = i;\n \
    \               zz2 = i;\n                zz3 = i;\n                zz4 = i;\n\
    \                zz5 = i;\n                zz6 = i;\n                zz7 = i;\n\
    \                zz8 = i;\n                zz9 = i;\n            }\n        }\n\
    \        for (Long i : x) {\n            if (i % 2 != 0 && i % 4 != 0 && i % 2\
    \ != 0 && i % 4 != 0) {\n                y++;\n                zz = i;\n     \
    \           zz2 = i;\n                zz3 = i;\n                zz4 = i;\n   \
    \             zz5 = i;\n                zz6 = i;\n                zz7 = i;\n \
    \               zz8 = i;\n                zz9 = i;\n            }\n        }\n\
    \        for (Long i : x) {\n            if (i % 2 != 0 && i % 4 != 0 && i % 2\
    \ == 0 && i % 4 != 0) {\n                y--;\n                zz = i;\n     \
    \           zz2 = i;\n                zz3 = i;\n                zz4 = i;\n   \
    \             zz5 = i;\n                zz6 = i;\n                zz7 = i;\n \
    \               zz8 = i;\n                zz9 = i;\n            }\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmploksx3us.java:104: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long x: x){\n     \
    \       boolean flag = false;\n            for(int i=0;i<result.size(); i++){\n\
    \                long y = result.get(i);\n                if(y == x){\n      \
    \              flag = true;\n                    break;\n                }\n \
    \           }\n            if(!flag){\n                result.add(x);\n      \
    \      }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfai75l8.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for(long x: x){\n                 ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here\n        \n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqa07f0t5.java:21: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        // check even digit\n\
    \        for(Long n: x){\n            if(n % 2 == 0) result.add(n);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfoenn34.java:26)\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.isEmpty()) return x;\n        ArrayList<Long> y = new ArrayList<Long>();\n\
    \        for (int i = 0; i < x.size(); ++i) {\n            long number = x.get(i);\n\
    \            if (number % 2 != 0) {\n                while (number % 2 != 0) {\n\
    \                    number = number / 2;\n                }\n               \
    \ y.add(number);\n            }\n        }\n        if (y.isEmpty()) return x;\n\
    \        ArrayList<Long> z = new ArrayList<Long>();\n        for (int i = 0; i\
    \ < y.size(); ++i) {\n            for (int j = 0; j < x.size(); ++j) {\n     \
    \           if (y.get(i) == x.get((j))) {\n                    z.add(y.get(i));\n\
    \                }\n            }\n        }\n        if (z.isEmpty()) return\
    \ x;\n        Collections.sort(z);\n        return z;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsednla2y.java:43)\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> results = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        Long[] digits = new Long[x.size()];\n        int index = 0;\n       \
    \ for(long digit : x){\n            digits[index++] = digit;\n        }\n    \
    \    Arrays.sort(digits);\n        for(int i=0; i<digits.length; i++){\n     \
    \       Long digit = digits[i];\n            if(set.add(digit)){\n           \
    \     results.add(digit);\n            }\n        }\n        \n        return\
    \ results;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacsuhc8n.java:36)\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<>();\n        long n = x.size();\n    \
    \    long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum +=\
    \ x.get(i);\n        }\n        long evenDigits = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            if (sum % 2 == 0) {\n                evenDigits +=\
    \ x.get(i);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n\
    \            if (x.get(i) != evenDigits) {\n                list.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(list);\n        return list;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshjcwk_m.java:39)\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        x.forEach(x -> {\n   \
    \         ArrayList<Integer> list = new ArrayList<Integer>();\n            while\
    \ (x.remainder(10) == 0) {\n                list.add(x.divide(10));\n        \
    \        x = x.modulo(10);\n            }\n            list.add(x.divide(10));\n\
    \            list.sort((x, y) -> x.compareTo(y));\n            list.forEach(y\
    \ -> {\n                while (list.contains(y)) {\n                    y = y.multiply(10);\n\
    \                }\n                res.add(y);\n            });\n        });\n\
    \        res.sort((x, y) -> x.compareTo(y));\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpie5xdr0h.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        x.forEach(x -> {\n                  ^\n\
    /tmp/tmpie5xdr0h.java:21: error: cannot find symbol\n            while (x.remainder(10)\
    \ == 0) {\n                    ^\n  symbol:   method remainder(int)\n  location:\
    \ variable x of type Long\n/tmp/tmpie5xdr0h.java:22: error: cannot find symbol\n\
    \                list.add(x.divide(10));\n                          ^\n  symbol:\
    \   method divide(int)\n  location: variable x of type Long\n/tmp/tmpie5xdr0h.java:23:\
    \ error: cannot find symbol\n                x = x.modulo(10);\n             \
    \        ^\n  symbol:   method modulo(int)\n  location: variable x of type Long\n\
    /tmp/tmpie5xdr0h.java:25: error: cannot find symbol\n            list.add(x.divide(10));\n\
    \                      ^\n  symbol:   method divide(int)\n  location: variable\
    \ x of type Long\n/tmp/tmpie5xdr0h.java:26: error: variable x is already defined\
    \ in method uniqueDigits(ArrayList<Long>)\n            list.sort((x, y) -> x.compareTo(y));\n\
    \                       ^\n/tmp/tmpie5xdr0h.java:29: error: cannot find symbol\n\
    \                    y = y.multiply(10);\n                         ^\n  symbol:\
    \   method multiply(int)\n  location: variable y of type Integer\n/tmp/tmpie5xdr0h.java:31:\
    \ error: incompatible types: Integer cannot be converted to Long\n           \
    \     res.add(y);\n                        ^\n/tmp/tmpie5xdr0h.java:34: error:\
    \ variable x is already defined in method uniqueDigits(ArrayList<Long>)\n    \
    \    res.sort((x, y) -> x.compareTo(y));\n                  ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n9 errors\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> seen = new HashSet<>();\n        List<Long> result = new ArrayList<>();\n\
    \        for (Long element : x) {\n            if (!seen.contains(element)) {\n\
    \                result.add(element);\n                seen.add(element);\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptskni3e4.java:26: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010892
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for (long i : x) {\n  \
    \          while (i > 0) {\n                i = i / 10;\n            }\n     \
    \       if (i % 2 == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2dyvhv7_.java:31)\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashSet<Long> hs = new HashSet<Long>();\n        for(long l : x) {\n       \
    \     while (l > 1) {\n                int d = (int) (l % 10);\n             \
    \   hs.add(d);\n                l = (long) Math.floor(l / 10);\n            }\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>(hs);\n      \
    \  result.sort(Comparator.reverseOrder());\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi2ex6uk5.java:22: error: incompatible types: int cannot be converted\
    \ to Long\n                hs.add(d);\n                       ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        \n        x.stream().filter(i\
    \ -> i % 2 == 0).sorted().distinct().forEach(e -> {\n            if (result.contains(e))\
    \ {\n                return;\n            }\n            result.add(e);\n    \
    \    });\n\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_gjsaz3.java:30)\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.size() <= 1) return x;\n        List<Long> n = new ArrayList<>(x);\n \
    \       // sort and remove duplicates \n        n.sort(Comparator.naturalOrder());\n\
    \        n.remove(n.size() - 1);\n        // find out all the even numbers \n\
    \        ArrayList<Long> n2 = new ArrayList<Long>(n.size());\n        for (Long\
    \ l : n) {\n            if (l.intValue() % 2 == 0) {\n                n2.add(l);\n\
    \            }\n        }\n        // remove from original list \n        n.removeAll(n2);\n\
    \        // remove duplicates from n list\n        n2.removeAll(n);\n        //\
    \ merge n and n2 list\n        n.addAll(n2);\n        // sort and remove duplicates\
    \ \n        n.sort(Comparator.naturalOrder());\n        n.remove(n.size() - 1);\n\
    \        return n;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpegad1gk8.java:39: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return n;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            temp = x.get(i);\n           \
    \ if (temp % 2 != 0) {\n                result.add(temp);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjen3ht0r.java:31)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int sz = x.size();\n        ArrayList<Long> ret = new ArrayList<Long>(sz);\n\
    \        for(long i : x) {\n            for(long j : x) {\n                if((j\
    \ % i) == 0) {\n                    ret.add(j);\n                }\n         \
    \   }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xvuw2a3.java:30)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        int evenCount = 0;\n        ArrayList<Long>\
    \ evenX = new ArrayList<Long>();\n        for(Long i : x){\n            if(i %\
    \ 2 == 0){\n                evenCount++;\n                evenX.add(i);\n    \
    \        }\n        }\n        x.retainAll(evenX);\n        System.out.println(x);\n\
    \        System.out.println(evenX);\n        System.out.println();\n        return\
    \ x;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppleezeg5.java:34)\n"
  stdout: '[1422]

    [1422]


    '
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Arrays.sort(x);\n        ArrayList<Long> res = new ArrayList<Long>();\n    \
    \    long prev = 0; \n        long temp = 0; \n        long last = 0;\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            prev = temp;\n          \
    \  temp = x.get(i);\n            while (temp != 0) {\n                last = temp\
    \ % 10;\n                if (last == 0)\n                    temp = (long) ((temp\
    \ / 10) + 1);\n                else\n                    temp = (long) (temp /\
    \ 10);\n            }\n            if (!res.contains(prev)) {\n              \
    \  res.add(prev);\n            }\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppuy1w4v3.java:18: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         int d = (int) (i % 10);\n            if(!result.contains(d / 2)) {\n\
    \                result.add(i / 2);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezlo56h7.java:28)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ final ArrayList<Long> result = new ArrayList<>();\n        for (long num : x)\
    \ {\n            while (num >= 10) {\n                final long temp = num /\
    \ 10;\n                if (result.stream().filter(num -> num % temp == 0).count()\
    \ == 0) {\n                    result.add(num);\n                    break;\n\
    \                }\n                num = temp;\n            }\n        }\n  \
    \      result.sort(Comparator.naturalOrder());\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfnwwclyi.java:22: error: variable num is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n                if (result.stream().filter(num\
    \ -> num % temp == 0).count() == 0) {\n                                      \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp_wwfjg0z.java:22)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>(x);\n        // Get all non-even digit\
    \ positions.\n        Set<Integer> evenDigits = new HashSet<>();\n        for\
    \ (int i=0; i<result.size(); i++) {\n            long num = result.get(i);\n \
    \           while (num != 0) {\n                while (num/10 % 2 != 0) {\n  \
    \                  num = num / 10;\n                }\n                if (num%2\
    \ == 0) {\n                    evenDigits.add(i);\n                    break;\n\
    \                }\n                num = num / 10;\n            }\n        }\n\
    \        // Remove uneven digits from original list.\n        for (int i=0; i<result.size();\
    \ i++) {\n            long num = result.get(i);\n            if (evenDigits.contains(i))\
    \ {\n                continue;\n            }\n            result.add(i, num);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ final ArrayList<Long> result = new ArrayList<>();\n        x.stream().sorted(Comparator.comparingLong(x\
    \ -> x % 10L)).forEach(result::add);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1f8tzthj.java:19: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        x.stream().sorted(Comparator.comparingLong(x\
    \ -> x % 10L)).forEach(result::add);\n                                       \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> seen = new HashSet<>();\n\
    \        for(Long num : x)\n        {\n            boolean isEven = true;\n  \
    \          for(int i = 0; i < Integer.MAX_VALUE; i++)\n            {\n       \
    \         long mod = num % (long)i;\n                if(mod > 0)\n           \
    \     {\n                    isEven = false;\n                    break;\n   \
    \             }\n            }\n            if(isEven)\n            {\n      \
    \          result.add(num);\n                seen.add(num);\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.uniqueDigits(tmp61zf75vn.java:25)\n\tat Problem.main(tmp61zf75vn.java:41)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> unique =\
    \ new HashSet<Long>();\n        x.stream().filter(y -> {\n            unique.add(y);\n\
    \            return y.intValue() % 2 != 0;\n        }).forEach(y -> {\n      \
    \      if (!unique.contains(y)) {\n                result.add(y);\n          \
    \  }\n        });\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5wr2o67v.java:31)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.isEmpty()) throw new NoSuchElementException(\"no element\");\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            boolean even = true;\n            long current = x.get(i);\n\
    \            for (int j = i + 1; j < x.size(); j++) \n                if (x.get(j)\
    \ % 2 != 0)\n                    even = false;\n            if (even) result.add(current);\n\
    \        }\n        return result.stream().sorted().distinct().collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp62fw4st0.java:28: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return result.stream().sorted().distinct().collect(Collectors.toList());\n\
    \                                                          ^\n    equality constraints:\
    \ List<T#2>\n    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2 are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashMap<Long,Integer> map = new HashMap<Long, Integer>();\n        for(long\
    \ l : x) {\n            int i = map.get(l);\n            if(i != null) {\n   \
    \             map.put(l,i+1);\n            }else {\n                map.put(l,0);\n\
    \            }\n        }\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        for(long l : x) {\n            Integer i = map.get(l);\n            if(i\
    \ == null)\n                res.add(l);\n        }\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp97n37dar.java:21: error: bad operand types for binary operator\
    \ '!='\n            if(i != null) {\n                 ^\n  first type:  int\n\
    \  second type: <null>\n1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.isEmpty()) return new ArrayList<Long>();\n        List<Long> result =\
    \ new ArrayList<Long>();\n        long currentSum = 0, prevSum = 0, lastSum =\
    \ 0, lastPrevSum = 0;\n        for (Long y : x) {\n            currentSum += y;\n\
    \            if (currentSum < 0) {\n                if (currentSum < prevSum)\
    \ {\n                    result.add(lastPrevSum);\n                    lastPrevSum\
    \ = lastSum;\n                }\n                currentSum = prevSum;\n     \
    \       }\n            lastSum = currentSum;\n            prevSum = currentSum;\n\
    \        }\n        \n        if (lastPrevSum > 0) {\n            result.add(lastPrevSum);\n\
    \        }\n        \n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6imak4c6.java:39: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        List<Long> temp = new ArrayList<>();\n\
    \        for(Long num: x) {\n            if(num%10 != 0) temp.add(num);\n    \
    \    }\n        Collections.sort(temp);\n        for(Long num: temp) {\n     \
    \       if(num%2 == 0) {\n                result.add(num);\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhkyaen7.java:32)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        HashMap<Long, Long> evenMap\
    \ = new HashMap<Long, Long>();\n        // for each element in the original list\n\
    \        for (Long ele : x) {\n            // if element has even digit, ignore\
    \ it\n            if (ele % 2 == 0) {\n                continue;\n           \
    \ }\n            // else if the element hasn't even digit in map\n           \
    \ if (evenMap.containsKey(ele)) {\n                // add element to the new list\n\
    \                ret.add(ele);\n            }\n            // else if the element\
    \ hasn't even digit in map\n            else {\n                // add new element\
    \ to the map\n                evenMap.put(ele, Long.MAX_VALUE);\n            }\n\
    \        }\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpag99pxs1.java:40)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if(x.isEmpty()) return x;\n        Map<Long,Integer> map = new HashMap<>();\n\
    \        for(Long i: x)\n            map.put(i, map.getOrDefault(i, 0) + 1);\n\
    \        for(Long i: x)\n            map.put(i, map.getOrDefault(i, 0) - 1);\n\
    \        return map.entrySet().stream().sorted(Map.Entry.<Long,Integer>comparingByValue()).toArray(i\
    \ -> new ArrayList<>(i));\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp54rwif4r.java:24: error: incompatible types: cannot infer type-variable(s)\
    \ A\n        return map.entrySet().stream().sorted(Map.Entry.<Long,Integer>comparingByValue()).toArray(i\
    \ -> new ArrayList<>(i));\n                                                  \
    \                                               ^\n    (argument mismatch; bad\
    \ return type in lambda expression\n      cannot infer type arguments for ArrayList<>\n\
    \        reason: no instance(s) of type variable(s) E exist so that ArrayList<E>\
    \ conforms to A[])\n  where A,E are type-variables:\n    A extends Object declared\
    \ in method <A>toArray(IntFunction<A[]>)\n    E extends Object declared in class\
    \ ArrayList\n1 error\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashSet<Long> set = new HashSet<Long>();\n        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        \n        for(Long i : x){\n            if((i &\
    \ 1) == 0){\n                if(!set.contains(i)){\n                    set.add(i);\n\
    \                    result.add(i);\n                }\n            }\n      \
    \  }\n        \n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprr23940r.java:33)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Map<Long, Integer> map = new HashMap<>();\n        for (Long item : x) {\n \
    \           int i = map.get(item);\n            if (i == null) {\n           \
    \     map.put(item, 1);\n            } else {\n                map.put(item, i\
    \ + 1);\n            }\n        }\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(Map.Entry<Long, Integer> entry : map.entrySet()) {\n            if\
    \ (entry.getValue() == 0) {\n                result.add(entry.getKey());\n   \
    \         }\n        }\n        return result.stream().sorted().collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp70glhgtd.java:21: error: bad operand types for binary operator\
    \ '=='\n            if (i == null) {\n                  ^\n  first type:  int\n\
    \  second type: <null>\n/tmp/tmp70glhgtd.java:33: error: incompatible types: inference\
    \ variable R has incompatible bounds\n        return result.stream().sorted().collect(Collectors.toList());\n\
    \                                               ^\n    equality constraints: List<T#2>\n\
    \    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2 are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n\
    \    T#1 extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n2 errors\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp = 0;\n  \
    \      for (int i = 0; i < x.size(); i++) {\n            for (int j = 0; j < i;\
    \ j++) {\n                temp = x.get(i) % x.get((i) + 1);\n                if\
    \ (temp != 0 && temp % 2 == 0) {\n                    result.add(x.get(i));\n\
    \                    result.remove((i + 1));\n                    break;\n   \
    \             }\n            }\n        }\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 4 out of bounds for length 4\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.uniqueDigits(tmp41slsdrw.java:22)\n\tat Problem.main(tmp41slsdrw.java:33)\n"
  stdout: ''
  timestamp: 1660010894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> r = new ArrayList<>();\n        for(Long n : x){\n         \
    \   String s = n.toString();\n            int odd = 1;\n            for(char c\
    \ : s.toCharArray()){\n                int d = (int)c;\n                if(d %\
    \ 2 == 1)\n                    odd = 0;\n            }\n            if(odd ==\
    \ 1)\n                r.add(n);\n        }\n        Collections.sort(r);\n   \
    \     return r;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ky8i1tt.java:34)\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long current = x.get(0);\n\
    \        long count = 1;\n        for(Long l : x) {\n            if(l > current)\
    \ {\n                count++;\n                current = l;\n            } else\
    \ {\n                if(count % 2 == 0) {\n                    result.add(current);\n\
    \                    current = l;\n                    count = 1;\n          \
    \      }\n            }\n        }\n        if(count % 2 == 0) {\n           \
    \ result.add(current);\n        }\n        Collections.sort(result);\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpabw7c6z3.java:40)\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n\n        Set<Long> set = new HashSet<Long>();\n\
    \        for (Long e : x) {\n            if (set.add(e)) {\n                result.add(e);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwj3y01qn.java:29)\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long n = 0;\n        ArrayList<Long> y = (ArrayList<Long>) x.clone();\n    \
    \    for (int i = 0; i < y.size(); i++) {\n            n = n;\n            n =\
    \ n + (long) y.get(i) / (long) Math.pow(10, y.size());\n        }\n        int\
    \ yi = -1;\n        for (int i = 0; i < y.size(); i++) {\n            n = n;\n\
    \            n = n + (long) y.get(i) / (long) Math.pow(10, y.size());\n      \
    \      if (n <= 9) {\n                yi++;\n                yi.add(y.get(i));\n\
    \            }\n        }\n        Collections.sort(y, new Comparator<Long>()\
    \ {\n            public int compare(Long a, Long b) {\n                return\
    \ Integer.compare(Double.parseDouble(String.valueOf(a)), Double.parseDouble(String.valueOf(b)));\n\
    \            }\n        });\n        ArrayList<Long> z = new ArrayList<>();\n\
    \        for (int i = 0; i < yi.size(); i++) {\n            if (!z.contains(yi.get(i)))\
    \ {\n                z.add(yi.get(i));\n            }\n        }\n        return\
    \ z;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmmmzsx6c.java:30: error: int cannot be dereferenced\n         \
    \       yi.add(y.get(i));\n                  ^\n/tmp/tmpmmmzsx6c.java:35: error:\
    \ incompatible types: possible lossy conversion from double to int\n         \
    \       return Integer.compare(Double.parseDouble(String.valueOf(a)), Double.parseDouble(String.valueOf(b)));\n\
    \                                                         ^\n/tmp/tmpmmmzsx6c.java:39:\
    \ error: int cannot be dereferenced\n        for (int i = 0; i < yi.size(); i++)\
    \ {\n                              ^\n/tmp/tmpmmmzsx6c.java:40: error: int cannot\
    \ be dereferenced\n            if (!z.contains(yi.get(i))) {\n               \
    \               ^\n/tmp/tmpmmmzsx6c.java:41: error: int cannot be dereferenced\n\
    \                z.add(yi.get(i));\n                        ^\nNote: /tmp/tmpmmmzsx6c.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> y = new ArrayList<>(x);\n        List<Long> res = new ArrayList<>();\n\
    \        for(int i=0;i<y.size();i++){\n            long digit = x.get(i);\n  \
    \          boolean isEvenDigit=false;\n            for(long j=i;j<y.size();j++){\n\
    \                long k = y.get(j);\n                if(k%10==digit%10){\n   \
    \                 isEvenDigit = true;\n                }\n            }\n    \
    \        if(isEvenDigit==false){\n                res.add(digit);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps6v13lub.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n                long k = y.get(j);\n                     \
    \          ^\n/tmp/tmps6v13lub.java:34: error: incompatible types: List<Long>\
    \ cannot be converted to ArrayList<Long>\n        return res;\n              \
    \ ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> set = new HashSet<>();\n        for (Long num : x){\n            boolean\
    \ noEvenDigit = true;\n            for(int i = 1; (num/10) % i != 0 && i<= num/10;\
    \ i++){\n                noEvenDigit = false;\n            }\n            if(noEvenDigit){\n\
    \                set.add(num);\n            }\n        }\n        ArrayList<Long>\
    \ result = new ArrayList<>(set);\n        Collections.sort(result);\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ky1kejo.java:33)\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ x.sort(null, (o1, o2) -> Integer.compare(o1.intValue(), o2.intValue()));\n \
    \       ArrayList<Long> res = new ArrayList<Long>();\n        long xx = Long.parseLong(x.toString());\n\
    \        long yy = 1;\n        while(true) {\n            long z = (xx + yy);\n\
    \            if(z <= 9) {\n                res.add(z);\n                xx = z;\n\
    \                yy = 1;\n            } else {\n                yy = yy*10;\n\
    \                long zz = Long.parseLong(String.valueOf(zz));\n             \
    \   if(zz %2 == 0) {\n                    xx = zz;\n                } else {\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return res;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi7mr2kd.java:18: error: method sort in class ArrayList<E> cannot\
    \ be applied to given types;\n        x.sort(null, (o1, o2) -> Integer.compare(o1.intValue(),\
    \ o2.intValue()));\n         ^\n  required: Comparator<? super Long>\n  found:\
    \    <null>,(o1,o2)->I[...]ue())\n  reason: actual and formal argument lists differ\
    \ in length\n  where E is a type-variable:\n    E extends Object declared in class\
    \ ArrayList\n1 error\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> unique = new ArrayList<>();\n        for (long l : x) {\n       \
    \     String str = Long.toString(l);\n            if (str.indexOf(\"8\") != -1\
    \ || str.indexOf(\"8\") != str.length()-8) {\n                continue;\n    \
    \        }\n            if (unique.size() == 0 || unique.get(unique.size() - 1)\
    \ != l) {\n                unique.add(l);\n            }\n        }\n        return\
    \ unique;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp73m7ut9y.java:28: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return unique;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> set = new HashSet<>();\n        x.stream().forEach(xx -> set.add(xx));\n\
    \        ArrayList<Long> out = new ArrayList<>();\n        out.addAll(set);\n\
    \        Collections.sort(out);\n        return out;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhfgyho4.java:26)\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashSet<Long> hashSet = new HashSet<>();\n        for (long l : x) {\n     \
    \       while (hashSet.contains(l)) {\n                l = l / 10;\n         \
    \   }\n            hashSet.add(l);\n        }\n        return new ArrayList<>(hashSet);\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dpvu_v3.java:28)\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        List<Long> tempResult =\
    \ new ArrayList<Long>();\n        for (Long el : x) {\n            if (el % 2\
    \ == 0) {\n                tempResult.add(el);\n            } else {\n       \
    \         if (tempResult.size() > 0) {\n                    result.addAll(tempResult);\n\
    \                    tempResult.clear();\n                }\n            }\n \
    \       }\n        if (tempResult.size() > 0) {\n            result.addAll(tempResult);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi857xm_4.java:36)\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int n = x.size();\n        // Step 1.\n        Set<Long> s = new HashSet<>();\n\
    \        for(Long d : x) s.add(d);\n        // Step 2.\n        ArrayList<Long>\
    \ rs = new ArrayList<>();\n        for(Long d : x) {\n            if(!s.contains(d))\
    \ rs.add(d);\n        }\n        // Step 3.\n        rs.addAll(s);\n        //\
    \ Step 4.\n        Collections.sort(rs);\n        // Step 5.\n        return rs;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxajj4qx3.java:35)\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<Long>();\n        for (Long aNum : x) {\n\
    \            String s = aNum.toString();\n            int length = s.length();\n\
    \            boolean isOdd = Integer.parseInt(s.substring(1)) % 2 != 0;\n    \
    \        if (isOdd) {\n                list.add(new Long(s));\n            }\n\
    \        }\n        Collections.sort(list);\n        return list;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.uniqueDigits(tmpta5cltqo.java:22)\n\tat Problem.main(tmpta5cltqo.java:31)\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for(long i: x) {\n     \
    \       if(!Collections.frequency(x, i)) \n                y.add(i);\n       \
    \ }\n        return y;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7wdkp56.java:20: error: bad operand type int for unary operator\
    \ '!'\n            if(!Collections.frequency(x, i)) \n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ x.sort(Comparator.naturalOrder());\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tmp;\n        for(Long val : x) {\n            if(val % (long)10\
    \ % 2 == 0) {\n                tmp = val;\n            } else {\n            \
    \    for(long i = val; i > 0; i--) {\n                    long digit = i / 10;\n\
    \                    if(digit == 0 && (i % 10 != 0)) {\n                     \
    \   continue;\n                    }\n                    if(digit == 0 && (i\
    \ % 10 == 0)) {\n                        tmp = 1;\n                        break;\n\
    \                    }\n                    if(tmp == val) {\n               \
    \         tmp = val;\n                        break;\n                    }\n\
    \                }\n                if(tmp == val) {\n                    result.add(val);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp411cvvnh.java:34: error: variable tmp might not have been initialized\n\
    \                    if(tmp == val) {\n                       ^\n/tmp/tmp411cvvnh.java:39:\
    \ error: variable tmp might not have been initialized\n                if(tmp\
    \ == val) {\n                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         boolean found = false;\n            for (Long j : y){\n            \
    \    if (i.mod(j).equals(0)){\n                    found = true;\n           \
    \         break;\n                }\n            }\n            if (!found) {\n\
    \                y.add(i);\n            }\n        }\n        return y;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2pc33_p4.java:22: error: cannot find symbol\n                if\
    \ (i.mod(j).equals(0)){\n                     ^\n  symbol:   method mod(Long)\n\
    \  location: variable i of type Long\n1 error\n"
  stdout: ''
  timestamp: 1660010895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code here\n        Arrays.sort(x);\n        ArrayList<Long> list\
    \ = new ArrayList<>();\n        for(Long val:x) {\n            Long l = new Long(val%10);\n\
    \            while(list.contains(l)) {\n                l++;\n            }\n\
    \            list.add(x);\n        }\n        return list;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8o26xu27.java:19: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmp8o26xu27.java:22: warning: [removal] Long(long) in Long\
    \ has been deprecated and marked for removal\n            Long l = new Long(val%10);\n\
    \                     ^\n/tmp/tmp8o26xu27.java:26: error: incompatible types:\
    \ ArrayList<Long> cannot be converted to Long\n            list.add(x);\n    \
    \                 ^\nNote: Some messages have been simplified; recomp"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Map<Long, Long> digits = new HashMap<>();\n        for (long l: x) {\n     \
    \       digits.put(l, l%10);\n        }\n        Collections.sort(x, new Comparator<Long>()\
    \ {\n            public int compare(Long o1, Long o2) {\n                int i1\
    \ = digits.get(o1);\n                int i2 = digits.get(o2);\n              \
    \  if (i1 != i2) return i2 - i1;\n                return 0;\n            }\n \
    \       });\n        ArrayList<Long> result = new ArrayList<>(x);\n        digits.keySet().removeAll(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjvnznya2.java:24: error: incompatible types: Long cannot be converted\
    \ to int\n                int i1 = digits.get(o1);\n                         \
    \          ^\n/tmp/tmpjvnznya2.java:25: error: incompatible types: Long cannot\
    \ be converted to int\n                int i2 = digits.get(o2);\n            \
    \                       ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> unique = new HashSet<>();\n        for (Long i: x) {\n           \
    \ if (!unique.contains(i))\n                unique.add(i);\n        }\n      \
    \  return unique.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mcdfojs.java:26)\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int count = 0;\n        ArrayList<Long> res = new ArrayList<>();\n        x.stream().forEach(element\
    \ -> {\n            count += element;\n            if (count % 2 == 0)\n     \
    \           res.add(element);\n        });\n        Arrays.sort(res);\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp89v4l7f6.java:25: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(res);\n              ^\n    method Arrays.sort(int[]) is\
    \ not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long l = 0;\n        ArrayList<Long> ret = new ArrayList<>();\n        for(long\
    \ i : x) {\n            l = i;\n            for(long j : x) {\n              \
    \  if(j > (i*10)) break;\n                else if((j % 10) == 0) {\n         \
    \           if(l % 10 == 0) {\n                        ret.add(l);\n         \
    \               l = j;\n                    } else if(l % 10 != 0) {\n       \
    \                 ret.add(l);\n                        l = j;\n              \
    \      }\n                }\n            }\n        }\n        return ret;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx4_phded.java:38)\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> res = new HashSet<>();\n        for(Long i: x) {\n            boolean\
    \ hasEvenDigit = false;\n            for(int j = 0; j < i.toString().length();\
    \ j++) {\n                if(i % 10 == 0 || i % 10 == 1) {\n                 \
    \   hasEvenDigit = true;\n                    break;\n                }\n    \
    \        }\n            if(!hasEvenDigit) {\n                res.add(i);\n   \
    \         }\n        }\n        return res.stream().sorted((l1, l2) -> l1.compareTo(l2)).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsad6nq6.java:34)\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ \n        ArrayList<Long> ans = new ArrayList<Long>();\n        \n        List<Long>\
    \ ys = x.stream().sorted().filter(y -> {\n            \n            return y %\
    \ 2 != 0;\n        }).collect(Collectors.toList());\n        \n        \n    \
    \    \n        for (Long i : ys) {\n            if (ans.contains(i)) {\n     \
    \           ans.remove(ans.indexOf(i));\n            } else {\n              \
    \  ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuxl6nkv.java:39)\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        // convert Long to int\n\
    \        for (Long l : x)\n            result.add(l.intValue());\n        // check\
    \ only even numbers\n        ArrayList<Long> even = new ArrayList<>();\n     \
    \   for (Long l : result)\n            if (l % 2 == 0)\n                even.add(l);\n\
    \        else\n            result.addAll(even);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8mnx0mdh.java:21: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(l.intValue());\n                           \
    \      ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long a = x[0]; // a is first digit of the array\n        for (long i : x) {\n\
    \            if (i % 10 == a) {\n                continue ; // jump to next element\
    \ of the array\n            } else {\n                x.remove(i); // delete the\
    \ element from the array\n                long b = i / 10;\n                while\
    \ (b > a) {\n                    long c = b % 10; // c is last digit of the array\n\
    \                    if (c == 0) {\n                        x.remove(i); // delete\
    \ this element from the array\n                        i = i / 10; // shift i\
    \ to the right by one digit\n                        break;\n                \
    \    }\n                    x.remove(i); // delete the element from the array\n\
    \                    i = i / 10;\n                    b = b / 10;\n          \
    \      }\n                x.add(i); // add it to the array list with increasing\
    \ order\n                a = c; // a is last digit of the array\n            }\n\
    \        }\n        return x; // return the array\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy6bvg77p.java:18: error: array required, but ArrayList<Long> found\n\
    \        long a = x[0]; // a is first digit of the array\n                  ^\n\
    /tmp/tmpy6bvg77p.java:37: error: cannot find symbol\n                a = c; //\
    \ a is last digit of the array\n                    ^\n  symbol:   variable c\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long sum=0;\n        long x=0;\n        long y=0;\n        long z=0;\n     \
    \   long i=0;\n        long sum1=0; \n        long sum2=0; \n        long sum3=0;\
    \ \n        long sum4=0; \n        long sum5=0; \n        long sum6=0; \n    \
    \    long sum7=0; \n        long sum8=0; \n        long sum9=0; \n        long\
    \ sum10=0; \n        long sum11=0; \n        long sum12=0; \n        long sum13=0;\
    \ \n        long sum14=0; \n        long sum15=0; \n        long sum16=0; \n \
    \       long sum17=0; \n        long sum18=0; \n        long sum19=0; \n     \
    \   long sum20=0; \n        long sum21=0; \n        long sum22=0; \n        long\
    \ sum23=0; \n        long sum24=0; \n        long sum25=0; \n        long sum26=0;\
    \ \n        long sum27=0; \n        long sum28=0; \n        long sum29=0; \n \
    \       long sum30=0; \n        long sum31=0; \n        long sum32=0; \n     \
    \   long sum33=0; \n        long sum34=0; \n        long sum35=0; \n        long\
    \ sum36=0; \n        long sum37=0; \n        long sum38=0; \n        long sum39=0;\
    \ \n        long sum40=0; \n        long sum41=0; \n        long sum42=0; \n \
    \       long sum43=0; \n        long sum44=0; \n        long sum45=0; \n     \
    \   long sum46=0; \n        long sum47=0; \n        long sum48=0; \n        long\
    \ sum49=0; \n        long sum50=0; \n        long sum51=0; \n        long sum52=0;\
    \ \n        long sum53=0; \n        long sum54=0; \n        long sum55=0; \n \
    \       long sum56=0; \n        long sum57=0; \n        long sum58=0; \n     \
    \   long sum59=0; \n        long sum60=0; \n        long sum61=0; \n        long\
    \ sum62=0; \n        long sum63=0; \n        long sum64=0; \n        long sum65=0;\
    \ \n        long sum66=0; \n        long sum67=0; \n        long sum68=0; \n \
    \       long sum69=0; \n        long sum70\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4fw5gcq.java:92: error: ';' expected\n        long sum70\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010896
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x) {\n   \
    \         if(i%10 == 0) continue;\n            long xx = i;\n            for(int\
    \ j = 1; j<(xx/10); j++) {\n                if(xx/10 != x) { xx = xx + x%10; }\n\
    \                else { result.add(i); }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplirksf1o.java:23: error: bad operand types for binary operator\
    \ '!='\n                if(xx/10 != x) { xx = xx + x%10; }\n                 \
    \        ^\n  first type:  long\n  second type: ArrayList<Long>\n/tmp/tmplirksf1o.java:23:\
    \ error: bad operand types for binary operator '%'\n                if(xx/10 !=\
    \ x) { xx = xx + x%10; }\n                                            ^\n  first\
    \ type:  ArrayList<Long>\n  second type: int\n2 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> result = new ArrayList<>();\n        x.stream().forEach(v->{\n  \
    \          if(v%10==0){\n                result.add(v);\n            }\n     \
    \   });\n        Collections.sort(result);\n        ArrayList<Long> res2 = new\
    \ ArrayList<>();\n        for(Long s : result){\n            if(s%10==0){\n  \
    \              res2.add(s);\n            }\n        }\n        Collections.sort(res2);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe19bfx3m.java:32: error: cannot find symbol\n        return res;\n\
    \               ^\n  symbol:   variable res\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long x : x)\n        {\n            Long dig = new Long(x.toString().replaceAll(\"\
    0*\",\"\"));\n            if (set.contains(dig))\n                continue;\n\
    \            set.add(dig);\n            y.add(x);\n        }\n        return y;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6na0f0g.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for (Long x : x)\n                  ^\n\
    /tmp/tmpo6na0f0g.java:22: warning: [removal] Long(String) in Long has been deprecated\
    \ and marked for removal\n            Long dig = new Long(x.toString().replaceAll(\"\
    0*\",\"\"));\n                       ^\n1 error\n1 warning\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here\n        Arrays.sort(x);\n        int i = 0;\n        Set<Long>\
    \ set = new HashSet<>();\n        while (i<x.size()) {\n            if (x[i] %\
    \ 2 == 0) {\n                set.add(i, x[i]);\n                i++;\n       \
    \     }\n            i++;\n        }\n        return new ArrayList<Long>(set);\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwzbhzgup.java:19: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpwzbhzgup.java:23: error: array required, but ArrayList<Long>\
    \ found\n            if (x[i] % 2 == 0) {\n                 ^\n/tmp/tmpwzbhzgup.java:24:\
    \ error: array required, but ArrayList<Long> found\n                set.add(i,\
    \ x[i]);\n                            ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 er"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for (Long number : x)\n\
    \        {\n            boolean found = false;\n            for (Long result :\
    \ result)\n            {\n                if (number.mod(result) == 0)\n     \
    \           {\n                    found = true;\n                    break;\n\
    \                }\n            }\n            if (!found)\n            {\n  \
    \              result.add(number);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptja49ds3.java:22: error: variable result is already defined in\
    \ method uniqueDigits(ArrayList<Long>)\n            for (Long result : result)\n\
    \                      ^\n/tmp/tmptja49ds3.java:24: error: cannot find symbol\n\
    \                if (number.mod(result) == 0)\n                          ^\n \
    \ symbol:   method mod(Long)\n  location: variable number of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if(x.size() <= 1) {\n            return x;\n        }\n        ArrayList<Long>\
    \ res = new ArrayList<>();\n        x.stream().filter(p -> p.mod(10l) != 0).forEach(a\
    \ -> res.add(x.remove(x)));\n        if(res.size() <= 1) {\n            return\
    \ new ArrayList<Long>();\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8yel8dpy.java:22: error: cannot find symbol\n        x.stream().filter(p\
    \ -> p.mod(10l) != 0).forEach(a -> res.add(x.remove(x)));\n                  \
    \              ^\n  symbol:   method mod(long)\n  location: variable p of type\
    \ Long\n/tmp/tmp8yel8dpy.java:22: error: incompatible types: boolean cannot be\
    \ converted to Long\n        x.stream().filter(p -> p.mod(10l) != 0).forEach(a\
    \ -> res.add(x.remove(x)));\n                                                \
    \                             ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> y = new ArrayList<>(x);\n        Map<Long, Long> map = new HashMap<>();\n\
    \        for (Long d : x) {\n            map.put(d, map.getOrDefault(d, 0) + 1);\n\
    \        }\n        Set<Map.Entry<Long, Long>> entrySet = map.entrySet();\n  \
    \      List<Map.Entry<Long, Long>> result = new ArrayList<>(entrySet);\n     \
    \   for (Map.Entry<Long, Long> entry : entrySet) {\n            if (entry.getValue()\
    \ % 2 == 0) {\n                result.remove(entry);\n            }\n        }\n\
    \        Collections.sort(result, new Comparator<Map.Entry<Long, Long>>() {\n\
    \            public int compare(Map.Entry<Long, Long> o1, Map.Entry<Long, Long>\
    \ o2) {\n                return o1.getValue() - o2.getValue();\n            }\n\
    \        });\n        y.removeAll(result);\n        return y;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1psfk7jl.java:21: error: incompatible types: int cannot be converted\
    \ to Long\n            map.put(d, map.getOrDefault(d, 0) + 1);\n             \
    \                              ^\n/tmp/tmp1psfk7jl.java:32: error: incompatible\
    \ types: possible lossy conversion from long to int\n                return o1.getValue()\
    \ - o2.getValue();\n                                     ^\n/tmp/tmp1psfk7jl.java:36:\
    \ error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n\
    \        return y;\n               ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code in java 7\n        // you may also want to consider using\
    \ a TreeMap or a HashMap instead of an ArrayList \n        ArrayList<Long> ret\
    \ = new ArrayList<Long>();\n        TreeMap<Integer, Long> map = new TreeMap<Integer,\
    \ Long>();\n\n        for(int i = 0; i < x.size(); i++) {\n            long n\
    \ = x.get(i);\n            if(n % 2 != 0) {\n                map.put(n, 0l);\n\
    \            }\n        }\n\n        for(Map.Entry<Integer, Long> entry : map.entrySet())\
    \ {\n            if(!ret.contains(entry.getValue()) && entry.getValue() % 2 ==\
    \ 0) {\n                ret.add(entry.getValue());\n            }\n        }\n\
    \n        return ret;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv1aoawzu.java:26: error: incompatible types: long cannot be converted\
    \ to Integer\n                map.put(n, 0l);\n                        ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Map<Long, Long> map = new HashMap<Long, Long>();\n        for (Long i : x) {\n\
    \            if (map.containsKey(i)) {\n                map.put(i, map.get(i)\
    \ + 1);\n            } else {\n                map.put(i, 1L);\n            }\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for\
    \ (Long i : map.keySet()) {\n            if (map.get(i) % 2 != 0) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2uqk8xn.java:36)\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.isEmpty()) \n            return new ArrayList<Long>();\n\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(x);\n\n        Collections.sort(result);\n\n  \
    \      ArrayList<Long> result2 = new ArrayList<Long>();\n\n        long lastNum\
    \ = result.get(result.size()-1);\n        long lastNum2 = result.get(result.size()-2);\n\
    \n        for(int i=0;i<result.size();i++){\n            if((result.get(i)%10\
    \ == 0)&&(i<result.size()-1)){\n                if((result.get(i+1)%10 == 0)){\n\
    \                    if(lastNum > lastNum2){\n                        result2.add(result.get(i));\n\
    \                    }\n                }\n            }\n        }\n\n      \
    \  return result2;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5yejiskx.java:43)\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long l : x) {\n            sum = sum + l;\n        }\n        List<Long>\
    \ digits = new ArrayList<Long>();\n        while (sum != 0) {\n            digits.add(sum\
    \ % 10);\n            sum = (long) Math.floor(sum / 10);\n        }\n        digits.sort((x,\
    \ y) -> Integer.compare(Integer.parseInt(x.toString()), Integer.parseInt(y.toString())));\n\
    \        System.out.println(\"digits:\" + digits);\n        for (long l : digits)\
    \ {\n            if (!x.contains(l)) {\n                result.add(l);\n     \
    \       }\n        }\n        result.sort(Comparator.naturalOrder());\n      \
    \  System.out.println(\"result:\" + result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp25qy2d9l.java:28: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        digits.sort((x, y) -> Integer.compare(Integer.parseInt(x.toString()),\
    \ Integer.parseInt(y.toString())));\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        if(x.size()==0) return x;\n        List<Long>\
    \ list=new ArrayList<Long>(x.size());\n        long a=0;\n        long b=0;\n\
    \        long c=0;\n        for(int i=0;i<x.size();i++){\n            if(x.get(i)%2==0)\
    \ a++;\n            else b++;\n            if(a>c) c=a;\n            else if(b>c)\
    \ c=b;\n            else c++;\n            list.add(x.get(i));\n        }\n  \
    \      return list;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyft454i8.java:32: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return list;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // create another array to store all elements that hasn't any even digit\n \
    \       ArrayList<Long> resultList = new ArrayList<>();\n        for (int i =\
    \ 0; i < x.size(); i++) {\n            long value = x.get(i);\n            String\
    \ str = Long.toString(value);\n            int len = str.length();\n         \
    \   for (int j = 0; j < len; j++) {\n                if (str.charAt(j) % 2 ==\
    \ 0) {\n                    resultList.add(value);\n                    break;\n\
    \                }\n            }\n        }\n        return resultList;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnva1k11z.java:34)\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long l = x.stream().reduce((a, b) -> Integer.compare(a, b));\n        return\
    \ x.stream().filter(e -> l % e == 0).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtqe8tsw.java:18: error: incompatible types: Long cannot be converted\
    \ to int\n        long l = x.stream().reduce((a, b) -> Integer.compare(a, b));\n\
    \                                                             ^\n/tmp/tmphtqe8tsw.java:18:\
    \ error: incompatible types: Optional<Long> cannot be converted to long\n    \
    \    long l = x.stream().reduce((a, b) -> Integer.compare(a, b));\n          \
    \                        ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for (long num : x) {\n\
    \            BigInteger bi = BigInteger.valueOf(num);\n            BigInteger\
    \ bi2 = bi.divide(BigInteger.valueOf(10));\n            while (bi.mod(BigInteger.valueOf(10)).equals(BigInteger.valueOf(10)))\
    \ {\n                bi2 = bi2.divide(BigInteger.valueOf(10));\n            }\n\
    \            if (bi2.divide(BigInteger.valueOf(10)).equals(BigInteger.valueOf(10)))\
    \ {\n                result.add(num);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9z1pxzm.java:32)\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long res = 0;\n        long sum = 0;\n        ArrayList<Long> y = new ArrayList<>(x);\n\
    \        List<Long> digits = x.stream()\n                .map(c -> Long.valueOf(c))\n\
    \                .collect(Collectors.toList());\n\n        digits.stream().mapToLong(Long::digitValue).forEach(\
    \ \n                digit->{\n            sum += digit;\n        });\n\n     \
    \   for (long digit : digits) {\n            if (digit % 2 != 0) {\n         \
    \       res = res * 10 + digit;\n            }\n        }\n        List<Long>\
    \ results = new ArrayList<>();\n        while (sum != 0) {\n            results.add(res);\n\
    \            res = res / 10;\n            sum = sum % 10;\n        }\n       \
    \ return results;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpljdb87z6.java:25: error: invalid method reference\n        digits.stream().mapToLong(Long::digitValue).forEach(\
    \ \n                                  ^\n  cannot find symbol\n    symbol:   method\
    \ digitValue(T)\n    location: class Long\n  where T is a type-variable:\n   \
    \ T extends Object declared in interface Stream\n/tmp/tmpljdb87z6.java:41: error:\
    \ incompatible types: List<Long> cannot be converted to ArrayList<Long>\n    \
    \    return results;\n               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010897
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        if (x.isEmpty()) \n   \
    \         return result;\n\n        long lastDigit = x.get(x.size() - 1);\n  \
    \      long lastDigitMultiple = 1;\n        long lastDigitMultipleNextDigit =\
    \ 1;\n\n        for (Long element : x) {\n            long currentDigit = element\
    \ % 10;\n            if (currentDigit == 0 || lastDigit == 0 || lastDigit == currentDigit\
    \ || lastDigitMultiple == currentDigit) {\n                result.add(element);\n\
    \            } else {\n                if (lastDigitMultiple != 1) {\n       \
    \             lastDigitMultipleNextDigit = lastDigitMultiple;\n              \
    \  }\n                lastDigitMultiple = lastDigit;\n                lastDigit\
    \ = currentDigit;\n            }\n        }\n        result.add(lastDigitMultipleNextDigit);\n\
    \        if (lastDigitMultiple != 1) {\n            lastDigitMultipleNextDigit\
    \ = lastDigitMultiple;\n        }\n        lastDigitMultiple = lastDigit;\n  \
    \      lastDigit = currentDigit;\n\n        // sort result\n        List<Long>\
    \ list = result.stream().sorted().collect(Collectors.toList());\n        return\
    \ list;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjnokdy_g.java:43: error: cannot find symbol\n        lastDigit\
    \ = currentDigit;\n                    ^\n  symbol:   variable currentDigit\n\
    \  location: class Problem\n/tmp/tmpjnokdy_g.java:47: error: incompatible types:\
    \ List<Long> cannot be converted to ArrayList<Long>\n        return list;\n  \
    \             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<>();\n        for (Long d : x) {\n     \
    \       if (x.get(0) % d == 0) {\n                ans.add(d);\n            }\n\
    \        }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqk7ygqz.java:27)\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> temp = new ArrayList<Long>();\n        for (Long l : x) {\n\
    \            if (l % 2 == 0) {\n                temp.add(l);\n            }\n\
    \        }\n        Collections.sort(temp);\n        return temp;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmw_qvuo.java:28)\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long oneDigit = 0;\n  \
    \      long nextDigit = 0;\n        long nextOneDigit = 0;\n        ArrayList<Long>\
    \ resultDigit = new ArrayList<>();\n        for (int i = 0; i < x.size(); i++)\
    \ {\n            oneDigit = oneDigit * 10 + x.get(i);\n            if (oneDigit\
    \ % 2 == 0) {\n                nextDigit = oneDigit / 2;\n                if (nextDigit\
    \ % 2 != 0) {\n                    resultDigit.add(nextDigit);\n             \
    \   }\n            }\n        }\n        for (int i = 0; i < resultDigit.size();\
    \ i++) {\n            nextOneDigit = nextOneDigit * 10 + resultDigit.get(i);\n\
    \            if (nextOneDigit % 2 == 0) {\n                result.add(nextOneDigit);\n\
    \            }\n        }\n        if (result.isEmpty()) {\n            return\
    \ x;\n        }\n        result.sort(Comparator.naturalOrder());\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyplhiamr.java:45)\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code here\n        Set<Long> result = new TreeSet<>();\n     \
    \   \n        for (Long i : x){\n            String temp = i.toString();\n   \
    \         \n            if (temp.length() % 2 == 0){\n                result.add(i);\n\
    \            }\n        }\n        \n        ArrayList<Long> res = new ArrayList<Long>(result);\n\
    \        \n        res.stream().sorted((o1, o2) -> o1.compareTo(o2)).forEach(System.out::println);\n\
    \        \n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5d1b3ze_.java:36)\n"
  stdout: '15

    33

    1422

    '
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> s = new HashSet<>();\n        for(int i : x) {\n            if((i%2)==0)\
    \ {\n                s.add(i);\n            }\n        }\n        List<Long> result\
    \ = new ArrayList<>();\n        result.addAll(s);\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuacxw4ev.java:19: error: incompatible types: Long cannot be converted\
    \ to int\n        for(int i : x) {\n                    ^\n/tmp/tmpuacxw4ev.java:21:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ s.add(i);\n                      ^\n/tmp/tmpuacxw4ev.java:26: error: incompatible\
    \ types: List<Long> cannot be converted to ArrayList<Long>\n        return result;\n\
    \               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long last = -9223372036854775808L;\n\
    \        for (long n : x) {\n            while (last < n) {\n                long\
    \ digit = Math.floor((n - last) / 2);\n                if (!result.contains(digit))\
    \ {\n                    result.add(digit);\n                }\n             \
    \   last = n;\n            }\n        }\n        Collections.sort(result);\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzl29nmfd.java:22: error: incompatible types: possible lossy conversion\
    \ from double to long\n                long digit = Math.floor((n - last) / 2);\n\
    \                                       ^\n1 error\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> set = new HashSet<Long>();\n        List<Long> result = new ArrayList<>();\n\
    \        for (Long x : x)\n            if (!set.add(x.mod(10l)))\n           \
    \     result.add(x);\n        result.sort(Long::compareTo);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ztn1zam.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for (Long x : x)\n                  ^\n\
    /tmp/tmp9ztn1zam.java:21: error: cannot find symbol\n            if (!set.add(x.mod(10l)))\n\
    \                          ^\n  symbol:   method mod(long)\n  location: variable\
    \ x of type Long\n/tmp/tmp9ztn1zam.java:24: error: incompatible types: List<Long>\
    \ cannot be converted to ArrayList<Long>\n        return result;\n           \
    \    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> results = new ArrayList<Long>();\n        for (int i = 0; i\
    \ < x.size(); i++) {\n            long num = x.get(i);\n            String s =\
    \ Long.toString(num);\n            int length = s.length();\n            if (length\
    \ == 1) {\n                continue;\n            }\n            String evenDigit\
    \ = \"\";\n            for (int j = 0; j < length; j++) {\n                int\
    \ digit = Character.getNumericValue(s.charAt(j));\n                if (j + 1 ==\
    \ length) {\n                    evenDigit += digit;\n                    continue;\n\
    \                }\n                int digit2 = Character.getNumericValue(s.charAt(j\
    \ + 1));\n                if (digit % 2 == 0 && digit2 % 2 == 0) {\n         \
    \           evenDigit += digit;\n                    for (int k = j; k < length;\
    \ k++) {\n                        s.charAt(k + 1) += 2;\n                    }\n\
    \                    s = s.substring(0, j) + evenDigit + s.substring(j + 1);\n\
    \                    String even = Long.toString(num);\n                    results.add(new\
    \ Long(s));\n                }\n            }\n        }\n        return results;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3yj2tpdu.java:37: error: unexpected type\n                    \
    \    s.charAt(k + 1) += 2;\n                                ^\n  required: variable\n\
    \  found:    value\n/tmp/tmp3yj2tpdu.java:41: warning: [removal] Long(String)\
    \ in Long has been deprecated and marked for removal\n                    results.add(new\
    \ Long(s));\n                                ^\n1 error\n1 warning\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<Long>();\n        for(int i=0; i< x.size();\
    \ i++){\n            String s = Long.toString(x.get(i));\n            if(s.contains(\"\
    0\") && s.contains(\"1\") && s.contains(\"2\") && s.contains(\"3\") && s.contains(\"\
    4\") && s.contains(\"5\") && s.contains(\"6\") && s.contains(\"7\") && s.contains(\"\
    8\") && s.contains(\"9\")){\n                list.add(s.getLong());\n        \
    \    }\n        }\n        Collections.sort(list);\n        return list;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkstyqzon.java:22: error: cannot find symbol\n                list.add(s.getLong());\n\
    \                          ^\n  symbol:   method getLong()\n  location: variable\
    \ s of type String\n1 error\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // TODO: Complete me!\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp9owkkfkm.java:22)\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long x : x){\n            if (!set.contains(x)){\n             \
    \   res.add(x);\n                set.add(x);\n            }\n        }\n     \
    \   return res;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgoppew6r.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for (Long x : x){\n                 \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> result = new ArrayList<>();\n        x.forEach(i -> {\n         \
    \   String s = String.valueOf(i);\n            if (!s.startsWith(\"0\"))\n   \
    \             result.add(i);\n        });\n        x.forEach(i -> {\n        \
    \    String s = String.valueOf(i);\n            if (!s.endsWith(\"0\"))\n    \
    \            result.add(i);\n        });\n        x.forEach(i -> {\n         \
    \   String s = String.valueOf(i);\n            if (!s.startsWith(\"0\") && !s.endsWith(\"\
    0\"))\n                result.add(i);\n        });\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqdq_3_og.java:34: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // 1. Create new list to hold result\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        \n        // 2. Iterate through every element in the input list\n   \
    \     for (long el : x) {\n            \n            // 3. Use stream to find\
    \ elements that have no even digits\n            int digit = Integer.parseInt(Integer.toString(el).replaceAll(\"\
    \\\\D\", \"\"));\n            if (!digitEven(digit)) {\n                result.add(el);\n\
    \            }\n        }\n        \n        // 4. Return resulting list\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpadmx8foy.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = Integer.parseInt(Integer.toString(el).replaceAll(\"\
    \\\\D\", \"\"));\n                                                          ^\n\
    /tmp/tmpadmx8foy.java:26: error: cannot find symbol\n            if (!digitEven(digit))\
    \ {\n                 ^\n  symbol:   method digitEven(int)\n  location: class\
    \ Problem\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010898
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<Long>();\n        if(x.isEmpty())\n   \
    \         return list;\n\n        for(long n: x) {\n            long s = 0;\n\
    \            while(n % 10 == 0) {\n                n /= 10;\n                s++;\n\
    \            }\n            if(s > 0 && s % 2 == 0)\n                list.add(x);\n\
    \        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmply_zmatv.java:29: error: incompatible types: ArrayList<Long> cannot\
    \ be converted to Long\n                list.add(x);\n                       \
    \  ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<>();\n        for(long i = 0; i<x.size();\
    \ i++){\n            long n = x.get(i);\n            if(isEven(n)){\n        \
    \        y.add(i);\n            }\n        }\n        return y;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_0kytrz.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long n = x.get(i);\n                         \
    \  ^\n/tmp/tmp6_0kytrz.java:21: error: cannot find symbol\n            if(isEven(n)){\n\
    \               ^\n  symbol:   method isEven(long)\n  location: class Problem\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int i = 0, j = 0, k = 0;\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        for(int a : x) {\n            while(i < x.size() && a%10 != 0) {\n  \
    \              i++;\n            }\n            while(j < x.size() && a%10 ==\
    \ 0) {\n                j++;\n            }\n            while(k < x.size() &&\
    \ k % 2 != 0 && x.get(k) < a) {\n                k++;\n            }\n       \
    \     if(i != x.size() || j != x.size() || k != x.size()) {\n                if(i\
    \ == x.size() || j == x.size() || k == x.size()) {\n                    result.add(a);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgubkfxez.java:20: error: incompatible types: Long cannot be converted\
    \ to int\n        for(int a : x) {\n                    ^\n/tmp/tmpgubkfxez.java:32:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \     result.add(a);\n                               ^\nNote: Some messages have\
    \ been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long y: x)\n    \
    \        if (y % 2 == 0)\n                ret.add(y);\n        Collections.sort(ret);\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdjaqy0xy.java:26)\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for(int i=0; i<x.size();\
    \ i++) {\n            long num = x.get(i);\n            while (num != 0) {\n \
    \               int digit = num % 10;\n                if (digit % 2 == 0) {\n\
    \                    break;\n                } else {\n                    num/=10;\n\
    \                }\n            }\n            if (num == 0)\n               \
    \ ret.add(num);\n        }\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbxzay58j.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n                int digit = num % 10;\n                  \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     long temp;\n        for (Long i : x) {\n            sum = sum + i;\n   \
    \     }\n        for (Long i : x) {\n            temp = sum % 10;\n          \
    \  if (temp == 0) result.add(i);\n            sum = sum / 10;\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphtnwlai_.java:32)\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> list = new ArrayList<>(x);\n        Collections.sort(list);\n   \
    \     \n        HashMap<Long, Integer> hmap = new HashMap<>();\n        for (int\
    \ i = 0; i < list.size(); i++) {\n            long num = list.get(i);\n      \
    \      int count = 0;\n            if (hmap.containsKey(num)) {\n            \
    \    count = hmap.get(num);\n            }\n            hmap.put(num, ++count);\n\
    \        }\n        ArrayList<Long> list2 = new ArrayList<>();\n        for (long\
    \ key : hmap.keySet()) {\n            long num = key;\n            int count =\
    \ 0;\n            if (hmap.containsKey(num)) {\n                count = hmap.get(num);\n\
    \            }\n            if (count == 0) {\n                list2.add(key);\n\
    \            }\n        }\n        return list2;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp71biuyoh.java:44)\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int n = x.size();\n        ArrayList<Long> y = new ArrayList<>(n);\n       \
    \ Set<Long> set = new HashSet<>();\n        for (Long i : x)\n            set.add(Long.valueOf(i));\n\
    \        for (Long i : set) {\n            Integer x = i.intValue();\n       \
    \     String s = Long.toString(x);\n            char[] c = s.toCharArray();\n\
    \            int j = 0;\n            for (int i = 0; i < c.length && j < n; ++i)\
    \ {\n                if (c[i] == '0') {\n                    ++j;\n          \
    \          continue;\n                }\n                if (j == 0) break;\n\
    \                char tmp = c[i];\n                c[i] = c[j];\n            \
    \    c[j] = tmp;\n            }\n            y.add((Long)Long.parseLong(new String(c)));\n\
    \        }\n        return y;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzllw8bfe.java:24: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n            Integer x = i.intValue();\n     \
    \               ^\n/tmp/tmpzllw8bfe.java:28: error: variable i is already defined\
    \ in method uniqueDigits(ArrayList<Long>)\n            for (int i = 0; i < c.length\
    \ && j < n; ++i) {\n                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long element : x){\n\
    \            if(!element.toString().matches(\"^0+$\")){\n                result.add(element);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakphom0f.java:27)\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>(); \n        x.stream()\n         \
    \   .filter(i -> i%2==0) // i haven't any even digit\n            .sorted(Comparator.comparingLong(i->i))\
    \ // sort descending\n            .forEach(i -> result.add(i));\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0bkgo2k.java:26)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> unique = new ArrayList<Long>();\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 0).toArrayList(Long[]::new));\n        unique.addAll(x.stream().filter(xx\
    \ -> xx % 2 == 1).toArrayList(Long[]::new));\n        unique\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfex2u369.java:39: error: not a statement\n        unique\n    \
    \    ^\n/tmp/tmpfex2u369.java:39: error: ';' expected\n        unique\n      \
    \        ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010899
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> results = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n\n        for(Long n : x) {\n            set.add(n);\n   \
    \     }\n        for(Long n : set) {\n            int d = (int) Math.log10(n);\n\
    \            int x = n/Math.pow(10, d);\n            if(x%2 == 0) {\n        \
    \        results.add(n);\n            }\n        }\n        return results;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaxi3blpc.java:26: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n            int x = n/Math.pow(10, d);\n    \
    \            ^\n/tmp/tmpaxi3blpc.java:26: error: incompatible types: possible\
    \ lossy conversion from double to int\n            int x = n/Math.pow(10, d);\n\
    \                     ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long> tmp\
    \ = new ArrayList<Long>();\n        Long[] arrayx = x.toArray(new Long[x.size()]);\n\
    \        // sort x\n        Arrays.sort(arrayx);\n        long k = 0;\n      \
    \  // For every element in x\n        for (long element : arrayx) {\n        \
    \    // Add element to tmp\n            tmp.add(element);\n            k = k *\
    \ 10;\n            if (k < element) {\n                // If current k bigger\
    \ than current element\n                // Then we have new unique digit\n   \
    \             while (element >= k) {\n                    // Add current element\
    \ to result\n                    result.add(element);\n                    element\
    \ = element / 10;\n                }\n                break;\n            }\n\
    \        }\n        // If result is not empty then add all the element in tmp\
    \ to result\n        // Else result is empty\n        if (result.size() > 0) {\n\
    \            result = result.stream().filter(x -> !tmp.contains(x)).collect(Collectors.toList());\n\
    \        } else {\n            result = new ArrayList<Long>();\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvmahaei_.java:43: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n            result = result.stream().filter(x\
    \ -> !tmp.contains(x)).collect(Collectors.toList());\n                       \
    \                     ^\n/tmp/tmpvmahaei_.java:43: error: incompatible types:\
    \ inference variable R has incompatible bounds\n            result = result.stream().filter(x\
    \ -> !tmp.contains(x)).collect(Collectors.toList());\n                       \
    \                                                   ^\n    equality constraints:\
    \ List<T#2>\n    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2 are\
    \ type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n2 errors\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set = new\
    \ HashSet<>();\n        for (Long i : x) {\n            if (set.add(i)) result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgn12gn3h.java:26)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long> sortedList\
    \ = new ArrayList<Long>();\n\n        for (int i = 0; i < x.size(); i++) {\n \
    \           long number = x.get(i);\n            if (number % 2 != 0) {\n    \
    \            result.add(number);\n            }\n        }\n        Collections.sort(result);\n\
    \        for (int i = 0; i < result.size(); i++) {\n            long number =\
    \ result.get(i);\n            if (number % 2 == 0) {\n                sortedList.add(number);\n\
    \            }\n        }\n\n        return sortedList;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvd2eq3mm.java:38)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(l -> l % 2 == 0).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8b2c6kxy.java:21)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<>();\n        for (Long i : x) {\n    \
    \        long temp = i;\n            while (temp != 0) {\n                temp\
    \ = temp / 10;\n                if (temp % 2 != 0) {\n                    list.add(temp);\n\
    \                }\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5greu4nf.java:32)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream()\n                .filter(n -> n % 2 == 0)\n              \
    \  .sorted()\n                .distinct()\n                .collect(ArrayList::new,\
    \ ArrayList::add, ArrayList::addAll);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp36trv2mc.java:25)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> results = new ArrayList<>();\n        for (long number : x)\
    \ {\n            int length = String.valueOf(number).length();\n            if\
    \ (length > 0) {\n                if (number % 10 == 0) {\n                  \
    \  results.add(number);\n                } else if (number % 10 != 0) {\n    \
    \                for (long i : results) {\n                        long temp =\
    \ i;\n                        for (int j = 0; j < length; j++) {\n           \
    \                 if (i % 10 == 0 && number % 10 == 0) {\n                   \
    \             results.add(temp);\n                                break;\n   \
    \                         }\n                            if (i % 10 != 0 && number\
    \ % 10 != 0) {\n                                break;\n                     \
    \       }\n                            temp += 10;\n                        }\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ results;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoq91mg5i.java:44)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> noEven = new HashSet<>();\n        for (long i : x) {\n          \
    \  if (!(i%2l)) {\n                noEven.add(i);\n            }\n        }\n\
    \        return new ArrayList<Long>(noEven);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbe7yh8qi.java:20: error: bad operand type long for unary operator\
    \ '!'\n            if (!(i%2l)) {\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if(!x.isEmpty()) {\n            ArrayList<Long> result = new ArrayList<Long>();\n\
    \            Set<Long> set = new HashSet<Long>(x);\n            Long[] arr = (Long[])\
    \ x.toArray(new Long[x.size()]);\n            for(int i = 0; i < arr.length; i++)\
    \ {\n                if(set.contains(arr[i])) {\n                    continue;\n\
    \                }\n                if(result.contains(arr[i])) {\n          \
    \          continue;\n                }\n                result.add(arr[i]);\n\
    \                set.add(arr[i]);\n            }\n            return result;\n\
    \        } else {\n            return new ArrayList<Long>();\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu1f8pu9q.java:38)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long result[] = new long[x.size()];\n        long total = 0;\n        long maxValue\
    \ = -1;\n        int index = 0;\n        for (long v : x) {\n            total\
    \ += v;\n            if (maxValue < total) {\n                maxValue = total;\n\
    \            }\n        }\n        for (long v : x) {\n            if (v % 2 ==\
    \ 0) {\n                result[index] = v;\n                index++;\n       \
    \     }\n        }\n        Arrays.sort(result);\n        int uniqueResult = 0;\n\
    \        for (int i = 0; i < result.length; i++) {\n            if (i != 0) {\n\
    \                if (result[i] % 2 == 0) {\n                    uniqueResult++;\n\
    \                } else {\n                    uniqueResult = 0;\n           \
    \         break;\n                }\n            } else {\n                if\
    \ (result[i] % 2 != 0) {\n                    uniqueResult++;\n              \
    \  }\n            }\n        }\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        int index = 0;\n        for (long v : x) {\n            if (v % 2 ==\
    \ 0) {\n                if (index == uniqueResult) {\n                    result.add(v);\n\
    \                }\n                index++;\n            }\n        }\n     \
    \   Collections.sort(result);\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0v3vboa4.java:50: error: variable result is already defined in\
    \ method uniqueDigits(ArrayList<Long>)\n        ArrayList<Long> result = new ArrayList<>();\n\
    \                        ^\n/tmp/tmp0v3vboa4.java:51: error: variable index is\
    \ already defined in method uniqueDigits(ArrayList<Long>)\n        int index =\
    \ 0;\n            ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> unique = new HashSet<>();\n        x.forEach(unique::add);\n     \
    \   ArrayList<Long> result = new ArrayList<Long>(unique);\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_z0sq4a.java:25)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> result = new ArrayList<>();\n        Collections.sort(x);\n     \
    \   boolean found = false;\n        for (Long i : x) {\n            if (i % 2\
    \ == 0) {\n                if (!found) {\n                    found = true;\n\
    \                    result.add(i);\n                }\n            } else if\
    \ (found) {\n                found = false;\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqmknvl4x.java:31: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long t = 0;\n        long d = 0;\n        long a = 0;\n        long z = 0;\n\
    \        long v = 0;\n        ArrayList<Long> list = new ArrayList<>();\n    \
    \    ArrayList<Long> y = new ArrayList<>();\n        for (long l : x) {\n    \
    \        v = l%10;\n            t += v*Math.pow(10,v);\n            d = (t % 1000000)/Math.pow(10,v);\n\
    \            a = d / 10000;\n            z = d % 10000;\n            y.add(z);\n\
    \        }\n\n        for (long l : y) {\n            if (l % 2 != 0) {\n    \
    \            list.add(l);\n            }\n        }\n        return list;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9aj12v_.java:28: error: incompatible types: possible lossy conversion\
    \ from double to long\n            d = (t % 1000000)/Math.pow(10,v);\n       \
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<>();\n        list.add(0);\n        list.add(0);\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i: ints) {\n    \
    \        long digit = i % 10;\n            set.add(digit);\n            list.add(digit);\n\
    \        }\n        list.stream().sorted().forEach((b) -> {\n            if (set.contains(b))\
    \ {\n                list.set(b);\n            }\n        });\n        list.stream().sorted().forEach((b)\
    \ -> {\n            if (!set.contains(b)) {\n                list.set(b);\n  \
    \          }\n        });\n        return list;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt1vwf96i.java:19: error: incompatible types: int cannot be converted\
    \ to Long\n        list.add(0);\n                 ^\n/tmp/tmpt1vwf96i.java:20:\
    \ error: incompatible types: int cannot be converted to Long\n        list.add(0);\n\
    \                 ^\n/tmp/tmpt1vwf96i.java:22: error: cannot find symbol\n   \
    \     for (Long i: ints) {\n                     ^\n  symbol:   variable ints\n\
    \  location: class Problem\n/tmp/tmpt1vwf96i.java:29: error: method set in class\
    \ ArrayList<E> cannot be applied to given types;\n                list.set(b);\n\
    \                    ^\n  required: int,Long\n  found:    Long\n  reason: actual\
    \ and formal argument lists differ in length\n  where E is a type-variable:\n\
    \    E extends Object declared in class ArrayList\n/tmp/tmpt1vwf96i.java:34: error:\
    \ method set in class ArrayList<E> cannot be applied to given types;\n       \
    \         list.set(b);\n                    ^\n  required: int,Long\n  found:\
    \    Long\n  reason: actual and formal argument lists differ in length\n  where\
    \ E is a type-variable:\n    E extends Object declared in class ArrayList\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n5 errors\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        \n        Long digit = Long.valueOf((long)1);\n\
    \        \n        for(int i=0; i<x.size(); i++) {\n            Long temp = x.get(i);\n\
    \            boolean flag = true;\n            \n            for(Long d : y) {\n\
    \                if(temp % d == 0) {\n                    flag = false;\n    \
    \                break;\n                }\n            }\n            \n    \
    \        if(flag) {\n                y.add(temp);\n            }\n        }\n\
    \        \n        return y;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporewu1lf.java:41)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> hashSet = new HashSet<>();\n        ArrayList<Long> list = new ArrayList<>();\n\
    \        for(Long i : x) {\n            if(i%2l==0l) hashSet.add(i);\n       \
    \ }\n        for(Long i : hashSet) {\n            list.add(i);\n        }\n  \
    \      Collections.sort(list);\n        return list;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhg95mn9.java:30)\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y= new ArrayList<Long>();\n        // find all odd digits first\n\
    \        // then find all even digits next\n        // add them together\n   \
    \     // remove them from x if they exist\n        for(long z:x){\n          \
    \  int a=z;\n            while(a != 0){\n                if(a%2 == 1){\n     \
    \               y.add(0);\n                    a /= 10;\n                } else\
    \ {\n                    y.add(z);\n                    break;\n             \
    \   }\n            }\n        }\n        x.removeAll(y.stream().map(Long::longValue).toArray(Long[]::new));\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8y993fqk.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int a=z;\n                  ^\n/tmp/tmp8y993fqk.java:27:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \     y.add(0);\n                          ^\n/tmp/tmp8y993fqk.java:35: error:\
    \ incompatible types: no instance(s) of type variable(s) A exist so that A[] conforms\
    \ to Collection<?>\n        x.removeAll(y.stream().map(Long::longValue).toArray(Long[]::new));\n\
    \         ^\n  where A is a type-variable:\n    A extends Object declared in method\
    \ <A>toArray(IntFunction<A[]>)\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (i % 2 == 0) {\n                ret.add(i);\n            }\n  \
    \      }\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiei13cy9.java:27)\n"
  stdout: ''
  timestamp: 1660010900
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            }\n            else {\n                if (lastDigit % 2 ==\
    \ 0) {\n                    result.add(lastDigit);\n                    lastDigit\
    \ = i;\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4ox957u.java:34)\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Set<Long> set = new HashSet<Long>();\n        for (Long ele : x) {\n       \
    \     if (set.contains(ele)) {\n                x.remove(ele);\n            }\
    \ else {\n                set.add((Long) ele);\n            }\n        }\n   \
    \     return x;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_khrmf7.java:29)\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> y= new ArrayList<Long>();\n        x.forEach(element -> {\n     \
    \       Integer y = element%10;\n            int even = Integer.parseInt(String.valueOf(y));\n\
    \            if (even==0){\n                y.add(element);\n            }\n \
    \       });\n        Collections.sort(y);\n        return y;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv67bl6de.java:20: error: variable y is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n            Integer y = element%10;\n       \
    \             ^\n/tmp/tmpv67bl6de.java:20: error: incompatible types: long cannot\
    \ be converted to Integer\n            Integer y = element%10;\n             \
    \                  ^\n/tmp/tmpv67bl6de.java:23: error: cannot find symbol\n  \
    \              y.add(element);\n                 ^\n  symbol:   method add(Long)\n\
    \  location: variable y of type Integer\n/tmp/tmpv67bl6de.java:27: error: incompatible\
    \ types: List<Long> cannot be converted to ArrayList<Long>\n        return y;\n\
    \               ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        if (x.isEmpty()) return\
    \ result;\n        long lastDigit = x.get(0);\n        x.remove(0);\n        x.stream().filter(e\
    \ -> lastDigit % 2 == 0 && e % 2 != 0).forEachOrdered(e -> result.add(e));\n \
    \       if (result.isEmpty()) return result;\n        sort(result);\n        int\
    \ lastIndex = result.size() - 1;\n        boolean lastDigitIsEven = lastDigit\
    \ % 2 == 0;\n        for (int i = 1; i < lastIndex; i++) {\n            long current\
    \ = result.get(i);\n            long nextDigit = result.get(i + 1);\n        \
    \    boolean currentDigitIsEven = current % 2 == 0;\n            boolean nextDigitIsEven\
    \ = nextDigit % 2 == 0;\n            if (currentDigitIsEven && !nextDigitIsEven)\
    \ {\n                long temp = current;\n                result.remove(i + 1);\n\
    \                result.add(i, temp);\n            }\n            if (lastDigitIsEven\
    \ && !currentDigitIsEven) {\n                long temp = current;\n          \
    \      result.remove(i);\n                result.add(i, temp);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzykjrz7i.java:24: error: cannot find symbol\n        sort(result);\n\
    \        ^\n  symbol:   method sort(ArrayList<Long>)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ x.sort(Comparator.naturalOrder());\n        ArrayList<Long> ret = new ArrayList<>();\n\
    \        for (long val : x) {\n            int count = 0;\n            while (val\
    \ > 0) {\n                val = val/10;\n                count++;\n          \
    \  }\n            if (count == 0) {\n                ret.add(val);\n         \
    \   }\n        }\n        Collections.sort(ret);\n        return ret;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi048fin9.java:34)\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> copy =\
    \ new ArrayList<>(x);\n        while(copy.size() > 0) {\n            Long value\
    \ = copy.remove(0);\n            if (value.intValue() % 2 == 0) {\n          \
    \      result.add(value);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ziii2d9.java:30)\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.size() < 2) {\n            return x;\n        }\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        HashMap<Long, Long> digits = new HashMap<>();\n\
    \        // Sort the array in increasing order\n        x.sort(Comparator.naturalOrder());\n\
    \        // Traverse through all numbers\n        for (Long i : x) {\n       \
    \     // For each number check its digits\n            for (int j = 0; j < i.toString().length();\
    \ j++) {\n                String digit = String.valueOf(i).substring(j, j + 1);\n\
    \                // For each digit check whether it is in digits map\n       \
    \         if (digits.containsKey(digit)) {\n                    // If yes increment\
    \ count by one\n                    digit = digits.get(digit) + 1;\n         \
    \           digits.put(digit, digit);\n                } else {\n            \
    \        // If not insert it and set count to one \n                    digits.put(digit,\
    \ 1L);\n                }\n            }\n        }\n        // Traverse through\
    \ digits map keys to sort out result\n        for (Long digit : digits.keySet())\
    \ {\n            // If count is greater than 1 and current digit is odd, then\
    \ add it to result\n            if (digits.get(digit) > 1L && digits.get(digit)\
    \ % 2 != 0) {\n                result.add(digit);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5jmo0c4v.java:33: error: incompatible types: long cannot be converted\
    \ to String\n                    digit = digits.get(digit) + 1;\n            \
    \                                  ^\n/tmp/tmp5jmo0c4v.java:34: error: incompatible\
    \ types: String cannot be converted to Long\n                    digits.put(digit,\
    \ digit);\n                               ^\n/tmp/tmp5jmo0c4v.java:37: error:\
    \ incompatible types: String cannot be converted to Long\n                   \
    \ digits.put(digit, 1L);\n                               ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<>();\n        Long sum = 0;\n        Long\
    \ num = 0;\n        for (long num1 : x) {\n            num = (num * 10 + num1)\
    \ / 10;\n            sum = sum + num;\n        }\n        if (sum % 2 == 0) {\n\
    \            for (long num2 : x) {\n                num = (num * 10 + num2) /\
    \ 10;\n                if (num % 2 != 0) {\n                    res.add(num);\n\
    \                }\n            }\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpopz836ap.java:19: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0;\n                   ^\n/tmp/tmpopz836ap.java:20:\
    \ error: incompatible types: int cannot be converted to Long\n        Long num\
    \ = 0;\n                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long largest = x.stream().mapToLong(a -> a).max().getAsLong();\n        long\
    \ currentSum = 0;\n        ArrayList<Long> results = new ArrayList<>();\n    \
    \    for (Long number : x) {\n            currentSum += number;\n            if\
    \ (currentSum >= largest) {\n                currentSum %= largest;\n        \
    \        results.add(currentSum);\n            }\n        }\n        return results;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbirctpfe.java:31)\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.size() < 2)\n            return x;\n        long first = x.get(0);\n \
    \       long second = x.get(1);\n        long rest = second - first;\n       \
    \ // Get all even digit\n        long evenDigit = 0;\n        for (int i = 2;\
    \ i < rest; i += 2) {\n            evenDigit = i;\n            break;\n      \
    \  }\n        // Get all odd digit\n        long oddDigit = 0;\n        for (int\
    \ i = 3; i < rest; i += 2) {\n            oddDigit = i;\n            break;\n\
    \        }\n        // return list\n        if (evenDigit == 0 || oddDigit ==\
    \ 0)\n            return x;\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        // Add all even digit\n        for (int i = 0; i < evenDigit - 1; i++)\
    \ {\n            Long a = new Long(first + i);\n            result.add(a);\n \
    \       }\n        // Add all odd digit\n        for (int i = 0; i < oddDigit\
    \ - 1; i++) {\n            Long b = new Long(first + i + 1);\n            result.add(b);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpief8hrqc.java:52)\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ \n        ArrayList<Long> result = new ArrayList<>();\n        for(long n :\
    \ x){\n            long d = n % 10;\n            if(d % 2 == 0) {\n          \
    \      result.add(n);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0nma8k7c.java:30)\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.size() <= 1) return x;\n        \n        final int N = (int)Math.log(x.get(0l)).intValue();\n\
    \        long n = N;\n        \n        ArrayList<Long> ret = new ArrayList<>();\n\
    \        int j = 0;\n        int i = 0;\n        long a = x.get(0l);\n       \
    \ for (; i < x.size(); i++) {\n            long b = x.get(i);\n            if\
    \ (n % 2 == 0) a = b;\n            n /= 10;\n        }\n        ret.add(0l);\n\
    \        ret.add(a);\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprduqyea0.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        final int N = (int)Math.log(x.get(0l)).intValue();\n\
    \                                          ^\n/tmp/tmprduqyea0.java:26: error:\
    \ incompatible types: possible lossy conversion from long to int\n        long\
    \ a = x.get(0l);\n                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Arrays.sort(x);\n        ArrayList<Long> res = new ArrayList<>();\n        for(Long\
    \ i : x) {\n            if((i % 2) == 0) {\n                res.add(i);\n    \
    \        }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpledwdu05.java:18: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if (x.isEmpty()) {\n            return new ArrayList<Long>();\n        }\n \
    \       Set<Long> set = new LinkedHashSet<Long>();\n        for(Long num : x){\n\
    \            Long digit = num % 10;\n            if(set.contains(digit)) {\n \
    \               continue;\n            } else {\n                set.add(digit);\n\
    \            }\n        }\n        List<Long> result = new ArrayList<Long>();\n\
    \        for(Long num : x){\n            Long digit = num % 10;\n            if(set.contains(digit))\
    \ {\n                continue;\n            } else {\n                result.add(num);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_sz3sjc9.java:39: error: incompatible types: List<Long> cannot\
    \ be converted to ArrayList<Long>\n        return result;\n               ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010901
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<>();\n        Long current = Long.MIN_VALUE;\n\
    \        for (long x: x) {\n            if (x % 2 == 0) {\n                current\
    \ = Long.min(current, x);\n            } else {\n                ans.add(current);\n\
    \                current = x;\n            }\n        }\n        ans.add(current);\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rtc_rx3.java:20: error: variable x is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n        for (long x: x) {\n                 \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        x.stream().filter(i -> i\
    \ % 2 == 0).collect(Collectors.toCollection(y));\n        y.stream().filter(i\
    \ -> i == 0).sorted(Comparator.reverseOrder()).collect(Collectors.toCollection(y));\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9hwimxl2.java:19: error: method toCollection in class Collectors\
    \ cannot be applied to given types;\n        x.stream().filter(i -> i % 2 == 0).collect(Collectors.toCollection(y));\n\
    \                                                             ^\n  required: Supplier<C>\n\
    \  found:    ArrayList<Long>\n  reason: cannot infer type-variable(s) T,C\n  \
    \  (argument mismatch; ArrayList<Long> cannot be converted to Supplier<C>)\n \
    \ where C,T are type-variables:\n    C extends Collection<T> declared in method\
    \ <T,C>toCollection(Supplier<C>)\n    T extends Object declared in method <T,C>toCollection(Supplier<C>)\n\
    /tmp/tmp9hwimxl2.java:20: error: method toCollection in class Collectors cannot\
    \ be applied to given types;\n        y.stream().filter(i -> i == 0).sorted(Comparator.reverseOrder()).collect(Collectors.toCollection(y));\n\
    \                                                                            \
    \               ^\n  required: Supplier<C>\n  found:    ArrayList<Long>\n  reason:\
    \ cannot infer type-variable(s) T,C\n    (argument mismatch; ArrayList<Long> cannot\
    \ be converted to Supplier<C>)\n  where C,T are type-variables:\n    C extends\
    \ Collection<T> declared in method <T,C>toCollection(Supplier<C>)\n    T extends\
    \ Object declared in method <T,C>toCollection(Supplier<C>)\n2 errors\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        \n        // First sort\
    \ the list\n        Collections.sort(x);\n        \n        // Iterate through\
    \ the list and add all those that doesn't have any even digit\n        for (Long\
    \ i : x) {\n            Long even = 0;\n            \n            // If the value\
    \ is even, set it to 0\n            if (i % 2 == 0) {\n                even =\
    \ 0;\n            } else {\n                even = i;\n            }\n       \
    \     \n            // Add only if the value is not 0 or even\n            if\
    \ (!(even != 0l && even % 2 == 0)) {\n                result.add(i);\n       \
    \     }\n        }\n        \n        // Sort after adding all the numbers\n \
    \       Collections.sort(result);\n        \n        // Return the list with sorted\
    \ values\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmyra6285.java:25: error: incompatible types: int cannot be converted\
    \ to Long\n            Long even = 0;\n                        ^\n/tmp/tmpmyra6285.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ even = 0;\n                       ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<>();\n        for (long i : x) {\n    \
    \        while (x != null && !x.isEmpty()) {\n                long temp1 = x.get(0);\n\
    \                long temp2 = x.get(0);\n                boolean even = false;\n\
    \                boolean found = false;\n                for (int i = 0; i <=\
    \ x.size() - 1; i++) {\n                    long temp3 = x.get(i);\n         \
    \           if (temp3 != 0 && temp3 == temp2) {\n                        found\
    \ = true;\n                        break;\n                    }\n           \
    \         even = true;\n                }\n                if (!found) {\n   \
    \                 list.add(temp1);\n                    x.remove(0);\n       \
    \         }\n            }\n        }\n        Collections.sort(list);\n     \
    \   return list;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2zb8w3d8.java:25: error: variable i is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n                for (int i = 0; i <= x.size()\
    \ - 1; i++) {\n                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ Arrays.sort(x);\n        ArrayList<Long> result = new ArrayList<Long>();\n \
    \       long last = 0;\n        long current = 1;\n        while(last < x.size())\
    \ {\n            current = 1;\n            int len = x.length();\n           \
    \ for(int i = 1; i < len; i++) {\n                if(last + 1 == x.size() || x.get(last)\
    \ > x.get(i)) {\n                    current = 1;\n                }else {\n \
    \                   current = (current * x.get(last)) + x.get(i);\n          \
    \          last = i;\n                }\n            }\n            if(current\
    \ % 2 == 0) {\n                result.add(current);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvhcctywe.java:18: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(x);\n              ^\n    method Arrays.sort(int[]) is not\
    \ applicable\n      (argument mismatch; ArrayList<Long> cannot be converted to\
    \ int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument mismatch;\
    \ ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\n/tmp/tmpvhcctywe.java:24: error: cannot find symbol\n         \
    \   int len = x.length();\n                       ^\n  symbol:   method length()\n\
    \  location: variable x of type ArrayList<Long>\n/tmp/tmpvhcctywe.java:26: error:\
    \ incompatible types: possible lossy conversion from long to int\n           \
    \     if(last + 1 == x.size() || x.get(last) > x.get(i)) {\n           "
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Long xx = x;\n    \
    \    boolean flag = false;\n        for (Long y : xx) {\n            flag = false;\n\
    \            if (y % 2 == 0) {\n                flag = true;\n            }\n\
    \            if (!flag) {\n                result.add(y);\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcj6qro96.java:19: error: incompatible types: ArrayList<Long> cannot\
    \ be converted to Long\n        Long xx = x;\n                  ^\n/tmp/tmpcj6qro96.java:21:\
    \ error: for-each not applicable to expression type\n        for (Long y : xx)\
    \ {\n                      ^\n  required: array or java.lang.Iterable\n  found:\
    \    Long\n2 errors\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            long y = x.get(i);\n            while (y > 0 && y % 2 ==\
    \ 0) {\n                y = y/2;\n            }\n            if (!res.contains(y))\
    \ {\n                res.add(y);\n            }\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4moew72f.java:31)\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code here\n        x.sort(Comparator.naturalOrder());\n      \
    \  ArrayList<Long> result = new ArrayList<>();\n        for (Long i : x) {\n \
    \           int num = Math.abs(i);\n            for (long j = 1; j <= num / 10;\
    \ j ++) {\n                if (num % j == 0) {\n                    result.remove(j);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1hn4n052.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int num = Math.abs(i);\n                     \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long evenDigit = 0;\n\
    \        long totalDigits = 0;\n        for (Long l : x) {\n            totalDigits\
    \ += l;\n        }\n        if (totalDigits % 2 == 0) {\n            for (Long\
    \ l : x) {\n                evenDigit += l;\n            }\n            for (Long\
    \ l : x) {\n                if (evenDigit % 2 == 0) {\n                    result.add(l);\n\
    \                }\n                evenDigit -= l;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_yi6vsc9.java:38)\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> list = new ArrayList<>();\n        for (Long val : x) {\n       \
    \     list.add((val / 10));\n            list.add((val % 10));\n        }\n\n\
    \        ArrayList<Long> list1 = new ArrayList<>();\n        for (int i = 0; i\
    \ < list.size(); i++) {\n            list1.add((list.get(i) / 2));\n         \
    \   list1.add((list.get(i) % 2));\n        }\n\n        ArrayList<Long> list2\
    \ = new ArrayList<>();\n        for (int i = 0; i < list1.size(); i++) {\n   \
    \         list2.add((list1.get(i) / 2));\n            list2.add((list1.get(i)\
    \ % 2));\n        }\n        Collections.sort(list2);\n        ArrayList<Long>\
    \ list3 = new ArrayList<>();\n        for (int i = 0; i < list2.size(); i++) {\n\
    \            list3.add((list2.get(i) / 2));\n            list3.add((list2.get(i)\
    \ % 2));\n        }\n\n        ArrayList<Long> list4 = new ArrayList<>();\n  \
    \      for (int i = 0; i < list3.size(); i++) {\n            list4.add((list3.get(i)\
    \ / 2));\n            list4.add((list3.get(i) % 2));\n        }\n\n        ArrayList<Long>\
    \ list5 = new ArrayList<>();\n        for (int i = 0; i < list4.size(); i++) {\n\
    \            list5.add((list4.get(i) / 2));\n            list5.add((list4.get(i)\
    \ % 2));\n        }\n\n        ArrayList<Long> list6 = new ArrayList<>();\n  \
    \      for (int i = 0; i < list5.size(); i++) {\n            list6.add((list5.get(i)\
    \ / 2));\n            list6.add((list5.get(i) % 2));\n        }\n\n        ArrayList<Long>\
    \ list7 = new ArrayList<>();\n        for (int i = 0; i < list6.size(); i++) {\n\
    \            list7.add((list6.get(i) / 2));\n            list7.add((list6.get(i)\
    \ % 2));\n        }\n        Collections.sort(list7);\n\n        ArrayList<Long>\
    \ list8 = new ArrayList<>();\n        for (int i = 0; i < list7.size(); i++) {\n\
    \            list8.add((list7.get(i) / 2));\n            list8.add((list7.get(i)\
    \ % 2));\n        }\n\n        ArrayList<Long> list9 = new ArrayList<>();\n  \
    \      for (int i = 0; i < list8.size(); i++) {\n            list9.add((list8.get(i)\
    \ / 2));\n            list9.add((list8.get(i) % 2));\n        }\n\n        ArrayList<Long>\
    \ list10 = new ArrayList<>();\n        for (int i = 0; i < list9.size(); i++)\
    \ {\n            list10.add((list9.get(i) / 2));\n            list10.add((list9.get(i)\
    \ % 2));\n        }\n\n        ArrayList<Long> list11 = new ArrayList<>();\n \
    \       for (int i = 0; i < list10.size(); i++) {\n            list11.add((list10.get(i\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi13npfsm.java:87: error: ')' expected\n            list11.add((list10.get(i\n\
    \                                    ^\n/tmp/tmpi13npfsm.java:89: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n2\
    \ errors\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if(x.isEmpty())\n            return x;\n        \n        ArrayList<Long> resultList\
    \ = new ArrayList<>();\n        HashSet<Long> set = new HashSet<>(x);\n      \
    \  \n        for(Long i : set) {\n            if(!((i/10).intValue() & 1))\n \
    \               resultList.add(i);\n        }\n        \n        ArrayList<Long>\
    \ sortedResult = sortAscending(resultList);\n        \n        return sortedResult;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0k_d0qpi.java:25: error: long cannot be dereferenced\n        \
    \    if(!((i/10).intValue() & 1))\n                       ^\n/tmp/tmp0k_d0qpi.java:29:\
    \ error: cannot find symbol\n        ArrayList<Long> sortedResult = sortAscending(resultList);\n\
    \                                       ^\n  symbol:   method sortAscending(ArrayList<Long>)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660010902
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        List<Long> xx = x;\n\
    \        Set<Long> xs = new HashSet<Long>();\n        for (Long i : xx)\n    \
    \        xs.add(i);\n        xx.removeAll(xs);\n        for (Long i : xx)\n  \
    \          if (i % 2 == 0)\n                result.add(i);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpop4lky3f.java:30)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        final long MAX_VAL\
    \ = Long.MAX_VALUE;\n        for (Long num : x) {\n            long val = num;\n\
    \            do {\n                val = (val * 10) % MAX_VAL;\n            }\
    \ while (val % 2 == 0);\n            if (val % 2 != 0) {\n                result.add(num);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxsvd_pgn.java:32)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<>();\n        long[] arr = x.stream().mapToLong(l\
    \ -> l).toArray();\n        Arrays.sort(arr);\n        for (long n : arr) {\n\
    \            if (n % 2 == 0) {\n                res.add(n);\n            }\n \
    \       }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgsqchuk.java:29)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().distinct().filter(elem -> {\n            try {\n         \
    \       Long d = Long.parseLong(String.valueOf(elem));\n                if (Integer.parseInt(String.valueOf(d))\
    \ == d) return true;\n                return false;\n            } catch (Exception\
    \ e) {\n                return false;\n            }\n        }).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79axypb1.java:29)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long> xCopy\
    \ = new ArrayList<Long>(x);\n        xCopy.sort(Comparator.reverseOrder());\n\
    \        long counter = 0;\n        for(long i : xCopy) {\n            counter\
    \ += i;\n        }\n        while(counter > 0) {\n            int count = 0;\n\
    \            long prev = null;\n            for(long i : xCopy) {\n          \
    \      count += i;\n                if(count > counter) {\n                  \
    \  prev = null;\n                    break;\n                }\n             \
    \   else if(count == counter) {\n                    prev = ((long) (i - 1) <\
    \ prev ? prev : i - 1);\n                }\n                else {\n         \
    \           prev = ((long) (i - 1) > prev ? prev : i - 1);\n                }\n\
    \            }\n            if(prev != null) {\n                result.add(prev);\n\
    \                counter -= prev;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnwieaw3z.java:27: error: incompatible types: <null> cannot be converted\
    \ to long\n            long prev = null;\n                        ^\n/tmp/tmpnwieaw3z.java:31:\
    \ error: incompatible types: <null> cannot be converted to long\n            \
    \        prev = null;\n                           ^\n/tmp/tmpnwieaw3z.java:41:\
    \ error: bad operand types for binary operator '!='\n            if(prev != null)\
    \ {\n                    ^\n  first type:  long\n  second type: <null>\n3 errors\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp = 0; // Temporary\
    \ variable for digits\n        for (long n : x) {\n            temp += n;\n  \
    \          while (temp > 0) {\n                if (temp % 2 == 0) {\n        \
    \            result.add(n);\n                    break;\n                }\n \
    \               temp /= 10;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2s31_nx.java:33)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Collections.sort(x);\n\
    \        for (long e : x) {\n            if (e % 2 == 0) {\n                continue;\n\
    \            }\n            result.add(e);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprewl8xjm.java:30)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<>(x);\n        for(int i=0; i<list.size();\
    \ i++) {\n            long digit = list.get(i);\n            int count = 0;\n\
    \            while(digit >= 10) {\n                digit /= 10;\n            \
    \    count++;\n            }\n            if(count == 0) {\n                list.remove(i);\n\
    \            }\n        }\n        Collections.sort(list);\n        return list;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpik93ham_.java:34)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long sum = 0;\n        long digit = 0;\n        int index = 0;\n        boolean\
    \ isEven = false;\n        ArrayList<Long> ans = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        for (Long val : x) {\n            isEven\
    \ = true;\n            digit = val;\n            while (isEven) {\n          \
    \      sum += digit % 10;\n                if (sum % 2 != 0) {\n             \
    \       isEven = false;\n                } else {\n                    sum +=\
    \ (digit % 10) * ((digit / 10) * 10);\n                    digit = digit / 10;\n\
    \                }\n            }\n            digit = 0;\n            sum +=\
    \ val % 10;\n            ans.add(val);\n            if (sum % 2 != 0) {\n    \
    \            ans.add(0l);\n            }\n        }\n        return ans;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010908
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here\n        ArrayList<Long> result = new ArrayList<>();\n   \
    \     for (Long ele : x) {\n            if (Integer.parseInt(String.valueOf(ele))%2\
    \ == 0) {\n                continue;\n            }\n            result.add(ele);\n\
    \        }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvmv762ta.java:31)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ \n        ArrayList<Long> y = new ArrayList<Long>();\n        \n        if (x\
    \ != null) {\n            for (long e : x) {\n                int f = 0;\n   \
    \             while (e > 0) {\n                    f = (int) (e % 10);\n     \
    \               e = e / 10;\n                    if (e == 0)\n               \
    \         break;\n                    if (f != 0)\n                        y.add(f);\n\
    \                }\n            }\n        }\n        \n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        \n        if (y != null)\n        \
    \    for (long e: y) {\n                if (result.stream().noneMatch(z -> z ==\
    \ e)) {\n                    result.add(e);\n                }\n            }\n\
    \        \n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0wsxy33_.java:30: error: incompatible types: int cannot be converted\
    \ to Long\n                        y.add(f);\n                              ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long> digits\
    \ = new ArrayList<Long>();\n        List<Long> list = x.stream().map(i -> i).toList();\n\
    \        for (long n : list) {\n            long mod = Math.abs(n);\n        \
    \    while (mod > 0) {\n                digits.add(n % 10);\n                mod\
    \ = mod % 10;\n            }\n        }\n        Map<Long, Long> map = new HashMap<Long,\
    \ Long>();\n        for (long n : list) {\n            if (digits.contains(n))\
    \ {\n                if (map.containsKey(n)) {\n                    map.put(digits.get(n),\
    \ map.get(n) + n);\n                } else {\n                    map.put(digits.get(n),\
    \ n);\n                }\n            }\n        }\n        for (Map.Entry<Long,\
    \ Long> entry : map.entrySet()) {\n            if (!result.contains(entry.getValue()))\
    \ {\n                result.add(entry.getValue());\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4o11burs.java:32: error: incompatible types: possible lossy conversion\
    \ from long to int\n                    map.put(digits.get(n), map.get(n) + n);\n\
    \                                       ^\n/tmp/tmp4o11burs.java:34: error: incompatible\
    \ types: possible lossy conversion from long to int\n                    map.put(digits.get(n),\
    \ n);\n                                       ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueList = new ArrayList<>();\n        // iterate over all\
    \ elements\n        for (Long element : x) {\n            String element = Long.toString(element);\n\
    \            // find all even digits (digits of x)\n            // for even digits,\
    \ remove them\n            String evenDigits = element.substring(element.length()\
    \ - 2, element.length());\n            evenDigits = evenDigits.replaceAll(\"(^\\\
    \\d+)(?=\\\\d)\", \"$1\");\n            evenDigits = evenDigits.replaceAll(\"\
    (^\\\\d)(?=\\\\d)\", \"$1\");\n            evenDigits = evenDigits.replaceAll(\"\
    (\\\\d\\\\d)\", \"$1\");\n            evenDigits = evenDigits.replaceAll(\"(\\\
    \\d)\\\\d\", \"$1\");\n\n            // check for empty string and empty string\
    \ before even digits\n            if (evenDigits.isEmpty() && !evenDigits.equals(\"\
    \"))\n                evenDigits = \"0\";\n            if (!evenDigits.isEmpty())\n\
    \                element = evenDigits;\n\n            // check if element is not\
    \ empty and unique (add only if element is unique)\n            if (!element.isEmpty()\
    \ && !uniqueList.contains(element))\n                uniqueList.add(element);\n\
    \        }\n        return uniqueList;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8fj0gsck.java:21: error: variable element is already defined in\
    \ method uniqueDigits(ArrayList<Long>)\n            String element = Long.toString(element);\n\
    \                   ^\n/tmp/tmp8fj0gsck.java:21: error: incompatible types: String\
    \ cannot be converted to long\n            String element = Long.toString(element);\n\
    \                                           ^\n/tmp/tmp8fj0gsck.java:38: error:\
    \ incompatible types: String cannot be converted to Long\n                uniqueList.add(element);\n\
    \                               ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code here\n        Collections.sort(x);\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i=0;i<x.size()-1;i++) {\n     \
    \       for(int j=i+1;j<x.size();j++) {\n                if(x.get(i) % 2 != 0\
    \ && x.get(i) != x.get(j)) {\n                    result.add(x.get(j));\n    \
    \                //System.out.println(\"(\"+x.get(j) +\",\" + x.get(j) + \")\"\
    );\n                }\n            }\n        }\n        \n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6v2z817q.java:33)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<>(x);\n        // check all elements\n\
    \        long temp;\n        for (int i = 0; i < list.size(); i++) {\n       \
    \     temp = list.get(i);\n            // check every even digit\n           \
    \ while (temp >= 10) {\n                temp = temp >> 1;\n            }\n   \
    \         // return if is not even\n            if (temp % 2 != 0) {\n       \
    \         list.remove(i);\n            }\n        }\n        // return if is not\
    \ all even\n        if (list.size() != 0) {\n            return list;\n      \
    \  }\n        return new ArrayList<>();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptxo4d51p.java:39)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ if(x.size() == 0)\n            return new ArrayList<>();\n        HashMap<Long,\
    \ Long> m = new HashMap<>();\n        for(long l : x) {\n            long d =\
    \ l / 10;\n            if(m.containsKey(d))\n                m.put(d,m.get(d)\
    \ + l);\n            else\n                m.put(d, l);\n        }\n        ArrayList<Long>\
    \ y = new ArrayList<>();\n        for(long l : m.values()) {\n            if(l\
    \ % 2 == 0)\n                y.add(l);\n        }\n        return y;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq710zy2s.java:36)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        x.stream().filter(p -> p\
    \ % 2 != 0).collect(Collectors.toCollection(a));\n        return a;\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpta53afd8.java:19: error: method toCollection in class Collectors\
    \ cannot be applied to given types;\n        x.stream().filter(p -> p % 2 != 0).collect(Collectors.toCollection(a));\n\
    \                                                             ^\n  required: Supplier<C>\n\
    \  found:    ArrayList<Long>\n  reason: cannot infer type-variable(s) T,C\n  \
    \  (argument mismatch; ArrayList<Long> cannot be converted to Supplier<C>)\n \
    \ where C,T are type-variables:\n    C extends Collection<T> declared in method\
    \ <T,C>toCollection(Supplier<C>)\n    T extends Object declared in method <T,C>toCollection(Supplier<C>)\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long l = Long.parseLong(x.toString());\n\
    \        long[] array = new long[l.toString().length()];\n        for (int i =\
    \ 0; i < l.toString().length(); i++) {\n            if (l.toString()[i] % 2 ==\
    \ 0) {\n                array[i] = Long.parseLong(l.toString().substring(i, i\
    \ + 1));\n            }\n        }\n        Arrays.sort(array);\n        Arrays.stream(array).forEach(i\
    \ -> {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        });\n        System.out.println(result);\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph_munl5c.java:20: error: long cannot be dereferenced\n        long[]\
    \ array = new long[l.toString().length()];\n                                 ^\n\
    /tmp/tmph_munl5c.java:21: error: long cannot be dereferenced\n        for (int\
    \ i = 0; i < l.toString().length(); i++) {\n                             ^\n/tmp/tmph_munl5c.java:22:\
    \ error: long cannot be dereferenced\n            if (l.toString()[i] % 2 == 0)\
    \ {\n                 ^\n/tmp/tmph_munl5c.java:23: error: long cannot be dereferenced\n\
    \                array[i] = Long.parseLong(l.toString().substring(i, i + 1));\n\
    \                                           ^\n4 errors\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for (Long n : x) {\n  \
    \          long d = (n / 100) * 100;\n            if (n % 10 != 0) {\n       \
    \         result.add(n);\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwi6zxg2.java:28)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if (x.isEmpty()) {\n\
    \            return result;\n        }\n        HashSet<Long> seen = new HashSet<Long>();\n\
    \        for (Long v : x) {\n            if (seen.add(v)) {\n                Long\
    \ v = v;\n                if (v.length() % 2 == 0) {\n                    result.add(v);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsyt31nno.java:25: error: variable v is already defined in method\
    \ uniqueDigits(ArrayList<Long>)\n                Long v = v;\n               \
    \      ^\n/tmp/tmpsyt31nno.java:26: error: cannot find symbol\n              \
    \  if (v.length() % 2 == 0) {\n                     ^\n  symbol:   method length()\n\
    \  location: variable v of type Long\n2 errors\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>(x);\n        result.sort(Long::compareTo);\n\
    \        ArrayList<Long> copy = new ArrayList<Long>();\n        for(Long i : x)\
    \ {\n            boolean found = false;\n            for(Long j : result) {\n\
    \                if(j.compareTo(i) == 0) {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if(!found)\
    \ {\n                copy.add(i);\n            }\n        }\n        return copy;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpok3mk6gu.java:36)\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> i%2 == 0).distinct().collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lajt8l2.java:18: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return x.stream().filter(i -> i%2 == 0).distinct().collect(Collectors.toList());\n\
    \                                                                  ^\n    equality\
    \ constraints: List<T#2>\n    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1660010903
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ \n        ArrayList<Long> res = new ArrayList<>();\n        for(Long num : x)\
    \ {\n            int digit = num % 10;\n            if(digit == 0 || digit ==\
    \ 1) {\n                res.add(num);\n            }\n        }\n        res.sort(null);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2g9otu_w.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = num % 10;\n                      \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010903

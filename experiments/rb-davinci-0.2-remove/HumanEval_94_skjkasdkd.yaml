name: HumanEval_94_skjkasdkd
language: rb
prompt: "# You are given a list of integers.\n# You need to find the largest prime\
  \ value and return the sum of its digits.\n# Examples:\ndef skjkasdkd(lst)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_skjkasdkd\n\
  \    candidate = method(:skjkasdkd)\n    assert_equal(10, candidate.call([0, 3,\
  \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]))\n    assert_equal(25,\
  \ candidate.call([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]))\n\
  \    assert_equal(13, candidate.call([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
  \ 2323, 32, 30, 1, 9, 3]))\n    assert_equal(11, candidate.call([0, 724, 32, 71,\
  \ 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]))\n    assert_equal(3, candidate.call([0, 81,\
  \ 12, 3, 1, 21]))\n    assert_equal(7, candidate.call([0, 8, 1, 2, 1, 7]))\n   \
  \ assert_equal(19, candidate.call([8191]))\n    assert_equal(19, candidate.call([8191,\
  \ 123456, 127, 7]))\n    assert_equal(10, candidate.call([127, 97, 8192]))\n  end\n\
  end\n"
completions: ["  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend",
  "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.each do |i|\n    if i.is_a? Integer\n      if i.prime?\n        puts\
    \ i.digits.sum\n      end\n    end\n  end\nend", "  lst.max.to_s.chars.map(&:to_i).reduce(:+)\n\
    end", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.sort.reverse.each do |num|\n    return num.to_s.split('').map(&:to_i).reduce(:+)\
    \ if prime?(num)\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).sum\nend",
  "  lst.sort.reverse.each do |num|\n    return num.to_s.split('').map(&:to_i).reduce(:+)\
    \ if prime?(num)\n  end\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", " \
    \ lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+)\
    \ }.max\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.map\
    \ { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.each do |x|\n\
    \    if x.prime?\n      return x.to_s.split('').map(&:to_i).sum\n    end\n  end\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.sort.reverse.each\
    \ do |num|\n    if num.prime?\n      return num.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.map{|x| x.to_s.split('').map(&:to_i).inject(:+)}.max\n\
    end", "  lst.each do |i|\n    if i.prime?\n      return i.to_s.split('').map(&:to_i).sum\n\
    \    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.each\
    \ do |i|\n    if i.prime?\n      return i.digits.sum\n    end\n  end\nend", " \
    \ lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.select { |x| x.prime?\
    \ }.max.digits.sum\nend", "  lst.each do |i|\n    if i.prime?\n      return i.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", " \
    \ lst.select { |x| prime?(x) }.max.to_s.chars.map(&:to_i).sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.sort!\n  lst.reverse!\n  lst.each do |num|\n    if num.prime?\n \
    \     return num.to_s.split('').map(&:to_i).reduce(:+)\n    end\n  end\nend",
  "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.each do |i|\n   \
    \ if i.prime?\n      return i.to_s.split('').map(&:to_i).reduce(:+)\n    end\n\
    \  end\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+) }.max\n\
    end", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.map{|x| x.to_s.split('').map(&:to_i).inject(:+)}.max\nend", "  lst.map\
    \ { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\n\
    end", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+) }.max\nend", " \
    \ lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.map{|x| x.to_s.split('').map(&:to_i).reduce(:+)}.max\n\
    end", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.map\
    \ { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend", "  lst.select { |x|\
    \ x.prime? }.max.digits.sum\nend", "  lst.select { |x| x.prime? }.max.digits.sum\n\
    end", "  lst.select{|x| x.prime?}.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.select {\
    \ |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.sort.reverse.each do |x|\n    return x.to_s.split('').map(&:to_i).reduce(:+)\
    \ if prime?(x)\n  end\nend", "  lst.sort.reverse.each do |x|\n    return x.to_s.split('').map(&:to_i).inject(:+)\
    \ if prime?(x)\n  end\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.map{|x| x.to_s.split('').map(&:to_i).inject(:+)}.max\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.each do |x|\n    if\
    \ x.prime?\n      return x.to_s.chars.map(&:to_i).reduce(:+)\n    end\n  end\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.select { |x| x.prime?\
    \ }.max.digits.sum\nend", '  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
    34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
    54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
    74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
    94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
    111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
    127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
    159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
    175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
    191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
    207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
    223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
    239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253', " \
    \ lst.sort.reverse.each do |num|\n    if num.prime?\n      return num.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.select { |x| prime?(x) }.max.to_s.chars.map(&:to_i).reduce(:+)\n\
    end", "  lst.map!{|x| x.to_s.split('').map(&:to_i).inject(:+)}\n  lst.sort!\n\
    \  lst.last\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+) }.max\n\
    end", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.select {\
    \ |x| x.prime? }.max.digits.sum\nend", "  lst.each do |i|\n    if i.prime?\n \
    \     return i.to_s.split('').map(&:to_i).reduce(:+)\n    end\n  end\nend", " \
    \ lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.select { |x| x.prime?\
    \ }.max.digits.sum\nend", "  lst.each do |num|\n    if num.prime?\n      return\
    \ num.digits.sum\n    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+) }.max\nend", " \
    \ lst.map { |i| i.to_s.split('').map(&:to_i).reduce(:+) }.max\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.map(&:to_s).map(&:chars).flatten.map(&:to_i).inject(:+)\nend", " \
    \ lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+) }.max\nend", " \
    \ lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend",
  "  lst.map(&:to_s).map(&:chars).flatten.map(&:to_i).inject(:+)\nend", "  lst.map{|x|\
    \ x.to_s.split('').map(&:to_i).inject(:+)}.max\nend", "  lst.select { |x| x.prime?\
    \ }.max.digits.sum\nend", "  lst.map(&:to_s).map(&:chars).flatten.map(&:to_i).sum\n\
    end", "  lst.sort.reverse.each do |num|\n    return num.to_s.split('').map(&:to_i).reduce(:+)\
    \ if prime?(num)\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.each do |i|\n    if i.prime?\n      return i.to_s.split('').map(&:to_i).sum\n\
    \    end\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", " \
    \ lst.sort.reverse.each do |n|\n    return n.to_s.split('').map(&:to_i).reduce(:+)\
    \ if prime?(n)\n  end\nend", "  lst.each do |num|\n    if num % 2 == 0\n     \
    \ puts num\n    end\n  end\nend", "    lst.max.to_s.chars.map(&:to_i).sum\nend",
  "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.select { |x| x.prime?\
    \ }.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.select { |x| prime?(x)\
    \ }.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.sort.reverse.each do |num|\n    if is_prime?(num)\n      return num.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.select {\
    \ |x| x.prime? }.max.digits.sum\nend", "  lst.select { |x| x.prime? }.max.digits.sum\n\
    end", "  lst.sort.reverse.find { |x| prime?(x) }.to_s.chars.map(&:to_i).reduce(:+)\n\
    end", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.select{|x| x.prime?}.max.to_s.split('').map(&:to_i).reduce(:+)\n\
    end", "  lst.each do |i|\n    if i.prime?\n      return i.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\nend",
  "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.select { |x| x.prime? }.max.digits.sum\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+)\
    \ }.max\nend", "  lst.sort!\n  lst.reverse!\n  lst.each do |i|\n    if i.prime?\n\
    \      return i.to_s.split('').map(&:to_i).reduce(:+)\n    end\n  end\nend", " \
    \ lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.select { |x| x.prime? }.max.digits.sum\n\
    end", "  lst.each do |i|\n    if i.prime?\n      return i.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", " \
    \ lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.max.to_s.split('').map(&:to_i).sum\nend", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\n\
    end", "  lst.each do |num|\n    if num.prime?\n      return num.to_s.split('').map(&:to_i).sum\n\
    \    end\n  end\nend", "  lst.max.to_s.chars.map(&:to_i).reduce(:+)\nend", " \
    \ lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+)\
    \ }.max\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.sort.reverse.each\
    \ do |num|\n    if prime?(num)\n      return num.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.select{|x| x.prime?}.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.sort.reverse.each do |i|\n    if is_prime?(i)\n      return i.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", " \
    \ lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend", "  lst.each\
    \ do |x|\n    if x.prime?\n      return x.digits.sum\n    end\n  end\nend", " \
    \ lst.max.to_s.chars.map(&:to_i).sum\nend", "  return 0 if lst.empty?\n  lst.map\
    \ { |n| n.to_s.split('').map(&:to_i).inject(:+) }.max\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.sort.reverse.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).inject(:+)\n\
    \    end\n  end\nend", "  # lst.max.to_s.split('').map(&:to_i).reduce(:+)\n  lst.max.to_s.chars.map(&:to_i).reduce(:+)\n\
    end", "  lst.map! { |x| x.to_s.split('').map(&:to_i) }\n  lst.flatten!\n  lst.sort!\n\
    \  lst.reverse!\n  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).sum\n\
    \    end\n  end\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+)\
    \ }.max\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\n\
    end", "  lst.sort.reverse.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.max.to_s.chars.map(&:to_i).sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.split('').map(&:to_i).reduce(:+)\n\
    end", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.split('').map(&:to_i).sum\n\
    end", "  lst.map { |x| x.to_s.split('').map(&:to_i).inject(:+) }.max\nend", " \
    \ lst.map! { |x| x.to_s.split('').map(&:to_i) }\n  lst.flatten!\n  lst.sort!\n\
    \  lst.reverse!\n  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", " \
    \ lst.sort.last.to_s.split('').map(&:to_i).reduce(:+)\nend", "  lst.select { |x|\
    \ x.prime? }.max.digits.sum\nend", "  lst.select { |x| x.prime? }.max.digits.sum\n\
    end", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.map { |x| x.to_s.split('').map(&:to_i).reduce(:+)\
    \ }.max\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend", "  lst.max.to_s.chars.map(&:to_i).sum\n\
    end", "  lst.map { |e| e.to_s.split('').map(&:to_i).sum }.max\nend", "  lst.each\
    \ do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.each do |i|\n    if i.prime?\n      return i.to_s.split('').map(&:to_i).reduce(:+)\n\
    \    end\n  end\nend", "  lst.each do |x|\n    if x.prime?\n      return x.to_s.split('').map(&:to_i).sum\n\
    \    end\n  end\nend", "  lst.select { |x| x.prime? }.max.digits.sum\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

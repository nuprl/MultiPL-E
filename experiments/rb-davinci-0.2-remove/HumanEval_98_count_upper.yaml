name: HumanEval_98_count_upper
language: rb
prompt: "# Given a string s, count the number of uppercase vowels in even indices.\n\
  # For example:\ndef count_upper(s)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_count_upper\n\
  \    candidate = method(:count_upper)\n    assert_equal(1, candidate.call(\"aBCdEf\"\
  ))\n    assert_equal(0, candidate.call(\"abcdefg\"))\n    assert_equal(0, candidate.call(\"\
  dBBE\"))\n    assert_equal(0, candidate.call(\"B\"))\n    assert_equal(1, candidate.call(\"\
  U\"))\n    assert_equal(0, candidate.call(\"\"))\n    assert_equal(2, candidate.call(\"\
  EEEE\"))\n  end\nend\n"
completions: ["  count = 0\n  s.each_char.with_index do |char, index|\n    count +=\
    \ 1 if char =~ /[AEIOU]/ && index.even?\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even?\n\
    \      count += 1 if char =~ /[AEIOU]/\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index do |char,\
    \ i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.chars.each_with_index do |char, index|\n   \
    \ if char =~ /[AEIOU]/ && index.even?\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.chars.each_with_index do |char, i|\n    count += 1 if\
    \ char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n\
    \    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n  count\nend", " \
    \ count = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~\
    \ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.chars.each_with_index.count\
    \ { |char, i| char =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.split(\"\
    \").each_with_index do |letter, index|\n    if letter =~ /[AEIOU]/ && index.even?\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    count += 1\
    \ if char =~ /[AEIOU]/ && index.even?\n  end\n  count\nend", "  count = 0\n  s.split(\"\
    \").each_with_index do |letter, index|\n    if index.even? && letter =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if char =~ /[AEIOU]/ && i.even?\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.split(\"\").each_with_index do |letter, index|\n\
    \    if index.even? && letter =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  s.split(\"\
    \").each_with_index.count { |char, i| char =~ /[AEIOU]/ && i.even? }\nend", " \
    \ count = 0\n  s.each_char.with_index do |char, index|\n    if index.even? &&\
    \ char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if char =~ /[AEIOU]/ &&\
    \ index.even?\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    count += 1 if char =~ /[AEIOU]/\
    \ && index.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    if char =~ /[AEIOU]/ && index.even?\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.split(\"\").each_with_index\
    \ do |letter, index|\n    if letter =~ /[AEIOU]/ && index.even?\n      count +=\
    \ 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do\
    \ |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n \
    \   end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    count\
    \ += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, index|\n    count += 1 if char.upcase == char\
    \ && index.even?\n  end\n  count\nend", "  s.split(\"\").each_with_index.count\
    \ { |char, i| char.upcase == char && i.even? }\nend", "  count = 0\n  s.split(\"\
    \").each_with_index do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count\
    \ += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.split(\"\").each_with_index\
    \ do |char, index|\n    if char =~ /[AEIOU]/ && index.even?\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char\
    \ =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.chars.each_with_index.count\
    \ { |char, i| char =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.chars.each_with_index do |char, index|\n    if index.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/\
    \ && i.even?\n  end\n  count\nend", "  s.chars.map.with_index { |char, i| char\
    \ if i.even? && char =~ /[AEIOU]/ }.compact.count\nend", "  count = 0\n  s.chars.each_with_index\
    \ do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    count\
    \ += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.split(\"\"\
    ).map.with_index { |x, i| x if i.even? && x =~ /[AEIOU]/ }.compact.count\nend",
  "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    if char =~\
    \ /[AEIOU]/ && index.even?\n      count += 1\n    end\n  end\n  count\nend", " \
    \ s.split(\"\").each_with_index.count { |char, index| char =~ /[AEIOU]/ && index.even?\
    \ }\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    count += 1\
    \ if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.chars.each_with_index.count\
    \ { |char, index| char =~ /[AEIOU]/ && index.even? }\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if char.match(/[AEIOU]/) && i.even?\n      count += 1\n  \
    \  end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", " \
    \ count = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~\
    \ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  s.chars.each_with_index.count { |char, idx| char =~ /[AEIOU]/ && idx.even?\
    \ }\nend", "  s.chars.each_with_index.count { |char, i| char =~ /[AEIOU]/ && i.even?\
    \ }\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    count += 1\
    \ if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n\
    \  count\nend", "  count = 0\n  s.chars.each_with_index do |char, i|\n    count\
    \ += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, index|\n    count += 1 if char =~ /[AEIOU]/\
    \ && index.even?\n  end\n  count\nend", "  count = 0\n  s.split(\"\").each_with_index\
    \ do |letter, index|\n    if letter =~ /[AEIOU]/ && index.even?\n      count +=\
    \ 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do\
    \ |char, index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n \
    \ count\nend", "  count = 0\n  s.chars.each_with_index do |char, index|\n    if\
    \ index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    count += 1\
    \ if char =~ /[AEIOU]/ && index.even?\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  s.chars.each_with_index.count { |char, i| char =~ /[AEIOU]/\
    \ && i.even? }\nend", "  count = 0\n  s.chars.each_with_index do |char, i|\n \
    \   if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  s.split(\"\").each_with_index.count { |char,\
    \ i| char =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.split(\"\"\
    ).each_with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n\
    \    if index.even? && char.match(/[AEIOU]/)\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.split(\"\").each_with_index do |letter, index|\n\
    \    if index.even? && letter =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n    if\
    \ index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, idx|\n    if idx.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.split(\"\").each_with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  s.chars.map.with_index\
    \ { |c, i| c if i.even? && c =~ /[AEIOU]/ }.compact.count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, i|\n    if i.even? && char.match(/[AEIOU]/)\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index\
    \ do |char, index|\n    if char =~ /[AEIOU]/ && index.even?\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index do |char,\
    \ index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.chars.each_with_index do |char, index|\n\
    \    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n \
    \ count\nend", "  count = 0\n  s.chars.each_with_index do |char, index|\n    if\
    \ char =~ /[AEIOU]/ && index.even?\n      count += 1\n    end\n  end\n  count\n\
    end", "  s.split(\"\").each_with_index.count { |char, i| char =~ /[AEIOU]/ &&\
    \ i.even? }\nend", "  count = 0\n  s.chars.each_with_index do |char, i|\n    count\
    \ += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if char =~ /[AEIOU]/ && i.even?\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index { |char, i| count += 1\
    \ if char.upcase == char && i.even? }\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |c, i|\n    count += 1 if c =~ /[AEIOU]/ && i.even?\n  end\n  count\nend",
  "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/\
    \ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do\
    \ |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n \
    \   end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.chars.each_with_index do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index\
    \ do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/\
    \ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do\
    \ |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, idx|\n    count += 1 if\
    \ char =~ /[AEIOU]/ && idx.even?\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index\
    \ do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  s.split(\"\").each_with_index.count { |char, i| char\
    \ =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.split(\"\").each_with_index\
    \ do |char, index|\n    if char =~ /[AEIOU]/ && index.even?\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", " \
    \ count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n    if\
    \ index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |c, i|\n    count\
    \ += 1 if c =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, idx|\n    count += 1 if char =~ /[AEIOU]/ && idx.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char\
    \ =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.chars.each_with_index.count\
    \ { |c, i| c =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  s.split(\"\
    \").each_with_index.count { |char, i| char =~ /[AEIOU]/ && i.even? }\nend", " \
    \ count = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~\
    \ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  s.chars.each_with_index.count { |char, i| char =~ /[AEIOU]/\
    \ && i.even? }\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n  \
    \  count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.chars.each_with_index.count\
    \ { |char, i| char =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n\
    \  count\nend", "  count = 0\n  s.chars.each_with_index do |char, i|\n    if i.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    if char =~ /[AEIOU]/ && index.even?\n      count += 1\n\
    \    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    if char =~ /[AEIOU]/ && index.even?\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, i|\n    if i.even? && char.match(/[AEIOU]/)\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n\
    \  count\nend", "  s.chars.each_with_index.count { |c, i| c =~ /[AEIOU]/ && i.even?\
    \ }\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |c, i|\n    count += 1 if c =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    count += 1\
    \ if char =~ /[AEIOU]/ && index.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n\
    \  count\nend", "  s.chars.map.with_index { |char, i| char if i.even? && char\
    \ =~ /[AEIOU]/ }.compact.count\nend", "  count = 0\n  s.each_char.with_index do\
    \ |char, index|\n    if index.even? && char =~ /[AEIOU]/\n      count += 1\n \
    \   end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if i.even? && char.match(/[AEIOU]/)\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n    if char\
    \ =~ /[AEIOU]/ && i.even?\n      count += 1\n    end\n  end\n  count\nend", " \
    \ count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.split(\"\").each_with_index do |letter, index|\n    if index.even? && letter\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/ &&\
    \ i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char,\
    \ i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n\
    \  count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n    if\
    \ index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  s.split(\"\"\
    ).each_with_index.count { |char, index| char =~ /[AEIOU]/ && index.even? }\nend",
  "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.split(\"\"\
    ).each_with_index do |letter, index|\n    if index.even? && letter =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  s.chars.each_with_index.count { |c, i| c =~ /[AEIOU]/ && i.even? }\n\
    end", "  count = 0\n  s.each_char.with_index do |char, index|\n    if index.even?\
    \ && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, i|\n    count += 1 if char =~ /[AEIOU]/\
    \ && i.even?\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index do\
    \ |char, index|\n    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n \
    \ count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n    if\
    \ index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  count = 0\n  s.chars.each_with_index do |char, index|\n    if char =~\
    \ /[AEIOU]/ && index.even?\n      count += 1\n    end\n  end\n  count\nend", " \
    \ s.chars.each_with_index.count { |c, i| c =~ /[AEIOU]/ && i.even? }\nend", " \
    \ count = 0\n  s.chars.each_with_index do |char, i|\n    if char =~ /[AEIOU]/\
    \ && i.even?\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\n\
    end", "  count = 0\n  s.each_char.with_index do |char, i|\n    if i.even? && char\
    \ =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n\
    \  s.each_char.with_index do |char, index|\n    if index.even? && char =~ /[AEIOU]/\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.split(\"\"\
    ).each_with_index do |letter, index|\n    if letter.match(/[AEIOU]/) && index.even?\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.chars.each_with_index\
    \ do |char, i|\n    if char =~ /[AEIOU]/ && i.even?\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n\
    \    count += 1 if char =~ /[AEIOU]/ && index.even?\n  end\n  count\nend", " \
    \ count = 0\n  s.chars.each_with_index do |char, index|\n    if char =~ /[AEIOU]/\
    \ && index.even?\n      count += 1\n    end\n  end\n  count\nend", "  count =\
    \ 0\n  s.each_char.with_index do |char, index|\n    if char =~ /[AEIOU]/ && index.even?\n\
    \      count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  count\
    \ = 0\n  s.each_char.with_index do |char, index|\n    if index.even? && char =~\
    \ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\nend", "  count = 0\n \
    \ s.each_char.with_index do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n \
    \     count += 1\n    end\n  end\n  count\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   count += 1 if char =~ /[AEIOU]/ && i.even?\n  end\n  count\nend", "  s.chars.each_with_index.count\
    \ { |c, i| c =~ /[AEIOU]/ && i.even? }\nend", "  count = 0\n  s.each_char.with_index\
    \ do |char, i|\n    if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n\
    \  end\n  count\nend", "  count = 0\n  s.each_char.with_index do |char, i|\n \
    \   if i.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end", "  s.split(\"\").each_with_index.count { |char, i| char =~ /[AEIOU]/ &&\
    \ i.even? }\nend", "  count = 0\n  s.each_char.with_index do |char, index|\n \
    \   if index.even? && char =~ /[AEIOU]/\n      count += 1\n    end\n  end\n  count\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_62_derivative
language: rb
prompt: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
  \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\ndef derivative(xs)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_derivative\n\
  \    candidate = method(:derivative)\n    assert_equal([1, 4, 12, 20], candidate.call([3,\
  \ 1, 2, 4, 5]))\n    assert_equal([2, 6], candidate.call([1, 2, 3]))\n    assert_equal([2,\
  \ 2], candidate.call([3, 2, 1]))\n    assert_equal([2, 2, 0, 16], candidate.call([3,\
  \ 2, 1, 0, 4]))\n    assert_equal([], candidate.call([1]))\n  end\nend\n"
completions: ["  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| i * x }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  xs[1..-1].each_with_index.map { |x, i| x\
    \ * (i + 1) }\nend", "  result = []\n  xs.each_with_index do |x, i|\n    result\
    \ << x * i\n  end\n  result.shift\n  result\nend", "  xs.each_with_index.map {\
    \ |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }[1..-1]\nend", "  xs.each_with_index.map { |x, i| x * i }[1..-1]\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }[1..-1]\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }[1..-1]\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| i * xs[i] }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1...xs.length).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  (1...xs.length).map { |i| xs[i] * i }\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  result = []\n  xs.each_with_index do |x, i|\n    result << x * i\n  end\n\
    \  result.shift\n  result\nend", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1..xs.length-1).map\
    \ { |i| xs[i] * i }\nend", "  (1..xs.length-1).map { |i| xs[i] * i }\nend", " \
    \ xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_index.map { |i|\
    \ xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }[1..-1]\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map do |i|\n    xs[i] * i\n  end.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  (1...xs.length).map { |i| xs[i] * i }\nend",
  "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x,\
    \ i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  (1...xs.length).map {\
    \ |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_index.map { |i|\
    \ xs[i] * i }.drop(1)\nend", "  xs[1..-1].map.with_index { |x, i| (i + 1) * x\
    \ }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1...xs.length).map\
    \ { |i| xs[i] * i }\nend", "  (1..xs.length-1).map { |i| xs[i] * i }\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  xs.map.with_index { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_index.map { |i|\
    \ xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1..xs.length-1).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    x * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }[1..-1]\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }[1..-1]\nend", "  (1...xs.length).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_index.map\
    \ { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1...xs.length).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  (1..xs.length - 1).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  (1..xs.length - 1).map { |i| xs[i] * i }\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.map.with_index { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1...xs.length).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }[1..-1]\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_index.map\
    \ do |i|\n    xs[i] * i\n  end.drop(1)\nend", "  xs.each_with_index.map { |x,\
    \ i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  (1..xs.length-1).map\
    \ { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    i * x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| i * x }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map do |x, i|\n    i * x\n  end.drop(1)\nend", " \
    \ xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  # TODO: Implement this function.\n  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }[1..-1]\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs[1..-1].map.with_index { |x, i| (i + 1)\
    \ * x }\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  #\
    \ TODO\n  xs.map.with_index { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| i * x }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| i * x }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  (1..xs.length-1).map { |i| xs[i] * i }\nend", " \
    \ # TODO: implement me\n  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend",
  "  (1...xs.length).map { |i| xs[i] * i }\nend", "  xs.each_with_index.map { |x,\
    \ i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| i * x }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ do |x, i|\n    i * x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i|\
    \ x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs[1..-1].each_with_index.map { |x, i| (i + 1) * x }\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map do |x, i|\n    i *\
    \ x\n  end.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\nend", "  result = []\n\
    \  xs.each_with_index do |x, i|\n    result << x * i\n  end\n  result.shift\n\
    \  result\nend", "  xs.each_with_index.map do |x, i|\n    x * i\n  end.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend", "  xs.each_with_index.map\
    \ { |x, i| x * i }.drop(1)\nend", "  xs.each_with_index.map { |x, i| x * i }.drop(1)\n\
    end", "  xs.each_index.map { |i| xs[i] * i }.drop(1)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

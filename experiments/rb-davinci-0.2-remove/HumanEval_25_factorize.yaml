name: HumanEval_25_factorize
language: rb
prompt: "# Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n# Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n# Input number should be equal\
  \ to the product of all factors\ndef factorize(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_factorize\n\
  \    candidate = method(:factorize)\n    assert_equal([2], candidate.call(2))\n\
  \    assert_equal([2, 2], candidate.call(4))\n    assert_equal([2, 2, 2], candidate.call(8))\n\
  \    assert_equal([3, 19], candidate.call(57))\n    assert_equal([3, 3, 19, 19],\
  \ candidate.call(3249))\n    assert_equal([3, 3, 3, 19, 19, 19], candidate.call(185193))\n\
  \    assert_equal([3, 19, 19, 19], candidate.call(20577))\n    assert_equal([2,\
  \ 3, 3], candidate.call(18))\n  end\nend\n"
completions: ["  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n      factors\
    \ << factor\n      n /= factor\n    end\n    factor += 1\n  end\n  factors\nend",
  "  factors = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n  \
    \      factors << i\n        n /= i\n        break\n      end\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n    \
    \  factors << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n\
    \  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  divisor\
    \ = 2\n  while n > 1\n    while n % divisor == 0\n      factors << divisor\n \
    \     n /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n   \
    \ else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  divisor = 2\n\
    \  while n > 1\n    while n % divisor == 0\n      factors << divisor\n      n\
    \ /= divisor\n    end\n    divisor += 1\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n\
    \ /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <=\
    \ n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i +=\
    \ 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n\
    \  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n\
    \ % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n \
    \ factors\nend", "  factors = []\n  while n % 2 == 0\n    factors << 2\n    n\
    \ /= 2\n  end\n  i = 3\n  while i <= Math.sqrt(n)\n    while n % i == 0\n    \
    \  factors << i\n      n /= i\n    end\n    i += 2\n  end\n  factors << n if n\
    \ > 2\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n %\
    \ i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  prime_factors(n).each do |prime|\n    while n % prime == 0\n      factors\
    \ << prime\n      n /= prime\n    end\n  end\n  factors\nend", "  # TODO: return\
    \ list of prime factors of given integer\n  # TODO: return list of prime factors\
    \ of given integer\n  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  (2..n).each do |i|\n    if n % i == 0\n      factors << i\n      n /=\
    \ i\n      redo\n    end\n  end\n  factors\nend", "  factors = []\n  while n %\
    \ 2 == 0\n    factors << 2\n    n /= 2\n  end\n  i = 3\n  while i <= Math.sqrt(n)\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 2\n\
    \  end\n  factors << n if n > 2\n  factors\nend", "  # TODO: Your code here\n\
    \  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors <<\
    \ i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /=\
    \ i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  # TODO: implement\n\
    end", "  # your code here\n  factors = []\n  (2..n).each do |i|\n    if n % i\
    \ == 0\n      factors << i\n      n /= i\n      redo\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /=\
    \ i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n\
    \  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n      n /=\
    \ i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n \
    \ while i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n    \
    \  i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  if n == 1\n    return\
    \ [1]\n  end\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n = n / i\n    else\n      i += 1\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n  while\
    \ n > 1\n    while n % factor == 0\n      factors << factor\n      n /= factor\n\
    \    end\n    factor += 1\n  end\n  factors\nend", "  factors = []\n  while n\
    \ > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors << i\n   \
    \     n /= i\n        break\n      end\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  while n % 2 == 0\n    factors << 2\n    n /= 2\n  end\n  i = 3\n  while\
    \ i <= Math.sqrt(n)\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n    i += 2\n  end\n  if n > 2\n    factors << n\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n  while\
    \ n > 1\n    while n % factor == 0\n      factors << factor\n      n /= factor\n\
    \    end\n    factor += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n\
    \  while n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n\
    \    i += 1\n  end\n  factors\nend", "  # TODO: return list of prime factors of\
    \ given number\n  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n  \
    \    factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  # TODO:\
    \ return list of prime factors of given integer in the order from smallest to\
    \ largest\n  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n    \
    \  factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i\
    \ <= n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <=\
    \ n\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i +=\
    \ 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n\
    \  end\n  factors\nend", "  # TODO: write your code here\nend", "  factors = []\n\
    \  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n\
    \    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n  while n > 1\n\
    \    while n % factor == 0\n      factors << factor\n      n /= factor\n    end\n\
    \    factor += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n      i\
    \ += 1\n    end\n  end\n  factors\nend", "  # TODO: return list of prime factors\
    \ of given integer in the order from smallest to largest\nend", "  factors = []\n\
    \  factor = 2\n  while n > 1\n    while n % factor == 0\n      factors << factor\n\
    \      n /= factor\n    end\n    factor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n\
    \  while n > 1\n    while n % factor == 0\n      factors << factor\n      n /=\
    \ factor\n    end\n    factor += 1\n  end\n  factors\nend", "  # TODO: return\
    \ list of prime factors of given integer in the order from smallest to largest\n\
    \  # Each of the factors should be listed number of times corresponding to how\
    \ many times it appeares in factorization\n  # Input number should be equal to\
    \ the product of all factors\n  factors = []\n  i = 2\n  while n > 1\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n \
    \ factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n\
    \      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n      factors <<\
    \ factor\n      n /= factor\n    end\n    factor += 1\n  end\n  factors\nend",
  "  # Your code here\nend", "  # TODO: return list of prime factors of given integer\
    \ in the order from smallest to largest\n  # Each of the factors should be listed\
    \ number of times corresponding to how many times it appeares in factorization\n\
    \  # Input number should be equal to the product of all factors\n  factors = []\n\
    \  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  while n % 2\
    \ == 0\n    factors << 2\n    n /= 2\n  end\n  i = 3\n  while i <= Math.sqrt(n)\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 2\n\
    \  end\n  factors << n if n > 2\n  factors\nend", "  factors = []\n  factor =\
    \ 2\n  while n > 1\n    while n % factor == 0\n      factors << factor\n     \
    \ n /= factor\n    end\n    factor += 1\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n   \
    \ i += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n  \
    \  while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n \
    \ end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n % i\
    \ == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while n > 1 do\n    while n % i == 0 do\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /=\
    \ i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  # your code here\n\
    \  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n\
    \  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n   \
    \ i += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n  \
    \  while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n \
    \ end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n % i\
    \ == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n \
    \   end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each do\
    \ |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n\
    \      factors << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n     \
    \ n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  # your code here\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n\
    \      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  if n > 1\n\
    \    (2..n).each do |i|\n      if n % i == 0\n        factors << i\n        n\
    \ /= i\n        i -= 1\n      end\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  divisor = 2\n  while n > 1\n    while n % divisor == 0\n      factors\
    \ << divisor\n      n /= divisor\n    end\n    divisor += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n\
    \  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  while\
    \ n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors << i\n \
    \       n /= i\n        break\n      end\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  factor = 2\n  while\
    \ n > 1\n    while n % factor == 0\n      factors << factor\n      n /= factor\n\
    \    end\n    factor += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n\
    \  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n\
    \ > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n    i\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if\
    \ n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n\
    \  end\n  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n %\
    \ i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n\
    \  end\n  factors\nend", "  factors = []\n  factor = 2\n  while n > 1\n    while\
    \ n % factor == 0\n      factors << factor\n      n /= factor\n    end\n    factor\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if\
    \ n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n\
    \  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each do |i|\n\
    \      if n % i == 0\n        factors << i\n        n /= i\n        break\n  \
    \    end\n    end\n  end\n  factors\nend", "  factors = []\n  d = 2\n  while n\
    \ > 1\n    while n % d == 0\n      factors << d\n      n /= d\n    end\n    d\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while\
    \ n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend",
  "  factors = []\n  factor = 2\n  while n > 1\n    while n % factor == 0\n      factors\
    \ << factor\n      n /= factor\n    end\n    factor += 1\n  end\n  factors\nend",
  "  factors = []\n  (2..n).each do |i|\n    if n % i == 0\n      factors << i\n \
    \     n /= i\n      redo\n    end\n  end\n  factors\nend", "  factors = []\n \
    \ i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  # TODO: return list\
    \ of prime factors of given integer in the order from smallest to largest\n  factors\
    \ = []\n  prime_factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n   \
    \   factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors.each\
    \ do |factor|\n    prime_factors << factor if is_prime?(factor)\n  end\n  prime_factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  primes =\
    \ []\n  i = 2\n  while n > 1\n    if n % i == 0\n      primes << i\n      n /=\
    \ i\n    else\n      i += 1\n    end\n  end\n  primes\nend", "  factors = []\n\
    \  (2..n).each do |x|\n    if n % x == 0\n      factors << x\n      n = n / x\n\
    \      redo\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do\
    \ |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while i <= n\n    if n % i == 0\n\
    \      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  i\
    \ = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n  \
    \  else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n   \
    \ else\n      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  factor\
    \ = 2\n  while n > 1\n    while n % factor == 0\n      factors << factor\n   \
    \   n /= factor\n    end\n    factor += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    if n % i == 0\n      factors << i\n      n /= i\n      redo\n  \
    \  end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if\
    \ n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n\
    \  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    if n % i\
    \ == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  i =\
    \ 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n\
    \      i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n    while n % i ==\
    \ 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors\
    \ << i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n   \
    \   n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  # TODO: return prime\
    \ factors of given integer in the order from smallest to largest\n  # each of\
    \ the factors should be listed number of times corresponding to how many times\
    \ it appeares in factorization\n  # input number should be equal to the product\
    \ of all factors\n  # example:\n  # factorize(12) => [2, 2, 3]\n  # factorize(4)\
    \ => [2, 2]\n  # factorize(17) => [17]\n  # factorize(1) => [1]\n  # factorize(0)\
    \ => [0]\n  # factorize(-1) => [1]\n  # factorize(-4) => [2, 2]\n  # factorize(-12)\
    \ => [2, 2, 3]\n  # factorize(-17) => [17]\n  # factorize(-0) => [0]\n  # factorize(0.5)\
    \ => [0.5]\n  # factorize(-0.5) => [0.5]\n  # factorize(0.25) => [0.25]\n  # factorize(-0.25)\
    \ => [0.25]\n  # factorize(0.125) => [0.125]\n  # factorize(-0.125) => [0.125]\n\
    \  # factorize(0.0625) => [0.0625]\n  # factorize(-0.0625) => [0.0625]\n  # factorize(0.03125)\
    \ => [0.03125]\n  # factorize(-0.03125) => [0.03125]\n  # factorize(0.015625)\
    \ => [0.015625]\n  # factorize(-0.015625) => [0.015625]\n  # factorize(0.0078125)\
    \ => [0.0078125]\n  # factorize(-0.0078125) => [0.0078125]\n  # factorize(0.00390625)\
    \ => [0.00390625]\n  # factorize(-0.00390625) => [0.00390625]\n  # factorize(0.001953125)\
    \ => [0.001953125]\n  # factor", "  factors = []\n  i = 2\n  while i <= n\n  \
    \  if n % i == 0\n      factors << i\n      n /= i\n    else\n      i += 1\n \
    \   end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n   \
    \ while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n  end\n\
    \  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n\
    \      factors << i\n      n /= i\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors << i\n     \
    \ n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  # your code here\nend",
  "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n\
    \      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors\
    \ = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n\
    \ /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend", "  factors =\
    \ []\n  while n > 1\n    (2..n).each do |i|\n      if n % i == 0\n        factors\
    \ << i\n        n /= i\n        break\n      end\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend",
  "  factors = []\n  (2..n).each do |i|\n    while n % i == 0\n      factors << i\n\
    \      n /= i\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each\
    \ do |i|\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n\
    \  factors\nend", "  factors = []\n  divisor = 2\n  while n > 1\n    while n %\
    \ divisor == 0\n      factors << divisor\n      n /= divisor\n    end\n    divisor\
    \ += 1\n  end\n  factors\nend", "  # your code here\nend", "  factors = []\n \
    \ i = 2\n  while i <= n\n    if n % i == 0\n      factors << i\n      n /= i\n\
    \    else\n      i += 1\n    end\n  end\n  factors\nend", "  # TODO: return list\
    \ of prime factors of given integer in the order from smallest to largest\n  #\
    \ Each of the factors should be listed number of times corresponding to how many\
    \ times it appeares in factorization\n  # Input number should be equal to the\
    \ product of all factors\n  factors = []\n  factor = 2\n  while n > 1\n    while\
    \ n % factor == 0\n      factors << factor\n      n /= factor\n    end\n    factor\
    \ += 1\n  end\n  factors\nend", "  factors = []\n  while n > 1\n    (2..n).each\
    \ do |i|\n      if n % i == 0\n        factors << i\n        n /= i\n        break\n\
    \      end\n    end\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    while n % i == 0\n      factors << i\n      n /= i\n    end\n   \
    \ i += 1\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while n > 1\n  \
    \  while n % i == 0\n      factors << i\n      n /= i\n    end\n    i += 1\n \
    \ end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n    while n % i\
    \ == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\nend", " \
    \ factors = []\n  i = 2\n  while n > 1\n    while n % i == 0\n      factors <<\
    \ i\n      n /= i\n    end\n    i += 1\n  end\n  factors\nend", "  factors = []\n\
    \  while n > 1\n    i = 2\n    while n % i != 0\n      i += 1\n    end\n    factors\
    \ << i\n    n /= i\n  end\n  factors\nend", "  factors = []\n  i = 2\n  while\
    \ n > 1\n    if n % i == 0\n      factors << i\n      n /= i\n    else\n     \
    \ i += 1\n    end\n  end\n  factors\nend", "  factors = []\n  (2..n).each do |i|\n\
    \    while n % i == 0\n      factors << i\n      n /= i\n    end\n  end\n  factors\n\
    end", "  factors = []\n  i = 2\n  while n > 1\n    if n % i == 0\n      factors\
    \ << i\n      n /= i\n    else\n      i += 1\n    end\n  end\n  factors\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

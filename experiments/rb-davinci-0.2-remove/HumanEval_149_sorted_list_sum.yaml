name: HumanEval_149_sorted_list_sum
language: rb
prompt: "# Write a function that accepts a list of strings as a parameter,\n# deletes\
  \ the strings that have odd lengths from it,\n# and returns the resulted list with\
  \ a sorted order,\n# The list is always a list of strings and never an array of\
  \ numbers,\n# and it may contain duplicates.\n# The order of the list should be\
  \ ascending by length of each word, and you\n# should return the list sorted by\
  \ that rule.\n# If two words have the same length, sort the list alphabetically.\n\
  # The function should return a list of strings in sorted order.\n# You may assume\
  \ that all words will have the same length.\n# For example:\ndef sorted_list_sum(lst)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sorted_list_sum\n\
  \    candidate = method(:sorted_list_sum)\n    assert_equal([\"aa\"], candidate.call([\"\
  aa\", \"a\", \"aaa\"]))\n    assert_equal([\"AI\", \"asdf\", \"school\"], candidate.call([\"\
  school\", \"AI\", \"asdf\", \"b\"]))\n    assert_equal([], candidate.call([\"d\"\
  , \"b\", \"c\", \"a\"]))\n    assert_equal([\"abcd\", \"dcba\"], candidate.call([\"\
  d\", \"dcba\", \"abcd\", \"a\"]))\n    assert_equal([\"AI\", \"ai\", \"au\"], candidate.call([\"\
  AI\", \"ai\", \"au\"]))\n    assert_equal([], candidate.call([\"a\", \"b\", \"b\"\
  , \"c\", \"c\", \"a\"]))\n    assert_equal([\"cc\", \"dd\", \"aaaa\", \"bbbb\"],\
  \ candidate.call([\"aaaa\", \"bbbb\", \"dd\", \"cc\"]))\n  end\nend\n"
completions: ["  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |x| x.length\
    \ }\nend", "  lst.select { |word| word.length.even? }.sort\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.select { |word| word.length.even? }.sort\n\
    end", "  lst.select { |word| word.length.even? }.sort\nend", "  lst.sort_by {\
    \ |x| x.length }\nend", "  lst.sort_by { |str| str.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend",
  "  lst.sort_by { |x| x.length }\nend", "  lst.select { |x| x.length.even? }.sort\n\
    end", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.select { |x| x.length.even? }.sort { |a, b| a <=> b }\nend",
  "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort\nend", "  lst.select { |x| x.length.even? }.sort_by\
    \ { |x| x.length }\nend", "  # your code here\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.select { |word| word.length.even? }.sort\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.sort_by { |x|\
    \ x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.select { |word| word.length.even? }.sort_by\
    \ { |word| word.length }\nend", "  lst.select { |str| str.length.even? }.sort\n\
    end", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort\nend", "  lst.sort_by { |x| x.length }\nend", " \
    \ lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\n\
    end", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by { |x|\
    \ x.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |x|\
    \ x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ lst.select { |x| x.length.even? }.sort\nend", "  lst.delete_if { |x| x.length.odd?\
    \ }.sort\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by {\
    \ |word| word.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend",
  "  lst.select { |word| word.length.even? }.sort\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by {\
    \ |word| word.length }\nend", "  lst.select { |word| word.length.even? }.sort\n\
    end", "  lst.select { |x| x.length.even? }.sort_by { |x| x.length }\nend", " \
    \ lst.select { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort\nend", "  lst.sort_by { |word| word.length }\nend",
  "  lst.select { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select\
    \ { |word| word.length.even? }.sort\nend", "  lst.sort_by { |x| x.length }\nend",
  "  lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by { |x| x.length }\n\
    end", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |x| x.length\
    \ }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.select { |word| word.length.even? }.sort\nend",
  "  lst.select { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\n\
    end", "  lst.select { |word| word.length.even? }.sort\nend", "  lst.sort_by {\
    \ |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ # your code here\nend", "  # your code here\nend", "  lst.select { |word| word.length.even?\
    \ }.sort\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.select { |word| word.length.even? }.sort\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ lst.sort_by { |x| x.length }\nend", "  lst.select { |x| x.length.even? }.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.select { |str|\
    \ str.length.even? }.sort_by { |str| str.length }\nend", "  lst.sort_by { |x|\
    \ x.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend", " \
    \ lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select { |x| x.length.even?\
    \ }.sort\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select { |word|\
    \ word.length.even? }.sort_by { |word| word.length }\nend", "  lst.select { |word|\
    \ word.length.even? }.sort\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select\
    \ { |str| str.length.even? }.sort\nend", "  lst.select { |word| word.length.even?\
    \ }.sort\nend", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.select { |word| word.length.even? }.sort\n\
    end", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.select\
    \ { |x| x.length.even? }.sort\nend", "  lst.sort.select { |x| x.length.even? }\n\
    end", "  lst.sort_by { |word| word.length }\nend", "  lst.delete_if { |word| word.length.odd?\
    \ }.sort\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by {\
    \ |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ lst.select { |word| word.length.even? }.sort\nend", "  lst.delete_if { |word|\
    \ word.length.odd? }.sort_by { |word| word.length }\nend", "  lst.sort_by { |x|\
    \ x.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.select\
    \ { |x| x.length.even? }.sort\nend", "  lst.select { |x| x.length.even? }.sort\n\
    end", "  lst.select { |x| x.length.even? }.sort\nend", "  lst.select { |word|\
    \ word.length.even? }.sort\nend", "  lst.sort_by { |word| word.length }\nend",
  "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.select{|x| x.length.even?}.sort_by{|x| x.length}.sort\nend",
  "  lst.select { |x| x.length.even? }.sort_by { |x| x.length }\nend", "  lst.select\
    \ { |word| word.length.even? }.sort\nend", "  # your code here\nend", "  lst.sort_by\
    \ { |x| x.length }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by\
    \ { |word| word.length }\nend", "  lst.sort_by { |word| word.length }\nend", " \
    \ lst.sort_by { |word| word.length }\nend", "  lst.select { |x| x.length.even?\
    \ }.sort_by { |x| x.length }\nend", "  lst.select { |x| x.length.even? }.sort\n\
    end", "  lst.delete_if { |x| x.length.odd? }.sort\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.select {\
    \ |word| word.length.even? }.sort\nend", "  lst.sort_by { |word| word.length }\n\
    end", "  lst.sort_by { |word| word.length }\nend", "  lst.select { |word| word.length.even?\
    \ }.sort { |a, b| a <=> b }\nend", "  lst.select { |x| x.length.even? }.sort_by\
    \ { |x| x.length }\nend", "  lst.select { |x| x.length.even? }.sort\nend", " \
    \ lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word| word.length\
    \ }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.sort_by { |x| x.length\
    \ }\nend", "  lst.sort_by { |word| word.length }\nend", "  lst.sort_by { |word|\
    \ word.length }\nend", "  lst.sort_by { |x| x.length }\nend", "  lst.select {\
    \ |x| x.length.even? }.sort\nend", "  lst.select { |word| word.length.even? }.sort\n\
    end", "  lst.sort_by { |word| word.length }\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

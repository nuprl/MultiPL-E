name: HumanEval_85_add
language: rb
prompt: "# Given a non-empty list of integers lst. add the even elements that are\
  \ at odd indices..\n# Examples:\ndef add(lst)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_add\n\
  \    candidate = method(:add)\n    assert_equal(88, candidate.call([4, 88]))\n \
  \   assert_equal(122, candidate.call([4, 5, 6, 7, 2, 122]))\n    assert_equal(0,\
  \ candidate.call([4, 0, 6, 7]))\n    assert_equal(12, candidate.call([4, 4, 6, 8]))\n\
  \  end\nend\n"
completions: ["  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even?\
    \ && index.odd?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if num.even? && index.odd?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.each_with_index.map { |x,\
    \ i| x + lst[i + 1] if i.odd? }.compact\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do\
    \ |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n  end\n\
    \  sum\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even?\
    \ && index.odd?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? && num.even?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  lst.select.with_index { |x, i| x.even? && i.odd? }.sum\n\
    end", "  lst.each_with_index.map { |e, i| e + i if e.even? && i.odd? }.compact.sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? &&\
    \ num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? && num.even?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.each_with_index.inject(0) { |sum, (e, i)|\
    \ sum + (e if i.odd? && e.even?) }\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.each_with_index.map { |x,\
    \ i| i.odd? ? x : 0 }.reduce(:+)\nend", "  lst.select.with_index { |num, idx|\
    \ num.even? && idx.odd? }.sum\nend", "  lst.each_with_index.map { |x, i| x if\
    \ i.odd? && x.even? }.compact.reduce(:+)\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    sum += num if num.even? && index.odd?\n  end\n  sum\nend",
  "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.each_with_index.map { |x, i| x if i.odd?\
    \ && x.even? }.compact.reduce(:+)\nend", "  lst.each_with_index.map { |x, i| i.odd?\
    \ ? x : 0 }.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.each_with_index.map { |e, i| e\
    \ if i.odd? && e.even? }.compact.sum\nend", "  # lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]\n  # lst = [1, 3, 5, 7, 9]\n  # lst = [2, 4, 6, 8, 10]\n  # lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  # lst\
    \ = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]\n  # lst = [2, 4, 6, 8, 10, 12, 14, 16,\
    \ 18, 20]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n  # lst = [1, 3, 5, 7,\
    \ 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29]\n  # lst = [2, 4, 6, 8, 10, 12, 14,\
    \ 16, 18, 20, 22, 24, 26, 28, 30]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n  # lst = [1, 3, 5, 7, 9, 11, 13, 15,\
    \ 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39]\n  # lst = [2, 4, 6, 8, 10,\
    \ 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40]\n  # lst = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.each_with_index.map { |x, i| x if i.odd? && x.even? }.compact.reduce(:+)\n\
    end", "  sum = 0\n  lst.each_with_index do |num, idx|\n    if idx.odd? && num.even?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if num.even? && index.odd?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n    if\
    \ index.odd? && num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  sum\
    \ = 0\n  lst.each_with_index do |num, index|\n    if index.odd? && num.even?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? &&\
    \ num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.each_with_index.map { |x, i| x if i.odd? && x.even? }.compact.reduce(:+)\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? && num.even?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n\
    \    if index.odd? && num.even?\n      sum += num\n    end\n  end\n  sum\nend",
  "  lst.each_with_index.inject(0) { |sum, (x, i)| i.odd? && x.even? ? sum + x : sum\
    \ }\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend",
  "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n\
    \    if num.even? && index.odd?\n      sum += num\n    end\n  end\n  sum\nend",
  "  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\
    \ 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,\
    \ 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,\
    \ 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,\
    \ 94, 95, 96, 97, 98, 99, 100]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\
    \ 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\
    \ 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,\
    \ 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,\
    \ 106, 107, 108, 109, 110, 111, 112,", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.sum\n\
    end", "  i = 0\n  sum = 0\n  while i < lst.length\n    if i % 2 != 0\n      sum\
    \ += lst[i]\n    end\n    i += 1\n  end\n  return sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  sum =\
    \ 0\n  lst.each_with_index do |x, i|\n    if i.odd? && x.even?\n      sum += x\n\
    \    end\n  end\n  sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.each_with_index.map { |e, i| e if i.odd?\
    \ }.compact.reduce(:+)\nend", "  lst.each_with_index.map { |x, i| x if i.odd?\
    \ && x.even? }.compact.sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).reduce(:+)\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? &&\
    \ num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |e, i| e.even? && i.odd? }.sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? &&\
    \ num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n    if\
    \ index.odd? && num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  sum\
    \ = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do\
    \ |num, index|\n    if num.even? && index.odd?\n      sum += num\n    end\n  end\n\
    \  sum\nend", "  lst.each_with_index.inject(0) { |sum, (v, i)| i.odd? && v.even?\
    \ ? sum + v : sum }\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.reduce(:+)\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n\
    \    if index.odd? && num.even?\n      sum += num\n    end\n  end\n  sum\nend",
  "  lst.each_with_index.map { |x, i| x if i.odd? && x.even? }.compact.reduce(:+)\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  sum = 0\n  lst.each_with_index do |num, i|\n    sum +=\
    \ num if num.even? && i.odd?\n  end\n  sum\nend", "  lst.each_with_index.map {\
    \ |x, i| x if i.odd? && x.even? }.compact.sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? && num.even?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  # lst.each_with_index.map\
    \ { |x, i| x if i.odd? }.compact.reduce(:+)\n  lst.select.with_index { |x, i|\
    \ x if i.odd? }.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.each_with_index.map{|x,i| x if i.odd? && x.even?}.compact.reduce(:+)\nend",
  "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.each_with_index.map { |e, i| i.odd? ? e\
    \ : e + e }.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.each_with_index.inject(0) { |sum, (num, index)| index.odd? && num.even?\
    \ ? sum + num : sum }\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n\
    \    if index.odd? && num.even?\n      sum += num\n    end\n  end\n  sum\nend",
  "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  # lst =\
    \ [1,2,3,4,5,6,7,8,9,10]\n  # lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\
    \  # lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]\n\
    \  # lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]\n\
    \  # lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]\n\
    \  # lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60]\n\
    \  # lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22", "  lst.each_with_index.map\
    \ { |x, i| i.odd? ? x : 0 }.reduce(:+)\nend", "  lst.select.with_index { |_, i|\
    \ i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do |num,\
    \ index|\n    if index.odd? && num.even?\n      sum += num\n    end\n  end\n \
    \ sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\
    \  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\
    \  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10]\n  # lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.each_with_index.map { |x,\
    \ i| x if i.odd? && x.even? }.compact.reduce(:+)\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.each_with_index.map { |e,\
    \ i| i.odd? ? e : e + e }.reduce(:+)\nend", "  lst.select.with_index { |_, i|\
    \ i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do |num,\
    \ index|\n    if index.odd? && num.even?\n      sum += num\n    end\n  end\n \
    \ sum\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd?\
    \ && num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index do\
    \ |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n  end\n\
    \  sum\nend", "  lst.select.with_index { |_, idx| idx.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if index.odd? &&\
    \ num.even?\n      sum += num\n    end\n  end\n  sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_,\
    \ i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.each_with_index.map { |x,\
    \ i| x if i.odd? && x.even? }.compact.reduce(:+)\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if num.even? && index.odd?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  lst.each_with_index.map { |x, i| x if i.odd? && x.even?\
    \ }.compact.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  sum = 0\n  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n\
    \      sum += num\n    end\n  end\n  sum\nend", "  lst.each_with_index.map{|x,i|\
    \ i.odd? ? x : 0}.reduce(:+)\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.each_with_index.inject(0) { |sum, (item, index)| index.odd? && item.even?\
    \ ? sum + item : sum }\nend", "  sum = 0\n  lst.each_with_index do |num, index|\n\
    \    if index.odd? && num.even?\n      sum += num\n    end\n  end\n  sum\nend",
  "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  sum = 0\n\
    \  lst.each_with_index do |num, index|\n    if num.even? && index.odd?\n     \
    \ sum += num\n    end\n  end\n  sum\nend", "  lst.each_with_index.map { |x, i|\
    \ x + lst[i + 1] if i.odd? }.compact\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if index.odd? && num.even?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  sum = 0\n  lst.each_with_index { |num, index| sum += num\
    \ if num.even? && index.odd? }\n  sum\nend", "  lst.select.with_index { |_, i|\
    \ i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd?\
    \ }.select(&:even?).sum\nend", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", " \
    \ lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend", "  lst.select.with_index\
    \ { |_, i| i.odd? }.select(&:even?).sum\nend", "  sum = 0\n  lst.each_with_index\
    \ do |num, index|\n    if num.even? && index.odd?\n      sum += num\n    end\n\
    \  end\n  sum\nend", "  lst.select.with_index { |_, i| i.odd? }.sum\nend", " \
    \ lst.each_with_index.map { |e, i| e + i if i.odd? && e.even? }.compact.reduce(:+)\n\
    end", "  lst.select.with_index { |_, i| i.odd? }.select(&:even?).sum\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_156_int_to_mini_roman
language: rb
prompt: "# Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  # and return it in lowercase.\n# Restrictions: 1 <= num <= 1000\n# Examples:\ndef\
  \ int_to_mini_roman(number)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_int_to_mini_roman\n\
  \    candidate = method(:int_to_mini_roman)\n    assert_equal(\"xix\", candidate.call(19))\n\
  \    assert_equal(\"clii\", candidate.call(152))\n    assert_equal(\"ccli\", candidate.call(251))\n\
  \    assert_equal(\"cdxxvi\", candidate.call(426))\n    assert_equal(\"d\", candidate.call(500))\n\
  \    assert_equal(\"i\", candidate.call(1))\n    assert_equal(\"iv\", candidate.call(4))\n\
  \    assert_equal(\"xliii\", candidate.call(43))\n    assert_equal(\"xc\", candidate.call(90))\n\
  \    assert_equal(\"xciv\", candidate.call(94))\n    assert_equal(\"dxxxii\", candidate.call(532))\n\
  \    assert_equal(\"cm\", candidate.call(900))\n    assert_equal(\"cmxciv\", candidate.call(994))\n\
  \    assert_equal(\"m\", candidate.call(1000))\n  end\nend\n"
completions: ["  roman_numerals = {\n    'M' => 1000,\n    'CM' => 900,\n    'D' =>\
    \ 500,\n    'CD' => 400,\n    'C' => 100,\n    'XC' => 90,\n    'L' => 50,\n \
    \   'XL' => 40,\n    'X' => 10,\n    'IX' => 9,\n    'V' => 5,\n    'IV' => 4,\n\
    \    'I' => 1\n  }\n  result = ''\n  roman_numerals.each do |roman, arabic|\n\
    \    result << roman * (number / arabic)\n    number = number % arabic\n  end\n\
    \  result\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n \
    \   500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n\
    \    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90\
    \ => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n\
    \  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number\
    \ % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral\
    \ << \"l\" * (number % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n\
    \  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number\
    \ % 5 / 1)\n  roman_numeral\nend", "  roman_numeral = \"\"\n  roman_numeral <<\
    \ \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n\
    \    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90\
    \ => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n\
    \  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number\
    \ % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral\
    \ << \"l\" * (number % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n\
    \  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number\
    \ % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n \
    \   900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 =>\
    \ 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n   \
    \ 5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000\
    \ => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n  \
    \  500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    5 =>\
    \ 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n   \
    \ 1000 => 'm'\n  }\n  roman_numeral = ''\n  roman_numerals.keys.reverse.each do\
    \ |divisor|\n    quotient, modulus = number.divmod(divisor)\n    next if quotient.zero?\n\
    \    roman_numeral << roman_numerals[divisor] * quotient\n    number = modulus\n\
    \  end\n  roman_numeral\nend", "  roman_numerals = {\n    1 => 'i',\n    4 =>\
    \ 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50\
    \ => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n\
    \    900 => 'cm',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numeral = \"\"\n  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral\
    \ << \"d\" * (number % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 /\
    \ 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n  roman_numeral << \"\
    x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral\
    \ << \"i\" * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n\
    \    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n\
    \    500 => 'd',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.each do\
    \ |key, value|\n    if number >= key\n      result += value * (number / key)\n\
    \      number = number % key\n    end\n  end\n  result\nend", "  roman_numerals\
    \ = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 =>\
    \ 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals[number]\nend",
  "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n   \
    \ 400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1 => 'i',\n    4 => 'iv',\n    5 => 'v',\n \
    \   9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50 => 'l',\n    90 => 'xc',\n\
    \    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n    900 => 'cm',\n    1000\
    \ => 'm'\n  }\n  roman_numerals.keys.reverse.each_with_object('') do |key, result|\n\
    \    while number >= key\n      result << roman_numerals[key]\n      number -=\
    \ key\n    end\n  end\nend", "  roman_numerals = {\n    'M' => 1000,\n    'CM'\
    \ => 900,\n    'D' => 500,\n    'CD' => 400,\n    'C' => 100,\n    'XC' => 90,\n\
    \    'L' => 50,\n    'XL' => 40,\n    'X' => 10,\n    'IX' => 9,\n    'V' => 5,\n\
    \    'IV' => 4,\n    'I' => 1\n  }\n  roman_numerals.each_with_object('') do |(numeral,\
    \ value), roman|\n    roman << numeral * (number / value)\n    number %= value\n\
    \  end\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500\
    \ => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n\
    \    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n\
    \    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    4 =>\
    \ 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50\
    \ => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n\
    \    900 => 'cm',\n    1000 => 'm'\n  }\n  roman_numerals.keys.reverse.each_with_object('')\
    \ do |key, roman|\n    while number >= key\n      roman << roman_numerals[key]\n\
    \      number -= key\n    end\n  end\nend", "  roman_numerals = {\n    1000 =>\
    \ 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n  \
    \  500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    5 =>\
    \ 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n   \
    \ 1000 => 'm'\n  }\n  roman_numerals[number]\nend", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ # your code here\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 =>\
    \ 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n  \
    \  5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n\
    \    1000 => 'm'\n  }\n  roman_numerals[number]\nend", "  roman_numerals = {\n\
    \    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numeral = ''\n  roman_numeral << 'm' * (number / 1000)\n\
    \  roman_numeral << 'd' * (number % 1000 / 500)\n  roman_numeral << 'c' * (number\
    \ % 500 / 100)\n  roman_numeral << 'l' * (number % 100 / 50)\n  roman_numeral\
    \ << 'x' * (number % 50 / 10)\n  roman_numeral << 'v' * (number % 10 / 5)\n  roman_numeral\
    \ << 'i' * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    'M' => 1000,\n    'CM' => 900,\n    'D' => 500,\n    'CD' => 400,\n\
    \    'C' => 100,\n    'XC' => 90,\n    'L' => 50,\n    'XL' => 40,\n    'X' =>\
    \ 10,\n    'IX' => 9,\n    'V' => 5,\n    'IV' => 4,\n    'I' => 1\n  }\n  result\
    \ = ''\n  roman_numerals.each do |roman, arabic|\n    result << roman * (number\
    \ / arabic)\n    number = number % arabic\n  end\n  result\nend", "  roman_numerals\
    \ = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 =>\
    \ 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals[number]\nend",
  "  roman_numeral = \"\"\n  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral\
    \ << \"d\" * (number % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 /\
    \ 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n  roman_numeral << \"\
    x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral\
    \ << \"i\" * (number % 5 / 1)\n  roman_numeral\nend", "  # your code here\nend",
  "  # your code here\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = ''\n  roman_numeral << 'm'\
    \ * (number / 1000)\n  roman_numeral << 'd' * (number % 1000 / 500)\n  roman_numeral\
    \ << 'c' * (number % 500 / 100)\n  roman_numeral << 'l' * (number % 100 / 50)\n\
    \  roman_numeral << 'x' * (number % 50 / 10)\n  roman_numeral << 'v' * (number\
    \ % 10 / 5)\n  roman_numeral << 'i' * (number % 5 / 1)\n  roman_numeral\nend",
  "  # your code here\nend", "  roman_numerals = {\n    1 => 'i',\n    4 => 'iv',\n\
    \    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50 => 'l',\n\
    \    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n    900\
    \ => 'cm',\n    1000 => 'm'\n  }", "  roman_numerals = {\n    1000 => 'm',\n \
    \   900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 =>\
    \ 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n   \
    \ 5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000\
    \ => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1 => 'i',\n    4 => 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 =>\
    \ 'x',\n    40 => 'xl',\n    50 => 'l',\n    90 => 'xc',\n    100 => 'c',\n  \
    \  400 => 'cd',\n    500 => 'd',\n    900 => 'cm',\n    1000 => 'm'\n  }\n  roman_numerals.keys.reverse.each_with_object('')\
    \ do |key, result|\n    while number >= key\n      result << roman_numerals[key]\n\
    \      number -= key\n    end\n  end\nend", "  roman_numerals = {\n    1000 =>\
    \ 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 =>\
    \ 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numeral = ''\n  roman_numerals.each\
    \ do |key, value|\n    if number >= key\n      roman_numeral << value\n      number\
    \ -= key\n    end\n  end\n  roman_numeral\nend", "  roman_numerals = {\n    1000\
    \ => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n\
    \  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number\
    \ % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral\
    \ << \"l\" * (number % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n\
    \  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number\
    \ % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n \
    \   900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 =>\
    \ 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n   \
    \ 5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  # your code here\nend", " \
    \ roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 =>\
    \ 'l',\n    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals[number]\n\
    end", "  roman_numeral = ''\n  roman_numeral << 'm' * (number / 1000)\n  roman_numeral\
    \ << 'd' * (number % 1000 / 500)\n  roman_numeral << 'c' * (number % 500 / 100)\n\
    \  roman_numeral << 'l' * (number % 100 / 50)\n  roman_numeral << 'x' * (number\
    \ % 50 / 10)\n  roman_numeral << 'v' * (number % 10 / 5)\n  roman_numeral << 'i'\
    \ * (number % 5 / 1)\n  roman_numeral\nend", "  # your code here\nend", "  # your\
    \ code here\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  # TODO: implement me!\nend", "  roman_numerals\
    \ = {\n    1 => 'i',\n    4 => 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 =>\
    \ 'x',\n    40 => 'xl',\n    50 => 'l',\n    90 => 'xc',\n    100 => 'c',\n  \
    \  400 => 'cd',\n    500 => 'd',\n    900 => 'cm',\n    1000 => 'm'\n  }", " \
    \ roman_numeral = \"\"\n  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral\
    \ << \"d\" * (number % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 /\
    \ 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n  roman_numeral << \"\
    x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral\
    \ << \"i\" * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n\
    \    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numeral = ''\n  roman_numeral << 'm' * (number / 1000)\n\
    \  roman_numeral << 'd' * (number % 1000 / 500)\n  roman_numeral << 'c' * (number\
    \ % 500 / 100)\n  roman_numeral << 'l' * (number % 100 / 50)\n  roman_numeral\
    \ << 'x' * (number % 50 / 10)\n  roman_numeral << 'v' * (number % 10 / 5)\n  roman_numeral\
    \ << 'i' * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n  \
    \  1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n\
    \    500 => 'd',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.each do\
    \ |key, value|\n    if number == key\n      result << value\n    elsif number\
    \ > key\n      result << value * (number / key)\n      number = number % key\n\
    \    end\n  end\n  result\nend", "  roman_numerals = {\n    1000 => 'm',\n   \
    \ 900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 =>\
    \ 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n   \
    \ 5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000\
    \ => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 =>\
    \ 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numeral = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    roman_numeral\
    \ << roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  roman_numeral\n\
    end", "  roman_numerals = {\n    1 => 'i',\n    4 => 'iv',\n    5 => 'v',\n  \
    \  9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50 => 'l',\n    90 => 'xc',\n\
    \    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n    900 => 'cm',\n    1000\
    \ => 'm'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n  \
    \  500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = ''\n  roman_numeral << 'm'\
    \ * (number / 1000)\n  roman_numeral << 'd' * (number % 1000 / 500)\n  roman_numeral\
    \ << 'c' * (number % 500 / 100)\n  roman_numeral << 'l' * (number % 100 / 50)\n\
    \  roman_numeral << 'x' * (number % 50 / 10)\n  roman_numeral << 'v' * (number\
    \ % 10 / 5)\n  roman_numeral << 'i' * (number % 5 / 1)\n  roman_numeral\nend",
  "  roman_numeral = \"\"\n  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral\
    \ << \"d\" * (number % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 /\
    \ 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n  roman_numeral << \"\
    x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral\
    \ << \"i\" * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n\
    \    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numeral = \"\"\n  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral\
    \ << \"d\" * (number % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 /\
    \ 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n  roman_numeral << \"\
    x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral\
    \ << \"i\" * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n\
    \    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n  \
    \  500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n  while number > 0\n\
    \    if number >= 1000\n      roman_numeral += \"m\"\n      number -= 1000\n \
    \   elsif number >= 900\n      roman_numeral += \"cm\"\n      number -= 900\n\
    \    elsif number >= 500\n      roman_numeral += \"d\"\n      number -= 500\n\
    \    elsif number >= 400\n      roman_numeral += \"cd\"\n      number -= 400\n\
    \    elsif number >= 100\n      roman_numeral += \"c\"\n      number -= 100\n\
    \    elsif number >= 90\n      roman_numeral += \"xc\"\n      number -= 90\n \
    \   elsif number >= 50\n      roman_numeral += \"l\"\n      number -= 50\n   \
    \ elsif number >= 40\n      roman_numeral += \"xl\"\n      number -= 40\n    elsif\
    \ number >= 10\n      roman_numeral += \"x\"\n      number -= 10\n    elsif number\
    \ >= 9\n      roman_numeral += \"ix\"\n      number -= 9\n    elsif number >=\
    \ 5\n      roman_numeral += \"v\"\n      number -= 5\n    elsif number >= 4\n\
    \      roman_numeral += \"iv\"\n      number -= 4\n    elsif number >= 1\n   \
    \   roman_numeral += \"i\"\n      number -= 1\n    end\n  end\n  roman_numeral\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numeral = \"\"\n  roman_numeral += \"i\" * (number %\
    \ 5)\n  roman_numeral = roman_numeral.gsub(\"iiiii\", \"v\")\n  roman_numeral\
    \ = roman_numeral.gsub(\"v\", \"iv\") if roman_numeral.include?(\"iv\")\n  roman_numeral\
    \ = roman_numeral.gsub(\"iiii\", \"iv\")\n  roman_numeral = roman_numeral.gsub(\"\
    iv\", \"iiiii\") if roman_numeral.include?(\"iiiii\")\n  roman_numeral = roman_numeral.gsub(\"\
    iiii\", \"iv\")\n  roman_numeral = roman_numeral.gsub(\"iiiii\", \"v\")\n  roman_numeral\
    \ = roman_numeral.gsub(\"v\", \"iv\") if roman_numeral.include?(\"iv\")\n  roman_numeral\
    \ = roman_numeral.gsub(\"iiiii\", \"v\")\n  roman_numeral = roman_numeral.gsub(\"\
    v\", \"iv\") if roman_numeral.include?(\"iv\")\n  roman_numeral = roman_numeral.gsub(\"\
    iiiii\", \"v\")\n  roman_numeral = roman_numeral.gsub(\"v\", \"iv\") if roman_numeral.include?(\"\
    iv\")\n  roman_numeral = roman_numeral.gsub(\"iiiii\", \"v\")\n  roman_numeral\
    \ = roman_numeral.gsub(\"v\", \"iv\") if roman_numeral.include?(\"iv\")\n  roman_numeral\
    \ = roman_numeral.gsub(\"iiiii\", \"v\")\n  roman_numeral = roman_numeral.gsub(\"\
    v\", \"iv\") if roman_numeral.include?(\"iv\")\n  roman_numeral = roman_numeral.gsub(\"\
    iiiii\", \"v\")\n  roman_numeral = roman_numeral.gsub(\"v\", \"iv\") if roman_numeral.include?(\"\
    iv\")\n  roman_", "  # your code here\nend", "  roman_numerals = {\n    1000 =>\
    \ 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  # your code here\nend", "  roman_numerals = {\n    1000 => 'm',\n  \
    \  900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 =>\
    \ 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n   \
    \ 5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000\
    \ => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ # your code here\nend", "  roman_numeral = \"\"\n  roman_numeral << \"m\" *\
    \ (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n  roman_numeral\
    \ << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number % 100 /\
    \ 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral << \"v\"\
    \ * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n  roman_numeral\n\
    end", "  roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n  \
    \  50 => 'l',\n    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  result\
    \ = ''\n  roman_numerals.keys.reverse.each do |divisor|\n    quotient, modulus\
    \ = number.divmod(divisor)\n    result << roman_numerals[divisor] * quotient\n\
    \    number = modulus\n  end\n  result\nend", "  roman_numerals = {\n    1 =>\
    \ 'i',\n    4 => 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40\
    \ => 'xl',\n    50 => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n\
    \    500 => 'd',\n    900 => 'cm',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  result = ''\n  roman_numerals = {\n    'M' => 1000,\n    'CM' => 900,\n\
    \    'D' => 500,\n    'CD' => 400,\n    'C' => 100,\n    'XC' => 90,\n    'L'\
    \ => 50,\n    'XL' => 40,\n    'X' => 10,\n    'IX' => 9,\n    'V' => 5,\n   \
    \ 'IV' => 4,\n    'I' => 1\n  }\n  roman_numerals.each do |key, value|\n    result\
    \ << key * (number / value)\n    number = number % value\n  end\n  result\nend",
  "  roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n\
    \    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals[number]\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numeral = \"\"\n  roman_numeral << \"m\" * (number /\
    \ 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n  roman_numeral <<\
    \ \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n\
    \  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number\
    \ % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n  roman_numeral\nend",
  "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n   \
    \ 400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n  \
    \  500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n  roman_numeral\
    \ << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n  \
    \  4 => 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n\
    \    50 => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 =>\
    \ 'd',\n    900 => 'cm',\n    1000 => 'm'\n  }\n  roman_numerals.keys.reverse.each_with_object('')\
    \ do |key, result|\n    while number >= key\n      result << roman_numerals[key]\n\
    \      number -= key\n    end\n  end\nend", "  roman_numeral = \"\"\n  roman_numeral\
    \ << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n  roman_numeral\
    \ << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  # your code here\nend", "  roman_numerals =\
    \ {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n \
    \   100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numeral = \"\"\n  roman_numeral << \"m\" * (number / 1000)\n  roman_numeral\
    \ << \"d\" * (number % 1000 / 500)\n  roman_numeral << \"c\" * (number % 500 /\
    \ 100)\n  roman_numeral << \"l\" * (number % 100 / 50)\n  roman_numeral << \"\
    x\" * (number % 50 / 10)\n  roman_numeral << \"v\" * (number % 10 / 5)\n  roman_numeral\
    \ << \"i\" * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numeral = \"\"\n\
    \  roman_numeral += \"m\" * (number / 1000)\n  roman_numeral += \"d\" * (number\
    \ % 1000 / 500)\n  roman_numeral += \"c\" * (number % 500 / 100)\n  roman_numeral\
    \ += \"l\" * (number % 100 / 50)\n  roman_numeral += \"x\" * (number % 50 / 10)\n\
    \  roman_numeral += \"v\" * (number % 10 / 5)\n  roman_numeral += \"i\" * (number\
    \ % 5 / 1)\n  roman_numeral\nend", "  roman_numeral = \"\"\n  roman_numeral <<\
    \ \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    4 =>\
    \ 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50\
    \ => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n\
    \    900 => 'cm',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numerals = {\n    1 => 'i',\n    4 => 'iv',\n    5 => 'v',\n  \
    \  9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50 => 'l',\n    90 => 'xc',\n\
    \    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n    900 => 'cm',\n    1000\
    \ => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each do |key|\n  \
    \  while number >= key\n      result += roman_numerals[key]\n      number -= key\n\
    \    end\n  end\n  result\nend", "  roman_numerals = {\n    1 => 'i',\n    5 =>\
    \ 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n   \
    \ 1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each do |divisor|\n\
    \    quotient, modulus = number.divmod(divisor)\n    result << roman_numerals[divisor]\
    \ * quotient\n    number = modulus\n  end\n  result\nend", "  roman_numeral =\
    \ \"\"\n  roman_numeral += \"m\" * (number / 1000)\n  roman_numeral += \"d\" *\
    \ (number % 1000 / 500)\n  roman_numeral += \"c\" * (number % 500 / 100)\n  roman_numeral\
    \ += \"l\" * (number % 100 / 50)\n  roman_numeral += \"x\" * (number % 50 / 10)\n\
    \  roman_numeral += \"v\" * (number % 10 / 5)\n  roman_numeral += \"i\" * (number\
    \ % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n    'M' => 1000,\n \
    \   'CM' => 900,\n    'D' => 500,\n    'CD' => 400,\n    'C' => 100,\n    'XC'\
    \ => 90,\n    'L' => 50,\n    'XL' => 40,\n    'X' => 10,\n    'IX' => 9,\n  \
    \  'V' => 5,\n    'IV' => 4,\n    'I' => 1\n  }\n  result = ''\n  roman_numerals.each\
    \ do |key, value|\n    result << key * (number / value)\n    number = number %\
    \ value\n  end\n  result\nend", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = ''\n  roman_numeral <<\
    \ 'm' * (number / 1000)\n  roman_numeral << 'd' * (number % 1000 / 500)\n  roman_numeral\
    \ << 'c' * (number % 500 / 100)\n  roman_numeral << 'l' * (number % 100 / 50)\n\
    \  roman_numeral << 'x' * (number % 50 / 10)\n  roman_numeral << 'v' * (number\
    \ % 10 / 5)\n  roman_numeral << 'i' * (number % 5 / 1)\n  roman_numeral\nend",
  "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n   \
    \ 400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n \
    \   50 => 'l',\n    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals[number]\n\
    end", "  roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n  \
    \  50 => 'l',\n    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  result\
    \ = ''\n  roman_numerals.each do |key, value|\n    if number == key\n      result\
    \ << value\n    elsif number > key\n      result << value * (number / key)\n \
    \     number = number % key\n    end\n  end\n  result\nend", "  # your code here\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    4 => 'iv',\n    5 =>\
    \ 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50 => 'l',\n    90\
    \ => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n    900 => 'cm',\n\
    \    1000 => 'm'\n  }\n  roman_numerals.keys.reverse.each_with_object('') do |key,\
    \ roman|\n    while number >= key\n      roman << roman_numerals[key]\n      number\
    \ -= key\n    end\n  end\nend", "  roman_numerals = {\n    1 => 'i',\n    4 =>\
    \ 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50\
    \ => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n\
    \    900 => 'cm',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numerals = {\n    'M' => 1000,\n    'CM' => 900,\n    'D' => 500,\n\
    \    'CD' => 400,\n    'C' => 100,\n    'XC' => 90,\n    'L' => 50,\n    'XL'\
    \ => 40,\n    'X' => 10,\n    'IX' => 9,\n    'V' => 5,\n    'IV' => 4,\n    'I'\
    \ => 1\n  }\n  result = ''\n  roman_numerals.each do |key, value|\n    result\
    \ << key * (number / value)\n    number = number % value\n  end\n  result\nend",
  "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n   \
    \ 400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n \
    \   50 => 'l',\n    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals.each\
    \ do |key, value|\n    if number == key\n      return value\n    end\n  end\n\
    \  return \"Not a valid number\"\nend", "  roman_numerals = {\n    1000 => 'm',\n\
    \    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90\
    \ => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = ''\n  roman_numeral\
    \ << 'm' * (number / 1000)\n  roman_numeral << 'd' * (number % 1000 / 500)\n \
    \ roman_numeral << 'c' * (number % 500 / 100)\n  roman_numeral << 'l' * (number\
    \ % 100 / 50)\n  roman_numeral << 'x' * (number % 50 / 10)\n  roman_numeral <<\
    \ 'v' * (number % 10 / 5)\n  roman_numeral << 'i' * (number % 5 / 1)\n  roman_numeral\n\
    end", "  roman_numeral = ''\n  roman_numeral << 'm' * (number / 1000)\n  roman_numeral\
    \ << 'd' * (number % 1000 / 500)\n  roman_numeral << 'c' * (number % 500 / 100)\n\
    \  roman_numeral << 'l' * (number % 100 / 50)\n  roman_numeral << 'x' * (number\
    \ % 50 / 10)\n  roman_numeral << 'v' * (number % 10 / 5)\n  roman_numeral << 'i'\
    \ * (number % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n    1 => 'i',\n\
    \    4 => 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n\
    \    50 => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 =>\
    \ 'd',\n    900 => 'cm',\n    1000 => 'm'\n  }\n  roman_numerals.keys.reverse.each_with_object('')\
    \ do |key, roman|\n    while number >= key\n      roman << roman_numerals[key]\n\
    \      number -= key\n    end\n  end\nend", "  # your code here\nend", "  roman_numerals\
    \ = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 =>\
    \ 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  # your code here\nend", "  roman_numerals = {\n    1000 =>\
    \ 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    \"M\" => 1000,\n    \"CM\" => 900,\n    \"D\" => 500,\n    \"CD\" =>\
    \ 400,\n    \"C\" => 100,\n    \"XC\" => 90,\n    \"L\" => 50,\n    \"XL\" =>\
    \ 40,\n    \"X\" => 10,\n    \"IX\" => 9,\n    \"V\" => 5,\n    \"IV\" => 4,\n\
    \    \"I\" => 1\n  }\n  result = \"\"\n  roman_numerals.each do |roman, arabic|\n\
    \    result << roman * (number / arabic)\n    number = number % arabic\n  end\n\
    \  result\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n \
    \   500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n  roman_numeral\
    \ << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1 => 'i',\n    4 => 'iv',\n\
    \    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50 => 'l',\n\
    \    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n    900\
    \ => 'cm',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numeral = ''\n  roman_numeral << 'i' * (number % 5)\n  roman_numeral.prepend('v')\
    \ if number >= 5\n  roman_numeral.prepend('x') if number >= 10\n  roman_numeral\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  # your code here\nend", "  roman_numerals = {\n    1000 =>\
    \ 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals\
    \ = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n\
    \    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 =>\
    \ 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", " \
    \ roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n  \
    \  400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n\
    \    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n\
    \  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    5 => 'v',\n    10 =>\
    \ 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n\
    \  result = ''\n  roman_numerals.keys.reverse.each do |divisor|\n    quotient,\
    \ modulus = number.divmod(divisor)\n    if quotient > 0\n      if quotient > 3\n\
    \        result << roman_numerals[divisor] * (quotient / 5)\n        result <<\
    \ roman_numerals[divisor * 5]\n        result << roman_numerals[divisor] * (quotient\
    \ % 5)\n      else\n        result << roman_numerals[divisor] * quotient\n   \
    \   end\n    end\n    number = modulus\n  end\n  result\nend", "  roman_numerals\
    \ = {\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 =>\
    \ 'c',\n    500 => 'd',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n  \
    \  500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numeral = \"\"\n  roman_numeral\
    \ << \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    'M' => 1000,\n    'CM' => 900,\n\
    \    'D' => 500,\n    'CD' => 400,\n    'C' => 100,\n    'XC' => 90,\n    'L'\
    \ => 50,\n    'XL' => 40,\n    'X' => 10,\n    'IX' => 9,\n    'V' => 5,\n   \
    \ 'IV' => 4,\n    'I' => 1\n  }\n  roman_numerals.each_with_object('') do |(roman,\
    \ arabic), result|\n    while number >= arabic\n      result << roman\n      number\
    \ -= arabic\n    end\n  end\nend", "  roman_numeral = \"\"\n  roman_numeral <<\
    \ \"m\" * (number / 1000)\n  roman_numeral << \"d\" * (number % 1000 / 500)\n\
    \  roman_numeral << \"c\" * (number % 500 / 100)\n  roman_numeral << \"l\" * (number\
    \ % 100 / 50)\n  roman_numeral << \"x\" * (number % 50 / 10)\n  roman_numeral\
    \ << \"v\" * (number % 10 / 5)\n  roman_numeral << \"i\" * (number % 5 / 1)\n\
    \  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000 => 'm',\n    900\
    \ => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n\
    \    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n\
    \    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n  \
    \  5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n\
    \    1000 => 'm'\n  }\n  roman_numerals[number]\nend", "  roman_numerals = {\n\
    \    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100\
    \ => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n\
    \    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  # your\
    \ code here\nend", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n\
    \    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 =>\
    \ 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4\
    \ => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1 => 'i',\n    4 =>\
    \ 'iv',\n    5 => 'v',\n    9 => 'ix',\n    10 => 'x',\n    40 => 'xl',\n    50\
    \ => 'l',\n    90 => 'xc',\n    100 => 'c',\n    400 => 'cd',\n    500 => 'd',\n\
    \    900 => 'cm',\n    1000 => 'm'\n  }", "  roman_numerals = {\n    1 => 'i',\n\
    \    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n    500 => 'd',\n\
    \    1000 => 'm'\n  }\n  roman_numerals[number]\nend", "  roman_numerals = {\n\
    \    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n\
    \    500 => 'd',\n    1000 => 'm'\n  }\n  roman_numerals[number]\nend", "  roman_numeral\
    \ = ''\n  roman_numeral << 'm' * (number / 1000)\n  roman_numeral << 'd' * (number\
    \ % 1000 / 500)\n  roman_numeral << 'c' * (number % 500 / 100)\n  roman_numeral\
    \ << 'l' * (number % 100 / 50)\n  roman_numeral << 'x' * (number % 50 / 10)\n\
    \  roman_numeral << 'v' * (number % 10 / 5)\n  roman_numeral << 'i' * (number\
    \ % 5 / 1)\n  roman_numeral\nend", "  roman_numerals = {\n    1000 => 'm',\n \
    \   900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n    90 =>\
    \ 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n   \
    \ 5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n    1000\
    \ => 'm',\n    900 => 'cm',\n    500 => 'd',\n    400 => 'cd',\n    100 => 'c',\n\
    \    90 => 'xc',\n    50 => 'l',\n    40 => 'xl',\n    10 => 'x',\n    9 => 'ix',\n\
    \    5 => 'v',\n    4 => 'iv',\n    1 => 'i'\n  }", "  roman_numerals = {\n  \
    \  1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100 => 'c',\n\
    \    500 => 'd',\n    1000 => 'm'\n  }\n  result = ''\n  roman_numerals.keys.reverse.each\
    \ do |divisor|\n    quotient, modulus = number.divmod(divisor)\n    result <<\
    \ roman_numerals[divisor] * quotient\n    number = modulus\n  end\n  result\n\
    end", "  roman_numerals = {\n    1000 => 'm',\n    900 => 'cm',\n    500 => 'd',\n\
    \    400 => 'cd',\n    100 => 'c',\n    90 => 'xc',\n    50 => 'l',\n    40 =>\
    \ 'xl',\n    10 => 'x',\n    9 => 'ix',\n    5 => 'v',\n    4 => 'iv',\n    1\
    \ => 'i'\n  }"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

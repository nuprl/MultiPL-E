language: rb
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    return n\n\
    \  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass\
    \ TestHumanEval < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n\
    \    assert_equal(55, candidate.call(10))\n    assert_equal(1, candidate.call(1))\n\
    \    assert_equal(21, candidate.call(8))\n    assert_equal(89, candidate.call(11))\n\
    \    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp06ax49cm

    Started

    .

    Finished in 0.000784251 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1275.10 tests/s, 6375.51 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 1
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: SyntaxError
  stderr: '/tmp/tmpbiv8gkcq.rb:6: class definition in method body

    class TestHumanEval < Test::Unit::TestCase

    ^~~~~~~~~~~~~~~~~~~

    /tmp/tmpbiv8gkcq.rb:15: syntax error, unexpected end-of-input, expecting `end''

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  return\
    \ fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpzj84o38s

    Started

    .

    Finished in 0.000611902 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1634.25 tests/s, 8171.24 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 1
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: SyntaxError
  stderr: '/tmp/tmpbiv8gkcq.rb:6: class definition in method body

    class TestHumanEval < Test::Unit::TestCase

    ^~~~~~~~~~~~~~~~~~~

    /tmp/tmpbiv8gkcq.rb:15: syntax error, unexpected end-of-input, expecting `end''

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    return 0\n\
    \  elsif n == 1\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fib\n\
    \    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n    assert_equal(1,\
    \ candidate.call(1))\n    assert_equal(21, candidate.call(8))\n    assert_equal(89,\
    \ candidate.call(11))\n    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpa56pyk5h

    Started

    .

    Finished in 0.000984567 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1015.67 tests/s, 5078.37 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  return\
    \ fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpzj84o38s

    Started

    .

    Finished in 0.000611902 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1634.25 tests/s, 8171.24 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 1
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: SyntaxError
  stderr: '/tmp/tmpbiv8gkcq.rb:6: class definition in method body

    class TestHumanEval < Test::Unit::TestCase

    ^~~~~~~~~~~~~~~~~~~

    /tmp/tmpbiv8gkcq.rb:15: syntax error, unexpected end-of-input, expecting `end''

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    return 0\n\
    \  elsif n == 1\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fib\n\
    \    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n    assert_equal(1,\
    \ candidate.call(1))\n    assert_equal(21, candidate.call(8))\n    assert_equal(89,\
    \ candidate.call(11))\n    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpa56pyk5h

    Started

    .

    Finished in 0.000984567 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1015.67 tests/s, 5078.37 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    0\n  elsif\
    \ n == 1\n    1\n  else\n    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n\
    \    assert_equal(55, candidate.call(10))\n    assert_equal(1, candidate.call(1))\n\
    \    assert_equal(21, candidate.call(8))\n    assert_equal(89, candidate.call(11))\n\
    \    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpylagy37j

    Started

    .

    Finished in 0.000879151 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1137.46 tests/s, 5687.31 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 1 if n <= 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp8qkkhvdt

    Started

    .

    Finished in 0.000766729 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1304.24 tests/s, 6521.21 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 1 if n == 1 || n\
    \ == 2\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpqb3b9knh

    Started

    .

    Finished in 0.001144213 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    873.96 tests/s, 4369.82 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 1 if n <= 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp8qkkhvdt

    Started

    .

    Finished in 0.000766729 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1304.24 tests/s, 6521.21 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    return 0\n\
    \  elsif n == 1\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fib\n\
    \    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n    assert_equal(1,\
    \ candidate.call(1))\n    assert_equal(21, candidate.call(8))\n    assert_equal(89,\
    \ candidate.call(11))\n    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpa56pyk5h

    Started

    .

    Finished in 0.000984567 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1015.67 tests/s, 5078.37 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    return 0\n\
    \  elsif n == 1\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fib\n\
    \    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n    assert_equal(1,\
    \ candidate.call(1))\n    assert_equal(21, candidate.call(8))\n    assert_equal(89,\
    \ candidate.call(11))\n    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpa56pyk5h

    Started

    .

    Finished in 0.000984567 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1015.67 tests/s, 5078.37 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    return 0\n\
    \  elsif n == 1\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fib\n\
    \    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n    assert_equal(1,\
    \ candidate.call(1))\n    assert_equal(21, candidate.call(8))\n    assert_equal(89,\
    \ candidate.call(11))\n    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpa56pyk5h

    Started

    .

    Finished in 0.000984567 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1015.67 tests/s, 5078.37 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    0\n  elsif\
    \ n == 1\n    1\n  else\n    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n\
    \    assert_equal(55, candidate.call(10))\n    assert_equal(1, candidate.call(1))\n\
    \    assert_equal(21, candidate.call(8))\n    assert_equal(89, candidate.call(11))\n\
    \    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpylagy37j

    Started

    .

    Finished in 0.000879151 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1137.46 tests/s, 5687.31 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 1 if n <= 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp8qkkhvdt

    Started

    .

    Finished in 0.000766729 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1304.24 tests/s, 6521.21 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n == 0\n    0\n  elsif\
    \ n == 1\n    1\n  else\n    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n\
    \    assert_equal(55, candidate.call(10))\n    assert_equal(1, candidate.call(1))\n\
    \    assert_equal(21, candidate.call(8))\n    assert_equal(89, candidate.call(11))\n\
    \    assert_equal(144, candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpylagy37j

    Started

    .

    Finished in 0.000879151 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1137.46 tests/s, 5687.31 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpxe0ltr6i

    Started

    .

    Finished in 0.000650326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1537.69 tests/s, 7688.45 assertions/s

    '
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n < 2\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpq017rsdz

    Started

    .

    Finished in 0.000734894 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1360.74 tests/s, 6803.70 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  if n < 2\n    n\n  else\n\
    \    fib(n-1) + fib(n-2)\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp7qlif0ah

    Started

    .

    Finished in 0.000626937 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1595.06 tests/s, 7975.28 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return 0 if n == 0\n  return\
    \ 1 if n == 1\n  return fib(n-1) + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval\
    \ < Test::Unit::TestCase\n  def test_fib\n    candidate = method(:fib)\n    assert_equal(55,\
    \ candidate.call(10))\n    assert_equal(1, candidate.call(1))\n    assert_equal(21,\
    \ candidate.call(8))\n    assert_equal(89, candidate.call(11))\n    assert_equal(144,\
    \ candidate.call(12))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkh74ojxf

    Started

    .

    Finished in 0.000779774 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1282.42 tests/s, 6412.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285
- exit_code: 0
  program: "# Return n-th Fibonacci number.\ndef fib(n)\n  return n if n <= 1\n  fib(n-1)\
    \ + fib(n-2)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_fib\n    candidate = method(:fib)\n    assert_equal(55, candidate.call(10))\n\
    \    assert_equal(1, candidate.call(1))\n    assert_equal(21, candidate.call(8))\n\
    \    assert_equal(89, candidate.call(11))\n    assert_equal(144, candidate.call(12))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpu291dnah

    Started

    .

    Finished in 0.000721177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 5 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1386.62 tests/s, 6933.11 assertions/s

    '
  stdout: ''
  timestamp: 1659793285

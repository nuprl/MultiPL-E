name: HumanEval_79_decimal_to_binary
language: rb
prompt: "# You will be given a number in decimal form and your task is to convert\
  \ it to\n# binary format. The function should return a string, with each character\
  \ representing a binary\n# number. Each character in the string will be '0' or '1'.\n\
  # There will be an extra couple of characters 'db' at the beginning and at the end\
  \ of the string.\n# The extra characters are there to help with the format.\n# Examples:\n\
  def decimal_to_binary(decimal)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_decimal_to_binary\n\
  \    candidate = method(:decimal_to_binary)\n    assert_equal(\"db0db\", candidate.call(0))\n\
  \    assert_equal(\"db100000db\", candidate.call(32))\n    assert_equal(\"db1100111db\"\
  , candidate.call(103))\n    assert_equal(\"db1111db\", candidate.call(15))\n  end\n\
  end\n"
completions: ["  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s\
    \ + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary =\
    \ decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"\
    db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary = (decimal\
    \ % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", " \
    \ binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend",
  "  binary = []\n  until decimal == 0\n    binary.unshift(decimal % 2)\n    decimal\
    \ /= 2\n  end\n  binary.join\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\
    \nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n\
    \  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /=\
    \ 2\n  end\n  'db' + binary + 'db'\nend", "  binary = ''\n  while decimal > 0\n\
    \    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary =\
    \ '0' + binary if binary.length.odd?\n  'db' + binary + 'db'\nend", "  # your\
    \ code here\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", " \
    \ binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  # your code here\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\
    \nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  binary = []\n  while decimal > 0\n    binary.unshift(decimal % 2)\n \
    \   decimal /= 2\n  end\n  binary.join\nend", "  binary = decimal.to_s(2)\n  \"\
    db#{binary}db\"\nend", "  binary = 'db'\n  while decimal > 0\n    binary += (decimal\
    \ % 2).to_s\n    decimal /= 2\n  end\n  binary += 'db'\n  binary.reverse\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n  while\
    \ decimal > 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n  \"\
    db#{binary}db\"\nend", "  binary = []\n  while decimal > 0\n    binary.unshift(decimal\
    \ % 2)\n    decimal /= 2\n  end\n  binary.join\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  binary = '0' + binary if binary.length.odd?\n  'db'\
    \ + binary + 'db'\nend", "  binary = ''\n  while decimal > 0\n    binary.prepend(decimal\
    \ % 2)\n    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' if binary\
    \ == ''\n  'db' + binary + 'db'\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\
    \nend", "  decimal.to_s(2)\nend", "  binary = ''\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  # your code here\nend", "  binary = ''\n  while\
    \ decimal > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n\
    \  'db' + binary + 'db'\nend", "  binary = ''\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = \"\"\
    \n  while decimal > 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n\
    \  \"db#{binary}db\"\nend", "  'db' + decimal.to_s(2) + 'db'\nend", "  binary\
    \ = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  'db' + decimal.to_s(2) + 'db'\nend", "  decimal.to_s(2)\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n\
    \  until decimal == 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n\
    \  binary = '0' if binary == ''\n  'db' + binary + 'db'\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' + binary\
    \ if binary.length % 4 != 0\n  binary = 'db' + binary + 'db'\nend", "  decimal.to_s(2)\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  binary = '0' + binary if binary.size.odd?\n  'db'\
    \ + binary + 'db'\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  decimal.to_s(2)\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  # your code here\nend",
  "  decimal.to_s(2)\nend", "  binary = ''\n  while decimal > 0\n    binary << (decimal\
    \ % 2).to_s\n    decimal /= 2\n  end\n  binary.reverse.prepend('db').concat('db')\n\
    end", "  binary = ''\n  while decimal > 0\n    binary.prepend(decimal % 2)\n \
    \   decimal /= 2\n  end\n  binary.prepend('db')\n  binary << 'db'\nend", "  decimal.to_s(2)\n\
    end", "  binary = \"\"\n  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  # your code here\nend", "  binary = ''\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  decimal.to_s(2)\nend", "  binary = ''\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' + binary\
    \ if binary.length < 8\n  binary = 'db' + binary + 'db'\nend", "  decimal.to_s(2)\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  # your code here\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  binary = '0' if binary == ''\n  'db' + binary + 'db'\n\
    end", "  # your code here\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\
    \nend", "  # your code here\nend", "  binary = 'db'\n  while decimal > 0\n   \
    \ binary += (decimal % 2).to_s\n    decimal /= 2\n  end\n  binary += 'db'\n  binary.reverse\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  decimal.to_s(2)\nend",
  "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  decimal.to_s(2)\nend", "  binary = ''\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' + binary\
    \ if binary.length < 8\n  'db' + binary + 'db'\nend", "  binary = ''\n  while\
    \ decimal > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n\
    \  binary = '0' + binary if binary.length < 8\n  'db' + binary + 'db'\nend", " \
    \ binary = \"\"\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  \"db\" + binary + \"db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  until decimal == 0\n    binary <<\
    \ (decimal % 2).to_s\n    decimal /= 2\n  end\n  binary.reverse\nend", "  binary\
    \ = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n    decimal\
    \ /= 2\n  end\n  'db' + binary + 'db'\nend", "  # your code here\nend", "  # your\
    \ code here\nend", "  decimal.to_s(2)\nend", "  binary = ''\n  while decimal >\
    \ 0\n    binary << (decimal % 2).to_s\n    decimal /= 2\n  end\n  binary.reverse.prepend('db').concat('db')\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary = ''\n  until\
    \ decimal == 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n  \"\
    db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  # your code here\nend", "  binary = ''\n  until decimal == 0\n    binary = (decimal\
    \ % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", " \
    \ # your code here\n  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", " \
    \ binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal\
    \ > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary.prepend('0b')\n\
    end", "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  'db' + binary + 'db'\nend", "  binary = \"\"\n  while\
    \ decimal > 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n  binary.prepend(\"\
    db\").concat(\"db\")\nend", "  binary = ''\n  while decimal > 0\n    binary.prepend(decimal\
    \ % 2)\n    decimal /= 2\n  end\n  binary.prepend('db').concat('db')\nend", " \
    \ # your code here\n  binary = \"\"\n  while decimal > 0\n    binary = (decimal\
    \ % 2).to_s + binary\n    decimal = decimal / 2\n  end\n  \"db\" + binary + \"\
    db\"\nend", "  decimal.to_s(2)\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\
    \nend", "  # your code here\n  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  'db' + decimal.to_s(2) + 'db'\nend", "  binary = decimal.to_s(2)\n  \"\
    db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n  while\
    \ decimal > 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n  'db'\
    \ + binary + 'db'\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = decimal.to_s(2)\n  binary.prepend('db')\n  binary << 'db'\nend", " \
    \ decimal.to_s(2)\nend", "  binary = ''\n  while decimal > 0\n    binary = (decimal\
    \ % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' if binary == ''\n\
    \  'db' + binary + 'db'\nend", "  # your code here\n  # decimal.to_s(2)\n  # decimal.to_s(2).insert(0,\
    \ 'db').insert(-1, 'db')\n  decimal.to_s(2).insert(0, 'db').insert(-1, 'db')\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = []\n\
    \  while decimal > 0\n    binary.unshift(decimal % 2)\n    decimal /= 2\n  end\n\
    \  binary.join\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n  until\
    \ decimal == 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n  'db'\
    \ + binary + 'db'\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = ''\n  while decimal > 0\n    binary = (decimal % 2).to_s + binary\n\
    \    decimal /= 2\n  end\n  binary = '0' + binary if binary.length.odd?\n  'db'\
    \ + binary + 'db'\nend", "  # your code here\nend", "  binary = ''\n  while decimal\
    \ > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary\
    \ = '0' + binary if binary.length < 8\n  'db' + binary + 'db'\nend", "  # your\
    \ code here\n  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  # your\
    \ code here\n  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary\
    \ = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal\
    \ > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  \"\
    db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  # your code here\nend", "  # your code here\n  binary = decimal.to_s(2)\n  \"\
    db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary << (decimal\
    \ % 2).to_s\n    decimal /= 2\n  end\n  binary.reverse\nend", "  binary = ''\n\
    \  until decimal == 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n\
    \  binary.prepend('db').concat('db')\nend", "  binary = []\n  while decimal >\
    \ 0\n    binary.unshift(decimal % 2)\n    decimal /= 2\n  end\n  binary.join\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n\
    \  while decimal > 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n\
    \  binary.prepend('db')\n  binary << 'db'\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' if binary\
    \ == ''\n  'db' + binary + 'db'\nend", "  binary = ''\n  while decimal > 0\n \
    \   binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary =\
    \ '0' + binary if binary.length < 8\n  'db' + binary + 'db'\nend", "  binary =\
    \ decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal\
    \ > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db'\
    \ + binary + 'db'\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend",
  "  binary = decimal.to_s(2)\n  binary.insert(0, 'db')\n  binary.insert(-1, 'db')\n\
    end", "  decimal.to_s(2)\nend", "  binary = ''\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  binary = '0' if binary\
    \ == ''\n  'db' + binary + 'db'\nend", "  decimal.to_s(2)\nend", "  # your code\
    \ here\n  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  decimal.to_s(2)\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  decimal.to_s(2)\n\
    end", "  decimal.to_s(2)\nend", "  decimal.to_s(2)\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = ''\n  while decimal > 0\n    binary =\
    \ (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db' + binary + 'db'\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = ''\n\
    \  while decimal > 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n\
    \  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend", "  decimal.to_s(2)\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend",
  "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = \"\"\n  until\
    \ decimal == 0\n    binary.prepend(decimal % 2)\n    decimal /= 2\n  end\n  \"\
    db#{binary}db\"\nend", "  binary = []\n  while decimal > 0\n    binary.unshift(decimal\
    \ % 2)\n    decimal /= 2\n  end\n  binary.join\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = \"\"\n  while decimal > 0\n    binary\
    \ = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  \"db\" + binary +\
    \ \"db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary\
    \ = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  decimal.to_s(2)\nend", "  #\
    \ your code here\nend", "  # your code here\n  binary = decimal.to_s(2)\n  \"\
    db#{binary}db\"\nend", "  # your code here\nend", "  binary = ''\n  while decimal\
    \ > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n  'db'\
    \ + binary + 'db'\nend", "  binary = ''\n  until decimal == 0\n    binary.prepend(decimal\
    \ % 2)\n    decimal /= 2\n  end\n  binary.prepend('db')\n  binary << 'db'\nend",
  "  decimal.to_s(2)\nend", "  \"db#{decimal.to_s(2)}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  # your code here\n  binary = decimal.to_s(2)\n  binary.prepend(\"db\"\
    )\n  binary << \"db\"\nend", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\n\
    end", "  binary = decimal.to_s(2)\n  \"db#{binary}db\"\nend", "  binary = decimal.to_s(2)\n\
    \  \"db#{binary}db\"\nend", "  # your code here\nend", "  binary = ''\n  while\
    \ decimal > 0\n    binary = (decimal % 2).to_s + binary\n    decimal /= 2\n  end\n\
    \  'db' + binary + 'db'\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_140_fix_spaces
language: rb
prompt: "# Given a string text, replace all spaces in it with underscores, \n# and\
  \ if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with -\ndef fix_spaces(text)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fix_spaces\n\
  \    candidate = method(:fix_spaces)\n    assert_equal(\"Example\", candidate.call(\"\
  Example\"))\n    assert_equal(\"Mudasir_Hanif_\", candidate.call(\"Mudasir Hanif\
  \ \"))\n    assert_equal(\"Yellow_Yellow__Dirty__Fellow\", candidate.call(\"Yellow\
  \ Yellow  Dirty  Fellow\"))\n    assert_equal(\"Exa-mple\", candidate.call(\"Exa\
  \   mple\"))\n    assert_equal(\"-Exa_1_2_2_mple\", candidate.call(\"   Exa 1 2\
  \ 2 mple\"))\n  end\nend\n"
completions: ["  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend",
  "  # your code here\n  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend",
  "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/,\
    \ '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '-')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\n\
    end", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend",
  "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/,\
    \ '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '-')\n\
    end", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s{2,}/,\
    \ '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/,\
    \ '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend",
  "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '-')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-')\nend",
  "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub('\
    \ ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '-')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend",
  "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub('\
    \ ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s{2,}/,\
    \ '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/,\
    \ '-').gsub(' ', '_')\nend", "  text.gsub(/\\s/, '_').gsub(/\\s{2,}/, '-')\nend",
  "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub('\
    \ ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\n\
    end", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/,\
    \ '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(' ', '_')\nend", "  text.gsub(/\\\
    s+/, '_')\nend", "  text.gsub(/\\s+/, '-')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\\
    s/, '_')\nend", "  text.gsub(/\\s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_')\nend", "  text.gsub(/\\\
    s+/, '-').gsub(' ', '_')\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

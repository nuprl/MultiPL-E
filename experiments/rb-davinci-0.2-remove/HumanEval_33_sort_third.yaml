name: HumanEval_33_sort_third
language: rb
prompt: "# This function takes a list l and returns a list l' such that\n# l' is identical\
  \ to l in the indicies that are not divisible by three, while its values at the\
  \ indicies that are divisible by three are equal\n# to the values of the corresponding\
  \ indicies of l, but sorted.\ndef sort_third(l)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sort_third\n\
  \    candidate = method(:sort_third)\n    assert_equal([2, 6, 3, 4, 8, 9, 5], candidate.call([5,\
  \ 6, 3, 4, 8, 9, 2]))\n    assert_equal([2, 8, 3, 4, 6, 9, 5], candidate.call([5,\
  \ 8, 3, 4, 6, 9, 2]))\n    assert_equal([2, 6, 9, 4, 8, 3, 5], candidate.call([5,\
  \ 6, 9, 4, 8, 3, 2]))\n    assert_equal([2, 6, 3, 4, 8, 9, 5, 1], candidate.call([5,\
  \ 6, 3, 4, 8, 9, 2, 1]))\n  end\nend\n"
completions: ["  l.each_index.select { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort\
    \ }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend",
  "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.map.with_index { |e, i| i % 3 == 0 ? e.sort : e }\nend",
  "  l.map.with_index { |x, i| i % 3 == 0 ? x.sort : x }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e, i| i % 3 ==\
    \ 0 ? e.sort : e }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each { |i|\
    \ l[i] = l[i].sort }\n  l\nend", "  l.each_index.select { |i| i % 3 == 0 }.each\
    \ { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ?\
    \ l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort :\
    \ l[i] }\nend", "  l.each_with_index.map { |e, i| i % 3 == 0 ? e.sort : e }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e,\
    \ i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_with_index.map { |e, i|\
    \ i % 3 == 0 ? e.sort : e }\nend", "  l.each_with_index.map do |x, i|\n    if\
    \ i % 3 == 0\n      x.sort\n    else\n      x\n    end\n  end\nend", "\tl.each_index.select\
    \ { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort }\n\treturn l\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e,\
    \ i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_with_index.map do |e, i|\n   \
    \ if i % 3 == 0\n      e.sort\n    else\n      e\n    end\n  end\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.select { |i| i\
    \ % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_with_index.map\
    \ { |x, i| i % 3 == 0 ? x.sort : x }\nend", "  l.each_index.map do |i|\n    if\
    \ i % 3 == 0\n      l[i].sort\n    else\n      l[i]\n    end\n  end\nend", " \
    \ l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ { |x, i| i % 3 == 0 ? x.sort : x }\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map do |i|\n    if i % 3 == 0\n      l[i..i+2].sort\n\
    \    else\n      l[i]\n    end\n  end\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e, i| i % 3 == 0 ?\
    \ e.sort : e }\nend", "  l.each_with_index.map { |x, i| i % 3 == 0 ? x.sort :\
    \ x }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend",
  "  l.each_with_index.map do |value, index|\n    if index % 3 == 0\n      value.sort\n\
    \    else\n      value\n    end\n  end\nend", "  l.each_index.select { |i| i %\
    \ 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map { |i|\
    \ i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0\
    \ ? l[i].sort : l[i] }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each {\
    \ |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e,\
    \ i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "\tl.each_index.select { |i| i % 3 == 0 }.each { |i| l[i] =\
    \ l[i].sort }\n\treturn l\nend", "  l.each_index.map do |i|\n    if i % 3 == 0\n\
    \      l[i..i+2].sort\n    else\n      l[i]\n    end\n  end\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map do |i|\n  \
    \  if i % 3 == 0\n      l[i].sort\n    else\n      l[i]\n    end\n  end\nend",
  "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.map.with_index do |e, i|\n    if i % 3\
    \ == 0\n      e.sort\n    else\n      e\n    end\n  end\nend", "  l.each_index.select\
    \ { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map do |i|\n  \
    \  if i % 3 == 0\n      l[i..i+2].sort\n    else\n      l[i]\n    end\n  end\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each { |i| l[i] =\
    \ l[i].sort }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i]\
    \ }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", " \
    \ l.each_index.select { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ do |x, i|\n    if i % 3 == 0\n      x.sort\n    else\n      x\n    end\n  end\n\
    end", "  l.each_with_index.map { |x, i| i % 3 == 0 ? x.sort : x }\nend", "  #\
    \ YOUR CODE HERE\n  l.each_index do |i|\n    if i % 3 == 0\n      l[i] = l[i].sort\n\
    \    end\n  end\n  return l\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_with_index.map { |x, i| i % 3 == 0 ? x.sort : x }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ do |e, i|\n    if i % 3 == 0\n      e.sort\n    else\n      e\n    end\n  end\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_with_index.map { |e, i|\
    \ i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each\
    \ { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ?\
    \ l[i].sort : l[i] }\nend", "  l.map.with_index do |e, i|\n    i % 3 == 0 ? e.sort\
    \ : e\n  end\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e,\
    \ i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index do |i|\n    if i % 3 == 0\n      l[i] = l[i].sort\n\
    \    end\n  end\n  return l\nend", "  l.each_index.select { |i| i % 3 == 0 }.each\
    \ { |i| l[i] = l[i].sort }\n  l\nend", "  l.map.with_index do |x, i|\n    if i\
    \ % 3 == 0\n      x.sort\n    else\n      x\n    end\n  end\nend", "  l.each_with_index.map\
    \ { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_with_index.map { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.select { |i| i\
    \ % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_with_index.map\
    \ { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map do |i|\n    if i % 3 == 0\n\
    \      l[i].sort\n    else\n      l[i]\n    end\n  end\nend", "  l.each_index.select\
    \ { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map\
    \ { |e, i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map do |i|\n    if i % 3 == 0\n      l[i..i+2].sort\n\
    \    else\n      l[i]\n    end\n  end\nend", "  l.each_index.map { |i| i % 3 ==\
    \ 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e,\
    \ i| i % 3 == 0 ? e.sort : e }\nend", "  l.each_index.select { |i| i % 3 == 0\
    \ }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_with_index.map do |e,\
    \ i|\n    if i % 3 == 0\n      e.sort\n    else\n      e\n    end\n  end\nend",
  "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_index.select { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort }\n\
    \  l\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", " \
    \ l.map.with_index do |e, i|\n    if i % 3 == 0\n      e.sort\n    else\n    \
    \  e\n    end\n  end\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort :\
    \ l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend",
  "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.map.with_index do |x, i|\n    if i % 3\
    \ == 0\n      x.sort\n    else\n      x\n    end\n  end\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_with_index.map do |e, i|\n    if i % 3 == 0\n      e.sort\n  \
    \  else\n      e\n    end\n  end\nend", "  l.each_with_index.map { |e, i| i %\
    \ 3 == 0 ? e.sort : e }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each { |i| l[i] =\
    \ l[i].sort }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i]\
    \ }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", " \
    \ l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  # Create a new list that is\
    \ identical to l\n  l_prime = l.dup\n  # Iterate through the list\n  l_prime.each_with_index\
    \ do |value, index|\n    # If the index is divisible by three, sort the values\
    \ of the corresponding index of l\n    if index % 3 == 0\n      l_prime[index]\
    \ = l[index].sort\n    end\n  end\n  # Return the new list\n  return l_prime\n\
    end", "  l.each_with_index.map do |e, i|\n    if i % 3 == 0\n      e.sort\n  \
    \  else\n      e\n    end\n  end\nend", "  l.each_index.map { |i| i % 3 == 0 ?\
    \ l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort :\
    \ l[i] }\nend", "  l.map.with_index do |x, i|\n    if i % 3 == 0\n      x.sort\n\
    \    else\n      x\n    end\n  end\nend", "  l.each_with_index.map do |e, i|\n\
    \    if i % 3 == 0\n      e.sort\n    else\n      e\n    end\n  end\nend", " \
    \ l.each_index.map do |i|\n    if i % 3 == 0\n      l[i..i+2].sort\n    else\n\
    \      l[i]\n    end\n  end\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort\
    \ : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\n\
    end", "  l.each_with_index.map do |e, i|\n    if i % 3 == 0\n      e.sort\n  \
    \  else\n      e\n    end\n  end\nend", "  l.each_index.map { |i| i % 3 == 0 ?\
    \ l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort :\
    \ l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend",
  "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.select\
    \ { |i| i % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map { |e, i| i % 3 ==\
    \ 0 ? e.sort : e }\nend", "  l.each_index.map do |i|\n    if i % 3 == 0\n    \
    \  l[i..i+2].sort\n    else\n      l[i]\n    end\n  end\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_with_index.map do |e,\
    \ i|\n    i % 3 == 0 ? e.sort : e\n  end\nend", "  l.each_index.map { |i| i %\
    \ 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each\
    \ { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map { |i| i % 3 == 0 ?\
    \ l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort :\
    \ l[i] }\nend", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend",
  "  l.each_with_index.map { |x, i| i % 3 == 0 ? x.sort : x }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map do |i|\n    if i % 3 ==\
    \ 0\n      l[i..i+2].sort\n    else\n      l[i]\n    end\n  end\nend", "  l.each_with_index.map\
    \ do |e, i|\n    if i % 3 == 0\n      e.sort\n    else\n      e\n    end\n  end\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map { |i| i % 3\
    \ == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.select { |i| i % 3 == 0 }.each\
    \ { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_with_index.map do |e, i|\n  \
    \  if i % 3 == 0\n      e.sort\n    else\n      e\n    end\n  end\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map do |i|\n  \
    \  if i % 3 == 0\n      l[i..i+2].sort\n    else\n      l[i]\n    end\n  end\n\
    end", "  l.each_index.map { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.map\
    \ { |i| i % 3 == 0 ? l[i].sort : l[i] }\nend", "  l.each_index.select { |i| i\
    \ % 3 == 0 }.each { |i| l[i] = l[i].sort }\n  l\nend", "  l.each_index.map { |i|\
    \ i % 3 == 0 ? l[i].sort : l[i] }\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

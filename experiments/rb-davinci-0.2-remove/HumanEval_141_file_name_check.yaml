name: HumanEval_141_file_name_check
language: rb
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\ndef file_name_check(file_name)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_file_name_check\n\
  \    candidate = method(:file_name_check)\n    assert_equal(\"Yes\", candidate.call(\"\
  example.txt\"))\n    assert_equal(\"No\", candidate.call(\"1example.dll\"))\n  \
  \  assert_equal(\"No\", candidate.call(\"s1sdf3.asd\"))\n    assert_equal(\"Yes\"\
  , candidate.call(\"K.dll\"))\n    assert_equal(\"Yes\", candidate.call(\"MY16FILE3.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"His12FILE94.exe\"))\n    assert_equal(\"\
  No\", candidate.call(\"_Y.txt\"))\n    assert_equal(\"No\", candidate.call(\"?aREYA.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"/this_is_valid.dll\"))\n    assert_equal(\"\
  No\", candidate.call(\"this_is_valid.wow\"))\n    assert_equal(\"Yes\", candidate.call(\"\
  this_is_valid.txt\"))\n    assert_equal(\"No\", candidate.call(\"this_is_valid.txtexe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"#this2_i4s_5valid.ten\"))\n    assert_equal(\"\
  No\", candidate.call(\"@this1_is6_valid.exe\"))\n    assert_equal(\"No\", candidate.call(\"\
  this_is_12valid.6exe4.txt\"))\n    assert_equal(\"No\", candidate.call(\"all.exe.txt\"\
  ))\n    assert_equal(\"Yes\", candidate.call(\"I563_No.exe\"))\n    assert_equal(\"\
  Yes\", candidate.call(\"Is3youfault.txt\"))\n    assert_equal(\"Yes\", candidate.call(\"\
  no_one#knows.dll\"))\n    assert_equal(\"No\", candidate.call(\"1I563_Yes3.exe\"\
  ))\n    assert_equal(\"No\", candidate.call(\"I563_Yes3.txtt\"))\n    assert_equal(\"\
  No\", candidate.call(\"final..txt\"))\n    assert_equal(\"No\", candidate.call(\"\
  final132\"))\n    assert_equal(\"No\", candidate.call(\"_f4indsartal132.\"))\n \
  \   assert_equal(\"No\", candidate.call(\".txt\"))\n    assert_equal(\"No\", candidate.call(\"\
  s.\"))\n  end\nend\n"
completions: ["  # Write your code here\n  # To print results to the standard output\
    \ you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.scan(/\\\
    d/).size > 3\n    return \"No\"\n  end\n  if file_name.scan(/\\./).size != 1\n\
    \    return \"No\"\n  end\n  if file_name.split('.')[0].empty? || !(file_name.split('.')[0]\
    \ =~ /^[a-zA-Z]/)\n    return \"No\"\n  end\n  if !(['txt', 'exe', 'dll'].include?\
    \ file_name.split('.')[1])\n    return \"No\"\n  end\n  return \"Yes\"\nend",
  "  # write your code here\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n\
    \  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !('a'..'z').include?(file_name.split('.')[0][0].downcase)\n    return 'No'\n\
    \  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n    return\
    \ 'No'\n  else\n    return 'Yes'\n  end\nend", "  # Write your code here\n  return\
    \ 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.') !=\
    \ 1\n  return 'No' if file_name.split('.')[0].empty? || !file_name.split('.')[0][0].match(/[a-zA-Z]/)\n\
    \  return 'No' if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n \
    \ 'Yes'\nend", "  # Write your code here\n  # To print results to the standard\
    \ output you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.match(/^[a-zA-Z]+[0-9]{0,3}\\\
    .txt$/) || file_name.match(/^[a-zA-Z]+[0-9]{0,3}\\.exe$/) || file_name.match(/^[a-zA-Z]+[0-9]{0,3}\\\
    .dll$/)\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend", "  # write your\
    \ code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if\
    \ file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your\
    \ code here\n  # To print results to the standard output you can use puts\n  #\
    \ Example: puts \"Hello world!\"\nend", "  if file_name.count('0-9') > 3\n   \
    \ return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0]\
    \ == '' || !(file_name.split('.')[0].count('a-zA-Z'))\n    return 'No'\n  elsif\
    \ !(['txt', 'exe', 'dll'].include? file_name.split('.')[1])\n    return 'No'\n\
    \  else\n    return 'Yes'\n  end\nend", "  # Write your code here\n  return 'No'\
    \ if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.') != 1\n\
    \  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # write your\
    \ code here\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif\
    \ file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0][0].match(/[a-zA-Z]/))\n    return 'No'\n  elsif\
    \ !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n    return 'No'\n\
    \  else\n    return 'Yes'\n  end\nend", "  # write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  elsif file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  elsif file_name.split(\".\").first.empty? || !file_name.split(\".\"\
    ).first.match(/[a-zA-Z]/)\n    return \"No\"\n  elsif ![\"txt\", \"exe\", \"dll\"\
    ].include?(file_name.split(\".\").last)\n    return \"No\"\n  else\n    return\
    \ \"Yes\"\n  end\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif\
    \ file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0].match(/[a-zA-Z]/))\n    return 'No'\n  elsif !(['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1]))\n    return 'No'\n  else\n\
    \    return 'Yes'\n  end\nend", "  # Write your code here\n  return 'No' if file_name.count('0-9')\
    \ > 3\n  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  if file_name.scan(/\\\
    d/).length > 3\n    return \"No\"\n  elsif file_name.scan(/\\./).length != 1\n\
    \    return \"No\"\n  elsif file_name.split(\".\").first.length == 0 || file_name.split(\"\
    .\").first.scan(/[a-zA-Z]/).length == 0\n    return \"No\"\n  elsif file_name.split(\"\
    .\").last != \"txt\" && file_name.split(\".\").last != \"exe\" && file_name.split(\"\
    .\").last != \"dll\"\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend",
  "  # write your code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n\
    \  end\n  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your\
    \ code here\nend", "  # write your code here\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.match(/[0-9]{4,}/)\n    puts \"No\"\n  elsif\
    \ file_name.match(/^[a-zA-Z]+[0-9]*\\.[a-zA-Z]{3}$/)\n    puts \"Yes\"\n  else\n\
    \    puts \"No\"\n  end\nend", "  file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/\
    \ ? 'Yes' : 'No'\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  end\n\
    \  if file_name.count('.') != 1\n    return 'No'\n  end\n  if file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/[a-zA-Z]/)\n    return 'No'\n  end\n  if\
    \ file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe' && file_name.split('.')[1]\
    \ != 'dll'\n    return 'No'\n  end\n  return 'Yes'\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty?\n    return 'No'\n  end\n  if file_name.split('.')[0][0].match(/[a-zA-Z]/)\
    \ == nil\n    return 'No'\n  end\n  if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    return 'No'\n  end\n  return\
    \ 'Yes'\nend", "  file_name = file_name.split('.')\n  if file_name.length != 2\n\
    \    return 'No'\n  end\n  if file_name[0].length == 0 || file_name[0].count('0-9')\
    \ > 3 || file_name[0].count('a-zA-Z') == 0\n    return 'No'\n  end\n  if file_name[1]\
    \ != 'txt' && file_name[1] != 'exe' && file_name[1] != 'dll'\n    return 'No'\n\
    \  end\n  return 'Yes'\nend", "  # write your code here\nend", "  # Write your\
    \ code here\n  return \"No\" if file_name.count(\"0-9\") > 3\n  return \"No\"\
    \ if file_name.count(\".\") != 1\n  return \"No\" if file_name.split(\".\").first.empty?\n\
    \  return \"No\" if file_name.split(\".\").first[0].match(/[a-zA-Z]/).nil?\n \
    \ return \"No\" if file_name.split(\".\").last != \"txt\" && file_name.split(\"\
    .\").last != \"exe\" && file_name.split(\".\").last != \"dll\"\n  \"Yes\"\nend",
  "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif file_name.count('.')\
    \ != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0] == '' || file_name.split('.')[0][0].match(/[a-zA-Z]/)\
    \ == nil\n    return 'No'\n  elsif file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    return 'No'\n  else\n    return\
    \ 'Yes'\n  end\nend", "  # write your code here\n  return 'No' if file_name.scan(/[0-9]/).size\
    \ > 3\n  return 'No' if file_name.scan(/\\./).size != 1\n  return 'No' if file_name.split('.')[0].size\
    \ == 0\n  return 'No' if file_name.split('.')[0].scan(/[a-zA-Z]/).size == 0\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !(file_name.split('.')[0].count('a-zA-Z'))\n\
    \    return 'No'\n  end\n  if !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    return 'No'\n  end\n  return 'Yes'\nend", "  if file_name.count('0-9') >\
    \ 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || file_name.split('.')[0].count('a-zA-Z') ==\
    \ 0\n    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0].empty? || !(file_name.split('.')[0].count('a-zA-Z'))\n\
    \    return 'No'\n  elsif !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write your code\
    \ here\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif file_name.count('.')\
    \ != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty? || !(file_name.split('.')[0].match(/[a-zA-Z]/))\n\
    \    return 'No'\n  elsif !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # Write your code\
    \ here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || file_name.split(\".\").first[0].match(/[a-zA-Z]/).nil?\n    return \"No\"\
    \n  end\n  if file_name.split(\".\").last != \"txt\" && file_name.split(\".\"\
    ).last != \"exe\" && file_name.split(\".\").last != \"dll\"\n    return \"No\"\
    \n  end\n  return \"Yes\"\nend", "  # write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend", "  # write your code here\nend", "  # write your code\
    \ here\nend", "  # Write your code here\n  # To print results to the standard\
    \ output you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !(file_name.split('.')[0].start_with?('a-z',\
    \ 'A-Z'))\n    return 'No'\n  end\n  if !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    return 'No'\n  end\n  return 'Yes'\nend", "  # Write your code here\n  #\
    \ To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0] == '' || !(file_name.split('.')[0].count('a-zA-Z'))\n\
    \    return 'No'\n  elsif !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # Write your code\
    \ here\n  # To print results to the standard output you can use puts\n  # Example:\
    \ puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif\
    \ file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0].match(/[a-zA-Z]/))\n    puts 'No'\n  elsif !(['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1]))\n    puts 'No'\n  else\n  \
    \  puts 'Yes'\n  end\nend", "  # write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  elsif file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  elsif file_name.split(\".\").first.empty? || file_name.split(\".\"\
    ).first[0].match(/[a-zA-Z]/) == nil\n    return \"No\"\n  elsif file_name.split(\"\
    .\").last != \"txt\" && file_name.split(\".\").last != \"exe\" && file_name.split(\"\
    .\").last != \"dll\"\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend",
  "  return 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0].count('a-zA-Z')\
    \ != file_name.split('.')[0].length\n  return 'No' if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \  'Yes'\nend", "  file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/ ? 'Yes'\
    \ : 'No'\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif file_name.count('.')\
    \ != 1\n    return 'No'\n  elsif file_name.split('.')[0] == '' || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/ ? 'Yes' : 'No'\nend", "  # write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend", "  if file_name.count('0-9') <= 3 && file_name.count('.')\
    \ == 1 && \n    file_name.split('.')[0] != '' && file_name.split('.')[0].count('a-zA-Z')\
    \ == 1 &&\n    ['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n    'Yes'\n\
    \  else\n    'No'\n  end\nend", "  # Write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend", "  file_name_regex = /^[a-zA-Z]\\w*\\.(txt|exe|dll)$/\n\
    \  file_name_regex.match(file_name) ? 'Yes' : 'No'\nend", "  # write your code\
    \ here\nend", "  if file_name.count('0-9') <= 3 && file_name.count('.') == 1 &&\
    \ file_name.split('.')[0].count('a-zA-Z') == file_name.split('.')[0].length &&\
    \ ['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'Yes'\n\
    \  else\n    return 'No'\n  end\nend", "  # Write your code here\n  # To print\
    \ results to the standard output you can use puts\n  # Example: puts \"Hello world!\"\
    \n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # your code here\nend",
  "  return 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0].count('a-zA-Z')\
    \ == 0\n  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  if file_name.scan(/\\\
    d/).length > 3\n    return \"No\"\n  end\n  if file_name.scan(/\\./).length !=\
    \ 1\n    return \"No\"\n  end\n  if file_name.scan(/^[a-zA-Z]/).length != 1\n\
    \    return \"No\"\n  end\n  if file_name.scan(/\\.[a-zA-Z]{3}$/).length != 1\n\
    \    return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.match(/^[a-zA-Z]+\\d{0,3}\\.txt$|^[a-zA-Z]+\\\
    d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\.dll$/)\n    puts \"Yes\"\n  else\n    puts\
    \ \"No\"\n  end\nend", "  # Write your code here\n  if file_name.count(\"0-9\"\
    ) > 3\n    return \"No\"\n  elsif file_name.count(\".\") != 1\n    return \"No\"\
    \n  elsif file_name.split(\".\").first.empty? || !(file_name.split(\".\").first\
    \ =~ /[a-zA-Z]/)\n    return \"No\"\n  elsif !(file_name.split(\".\").last =~\
    \ /txt|exe|dll/)\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend",
  "  # write your code here\nend", "  # write your code here\nend", "  # write your\
    \ code here\n  # check if there are more than 3 digits\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  end\n  # check if there is exactly one dot\n\
    \  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n  # check if the\
    \ substring before the dot is not empty and starts with a letter\n  if file_name.split(\"\
    .\")[0].empty? || file_name.split(\".\")[0].count(\"a-zA-Z\") == 0\n    return\
    \ \"No\"\n  end\n  # check if the substring after the dot is one of the given\
    \ values\n  if file_name.split(\".\")[1] != \"txt\" && file_name.split(\".\")[1]\
    \ != \"exe\" && file_name.split(\".\")[1] != \"dll\"\n    return \"No\"\n  end\n\
    \  return \"Yes\"\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n \
    \ end\n  if file_name.count('.') != 1\n    return 'No'\n  end\n  if file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].start_with?('a-zA-Z')\n    return 'No'\n  end\n\
    \  if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'No'\n\
    \  end\n  return 'Yes'\nend", "  # Write your code here\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.count('0'..'9') > 3\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n  'Yes'\n\
    end", "  # Write your code here\n  # To print results to the standard output you\
    \ can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || file_name.split('.')[0].count('a-zA-Z') ==\
    \ 0\n    puts 'No'\n  elsif file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    puts 'No'\n  else\n    puts\
    \ 'Yes'\n  end\nend", "  # write your code here\n  if file_name.count(\"0-9\"\
    ) > 3\n    return \"No\"\n  elsif file_name.count(\".\") != 1\n    return \"No\"\
    \n  elsif file_name.split(\".\").first.empty? || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n\
    \    return \"No\"\n  elsif ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  # Write\
    \ your code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n\
    \  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0] == '' || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !(file_name.split('.')[0].match(/^[a-zA-Z]/))\n\
    \    return 'No'\n  end\n  if !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    return 'No'\n  end\n  return 'Yes'\nend", "  # write your code here\n  return\
    \ 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.') !=\
    \ 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  end\n  if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    return 'No'\n  end\n  return\
    \ 'Yes'\nend", "  # write your code here\nend", "  if file_name.count('0-9') >\
    \ 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n  elsif\
    \ file_name.split('.')[0] == '' || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # Write your code\
    \ here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || file_name.split(\".\").first.count(\"a-zA-Z\") == 0\n    return \"No\"\n\
    \  end\n  if file_name.split(\".\").last != \"txt\" && file_name.split(\".\").last\
    \ != \"exe\" && file_name.split(\".\").last != \"dll\"\n    return \"No\"\n  end\n\
    \  return \"Yes\"\nend", "  # Write your code here\nend", "  # Write your code\
    \ here\n  # To print results to the standard output you can use puts\n  # Example:\
    \ puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif\
    \ file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n    puts 'No'\n  elsif\
    \ !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n    puts 'No'\n  else\n\
    \    puts 'Yes'\n  end\nend", "  # write your code here\n  return 'No' if file_name.count('0-9')\
    \ > 3\n  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/[a-zA-Z]/)\n  return 'No' if !['txt', 'exe',\
    \ 'dll'].include?(file_name.split('.')[1])\n  'Yes'\nend", "  # write your code\
    \ here\nend", "  if file_name.scan(/\\d/).length > 3\n    return 'No'\n  elsif\
    \ file_name.scan(/\\./).length != 1\n    return 'No'\n  elsif file_name.split('.')[0].length\
    \ == 0 || file_name.split('.')[0].scan(/[a-zA-Z]/).length == 0\n    return 'No'\n\
    \  elsif file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n    return 'No'\n  else\n    return 'Yes'\n\
    \  end\nend", "  # write your code here\nend", "  # Write your code here\n  return\
    \ \"No\" if file_name.count(\"0-9\") > 3\n  return \"No\" if file_name.count(\"\
    .\") != 1\n  return \"No\" if file_name.split(\".\").first.empty?\n  return \"\
    No\" if file_name.split(\".\").first[0].match(/[a-zA-Z]/).nil?\n  return \"No\"\
    \ if file_name.split(\".\").last != \"txt\" && file_name.split(\".\").last !=\
    \ \"exe\" && file_name.split(\".\").last != \"dll\"\n  \"Yes\"\nend", "  # Write\
    \ your code here\n  # To print results to the standard output you can use puts\n\
    \  # Example: puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts\
    \ 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || file_name.split('.')[0].count('a-zA-Z') == 0\n    puts 'No'\n  elsif file_name.split('.')[1]\
    \ != 'txt' && file_name.split('.')[1] != 'exe' && file_name.split('.')[1] != 'dll'\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  elsif file_name.count(\"\
    .\") != 1\n    return \"No\"\n  elsif file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  elsif ![\"txt\", \"exe\",\
    \ \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  else\n\
    \    return \"Yes\"\n  end\nend", "  if file_name.count('0-9') > 3\n    return\
    \ 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    return 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'No'\n  else\n \
    \   return 'Yes'\n  end\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n\
    \  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0]\
    \ == '' || file_name.split('.')[0].count('a-zA-Z') == 0\n    return 'No'\n  elsif\
    \ file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe' && file_name.split('.')[1]\
    \ != 'dll'\n    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write\
    \ your code here\n  if file_name.scan(/[0-9]/).size > 3\n    return \"No\"\n \
    \ end\n  if file_name.scan(/\\./).size != 1\n    return \"No\"\n  end\n  if file_name.scan(/^[a-zA-Z]/).size\
    \ != 1\n    return \"No\"\n  end\n  if file_name.scan(/[^a-zA-Z0-9\\.]/).size\
    \ > 0\n    return \"No\"\n  end\n  if file_name.scan(/[a-zA-Z0-9]*\\.txt/).size\
    \ == 1\n    return \"Yes\"\n  end\n  if file_name.scan(/[a-zA-Z0-9]*\\.exe/).size\
    \ == 1\n    return \"Yes\"\n  end\n  if file_name.scan(/[a-zA-Z0-9]*\\.dll/).size\
    \ == 1\n    return \"Yes\"\n  end\n  return \"No\"\nend", "  # Write your code\
    \ here\n  # To print results to the standard output you can use puts\n  # Example:\
    \ puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif\
    \ file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    puts 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    puts 'No'\n  else\n   \
    \ puts 'Yes'\n  end\nend", "  # Write your code here\n  # To print results to\
    \ the standard output you can use puts\n  # Example: puts \"Hello world!\"\n \
    \ if file_name.count('0-9') > 3\n    return 'No'\n  end\n  if file_name.count('.')\
    \ != 1\n    return 'No'\n  end\n  if file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    return 'No'\n  end\n  if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  end\n  return 'Yes'\nend", "  # write your code here\nend",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n\
    \    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    puts 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    puts 'No'\n  else\n   \
    \ puts 'Yes'\n  end\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n\
    \  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0]\
    \ == '' || file_name.split('.')[0].count('a-zA-Z') == 0\n    return 'No'\n  elsif\
    \ file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe' && file_name.split('.')[1]\
    \ != 'dll'\n    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write\
    \ your code here\nend", "  # write your code here\n  if file_name.count(\"0-9\"\
    ) > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif\
    \ file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    return 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'No'\n  else\n \
    \   return 'Yes'\n  end\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n\
    \  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    return 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'No'\n  else\n \
    \   return 'Yes'\n  end\nend", "  file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.(txt|exe|dll)$/\
    \ ? 'Yes' : 'No'\nend", "  # write your code here\nend", "  return 'No' if file_name.count('0-9')\
    \ > 3\n  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  return 'No' if file_name.count('0-9')\
    \ > 3\n  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # write your code here\n\
    end", "  # Write your code here\n  # To print results to the standard output you\
    \ can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.scan(/\\d/).size > 3\n    puts \"No\"\n  elsif\
    \ file_name.scan(/\\./).size != 1\n    puts \"No\"\n  elsif file_name.scan(/^[a-zA-Z]/).size\
    \ != 1\n    puts \"No\"\n  elsif file_name.scan(/[^a-zA-Z0-9\\.]/).size > 0\n\
    \    puts \"No\"\n  elsif file_name.scan(/[a-zA-Z0-9]*\\.txt/).size != 1 && file_name.scan(/[a-zA-Z0-9]*\\\
    .exe/).size != 1 && file_name.scan(/[a-zA-Z0-9]*\\.dll/).size != 1\n    puts \"\
    No\"\n  else\n    puts \"Yes\"\n  end\nend", "  # Write your code here\n  # To\
    \ print results to the standard output you can use puts\n  # Example: puts \"\
    Hello world!\"\n  return 'No' if file_name.count('0-9') > 3\n  return 'No' if\
    \ file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your code here\n\
    \  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.count('0'..'9')\
    \ > 3\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your\
    \ code here\n  # To print results to the standard output you can use puts\n  #\
    \ Example: puts \"Hello world!\"\n  return 'No' if file_name.length < 5\n  return\
    \ 'No' if file_name.count('.') != 1\n  return 'No' if file_name.count('0'..'9')\
    \ > 3\n  return 'No' if file_name.split('.')[0].length == 0\n  return 'No' if\
    \ file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return 'No' if file_name.split('.')[1]\
    \ != 'txt' && file_name.split('.')[1] != 'exe' && file_name.split('.')[1] != 'dll'\n\
    \  return 'Yes'\nend", "  # Write your code here\n  # To print results to the\
    \ standard output you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || !file_name.split('.')[0].start_with?('a-zA-Z')\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # write your code here\n\
    \  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last)\n   \
    \ return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your code here\n  #\
    \ To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.txt$/\n   \
    \ puts \"Yes\"\n  elsif file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.exe$/\n    puts\
    \ \"Yes\"\n  elsif file_name =~ /^[a-zA-Z][a-zA-Z0-9]{0,3}\\.dll$/\n    puts \"\
    Yes\"\n  else\n    puts \"No\"\n  end\nend", "  # write your code here\n  return\
    \ 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.') !=\
    \ 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0].count('a-zA-Z')\
    \ == 0\n  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write your code\
    \ here\n  if file_name.scan(/[0-9]/).size > 3\n    return \"No\"\n  end\n  if\
    \ file_name.scan(/\\./).size != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.size == 0 || !(file_name.split(\".\").first =~ /^[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if !([\"txt\", \"exe\", \"dll\"].include? file_name.split(\"\
    .\").last)\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  # write your\
    \ code here\n  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.count('0'..'9')\
    \ > 3\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your\
    \ code here\n  # To print results to the standard output you can use puts\n  #\
    \ Example: puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n\
    \  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    puts 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    puts 'No'\n  else\n   \
    \ puts 'Yes'\n  end\nend", "  # write your code here\nend", "  # Write your code\
    \ here\n  return \"No\" if file_name.count(\"0-9\") > 3\n  return \"No\" if file_name.count(\"\
    .\") != 1\n  return \"No\" if file_name.split(\".\").first.empty?\n  return \"\
    No\" if file_name.split(\".\").first[0].match(/[a-zA-Z]/).nil?\n  return \"No\"\
    \ if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last)\n  \"\
    Yes\"\nend", "  # Write your code here\n  # To print results to the standard output\
    \ you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !(file_name.split(\".\").first =~ /^[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if !([\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last))\n \
    \   return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your code here\n\
    \  return 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  return 'No'\
    \ if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.') != 1\n\
    \  return 'No' if file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \  return 'No' if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n \
    \ 'Yes'\nend", "  # Write your code here\n  # To print results to the standard\
    \ output you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  end\n  if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    return 'No'\n  end\n  return\
    \ 'Yes'\nend", "  # write your code here\n  if file_name.count(\"0-9\") > 3\n\
    \    return \"No\"\n  elsif file_name.count(\".\") != 1\n    return \"No\"\n \
    \ elsif file_name.split(\".\").first.empty? || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n\
    \    return \"No\"\n  elsif ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  # write\
    \ your code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  elsif\
    \ file_name.count(\".\") != 1\n    return \"No\"\n  elsif file_name.split(\".\"\
    ).first.empty? || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return\
    \ \"No\"\n  elsif ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\"\
    ).last)\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  # Write\
    \ your code here\n  # To print results to the standard output you can use puts\n\
    \  # Example: puts \"Hello world!\"\n  return 'No' if file_name.length > 20\n\
    \  return 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n \
    \ 'Yes'\nend", "  # write your code here\n  if file_name.count(\"0-9\") > 3\n\
    \    return \"No\"\n  elsif file_name.count(\".\") != 1\n    return \"No\"\n \
    \ elsif file_name.split(\".\").first.empty? || !(file_name.split(\".\").first.count(\"\
    a-zA-Z\"))\n    return \"No\"\n  elsif !([\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last))\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  #\
    \ your code here\nend", "  # write your code here\nend", "  if file_name.match(/^[a-zA-Z]\\\
    w*\\.(txt|exe|dll)$/)\n    return 'Yes'\n  else\n    return 'No'\n  end\nend",
  "  # write your code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n\
    \  end\n  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  if file_name.match(/^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .[a-zA-Z]{3}$/)\n    return \"Yes\"\n  else\n    return \"No\"\n  end\nend", " \
    \ # Write your code here\n  return 'No' if file_name.count('.') != 1\n  return\
    \ 'No' if file_name.count('0'..'9') > 3\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  return 'No' if file_name.count('0-9') > 3\n  return 'No'\
    \ if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !(file_name.split('.')[0].match(/^[a-zA-Z]/))\n\
    \    puts 'No'\n  elsif !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  return 'No' if file_name.count('0-9') > 3\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write your code\
    \ here\nend", "  # write your code here\nend", "  # write your code here\n  if\
    \ file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !(file_name.split(\".\").first =~ /[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if !([\"txt\", \"exe\", \"dll\"].include? file_name.split(\".\").last)\n  \
    \  return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your code here\n \
    \ if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last)\n   \
    \ return \"No\"\n  end\n  return \"Yes\"\nend", "  # write your code here\n  return\
    \ 'No' if file_name.count('.') != 1\n  return 'No' if file_name.count('0'..'9')\
    \ > 3\n  return 'No' if file_name.split('.')[0].empty?\n  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n\
    \  return 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # write your\
    \ code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if\
    \ file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first == \"\"\n    return \"No\"\n  end\n  if file_name.split(\".\").first.count(\"\
    a-zA-Z\") == 0\n    return \"No\"\n  end\n  if file_name.split(\".\").last !=\
    \ \"txt\" && file_name.split(\".\").last != \"exe\" && file_name.split(\".\").last\
    \ != \"dll\"\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  # Write your\
    \ code here\n  # To print results to the standard output you can use puts\n  #\
    \ Example: puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n\
    \  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0].start_with?('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'))\n\
    \    puts 'No'\n  elsif !(file_name.split('.')[1] == 'txt' || file_name.split('.')[1]\
    \ == 'exe' || file_name.split('.')[1] == 'dll')\n    puts 'No'\n  else\n    puts\
    \ 'Yes'\n  end\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif\
    \ file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0].start_with?('a-zA-Z'))\n    return 'No'\n  elsif\
    \ !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n    return 'No'\n\
    \  else\n    return 'Yes'\n  end\nend", "  # Write your code here\n  file_name_arr\
    \ = file_name.split('.')\n  if file_name_arr.length != 2\n    return 'No'\n  end\n\
    \  if file_name_arr[0].length == 0 || file_name_arr[0].count('0-9') > 3 || file_name_arr[0].count('a-zA-Z')\
    \ == 0\n    return 'No'\n  end\n  if file_name_arr[1] != 'txt' && file_name_arr[1]\
    \ != 'exe' && file_name_arr[1] != 'dll'\n    return 'No'\n  end\n  return 'Yes'\n\
    end", "  # Write your code here\n  return 'No' if file_name.count('0-9') > 3\n\
    \  return 'No' if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # your code here\nend",
  "  # Write your code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n\
    \  end\n  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  # write your\
    \ code here\nend", "  if file_name.match(/^[a-zA-Z]{1}[a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/)\n\
    \    'Yes'\n  else\n    'No'\n  end\nend", "  # write your code here\n  return\
    \ \"No\" if file_name.count(\"0-9\") > 3\n  return \"No\" if file_name.count(\"\
    .\") != 1\n  return \"No\" if file_name.split(\".\").first.empty?\n  return \"\
    No\" if file_name.split(\".\").first[0].match(/[a-zA-Z]/).nil?\n  return \"No\"\
    \ if file_name.split(\".\").last != \"txt\" && file_name.split(\".\").last !=\
    \ \"exe\" && file_name.split(\".\").last != \"dll\"\n  \"Yes\"\nend", "  if file_name.count('0-9')\
    \ <= 3 && file_name.count('.') == 1 && file_name.split('.')[0].count('a-zA-Z')\
    \ > 0 && ['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'Yes'\n\
    \  else\n    return 'No'\n  end\nend", "  # Write your code here\nend", "  # Write\
    \ your code here\n  # To print results to the standard output you can use puts\n\
    \  # Example: puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts\
    \ 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n    puts 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    puts 'No'\n  else\n   \
    \ puts 'Yes'\n  end\nend", "  # Write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend", "  file_name_arr = file_name.split('.')\n  if file_name_arr.length\
    \ != 2\n    return 'No'\n  end\n  if file_name_arr[0].length == 0 || file_name_arr[0].count('0-9')\
    \ > 3 || file_name_arr[0].count('a-zA-Z') == 0\n    return 'No'\n  end\n  if file_name_arr[1]\
    \ != 'txt' && file_name_arr[1] != 'exe' && file_name_arr[1] != 'dll'\n    return\
    \ 'No'\n  end\n  return 'Yes'\nend", "  # Write your code here\n  # To print results\
    \ to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n\
    \  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || file_name.split('.')[0].count('a-zA-Z')\
    \ == 0\n    puts 'No'\n  elsif file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    puts 'No'\n  else\n    puts\
    \ 'Yes'\n  end\nend", "  if file_name.count('0-9') > 3\n    return 'No'\n  elsif\
    \ file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].match(/[a-zA-Z]/)\n    return 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    return 'No'\n  else\n \
    \   return 'Yes'\n  end\nend", "  # Write your code here\n  # To print results\
    \ to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n\
    \  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].count('a-zA-Z') == 0\n\
    \    puts 'No'\n  elsif file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    puts 'No'\n  else\n    puts\
    \ 'Yes'\n  end\nend", "  # write your code here\nend", "  # Write your code here\n\
    end", "  # Write your code here\n  # To print results to the standard output you\
    \ can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !(file_name.split('.')[0].match(/^[a-zA-Z]/))\n\
    \    return 'No'\n  end\n  if file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    return 'No'\n  end\n  return\
    \ 'Yes'\nend", "  # Write your code here\n  # To print results to the standard\
    \ output you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || file_name.split('.')[0].count('a-zA-Z') ==\
    \ 0\n    puts 'No'\n  elsif file_name.split('.')[1] != 'txt' && file_name.split('.')[1]\
    \ != 'exe' && file_name.split('.')[1] != 'dll'\n    puts 'No'\n  else\n    puts\
    \ 'Yes'\n  end\nend", "  # write your code here\n  if file_name.count(\"0-9\"\
    ) > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend", "  # write your code here\n  if file_name.count(\"0-9\"\
    ) > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !(file_name.split(\"\
    .\").first =~ /[a-zA-Z]/)\n    return \"No\"\n  end\n  if file_name.split(\".\"\
    ).last != \"txt\" && file_name.split(\".\").last != \"exe\" && file_name.split(\"\
    .\").last != \"dll\"\n    return \"No\"\n  end\n  return \"Yes\"\nend", "  file_name_arr\
    \ = file_name.split('.')\n  if file_name_arr.length != 2\n    return 'No'\n  end\n\
    \  if file_name_arr[0].length == 0 || file_name_arr[0].count('0-9') > 3 || file_name_arr[0].count('a-zA-Z')\
    \ == 0\n    return 'No'\n  end\n  if file_name_arr[1] != 'txt' && file_name_arr[1]\
    \ != 'exe' && file_name_arr[1] != 'dll'\n    return 'No'\n  end\n  return 'Yes'\n\
    end", "  # write your code here\n  if file_name.count(\"0-9\") > 3\n    return\
    \ \"No\"\n  elsif file_name.count(\".\") != 1\n    return \"No\"\n  elsif file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return\
    \ \"No\"\n  elsif ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\"\
    ).last)\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  # write\
    \ your code here\n  if file_name.scan(/[0-9]/).size > 3\n    return \"No\"\n \
    \ elsif file_name.scan(/\\./).size != 1\n    return \"No\"\n  elsif file_name.split(\"\
    .\").first.size == 0 || file_name.split(\".\").first.scan(/[a-zA-Z]/).size ==\
    \ 0\n    return \"No\"\n  elsif file_name.split(\".\").last != \"txt\" && file_name.split(\"\
    .\").last != \"exe\" && file_name.split(\".\").last != \"dll\"\n    return \"\
    No\"\n  else\n    return \"Yes\"\n  end\nend", "  if file_name.scan(/\\d/).length\
    \ > 3\n    return 'No'\n  elsif file_name.scan(/\\./).length != 1\n    return\
    \ 'No'\n  elsif file_name.scan(/\\A[a-zA-Z]/).length != 1\n    return 'No'\n \
    \ elsif file_name.scan(/\\.txt\\z/).length != 1 && file_name.scan(/\\.exe\\z/).length\
    \ != 1 && file_name.scan(/\\.dll\\z/).length != 1\n    return 'No'\n  else\n \
    \   return 'Yes'\n  end\nend", "  # Write your code here\n  # To print results\
    \ to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n\
    \  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # write your code here\n\
    \  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first == \"\"\
    \ || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last)\n   \
    \ return \"No\"\n  end\n  return \"Yes\"\nend", "  # write your code here\n  if\
    \ file_name.count(\"0-9\") > 3\n    return \"No\"\n  elsif file_name.count(\"\
    .\") != 1\n    return \"No\"\n  elsif file_name.split(\".\").first.empty? || file_name.split(\"\
    .\").first[0].match(/[a-zA-Z]/) == nil\n    return \"No\"\n  elsif file_name.split(\"\
    .\").last != \"txt\" && file_name.split(\".\").last != \"exe\" && file_name.split(\"\
    .\").last != \"dll\"\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend",
  "  # Write your code here\n  return 'No' if file_name.count('0-9') > 3\n  return\
    \ 'No' if file_name.count('.') != 1\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  return \"No\" if file_name.length > 20\n  return \"No\"\
    \ if file_name.count(\"0-9\") > 3\n  return \"No\" if file_name.count(\".\") !=\
    \ 1\n  return \"No\" if file_name.split(\".\").first.empty?\n  return \"No\" if\
    \ file_name.split(\".\").first.count(\"a-zA-Z\") != file_name.split(\".\").first.length\n\
    \  return \"No\" if file_name.split(\".\").last != \"txt\" && file_name.split(\"\
    .\").last != \"exe\" && file_name.split(\".\").last != \"dll\"\n  return \"Yes\"\
    \nend", "  # write your code here\n  if file_name.count(\"0-9\") > 3\n    return\
    \ \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n\
    \  if file_name.split(\".\").first.empty? || file_name.split(\".\").first.count(\"\
    a-zA-Z\") != file_name.split(\".\").first.length\n    return \"No\"\n  end\n \
    \ if file_name.split(\".\").last != \"txt\" && file_name.split(\".\").last !=\
    \ \"exe\" && file_name.split(\".\").last != \"dll\"\n    return \"No\"\n  end\n\
    \  return \"Yes\"\nend", "  # Write your code here\nend", "  # Write your code\
    \ here\n  # To print results to the standard output you can use puts\n  # Example:\
    \ puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    return 'No'\n  end\n\
    \  if file_name.count('.') != 1\n    return 'No'\n  end\n  if file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0].match(/^[a-zA-Z]/))\n    return 'No'\n  end\n \
    \ if !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n    return 'No'\n\
    \  end\n  return 'Yes'\nend", "  # Write your code here\n  # To print results\
    \ to the standard output you can use puts\n  # Example: puts \"Hello world!\"\n\
    \  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  if file_name.count(\"0-9\") <= 3 && file_name.count(\".\") == 1 && file_name.split(\"\
    .\").first.match(/^[a-zA-Z]/) && [\"txt\", \"exe\", \"dll\"].include?(file_name.split(\"\
    .\").last)\n    return \"Yes\"\n  else\n    return \"No\"\n  end\nend", "  # write\
    \ your code here\n  if file_name.match(/^[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z]{3}$/)\
    \ && file_name.match(/[0-9]/).to_s.length <= 3 && file_name.match(/\\.[a-zA-Z]{3}$/)[0]\
    \ == \".txt\" || file_name.match(/\\.[a-zA-Z]{3}$/)[0] == \".exe\" || file_name.match(/\\\
    .[a-zA-Z]{3}$/)[0] == \".dll\"\n    return \"Yes\"\n  else\n    return \"No\"\n\
    \  end\nend", "  # Write your code here\n  # To print results to the standard\
    \ output you can use puts\n  # Example: puts \"Hello world!\"\n  if file_name.count('0-9')\
    \ > 3\n    puts 'No'\n  elsif file_name.count('.') != 1\n    puts 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || !(file_name.split('.')[0].match(/[a-zA-Z]/))\n\
    \    puts 'No'\n  elsif !(['txt', 'exe', 'dll'].include?(file_name.split('.')[1]))\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # write your code here\n\
    end", "  # Write your code here\n  if file_name.count(\"0-9\") > 3\n    return\
    \ \"No\"\n  elsif file_name.count(\".\") != 1\n    return \"No\"\n  elsif file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return\
    \ \"No\"\n  elsif ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\"\
    ).last)\n    return \"No\"\n  else\n    return \"Yes\"\n  end\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  end\n  if !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  end\n  return 'Yes'\nend", "  # your code here\nend", "  #\
    \ write your code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n\
    \  end\n  if file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first == \"\" || file_name.split(\".\").first[0].match(/[a-zA-Z]/) == nil\n\
    \    return \"No\"\n  end\n  if file_name.split(\".\").last != \"txt\" && file_name.split(\"\
    .\").last != \"exe\" && file_name.split(\".\").last != \"dll\"\n    return \"\
    No\"\n  end\n  return \"Yes\"\nend", "  if file_name.count('0-9') > 3\n    return\
    \ 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !(file_name.split('.')[0] =~ /[a-zA-Z]/)\n    return 'No'\n  elsif !(file_name.split('.')[1]\
    \ =~ /txt|exe|dll/)\n    return 'No'\n  else\n    return 'Yes'\n  end\nend", " \
    \ # write your code here\nend", "  # write your code here\nend", "  # Write your\
    \ code here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if\
    \ file_name.count(\".\") != 1\n    return \"No\"\n  end\n  if file_name.split(\"\
    .\").first.empty? || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return\
    \ \"No\"\n  end\n  if !file_name.split(\".\").last.match(/^(txt|exe|dll)$/)\n\
    \    return \"No\"\n  end\n  return \"Yes\"\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write your code\
    \ here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !(file_name.split(\".\").first =~ /^[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if !(file_name.split(\".\").last =~ /^(txt|exe|dll)$/)\n    return \"No\"\n\
    \  end\n  return \"Yes\"\nend", "  # write your code here\n  return 'No' if file_name.count('.')\
    \ != 1\n  return 'No' if file_name.count('0'..'9') > 3\n  return 'No' if file_name.split('.')[0].empty?\n\
    \  return 'No' if file_name.split('.')[0][0].match(/[a-zA-Z]/).nil?\n  return\
    \ 'No' if file_name.split('.')[1] != 'txt' && file_name.split('.')[1] != 'exe'\
    \ && file_name.split('.')[1] != 'dll'\n  'Yes'\nend", "  # Write your code here\n\
    \  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !file_name.split(\".\").first.match(/^[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last)\n   \
    \ return \"No\"\n  end\n  return \"Yes\"\nend", "  if file_name.count('0-9') >\
    \ 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n  elsif\
    \ file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # write your code\
    \ here\n  if file_name.count(\"0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\"\
    .\") != 1\n    return \"No\"\n  end\n  if file_name.split(\".\").first.empty?\
    \ || !file_name.split(\".\").first.match(/[a-zA-Z]/)\n    return \"No\"\n  end\n\
    \  if ![\"txt\", \"exe\", \"dll\"].include?(file_name.split(\".\").last)\n   \
    \ return \"No\"\n  end\n  return \"Yes\"\nend", "  if file_name.count('0-9') >\
    \ 3\n    return 'No'\n  end\n  if file_name.count('.') != 1\n    return 'No'\n\
    \  end\n  if file_name.split('.')[0].empty? || !(file_name.split('.')[0] =~ /^[a-zA-Z]/)\n\
    \    return 'No'\n  end\n  if !(['txt', 'exe', 'dll'].include? file_name.split('.')[1])\n\
    \    return 'No'\n  end\n  return 'Yes'\nend", "  # Write your code here\n  #\
    \ To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  # Write your code here\n\
    \  # To print results to the standard output you can use puts\n  # Example: puts\
    \ \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif file_name.count('.')\
    \ != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/^[a-zA-Z]/)\n\
    \    puts 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    puts 'No'\n  else\n    puts 'Yes'\n  end\nend", "  if file_name.count('0-9')\
    \ > 3\n    return 'No'\n  elsif file_name.count('.') != 1\n    return 'No'\n \
    \ elsif file_name.split('.')[0].empty? || !file_name.split('.')[0].match(/[a-zA-Z]/)\n\
    \    return 'No'\n  elsif !['txt', 'exe', 'dll'].include?(file_name.split('.')[1])\n\
    \    return 'No'\n  else\n    return 'Yes'\n  end\nend", "  # Write your code\
    \ here\n  # To print results to the standard output you can use puts\n  # Example:\
    \ puts \"Hello world!\"\n  if file_name.count('0-9') > 3\n    puts 'No'\n  elsif\
    \ file_name.count('.') != 1\n    puts 'No'\n  elsif file_name.split('.')[0].empty?\
    \ || !file_name.split('.')[0].start_with?('a-zA-Z')\n    puts 'No'\n  elsif !['txt',\
    \ 'exe', 'dll'].include?(file_name.split('.')[1])\n    puts 'No'\n  else\n   \
    \ puts 'Yes'\n  end\nend", "  # write your code here\n  if file_name.count(\"\
    0-9\") > 3\n    return \"No\"\n  end\n  if file_name.count(\".\") != 1\n    return\
    \ \"No\"\n  end\n  if file_name.split(\".\").first.empty? || !file_name.split(\"\
    .\").first.match(/[a-zA-Z]/)\n    return \"No\"\n  end\n  if ![\"txt\", \"exe\"\
    , \"dll\"].include?(file_name.split(\".\").last)\n    return \"No\"\n  end\n \
    \ return \"Yes\"\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

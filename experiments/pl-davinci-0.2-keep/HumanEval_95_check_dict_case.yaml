name: HumanEval_95_check_dict_case
language: humaneval_to_perl.py
prompt: "# Given a dictionary, return True if all keys are strings in lower \n# case\
  \ or all keys are strings in upper case, else return False.\n# The function should\
  \ return False is the given dictionary is empty.\n# Examples:\n# check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n# check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n# check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n# check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n#\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  sub check_dict_case {\n    my($dict) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_dict_case;\n\
  \        if(eq_deeply($candidate->({\"p\" => \"pineapple\", \"b\" => \"banana\"\
  }),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\"}),\"\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\"}),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->({\"fruit\" => \"\
  Orange\", \"taste\" => \"Sweet\"}),1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->({}),\"\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n    \
    \    }\n        if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n\
    \    }\n    return ($is_lower || $is_upper);\n}", "    my $lower = 0;\n    my\
    \ $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $lower++;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $upper++;\n        }\n        else {\n            return 0;\n   \
    \     }\n    }\n    return ($lower == 0 || $upper == 0) ? 1 : 0;\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n    \
    \    if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n \
    \   return $all_lower || $all_upper;\n}", "    my $result = 1;\n    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    if ($all_lower\
    \ == 0 && $all_upper == 0) {\n        $result = 0;\n    }\n    return $result;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n        $all_upper =\
    \ 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n}", "  \
    \  my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n\
    \                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = 0;\n                last;\n            }\n        } elsif ($key_type\
    \ eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n                $result\
    \ = 0;\n                last;\n            }\n        } elsif ($key_type eq \"\
    upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n                $result = 0;\n\
    \                last;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return ($all_lower || $all_upper);\n}", "    my $lower = 0;\n\
    \    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /^[a-z]+$/) {\n            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $upper++;\n        } else {\n            return 0;\n        }\n \
    \   }\n    return ($lower == 0 || $upper == 0);\n}", "    my $upper = 0;\n   \
    \ my $lower = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper = 1;\n        } elsif ($key =~ /^[a-z]+$/) {\n       \
    \     $lower = 1;\n        } else {\n            return 0;\n        }\n    }\n\
    \    return $upper && $lower ? 0 : 1;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[a-z]/) {\n\
    \            $all_upper = 0;\n        } elsif ($key =~ /[A-Z]/) {\n          \
    \  $all_lower = 0;\n        } else {\n            return 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my($key, $val);\n    my($is_lower)\
    \ = 1;\n    my($is_upper) = 1;\n    my($is_empty) = 1;\n    while(($key, $val)\
    \ = each %$dict) {\n        $is_empty = 0;\n        if($key =~ /[A-Z]/) {\n  \
    \          $is_lower = 0;\n        }\n        if($key =~ /[a-z]/) {\n        \
    \    $is_upper = 0;\n        }\n    }\n    return $is_empty ? 0 : ($is_lower ||\
    \ $is_upper);\n}", "    my $result = 1;\n    my $key_type = \"\";\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n            $key_type\
    \ = \"lower\" if $key =~ /^[a-z]+$/;\n            $key_type = \"upper\" if $key\
    \ =~ /^[A-Z]+$/;\n            $result = 0 if $key_type eq \"\";\n        } else\
    \ {\n            $result = 0 if $key_type eq \"lower\" && $key =~ /^[A-Z]+$/;\n\
    \            $result = 0 if $key_type eq \"upper\" && $key =~ /^[a-z]+$/;\n  \
    \      }\n    }\n    return $result;\n}", "    my $result = 1;\n    my $is_upper\
    \ = 0;\n    my $is_lower = 0;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n        elsif\
    \ ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        else\
    \ {\n            $result = 0;\n            last;\n        }\n    }\n    if ($is_upper\
    \ && $is_lower) {\n        $result = 0;\n    }\n    return $result;\n}", "   \
    \ my $ret = 1;\n    my $key;\n    my $value;\n    my $key_type = 0;\n    my $value_type\
    \ = 0;\n    my $key_type_count = 0;\n    my $value_type_count = 0;\n    my $key_type_upper\
    \ = 0;\n    my $key_type_lower = 0;\n    my $value_type_upper = 0;\n    my $value_type_lower\
    \ = 0;\n    my $key_type_digit = 0;\n    my $value_type_digit = 0;\n    my $key_type_other\
    \ = 0;\n    my $value_type_other = 0;\n    my $key_type_mixed = 0;\n    my $value_type_mixed\
    \ = 0;\n    my $key_type_mixed_upper = 0;\n    my $key_type_mixed_lower = 0;\n\
    \    my $value_type_mixed_upper = 0;\n    my $value_type_mixed_lower = 0;\n  \
    \  my $key_type_mixed_digit = 0;\n    my $value_type_mixed_digit = 0;\n    my\
    \ $key_type_mixed_other = 0;\n    my $value_type_mixed_other = 0;\n    my $key_type_mixed_upper_lower\
    \ = 0;\n    my $value_type_mixed_upper_lower = 0;\n    my $key_type_mixed_upper_digit\
    \ = 0;\n    my $value_type_mixed_upper_digit = 0;\n    my $key_type_mixed_upper_other\
    \ = 0;\n    my $value_type_mixed_upper_other = 0;\n    my $key_type_mixed_lower_digit\
    \ = 0;\n    my $value_type_mixed_lower_digit = 0;\n    my $key_type_mixed_lower_other\
    \ = 0;\n    my $value_type_mixed_lower_other = 0;\n    my $key_type_mixed_digit_other\
    \ = 0;\n    my $value_type_mixed_digit_other = 0;\n   ", "    my $all_lower =\
    \ 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n      \
    \  $all_upper = 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $upper = 0;\n    my $lower = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        } elsif\
    \ ($key =~ /^[a-z]+$/) {\n            $lower++;\n        } else {\n          \
    \  return 0;\n        }\n    }\n    return 1 if ($upper == 0 || $lower == 0);\n\
    \    return 0;\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n    my $is_empty\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        $is_empty = 0;\n        if\
    \ ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n    return $is_empty\
    \ ? 0 : ($is_lower || $is_upper);\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n        \
    \    $is_upper = 1;\n        } else {\n            return 0;\n        }\n    }\n\
    \    return 1 if ($is_lower && $is_upper);\n    return 1 if ($is_lower && !$is_upper);\n\
    \    return 1 if (!$is_lower && $is_upper);\n    return 0;\n}", "    my $result\
    \ = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n      \
    \  if ($key_type eq \"\") {\n            if ($key =~ /[a-z]/) {\n            \
    \    $key_type = \"lower\";\n            } elsif ($key =~ /[A-Z]/) {\n       \
    \         $key_type = \"upper\";\n            } else {\n                $result\
    \ = 0;\n                last;\n            }\n        } elsif ($key_type eq \"\
    lower\") {\n            if ($key =~ /[A-Z]/) {\n                $result = 0;\n\
    \                last;\n            }\n        } elsif ($key_type eq \"upper\"\
    ) {\n            if ($key =~ /[a-z]/) {\n                $result = 0;\n      \
    \          last;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $result = 1;\n    my $key;\n    my $value;\n    my $is_upper = 0;\n   \
    \ my $is_lower = 0;\n    foreach $key (keys %$dict) {\n        $value = $dict->{$key};\n\
    \        if ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n  \
    \      elsif ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n \
    \       else {\n            $result = 0;\n            last;\n        }\n    }\n\
    \    if ($is_upper && $is_lower) {\n        $result = 0;\n    }\n    return $result;\n\
    }", "    my $lower = 1;\n    my $upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        $lower = 0 if $key =~ /[A-Z]/;\n        $upper = 0 if $key =~ /[a-z]/;\n\
    \    }\n    return $lower || $upper;\n}", "    my $result = 1;\n    my $lower\
    \ = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $lower++;\n        }\n        elsif ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper++;\n        }\n        else {\n            $result = 0;\n\
    \            last;\n        }\n    }\n    if ($lower > 0 && $upper > 0) {\n  \
    \      $result = 0;\n    }\n    return $result;\n}", "    my $result = 1;\n  \
    \  my $key_type = 0;\n    foreach my $key (keys %$dict) {\n        if ($key_type\
    \ == 0) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type =\
    \ 1;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type =\
    \ 2;\n            } else {\n                $result = 0;\n                last;\n\
    \            }\n        } else {\n            if ($key_type == 1) {\n        \
    \        if ($key !~ /^[a-z]+$/) {\n                    $result = 0;\n       \
    \             last;\n                }\n            } else {\n               \
    \ if ($key !~ /^[A-Z]+$/) {\n                    $result = 0;\n              \
    \      last;\n                }\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $is_all_lower = 1;\n    my $is_all_upper = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        $is_all_lower = 0 if ($key =~ /[A-Z]/);\n        $is_all_upper\
    \ = 0 if ($key =~ /[a-z]/);\n    }\n    return $is_all_lower || $is_all_upper;\n\
    }", "    my $key;\n    my $value;\n    my $lower = 0;\n    my $upper = 0;\n  \
    \  my $ret = 0;\n    my $count = 0;", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return 0;\n\
    \        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n      \
    \  $all_upper = 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $ret = 1;\n    my $key;\n    my $val;\n    my $lc_key;\n    my $uc_key;\n\
    \    my $lc_val;\n    my $uc_val;\n    my $lc_count = 0;\n    my $uc_count = 0;\n\
    \    my $other_count = 0;\n    my $lc_dict = {};\n    my $uc_dict = {};\n    my\
    \ $other_dict = {};\n    my $lc_dict_count = 0;\n    my $uc_dict_count = 0;\n\
    \    my $other_dict_count = 0;\n    my $dict_count = 0;\n    my $lc_dict_str =\
    \ \"\";\n    my $uc_dict_str = \"\";\n    my $other_dict_str = \"\";\n    my $dict_str\
    \ = \"\";\n    my $lc_dict_str_len = 0;\n    my $uc_dict_str_len = 0;\n    my\
    \ $other_dict_str_len = 0;\n    my $dict_str_len = 0;\n    my $lc_dict_str_len_diff\
    \ = 0;\n    my $uc_dict_str_len_diff = 0;\n    my $other_dict_str_len_diff = 0;\n\
    \    my $dict_str_len_diff = 0;\n    my $lc_dict_str_len_diff_sum = 0;\n    my\
    \ $uc_dict_str_len_diff_sum = 0;\n    my $other_dict_str_len_diff_sum = 0;\n \
    \   my $dict_str_len_diff_sum = 0;\n    my $lc_dict_str_len_diff_avg = 0;\n  \
    \  my $uc_dict_str_len_diff_avg = 0;\n    my $other_dict_str_len_diff_avg = 0;\n\
    \    my $dict_str_len_diff_avg = 0;\n    my $lc_dict_str_len_diff_avg_per = 0;\n\
    \    my $uc_dict_str_len_diff_avg_per = 0;\n    my $other_", "    my $is_lower\
    \ = 0;\n    my $is_upper = 0;\n    my $is_empty = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n \
    \       } elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\
    \ else {\n            return 0;\n        }\n    }\n    return 1 if ($is_lower\
    \ && !$is_upper) || (!$is_lower && $is_upper);\n    return 0;\n}", "    my $result\
    \ = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n      \
    \  if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n         \
    \       $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n \
    \               $key_type = \"upper\";\n            } else {\n               \
    \ $result = 0;\n                last;\n            }\n        } else {\n     \
    \       if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/) {\n                $result\
    \ = 0;\n                last;\n            } elsif ($key_type eq \"upper\" &&\
    \ $key =~ /^[a-z]+$/) {\n                $result = 0;\n                last;\n\
    \            }\n        }\n    }\n    return $result;\n}", "    my $lower = 0;\n\
    \    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /^[a-z]+$/) {\n            $lower++;\n        }\n        elsif ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper++;\n        }\n        else {\n            return 0;\n\
    \        }\n    }\n    return ($lower == 0 || $upper == 0) ? 1 : 0;\n}", "   \
    \ my $keys = keys %$dict;\n    return 0 if $keys == 0;\n    my $is_lower = 0;\n\
    \    my $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        $is_lower\
    \ = 1 if $key =~ /^[a-z]+$/;\n        $is_upper = 1 if $key =~ /^[A-Z]+$/;\n \
    \   }\n    return 1 if $is_lower && !$is_upper;\n    return 1 if $is_upper &&\
    \ !$is_lower;\n    return 0;\n}", "    my $result = 1;\n    my $key_type = \"\"\
    ;\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n   \
    \         if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n\
    \            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = 0;\n                last;\n\
    \            }\n        } else {\n            if ($key_type eq \"lower\" && $key\
    \ =~ /^[A-Z]+$/) {\n                $result = 0;\n                last;\n    \
    \        } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n          \
    \      $result = 0;\n                last;\n            }\n        }\n    }\n\
    \    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper\
    \ = 1;\n        }\n        else {\n            return 0;\n        }\n    }\n \
    \   return $is_lower || $is_upper;\n}", "    my $lower = 1;\n    my $upper = 1;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n       \
    \     $lower = 0;\n        } else {\n            $upper = 0;\n        }\n    }\n\
    \    return $lower || $upper;\n}", "    my $lower = 1;\n    my $upper = 1;\n \
    \   foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n        \
    \    $lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $upper\
    \ = 0;\n        }\n    }\n    return ($lower || $upper);\n}", "    my $is_lower\
    \ = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        $is_lower\
    \ = 0 if $key =~ /[A-Z]/;\n        $is_upper = 0 if $key =~ /[a-z]/;\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n        $all_upper =\
    \ 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n}", "  \
    \  my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key !~ /^[a-z]+$/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key !~ /^[A-Z]+$/) {\n            $all_upper = 0;\n        }\n \
    \   }\n    return $all_lower || $all_upper;\n}", "    my $ret = 1;\n    my $key;\n\
    \    my $val;\n    my $lc_key;\n    my $uc_key;\n    my $lc_val;\n    my $uc_val;\n\
    \    my $lc_dict = {};\n    my $uc_dict = {};\n    my $lc_count = 0;\n    my $uc_count\
    \ = 0;\n    my $key_count = 0;\n    my $val_count = 0;\n    my $lc_key_count =\
    \ 0;\n    my $uc_key_count = 0;\n    my $lc_val_count = 0;\n    my $uc_val_count\
    \ = 0;\n    my $key_val_count = 0;\n    my $lc_key_val_count = 0;\n    my $uc_key_val_count\
    \ = 0;\n    my $key_val_match_count = 0;\n    my $lc_key_val_match_count = 0;\n\
    \    my $uc_key_val_match_count = 0;\n    my $key_val_mismatch_count = 0;\n  \
    \  my $lc_key_val_mismatch_count = 0;\n    my $uc_key_val_mismatch_count = 0;\n\
    \    my $lc_key_val_mismatch_count_2 = 0;\n    my $uc_key_val_mismatch_count_2\
    \ = 0;\n    my $lc_key_val_mismatch_count_3 = 0;\n    my $uc_key_val_mismatch_count_3\
    \ = 0;\n    my $lc_key_val_mismatch_count_4 = 0;\n    my $uc_key_val_mismatch_count_4\
    \ = 0;\n    my $lc_key_val_mismatch_count_5 = 0;\n    my $uc_key_val_mismatch_count_5\
    \ = 0;\n    my $lc_key_val_mismatch_count_6 = 0;\n    my $uc_key_val_mismatch_count_6\
    \ = 0;\n    my $lc_key_val_mismatch_", "    my $ret = 1;\n    my $key;\n    my\
    \ $val;\n    my $key_type = \"\";\n    my $val_type = \"\";\n    my $key_type_count\
    \ = 0;\n    my $val_type_count = 0;\n    my $key_type_count_upper = 0;\n    my\
    \ $key_type_count_lower = 0;\n    my $val_type_count_upper = 0;\n    my $val_type_count_lower\
    \ = 0;\n    my $key_type_count_num = 0;\n    my $val_type_count_num = 0;\n   \
    \ my $key_type_count_str = 0;\n    my $val_type_count_str = 0;\n    my $key_type_count_mix\
    \ = 0;\n    my $val_type_count_mix = 0;\n    my $key_type_count_mix_upper = 0;\n\
    \    my $val_type_count_mix_upper = 0;\n    my $key_type_count_mix_lower = 0;\n\
    \    my $val_type_count_mix_lower = 0;\n    my $key_type_count_mix_num = 0;\n\
    \    my $val_type_count_mix_num = 0;\n    my $key_type_count_mix_str = 0;\n  \
    \  my $val_type_count_mix_str = 0;\n    my $key_type_count_mix_upper_num = 0;\n\
    \    my $val_type_count_mix_upper_num = 0;\n    my $key_type_count_mix_upper_str\
    \ = 0;\n    my $val_type_count_mix_upper_str = 0;\n    my $key_type_count_mix_lower_num\
    \ = 0;\n    my $val_type_count_mix_lower_num = 0;\n    my $key_type_count_mix_lower_str\
    \ = 0;\n    my $val_type_count_mix_lower_str = 0;\n    my $key_type_count_mix_upper_lower\
    \ = 0;\n    my $val_type_count_mix_upper_lower = 0;", "    my $lower = 0;\n  \
    \  my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[a-z]/)\
    \ {\n            $lower++;\n        } elsif ($key =~ /[A-Z]/) {\n            $upper++;\n\
    \        }\n    }\n    if ($lower == 0 || $upper == 0) {\n        return 1;\n\
    \    } else {\n        return 0;\n    }\n}", "    my $ret = 1;\n    my $key;\n\
    \    my $val;\n    my $lc = 0;\n    my $uc = 0;\n    my $other = 0;\n    while\
    \ (($key, $val) = each %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n        \
    \    $lc++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $uc++;\n    \
    \    } else {\n            $other++;\n        }\n    }\n    if ($lc > 0 && $uc\
    \ > 0) {\n        $ret = 0;\n    }\n    return $ret;\n}", "    my($key, $val);\n\
    \    my($lower, $upper);\n    $lower = $upper = 1;\n    while(($key, $val) = each\
    \ %$dict) {\n        if($key =~ /[A-Z]/) {\n            $lower = 0;\n        }\n\
    \        if($key =~ /[a-z]/) {\n            $upper = 0;\n        }\n    }\n  \
    \  return $lower || $upper;\n}", "    my $is_all_lower = 1;\n    my $is_all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $is_all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n \
    \           $is_all_upper = 0;\n        }\n    }\n    return $is_all_lower ||\
    \ $is_all_upper;\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $is_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n\
    \        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $result = 1;\n\
    \    my $key_type = 0;\n    foreach my $key (keys %$dict) {\n        if ($key_type\
    \ == 0) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type =\
    \ 1;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type =\
    \ 2;\n            } else {\n                $result = 0;\n                last;\n\
    \            }\n        } elsif ($key_type == 1) {\n            if ($key !~ /^[a-z]+$/)\
    \ {\n                $result = 0;\n                last;\n            }\n    \
    \    } elsif ($key_type == 2) {\n            if ($key !~ /^[A-Z]+$/) {\n     \
    \           $result = 0;\n                last;\n            }\n        }\n  \
    \  }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $first_key;\n    my $first_value;\n    my $upper_count = 0;\n    my $lower_count\
    \ = 0;\n    my $upper_flag = 0;\n    my $lower_flag = 0;\n    my $key_count =\
    \ 0;\n    my $value_count = 0;\n    my $key_flag = 0;\n    my $value_flag = 0;\n\
    \    my $key_value_flag = 0;\n    my $key_value_count = 0;\n    my $key_value_pair_flag\
    \ = 0;\n    my $key_value_pair_count = 0;\n    my $key_value_pair_upper_count\
    \ = 0;\n    my $key_value_pair_lower_count = 0;\n    my $key_value_pair_upper_flag\
    \ = 0;\n    my $key_value_pair_lower_flag = 0;\n    my $key_value_pair_upper_value_flag\
    \ = 0;\n    my $key_value_pair_lower_value_flag = 0;\n    my $key_value_pair_upper_value_count\
    \ = 0;\n    my $key_value_pair_lower_value_count = 0;\n    my $key_value_pair_upper_key_flag\
    \ = 0;\n    my $key_value_pair_lower_key_flag = 0;\n    my $key_value_pair_upper_key_count\
    \ = 0;\n    my $key_value_pair_lower_key_count = 0;\n    my $key_value_pair_upper_key_value_flag\
    \ = 0;\n    my $key_value_pair_lower_key_value_flag = 0;\n    my $key_value_pair_upper_key_value_count\
    \ = 0;\n    my $key_value_pair_lower_key_value_count = 0;\n    my $key_value_pair_upper_key_value_pair_flag\
    \ = 0;\n    my $key_value_pair_lower_key_value_pair_flag = 0;\n    my $key_value_pair_upper_",
  "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        $is_lower = 0 if $key !~ /^[a-z]+$/;\n        $is_upper = 0 if $key\
    \ !~ /^[A-Z]+$/;\n    }\n    return $is_lower || $is_upper;\n}", "    my $result\
    \ = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n      \
    \  if ($key_type eq \"\") {\n            $key_type = \"u\" if ($key =~ /^[A-Z]+$/);\n\
    \            $key_type = \"l\" if ($key =~ /^[a-z]+$/);\n        }\n        if\
    \ ($key_type eq \"u\") {\n            $result = 0 if ($key !~ /^[A-Z]+$/);\n \
    \       }\n        if ($key_type eq \"l\") {\n            $result = 0 if ($key\
    \ !~ /^[a-z]+$/);\n        }\n    }\n    return $result;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $key;\n    my $value;\n    my $upper = 0;\n    my\
    \ $lower = 0;\n    my $result = 0;\n    while (($key, $value) = each %$dict) {\n\
    \        if ($key =~ /[A-Z]/) {\n            $upper++;\n        }\n        if\
    \ ($key =~ /[a-z]/) {\n            $lower++;\n        }\n    }\n    if ($upper\
    \ == 0 || $lower == 0) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $result = 1;\n    my $key_type = \"\";\n    my $key_type_upper = \"\";\n\
    \    my $key_type_lower = \"\";\n    my $key_type_digit = \"\";\n    my $key_type_other\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[A-Z]+$/)\
    \ {\n            $key_type_upper = 1;\n        } elsif ($key =~ /^[a-z]+$/) {\n\
    \            $key_type_lower = 1;\n        } elsif ($key =~ /^[0-9]+$/) {\n  \
    \          $key_type_digit = 1;\n        } else {\n            $key_type_other\
    \ = 1;\n        }\n    }\n    if ($key_type_upper && $key_type_lower) {\n    \
    \    $result = 0;\n    }\n    if ($key_type_digit || $key_type_other) {\n    \
    \    $result = 0;\n    }\n    return $result;\n}", "    my $ret = 0;\n    my $key_type\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key_type == 0) {\n \
    \           if ($key =~ /^[a-z]+$/) {\n                $key_type = 1;\n      \
    \      } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = 2;\n      \
    \      } else {\n                return 0;\n            }\n        } else {\n\
    \            if ($key_type == 1 && $key =~ /^[A-Z]+$/) {\n                return\
    \ 0;\n            } elsif ($key_type == 2 && $key =~ /^[a-z]+$/) {\n         \
    \       return 0;\n            }\n        }\n    }\n    return 1;\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n    \
    \    if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n \
    \   return ($all_lower || $all_upper);\n}", "    my $result = 1;\n    my $key;\n\
    \    my $value;\n    my $is_lower = 0;\n    my $is_upper = 0;\n    my $is_empty\
    \ = 1;\n    while (($key, $value) = each %$dict) {\n        $is_empty = 0;\n \
    \       if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        } else {\n     \
    \       $result = 0;\n            last;\n        }\n    }\n    if ($is_empty)\
    \ {\n        $result = 0;\n    } elsif ($is_lower && $is_upper) {\n        $result\
    \ = 0;\n    }\n    return $result;\n}", "    my $retval = 1;\n    my $lower =\
    \ 1;\n    my $upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[a-z]/) {\n            $upper = 0;\n        }\n        if ($key =~ /[A-Z]/)\
    \ {\n            $lower = 0;\n        }\n    }\n    if ($lower == 0 && $upper\
    \ == 0) {\n        $retval = 0;\n    }\n    return $retval;\n}", "    my $ret\
    \ = 1;\n    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        } else {\n          \
    \  $ret = 0;\n            last;\n        }\n    }\n    if ($lower > 0 && $upper\
    \ > 0) {\n        $ret = 0;\n    }\n    return $ret;\n}", "    my $lower = 0;\n\
    \    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /^[a-z]+$/) {\n            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $upper++;\n        } else {\n            return 0;\n        }\n \
    \   }\n    return $lower == 0 || $upper == 0;\n}", "    my $result = 1;\n    my\
    \ $key;\n    my $value;\n    my $upper = 0;\n    my $lower = 0;\n    my $other\
    \ = 0;\n    while (($key, $value) = each %$dict) {\n        if ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper++;\n        } elsif ($key =~ /^[a-z]+$/) {\n         \
    \   $lower++;\n        } else {\n            $other++;\n        }\n    }\n   \
    \ if ($upper > 0 && $lower > 0) {\n        $result = 0;\n    }\n    if ($other\
    \ > 0) {\n        $result = 0;\n    }\n    return $result;\n}", "    my $result\
    \ = 1;\n    my $key;\n    my $value;\n    my $first_key;\n    my $first_value;\n\
    \    my $first_key_type;\n    my $first_value_type;\n    my $key_type;\n    my\
    \ $value_type;\n    my $key_type_count = 0;\n    my $value_type_count = 0;\n \
    \   my $key_type_count_lower = 0;\n    my $key_type_count_upper = 0;\n    my $value_type_count_lower\
    \ = 0;\n    my $value_type_count_upper = 0;\n    my $key_type_count_alpha = 0;\n\
    \    my $key_type_count_numeric = 0;\n    my $value_type_count_alpha = 0;\n  \
    \  my $value_type_count_numeric = 0;\n    my $key_type_count_alpha_lower = 0;\n\
    \    my $key_type_count_alpha_upper = 0;\n    my $value_type_count_alpha_lower\
    \ = 0;\n    my $value_type_count_alpha_upper = 0;\n    my $key_type_count_numeric_lower\
    \ = 0;\n    my $key_type_count_numeric_upper = 0;\n    my $value_type_count_numeric_lower\
    \ = 0;\n    my $value_type_count_numeric_upper = 0;\n    my $key_type_count_alpha_lower_upper\
    \ = 0;\n    my $value_type_count_alpha_lower_upper = 0;\n    my $key_type_count_numeric_lower_upper\
    \ = 0;\n    my $value_type_count_numeric_lower_upper = 0;\n    my $key_type_count_alpha_lower_upper_numeric\
    \ = 0;\n    my $value_type_count_alpha_lower_upper_numeric = 0;\n    my $key_type_count_alpha_lower_upper_numeric_special\
    \ = 0;\n    my $value_type_count_alpha_lower_upper_numeric_special = 0;\n    my\
    \ $key_type_", "    my $result = 1;\n    my $key_type = \"\";\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key_type eq \"\") {\n            if ($key\
    \ =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n            } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\";\n           \
    \ } else {\n                $result = 0;\n                last;\n            }\n\
    \        } else {\n            if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/)\
    \ {\n                $result = 0;\n                last;\n            } elsif\
    \ ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n                $result =\
    \ 0;\n                last;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $ret = 1;\n    my $key;\n    my $val;\n    my $is_upper = 0;\n   \
    \ my $is_lower = 0;\n    if (scalar(keys %$dict) == 0) {\n        $ret = 0;\n\
    \    } else {\n        while (($key, $val) = each %$dict) {\n            if ($key\
    \ =~ /[A-Z]/) {\n                $is_upper = 1;\n            }\n            if\
    \ ($key =~ /[a-z]/) {\n                $is_lower = 1;\n            }\n       \
    \ }\n        if ($is_upper && $is_lower) {\n            $ret = 0;\n        }\n\
    \    }\n    return $ret;\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n\
    \    foreach my $key (keys %$dict) {\n        $is_lower = 0 if $key =~ /[A-Z]/;\n\
    \        $is_upper = 0 if $key =~ /[a-z]/;\n    }\n    return $is_lower || $is_upper;\n\
    }", "    my $lower = 0;\n    my $upper = 0;\n    my $key;\n    foreach $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n    \
    \    }\n        if ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n        }\n\
    \    }\n    if ($lower && $upper) {\n        return 0;\n    }\n    return 1;\n\
    }", "    my $result = 1;\n    my $key_type = \"\";\n    my $key_type_count = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key_type_count == 0) {\n  \
    \          if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n\
    \            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = 0;\n                last;\n\
    \            }\n            $key_type_count++;\n        } else {\n           \
    \ if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/) {\n                $result\
    \ = 0;\n                last;\n            } elsif ($key_type eq \"upper\" &&\
    \ $key =~ /^[a-z]+$/) {\n                $result = 0;\n                last;\n\
    \            }\n        }\n    }\n    return $result;\n}", "    my $is_lower =\
    \ 0;\n    my $is_upper = 0;\n    my $is_empty = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        $is_empty = 0;\n        if ($key =~ /^[a-z]+$/) {\n     \
    \       $is_lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper\
    \ = 1;\n        } else {\n            return 0;\n        }\n    }\n    return\
    \ $is_empty ? 0 : ($is_lower && !$is_upper) || (!$is_lower && $is_upper);\n}",
  "    my $ret = 1;\n    my $first = 1;\n    my $case = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($first) {\n            $case = ($key =~ /^[a-z]+$/) ?\
    \ 1 : 2;\n            $first = 0;\n        }\n        if ($case == 1) {\n    \
    \        $ret = 0 if ($key !~ /^[a-z]+$/);\n        } else {\n            $ret\
    \ = 0 if ($key !~ /^[A-Z]+$/);\n        }\n    }\n    return $ret;\n}", "    my\
    \ $result = 1;\n    my $key;\n    my $value;\n    my $key_type = \"\";\n    my\
    \ $value_type = \"\";\n    my $key_type_count = 0;\n    my $value_type_count =\
    \ 0;\n    my $key_type_lower = 0;\n    my $key_type_upper = 0;\n    my $value_type_lower\
    \ = 0;\n    my $value_type_upper = 0;\n    my $key_type_mixed = 0;\n    my $value_type_mixed\
    \ = 0;\n    my $key_type_num = 0;\n    my $value_type_num = 0;\n    my $key_type_other\
    \ = 0;\n    my $value_type_other = 0;\n    my $key_type_str = 0;\n    my $value_type_str\
    \ = 0;\n    my $key_type_str_lower = 0;\n    my $key_type_str_upper = 0;\n   \
    \ my $value_type_str_lower = 0;\n    my $value_type_str_upper = 0;\n    my $key_type_str_mixed\
    \ = 0;\n    my $value_type_str_mixed = 0;\n    my $key_type_str_num = 0;\n   \
    \ my $value_type_str_num = 0;\n    my $key_type_str_other = 0;\n    my $value_type_str_other\
    \ = 0;\n    my $key_type_str_len = 0;\n    my $value_type_str_len = 0;\n    my\
    \ $key_type_str_len_max = 0;\n    my $value_type_str_len_max = 0;\n    my $key_type_str_len_min\
    \ = 0;\n    my $value_type_str_len_min = 0;\n    my $key_type_str_len_avg = 0;\n\
    \    my $value_type_str_len_avg = 0;\n    my $key_type_str_len_sum = 0;\n    my\
    \ $value_type_str_len_sum = 0;\n   ", "    my $key;\n    my $value;\n    my $lower_case\
    \ = 0;\n    my $upper_case = 0;\n    my $other_case = 0;\n    my $result = 1;\n\
    \    while (($key, $value) = each %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $lower_case = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n      \
    \      $upper_case = 1;\n        } else {\n            $other_case = 1;\n    \
    \    }\n    }\n    if ($lower_case && $upper_case) {\n        $result = 0;\n \
    \   }\n    if ($other_case) {\n        $result = 0;\n    }\n    return $result;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        $all_lower = 0 if ($key !~ /^[a-z]+$/);\n        $all_upper\
    \ = 0 if ($key !~ /^[A-Z]+$/);\n    }\n    return $all_lower || $all_upper;\n}",
  "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n \
    \       if ($key =~ /^[a-z]+$/) {\n            $lower++;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/) {\n            $upper++;\n        } else {\n            return\
    \ 0;\n        }\n    }\n    return $lower == 0 || $upper == 0;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return ($all_lower\
    \ || $all_upper);\n}", "    my $key;\n    my $val;\n    my $is_lower = 0;\n  \
    \  my $is_upper = 0;\n    my $is_mixed = 0;\n    my $is_empty = 1;\n    my $is_string\
    \ = 0;\n    my $is_number = 0;\n    my $is_other = 0;\n    my $is_valid = 0;\n\
    \    my $is_invalid = 0;\n    my $is_all_valid = 1;\n    my $is_all_invalid =\
    \ 1;\n    my $is_all_string = 1;\n    my $is_all_number = 1;\n    my $is_all_other\
    \ = 1;\n    my $is_all_lower = 1;\n    my $is_all_upper = 1;\n    my $is_all_mixed\
    \ = 1;\n    my $is_all_empty = 1;\n    my $is_all_valid_string = 1;\n    my $is_all_valid_number\
    \ = 1;\n    my $is_all_valid_other = 1;\n    my $is_all_valid_lower = 1;\n   \
    \ my $is_all_valid_upper = 1;\n    my $is_all_valid_mixed = 1;\n    my $is_all_valid_empty\
    \ = 1;\n    my $is_all_invalid_string = 1;\n    my $is_all_invalid_number = 1;\n\
    \    my $is_all_invalid_other = 1;\n    my $is_all_invalid_lower = 1;\n    my\
    \ $is_all_invalid_upper = 1;\n    my $is_all_invalid_mixed = 1;\n    my $is_all_invalid_empty\
    \ = 1;\n    my $is_all_string_lower = 1;\n    my $is_all_string_upper = 1;\n \
    \   my $is_all_string_mixed = 1;\n    my $is_all_string_empty = 1;\n    my $is_all_number_lower\
    \ = 1;\n    my $is_all_number_upper = 1;\n    my $is_all_", "    my $is_lower\
    \ = 0;\n    my $is_upper = 0;\n    my $is_empty = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        $is_empty = 0;\n        if ($key =~ /^[a-z]+$/) {\n     \
    \       $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n    \
    \        $is_upper = 1;\n        }\n        else {\n            return 0;\n  \
    \      }\n    }\n    return $is_empty ? 0 : ($is_lower && $is_upper ? 0 : 1);\n\
    }", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n \
    \       if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n\
    \    return ($is_lower || $is_upper);\n}", "    my $result = 1;\n    my $is_lower\
    \ = 0;\n    my $is_upper = 0;\n    my $key;\n    foreach $key (keys %$dict) {\n\
    \        if ($key =~ /[a-z]/) {\n            $is_lower = 1;\n        }\n     \
    \   if ($key =~ /[A-Z]/) {\n            $is_upper = 1;\n        }\n    }\n   \
    \ if ($is_lower && $is_upper) {\n        $result = 0;\n    }\n    return $result;\n\
    }", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n \
    \       if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $lower = 1;\n    my $upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        $lower = 0 if $key =~ /[A-Z]/;\n        $upper = 0 if $key =~ /[a-z]/;\n\
    \    }\n    return $lower || $upper;\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return 0;\n\
    \        }\n    }\n    return ($is_lower && $is_upper) ? 0 : 1;\n}", "    my $result\
    \ = 1;\n    my $key;\n    my $value;\n    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    my $is_digit = 0;\n    my $is_other = 0;\n    my $is_empty = 0;\n\
    \    my $is_first = 1;\n    my $is_mixed = 0;\n    my $is_all_lower = 1;\n   \
    \ my $is_all_upper = 1;\n    my $is_all_digit = 1;\n    my $is_all_other = 1;\n\
    \    my $is_all_lower_or_upper = 1;\n    my $is_all_digit_or_other = 1;\n    my\
    \ $is_all_lower_or_upper_or_digit = 1;\n    my $is_all_lower_or_upper_or_other\
    \ = 1;\n    my $is_all_digit_or_other_or_lower = 1;\n    my $is_all_digit_or_other_or_upper\
    \ = 1;\n    my $is_all_lower_or_upper_or_digit_or_other = 1;\n    my $is_all_lower_or_upper_or_digit_or_other_or_empty\
    \ = 1;\n    my $is_all_lower_or_upper_or_digit_or_other_or_empty_or_mixed = 1;\n\
    \    my $is_all_lower_or_upper_or_digit_or_other_or_empty_or_mixed_or_first =\
    \ 1;\n    my $is_all_lower_or_upper_or_digit_or_other_or_empty_or_mixed_or_first_or_mixed\
    \ = 1;\n    my $is_all_lower_or_upper_or_digit_or_other_or_empty_or_mixed_or_first_or_mixed_or_first\
    \ = 1;\n    my $is_all_lower_or_upper_or_digit_or_other_or_empty_or_mixed_or_first_or_mixed_or_first_or_mixed\
    \ = 1;", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n \
    \       }\n        if ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n   \
    \     }\n    }\n    return ($is_lower && $is_upper) ? 0 : 1;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        $all_lower\
    \ = 0 if $key =~ /[A-Z]/;\n        $all_upper = 0 if $key =~ /[a-z]/;\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $count = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    if ($count == 0)\
    \ {\n        return 1;\n    }\n    if ($count == scalar(keys %$dict)) {\n    \
    \    return 1;\n    }\n    return 0;\n}", "    my $ret = 1;\n    my $key;\n  \
    \  my $val;\n    my $upper = 0;\n    my $lower = 0;\n    my $other = 0;\n    my\
    \ $empty = 0;\n    my $len = scalar keys %$dict;\n    if ($len == 0) {\n     \
    \   $empty = 1;\n    }\n    while (($key, $val) = each %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $upper = 1;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $lower = 1;\n        }\n        if ($key =~ /[^A-Za-z]/) {\n\
    \            $other = 1;\n        }\n    }\n    if ($upper && $lower) {\n    \
    \    $ret = 0;\n    }\n    if ($other) {\n        $ret = 0;\n    }\n    if ($empty)\
    \ {\n        $ret = 0;\n    }\n    return $ret;\n}", "    my $lower = 0;\n   \
    \ my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n         \
    \   $upper++;\n        } else {\n            return 0;\n        }\n    }\n   \
    \ if ($lower == 0 || $upper == 0) {\n        return 1;\n    } else {\n       \
    \ return 0;\n    }\n}", "    my $ret = 1;\n    my $key;\n    my $val;\n    my\
    \ $lc_key;\n    my $uc_key;\n    my $lc_val;\n    my $uc_val;\n    my $lc_count\
    \ = 0;\n    my $uc_count = 0;\n    my $other_count = 0;\n    my $lc_dict = {};\n\
    \    my $uc_dict = {};\n    my $other_dict = {};\n    my $lc_dict_count = 0;\n\
    \    my $uc_dict_count = 0;\n    my $other_dict_count = 0;\n    my $lc_dict_str\
    \ = \"\";\n    my $uc_dict_str = \"\";\n    my $other_dict_str = \"\";\n    my\
    \ $dict_str = \"\";\n    my $dict_count = 0;\n    my $lc_dict_str_count = 0;\n\
    \    my $uc_dict_str_count = 0;\n    my $other_dict_str_count = 0;\n    my $dict_str_count\
    \ = 0;\n    my $lc_dict_str_len = 0;\n    my $uc_dict_str_len = 0;\n    my $other_dict_str_len\
    \ = 0;\n    my $dict_str_len = 0;\n    my $lc_dict_str_len_count = 0;\n    my\
    \ $uc_dict_str_len_count = 0;\n    my $other_dict_str_len_count = 0;\n    my $dict_str_len_count\
    \ = 0;\n    my $lc_dict_str_len_sum = 0;\n    my $uc_dict_str_len_sum = 0;\n \
    \   my $other_dict_str_len_sum = 0;\n    my $dict_str_len_sum = 0;\n    my $lc_dict_str_len_avg\
    \ = 0;\n    my $uc_dict_str_len_avg = 0;\n    my $other_dict_str_len_avg = 0;\n\
    \    my $dict_str_len_avg = 0;\n    my $lc_dict_str_", "    my $is_lower = 1;\n\
    \    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        $is_lower\
    \ = 0 if $key !~ /^[a-z]+$/;\n        $is_upper = 0 if $key !~ /^[A-Z]+$/;\n \
    \   }\n    return $is_lower || $is_upper;\n}", "    my $all_lower = 1;\n    my\
    \ $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/)\
    \ {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n\
    \            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $result = 1;\n    my $is_upper = 0;\n    my $is_lower = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if (uc($key) eq $key) {\n            $is_upper\
    \ = 1;\n        }\n        if (lc($key) eq $key) {\n            $is_lower = 1;\n\
    \        }\n    }\n    if ($is_upper && $is_lower) {\n        $result = 0;\n \
    \   }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $key_type = \"\";\n    my $value_type = \"\";\n    my $key_type_count\
    \ = 0;\n    my $value_type_count = 0;\n    my $key_type_upper = 0;\n    my $key_type_lower\
    \ = 0;\n    my $value_type_upper = 0;\n    my $value_type_lower = 0;\n    my $key_type_other\
    \ = 0;\n    my $value_type_other = 0;\n    my $key_type_number = 0;\n    my $value_type_number\
    \ = 0;\n    my $key_type_space = 0;\n    my $value_type_space = 0;\n    my $key_type_punct\
    \ = 0;\n    my $value_type_punct = 0;\n    my $key_type_symbol = 0;\n    my $value_type_symbol\
    \ = 0;\n    my $key_type_other_char = 0;\n    my $value_type_other_char = 0;\n\
    \    my $key_type_other_char_count = 0;\n    my $value_type_other_char_count =\
    \ 0;\n    my $key_type_other_char_string = \"\";\n    my $value_type_other_char_string\
    \ = \"\";\n    my $key_type_other_char_string_count = 0;\n    my $value_type_other_char_string_count\
    \ = 0;\n    my $key_type_other_char_string_max = 0;\n    my $value_type_other_char_string_max\
    \ = 0;\n    my $key_type_other_char_string_max_count = 0;\n    my $value_type_other_char_string_max_count\
    \ = 0;\n    my $key_type_other_char_string_max_string = \"\";\n    my $value_type_other_char_string_max_string\
    \ = \"\";\n    my $key_type_other_char_string_max_string_count = 0;\n    my $value_type_other_",
  "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n        $all_upper = 0 if $key\
    \ =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n}", "    my $is_lower\
    \ = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n    return $is_lower\
    \ || $is_upper;\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n\
    \        }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n    \
    \    }\n        else {\n            return 0;\n        }\n    }\n    return 1\
    \ if ($lower == scalar(keys %$dict) || $upper == scalar(keys %$dict));\n    return\
    \ 0;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n        $all_upper\
    \ = 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n}", " \
    \   my($key, $value);\n    my($lower_case) = 1;\n    my($upper_case) = 1;\n  \
    \  my($count) = 0;\n    while (($key, $value) = each %$dict) {\n        $count++;\n\
    \        if ($key =~ /[A-Z]/) {\n            $lower_case = 0;\n        }\n   \
    \     if ($key =~ /[a-z]/) {\n            $upper_case = 0;\n        }\n    }\n\
    \    return 0 if ($count == 0);\n    return ($lower_case || $upper_case);\n}",
  "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n \
    \       if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n\
    \    return ($is_lower || $is_upper);\n}", "    my($key);\n    my($lower) = 1;\n\
    \    my($upper) = 1;\n    foreach $key (keys %$dict) {\n        $lower = 0 if\
    \ ($key =~ /[A-Z]/);\n        $upper = 0 if ($key =~ /[a-z]/);\n    }\n    return\
    \ ($lower || $upper);\n}", "    my $ret = 0;\n    my $key;\n    my $val;\n   \
    \ my $lc_key;\n    my $uc_key;\n    my $lc_val;\n    my $uc_val;\n    my $lc_dict\
    \ = {};\n    my $uc_dict = {};\n    my $lc_dict_keys = [];\n    my $uc_dict_keys\
    \ = [];\n    my $lc_dict_vals = [];\n    my $uc_dict_vals = [];\n    my $lc_dict_key_vals\
    \ = [];\n    my $uc_dict_key_vals = [];\n    my $lc_dict_val_keys = [];\n    my\
    \ $uc_dict_val_keys = [];\n    my $lc_dict_key_val_pairs = [];\n    my $uc_dict_key_val_pairs\
    \ = [];\n    my $lc_dict_val_key_pairs = [];\n    my $uc_dict_val_key_pairs =\
    \ [];\n    my $lc_dict_key_val_pair_str = \"\";\n    my $uc_dict_key_val_pair_str\
    \ = \"\";\n    my $lc_dict_val_key_pair_str = \"\";\n    my $uc_dict_val_key_pair_str\
    \ = \"\";\n    my $lc_dict_key_val_pair_str_hash = \"\";\n    my $uc_dict_key_val_pair_str_hash\
    \ = \"\";\n    my $lc_dict_val_key_pair_str_hash = \"\";\n    my $uc_dict_val_key_pair_str_hash\
    \ = \"\";\n    my $lc_dict_key_val_pair_str_hash_val = \"\";\n    my $uc_dict_key_val_pair_str_hash_val\
    \ = \"\";\n    my $lc_dict_val_key_pair_str_hash_val = \"\";\n    my $uc_dict_val_key_pair_str_hash_val\
    \ = \"\";\n    my $lc_dict_key_val_pair_str_hash_val_len = 0;\n    my $uc_dict_key_val_pair_str_",
  "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n\
    \                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = 0;\n                last;\n            }\n        } elsif ($key_type\
    \ eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n                $result\
    \ = 0;\n                last;\n            }\n        } elsif ($key_type eq \"\
    upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n                $result = 0;\n\
    \                last;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $lower = 0;\n  \
    \  my $upper = 0;\n    my $other = 0;\n    foreach my $key (keys %$dict) {\n \
    \       if ($key =~ /^[a-z]+$/) {\n            $lower++;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/) {\n            $upper++;\n        } else {\n            $other++;\n\
    \        }\n    }\n    return ($lower == 0 || $upper == 0) && $other == 0;\n}",
  "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $flag = 0;\n    my $flag1 =\
    \ 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n    my $flag4 = 0;\n    my $flag5\
    \ = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n    my $flag8 = 0;\n    my $flag9\
    \ = 0;\n    my $flag10 = 0;\n    my $flag11 = 0;\n    my $flag12 = 0;\n    my\
    \ $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15 = 0;\n    my $flag16 = 0;\n\
    \    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19 = 0;\n    my $flag20\
    \ = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23 = 0;\n    my\
    \ $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my $flag27 = 0;\n\
    \    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n    my $flag31\
    \ = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34 = 0;\n    my\
    \ $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my $flag38 = 0;\n\
    \    my $flag39 = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42\
    \ = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n    my $flag45 = 0;\n    my\
    \ $flag46 = 0;\n    my $flag47 = 0;\n    my $flag48 = 0;\n    my $flag49 = 0;\n\
    \    my $flag50 = 0;\n    my $flag51 = 0;\n    my $flag52 = 0;\n    my $flag53\
    \ = 0;\n    my $flag54 = 0;\n    my $flag55 = 0;\n    my $flag56 = 0;", "    my\
    \ $keys = keys %$dict;\n    return 0 if $keys == 0;\n    my $first_key = (keys\
    \ %$dict)[0];\n    my $first_key_is_lower = $first_key =~ /^[a-z]+$/;\n    my\
    \ $first_key_is_upper = $first_key =~ /^[A-Z]+$/;\n    return 0 if !$first_key_is_lower\
    \ && !$first_key_is_upper;\n    for my $key (keys %$dict) {\n        return 0\
    \ if $first_key_is_lower && $key !~ /^[a-z]+$/;\n        return 0 if $first_key_is_upper\
    \ && $key !~ /^[A-Z]+$/;\n    }\n    return 1;\n}", "    my $result = 1;\n   \
    \ my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type\
    \ eq \"\") {\n            $key_type = ($key =~ /^[a-z]+$/) ? \"lower\" : \"upper\"\
    ;\n        }\n        if ($key_type eq \"lower\" && $key !~ /^[a-z]+$/) {\n  \
    \          $result = 0;\n            last;\n        }\n        if ($key_type eq\
    \ \"upper\" && $key !~ /^[A-Z]+$/) {\n            $result = 0;\n            last;\n\
    \        }\n    }\n    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return 0;\n\
    \        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $ret = 1;\n\
    \    my $key;\n    my $val;\n    my $lc_key;\n    my $uc_key;\n    my $lc_val;\n\
    \    my $uc_val;\n    my $lc_flag = 0;\n    my $uc_flag = 0;\n    my $lc_count\
    \ = 0;\n    my $uc_count = 0;\n    my $count = 0;\n    my $lc_dict = {};\n   \
    \ my $uc_dict = {};", "    my $ret = 1;\n    my $key;\n    my $value;\n    my\
    \ $is_upper = 0;\n    my $is_lower = 0;\n    my $is_mixed = 0;\n    my $is_digit\
    \ = 0;\n    my $is_empty = 1;\n    my $is_string = 0;\n    my $is_number = 0;\n\
    \    my $is_other = 0;\n    my $is_all_string = 1;\n    my $is_all_number = 1;\n\
    \    my $is_all_other = 1;\n    while (($key, $value) = each %$dict) {\n     \
    \   $is_empty = 0;\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower =\
    \ 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n   \
    \     } elsif ($key =~ /^[0-9]+$/) {\n            $is_digit = 1;\n        } else\
    \ {\n            $is_mixed = 1;\n        }\n        if ($value =~ /^[a-zA-Z]+$/)\
    \ {\n            $is_string = 1;\n        } elsif ($value =~ /^[0-9]+$/) {\n \
    \           $is_number = 1;\n        } else {\n            $is_other = 1;\n  \
    \      }\n    }\n    if ($is_lower && $is_upper) {\n        $ret = 0;\n    }\n\
    \    if ($is_lower && $is_digit) {\n        $ret = 0;\n    }\n    if ($is_upper\
    \ && $is_digit) {\n        $ret = 0;\n    }\n    if ($is_mixed) {\n        $ret\
    \ = 0;\n    }\n    if ($is_empty) {\n        $ret = 0;\n    }\n    if ($is_string\
    \ && $is_number) {\n        $ret = 0;\n    }\n    if ($is_string && $is_other)\
    \ {\n        $ret = 0;\n    }\n    if ($is_number && $is", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return ($all_lower\
    \ || $all_upper);\n}", "    my $upper = 0;\n    my $lower = 0;\n    my $key;\n\
    \    foreach $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n          \
    \  $upper = 1;\n        }\n        if ($key =~ /[a-z]/) {\n            $lower\
    \ = 1;\n        }\n    }\n    return ($upper == 0 || $lower == 0);\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n    \
    \    if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n \
    \   return ($all_lower || $all_upper);\n}", "    my $lower = 0;\n    my $upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n\
    \        } else {\n            return 0;\n        }\n    }\n    return $lower\
    \ == 0 || $upper == 0;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n       \
    \     $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n           \
    \ $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n}",
  "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n\
    \                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = 0;\n                last;\n            }\n        } elsif ($key_type\
    \ eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n                $result\
    \ = 0;\n                last;\n            }\n        } elsif ($key_type eq \"\
    upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n                $result = 0;\n\
    \                last;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return ($all_lower || $all_upper);\n}", "    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $case = \"\";\n    my $result = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($case eq \"\") {\n            if ($key =~ /[A-Z]/) {\n      \
    \          $case = \"upper\";\n            } else {\n                $case = \"\
    lower\";\n            }\n        } else {\n            if ($case eq \"upper\"\
    \ && $key =~ /[a-z]/) {\n                $result = 0;\n                last;\n\
    \            } elsif ($case eq \"lower\" && $key =~ /[A-Z]/) {\n             \
    \   $result = 0;\n                last;\n            }\n        }\n    }\n   \
    \ return $result;\n}", "    my $lower = 1;\n    my $upper = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $lower = 0;\n\
    \        }\n        if ($key =~ /[a-z]/) {\n            $upper = 0;\n        }\n\
    \    }\n    return $lower || $upper;\n}", "    my $lower = 0;\n    my $upper =\
    \ 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[a-z]/) {\n  \
    \          $lower++;\n        }\n        if ($key =~ /[A-Z]/) {\n            $upper++;\n\
    \        }\n    }\n    if ($lower == 0 || $upper == 0) {\n        return 1;\n\
    \    }\n    return 0;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $key_type = \"\";\n    my $value_type = \"\";\n    my $key_type_count\
    \ = 0;\n    my $value_type_count = 0;\n    my $key_type_count_lower = 0;\n   \
    \ my $key_type_count_upper = 0;\n    my $value_type_count_lower = 0;\n    my $value_type_count_upper\
    \ = 0;\n    my $key_type_count_string = 0;\n    my $value_type_count_string =\
    \ 0;\n    my $key_type_count_number = 0;\n    my $value_type_count_number = 0;\n\
    \    my $key_type_count_other = 0;\n    my $value_type_count_other = 0;\n    my\
    \ $key_type_count_mixed = 0;\n    my $value_type_count_mixed = 0;\n    my $key_type_count_mixed_lower\
    \ = 0;\n    my $key_type_count_mixed_upper = 0;\n    my $value_type_count_mixed_lower\
    \ = 0;\n    my $value_type_count_mixed_upper = 0;\n    my $key_type_count_mixed_string\
    \ = 0;\n    my $value_type_count_mixed_string = 0;\n    my $key_type_count_mixed_number\
    \ = 0;\n    my $value_type_count_mixed_number = 0;\n    my $key_type_count_mixed_other\
    \ = 0;\n    my $value_type_count_mixed_other = 0;\n    my $key_type_count_mixed_lower_string\
    \ = 0;\n    my $key_type_count_mixed_upper_string = 0;\n    my $value_type_count_mixed_lower_string\
    \ = 0;\n    my $value_type_count_mixed_upper_string = 0;\n    my $key_type_count_mixed_lower_number\
    \ = 0;\n    my $key_type_count_mixed_", "    my $ret = 1;\n    my $is_upper =\
    \ 0;\n    my $is_lower = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $is_upper = 1;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $is_lower = 1;\n        }\n    }\n    if ($is_upper && $is_lower)\
    \ {\n        $ret = 0;\n    }\n    return $ret;\n}", "    my $result = 1;\n  \
    \  my $first_key = undef;\n    my $first_key_case = undef;\n    foreach my $key\
    \ (keys %$dict) {\n        if (!defined $first_key) {\n            $first_key\
    \ = $key;\n            $first_key_case = $key =~ /^[a-z]+$/ ? \"lower\" : \"upper\"\
    ;\n        } else {\n            if ($first_key_case eq \"lower\" && $key =~ /^[A-Z]+$/)\
    \ {\n                $result = 0;\n                last;\n            } elsif\
    \ ($first_key_case eq \"upper\" && $key =~ /^[a-z]+$/) {\n                $result\
    \ = 0;\n                last;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $ret = 1;\n    my $key;\n    my $value;\n    my $key_type = \"\";\n\
    \    my $value_type = \"\";\n    my $key_type_count = 0;\n    my $value_type_count\
    \ = 0;\n    my $key_type_lower = 0;\n    my $key_type_upper = 0;\n    my $value_type_lower\
    \ = 0;\n    my $value_type_upper = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_num = 0;\n    my $value_type_num = 0;\n    my $key_type_alpha\
    \ = 0;\n    my $value_type_alpha = 0;\n    my $key_type_alnum = 0;\n    my $value_type_alnum\
    \ = 0;\n    my $key_type_space = 0;\n    my $value_type_space = 0;\n    my $key_type_cntrl\
    \ = 0;\n    my $value_type_cntrl = 0;\n    my $key_type_graph = 0;\n    my $value_type_graph\
    \ = 0;\n    my $key_type_print = 0;\n    my $value_type_print = 0;\n    my $key_type_punct\
    \ = 0;\n    my $value_type_punct = 0;\n    my $key_type_xdigit = 0;\n    my $value_type_xdigit\
    \ = 0;\n    my $key_type_blank = 0;\n    my $value_type_blank = 0;\n    my $key_type_ascii\
    \ = 0;\n    my $value_type_ascii = 0;\n    my $key_type_utf8 = 0;\n    my $value_type_utf8\
    \ = 0;\n    my $key_type_unicode = 0;\n    my $value_type_unicode = 0;\n    my\
    \ $key_type_empty = 0;\n    my $value_type_empty = 0;\n    my $key_type_length\
    \ = 0;\n    my $value_type_length =", "    my $is_lower = 1;\n    my $is_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[a-z]/) {\n\
    \            $is_upper = 0;\n        }\n        if ($key =~ /[A-Z]/) {\n     \
    \       $is_lower = 0;\n        }\n    }\n    return ($is_lower || $is_upper);\n\
    }", "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        } else {\n          \
    \  return 0;\n        }\n    }\n    return $lower == 0 || $upper == 0;\n}", " \
    \   my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        $all_lower = 0 if $key =~ /[A-Z]/;\n        $all_upper = 0 if $key\
    \ =~ /[a-z]/;\n    }\n    return $all_lower || $all_upper;\n}", "    my $key;\n\
    \    my $value;\n    my $is_lower = 0;\n    my $is_upper = 0;\n    my $is_mixed\
    \ = 0;\n    my $is_empty = 0;\n    my $is_string = 0;\n    my $is_number = 0;\n\
    \    my $is_other = 0;\n    my $is_all_string = 0;\n    my $is_all_number = 0;\n\
    \    my $is_all_other = 0;\n    my $is_all_lower = 0;\n    my $is_all_upper =\
    \ 0;\n    my $is_all_mixed = 0;\n    my $is_all_empty = 0;\n    my $is_all_lower_string\
    \ = 0;\n    my $is_all_upper_string = 0;\n    my $is_all_mixed_string = 0;\n \
    \   my $is_all_lower_number = 0;\n    my $is_all_upper_number = 0;\n    my $is_all_mixed_number\
    \ = 0;\n    my $is_all_lower_other = 0;\n    my $is_all_upper_other = 0;\n   \
    \ my $is_all_mixed_other = 0;\n    my $is_all_lower_empty = 0;\n    my $is_all_upper_empty\
    \ = 0;\n    my $is_all_mixed_empty = 0;\n    my $is_all_lower_string_number =\
    \ 0;\n    my $is_all_upper_string_number = 0;\n    my $is_all_mixed_string_number\
    \ = 0;\n    my $is_all_lower_string_other = 0;\n    my $is_all_upper_string_other\
    \ = 0;\n    my $is_all_mixed_string_other = 0;\n    my $is_all_lower_string_empty\
    \ = 0;\n    my $is_all_upper_string_empty = 0;\n    my $is_all_mixed_string_empty\
    \ = 0;\n    my $is_all_lower_number_other = 0;\n    my $is_all_upper", "    my($key,\
    \ $value);\n    my($all_lower, $all_upper);\n    my($is_string) = 1;\n    my($is_lower)\
    \ = 1;\n    my($is_upper) = 1;\n    my($is_empty) = 1;", "    my $lower = 0;\n\
    \    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /[a-z]/) {\n            $lower++;\n        }\n        if ($key =~ /[A-Z]/) {\n\
    \            $upper++;\n        }\n    }\n    return $lower == 0 || $upper ==\
    \ 0;\n}", "    my @keys = keys %$dict;\n    my $first_key = $keys[0];\n    my\
    \ $first_key_is_upper = $first_key =~ /^[A-Z]+$/;\n    my $first_key_is_lower\
    \ = $first_key =~ /^[a-z]+$/;\n    foreach my $key (@keys) {\n        if ($first_key_is_upper)\
    \ {\n            return 0 if $key !~ /^[A-Z]+$/;\n        }\n        elsif ($first_key_is_lower)\
    \ {\n            return 0 if $key !~ /^[a-z]+$/;\n        }\n        else {\n\
    \            return 0;\n        }\n    }\n    return 1;\n}", "    my $key;\n \
    \   my $value;\n    my $all_lower = 1;\n    my $all_upper = 1;\n    my $num_keys\
    \ = 0;\n    while (($key, $value) = each %$dict) {\n        $num_keys++;\n   \
    \     if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n       \
    \ if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return\
    \ 0 if ($num_keys == 0);\n    return ($all_lower || $all_upper);\n}", "    my($key,\
    \ $value);\n    my($upper_case) = 0;\n    my($lower_case) = 0;\n    my($other_case)\
    \ = 0;\n    my($empty) = 1;\n    while (($key, $value) = each %$dict) {\n    \
    \    $empty = 0;\n        if ($key =~ /^[A-Z]+$/) {\n            $upper_case++;\n\
    \        } elsif ($key =~ /^[a-z]+$/) {\n            $lower_case++;\n        }\
    \ else {\n            $other_case++;\n        }\n    }\n    return 0 if $empty;\n\
    \    return 0 if $other_case;\n    return 1 if $upper_case && $lower_case;\n \
    \   return 1 if $upper_case && !$lower_case;\n    return 1 if $lower_case && !$upper_case;\n\
    \    return 0;\n}", "    my $retval = 1;\n    my $key;\n    my $val;\n    my $key_type\
    \ = \"\";\n    my $val_type = \"\";\n    my $key_type_count = 0;\n    my $val_type_count\
    \ = 0;\n    my $key_type_lower = 0;\n    my $key_type_upper = 0;\n    my $val_type_lower\
    \ = 0;\n    my $val_type_upper = 0;\n    my $key_type_mixed = 0;\n    my $val_type_mixed\
    \ = 0;\n    my $key_type_other = 0;\n    my $val_type_other = 0;\n    my $key_type_num\
    \ = 0;\n    my $val_type_num = 0;\n    my $key_type_num_str = 0;\n    my $val_type_num_str\
    \ = 0;\n    my $key_type_num_str_mixed = 0;\n    my $val_type_num_str_mixed =\
    \ 0;\n    my $key_type_num_str_other = 0;\n    my $val_type_num_str_other = 0;\n\
    \    my $key_type_num_mixed = 0;\n    my $val_type_num_mixed = 0;\n    my $key_type_num_other\
    \ = 0;\n    my $val_type_num_other = 0;\n    my $key_type_str_mixed = 0;\n   \
    \ my $val_type_str_mixed = 0;\n    my $key_type_str_other = 0;\n    my $val_type_str_other\
    \ = 0;\n    my $key_type_mixed_other = 0;\n    my $val_type_mixed_other = 0;\n\
    \    my $key_type_num_str_mixed_other = 0;\n    my $val_type_num_str_mixed_other\
    \ = 0;\n    my $key_type_num_mixed_other = 0;\n    my $val_type_num_mixed_other\
    \ = 0;\n    my $key_type_str_mixed_", "    my $result = 1;\n    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    if (!$all_lower\
    \ && !$all_upper) {\n        $result = 0;\n    }\n    return $result;\n}", " \
    \   my $ret = 1;\n    my $lower = 0;\n    my $upper = 0;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n\
    \        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n        } else\
    \ {\n            $ret = 0;\n            last;\n        }\n    }\n    if ($lower\
    \ && $upper) {\n        $ret = 0;\n    }\n    return $ret;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        $all_lower\
    \ = 0 if $key =~ /[A-Z]/;\n        $all_upper = 0 if $key =~ /[a-z]/;\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $count = 0;\n    my $result\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[a-z]/) {\n\
    \            $count++;\n        }\n        if ($key =~ /[A-Z]/) {\n          \
    \  $count--;\n        }\n    }\n    if ($count != 0) {\n        $result = 0;\n\
    \    }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $upper = 0;\n    my $lower = 0;\n    my $other = 0;\n    my $count = 0;\n\
    \    while (($key, $value) = each %$dict) {\n        $count++;\n        if ($key\
    \ =~ /^[A-Z]+$/) {\n            $upper++;\n        } elsif ($key =~ /^[a-z]+$/)\
    \ {\n            $lower++;\n        } else {\n            $other++;\n        }\n\
    \    }\n    if ($count > 0) {\n        if ($upper > 0 && $lower > 0) {\n     \
    \       $result = 0;\n        }\n    }\n    return $result;\n}", "    my $is_lower\
    \ = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        $is_lower\
    \ = 0 if $key =~ /[A-Z]/;\n        $is_upper = 0 if $key =~ /[a-z]/;\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $upper = 0;\n    my $lower =\
    \ 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[A-Z]+$/) {\n\
    \            $upper++;\n        } elsif ($key =~ /^[a-z]+$/) {\n            $lower++;\n\
    \        } else {\n            return 0;\n        }\n    }\n    return 1 if $upper\
    \ == 0 || $lower == 0;\n    return 0;\n}", "    my $result = 1;\n    my $key_type\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\"\
    ) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\"\
    ;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"\
    upper\";\n            } else {\n                $result = 0;\n               \
    \ last;\n            }\n        } else {\n            if ($key_type eq \"lower\"\
    \ && $key =~ /^[A-Z]+$/) {\n                $result = 0;\n                last;\n\
    \            } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n      \
    \          $result = 0;\n                last;\n            }\n        }\n   \
    \ }\n    return $result;\n}", "    my $ret = 1;\n    my $key;\n    my $val;\n\
    \    my $is_upper = 0;\n    my $is_lower = 0;\n    my $is_mixed = 0;\n    my $is_num\
    \ = 0;\n    my $is_empty = 1;\n    foreach $key (keys %$dict) {\n        $is_empty\
    \ = 0;\n        if ($key =~ /[A-Z]/) {\n            $is_upper = 1;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $is_lower = 1;\n        }\n     \
    \   if ($key =~ /[0-9]/) {\n            $is_num = 1;\n        }\n        if ($is_upper\
    \ && $is_lower) {\n            $is_mixed = 1;\n        }\n    }\n    if ($is_empty)\
    \ {\n        $ret = 0;\n    }\n    if ($is_mixed || $is_num) {\n        $ret =\
    \ 0;\n    }\n    return $ret;\n}", "    my $is_lower = 0;\n    my $is_upper =\
    \ 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return 0;\n\
    \        }\n    }\n    return ($is_lower && $is_upper) ? 0 : 1;\n}", "    my $result\
    \ = 1;\n    my $key;\n    my $value;\n    my $key_type;\n    my $value_type;\n\
    \    my $key_type_count = 0;\n    my $value_type_count = 0;\n    my $key_type_lower\
    \ = 0;\n    my $key_type_upper = 0;\n    my $value_type_lower = 0;\n    my $value_type_upper\
    \ = 0;\n    my $key_type_mixed = 0;\n    my $value_type_mixed = 0;\n    my $key_type_numeric\
    \ = 0;\n    my $value_type_numeric = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_count_lower = 0;\n    my $key_type_count_upper = 0;\n\
    \    my $value_type_count_lower = 0;\n    my $value_type_count_upper = 0;\n  \
    \  my $key_type_count_mixed = 0;\n    my $value_type_count_mixed = 0;\n    my\
    \ $key_type_count_numeric = 0;\n    my $value_type_count_numeric = 0;\n    my\
    \ $key_type_count_other = 0;\n    my $value_type_count_other = 0;\n    my $key_type_count_total\
    \ = 0;\n    my $value_type_count_total = 0;\n    my $key_type_count_total_lower\
    \ = 0;\n    my $key_type_count_total_upper = 0;\n    my $value_type_count_total_lower\
    \ = 0;\n    my $value_type_count_total_upper = 0;\n    my $key_type_count_total_mixed\
    \ = 0;\n    my $value_type_count_total_mixed = 0;\n    my $key_type_count_total_numeric\
    \ = 0;\n    my $value_type_count_total_numeric = 0;\n    my $key_type_count_total_other\
    \ = 0;\n    my $value_type_", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $key_type = \"\";\n    my $value_type = \"\";\n    my $key_type_count\
    \ = 0;\n    my $value_type_count = 0;\n    my $key_type_lower = 0;\n    my $key_type_upper\
    \ = 0;\n    my $value_type_lower = 0;\n    my $value_type_upper = 0;\n    my $key_type_mixed\
    \ = 0;\n    my $value_type_mixed = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_count_lower = 0;\n    my $key_type_count_upper = 0;\n\
    \    my $value_type_count_lower = 0;\n    my $value_type_count_upper = 0;\n  \
    \  my $key_type_count_mixed = 0;\n    my $value_type_count_mixed = 0;\n    my\
    \ $key_type_count_other = 0;\n    my $value_type_count_other = 0;\n    my $key_type_count_total\
    \ = 0;\n    my $value_type_count_total = 0;\n    my $key_type_count_total_lower\
    \ = 0;\n    my $key_type_count_total_upper = 0;\n    my $value_type_count_total_lower\
    \ = 0;\n    my $value_type_count_total_upper = 0;\n    my $key_type_count_total_mixed\
    \ = 0;\n    my $value_type_count_total_mixed = 0;\n    my $key_type_count_total_other\
    \ = 0;\n    my $value_type_count_total_other = 0;\n    my $key_type_count_total_all\
    \ = 0;\n    my $value_type_count_total_all = 0;\n    my $key_type_count_total_all_lower\
    \ = 0;\n    my $key_type_count_total_all_upper = 0;\n    my $value_type_count_",
  "    my $result = 1;\n    my $key;\n    my $value;\n    my $is_upper = 0;\n    my\
    \ $is_lower = 0;\n    my $is_mixed = 0;\n    my $is_empty = 1;\n    foreach $key\
    \ (keys %$dict) {\n        $is_empty = 0;\n        if ($key =~ /[A-Z]/) {\n  \
    \          $is_upper = 1;\n        }\n        if ($key =~ /[a-z]/) {\n       \
    \     $is_lower = 1;\n        }\n        if ($is_upper && $is_lower) {\n     \
    \       $is_mixed = 1;\n            last;\n        }\n    }\n    if ($is_empty)\
    \ {\n        $result = 0;\n    }\n    elsif ($is_mixed) {\n        $result = 0;\n\
    \    }\n    return $result;\n}", "    my $ret = 1;\n    my $key;\n    my $val;\n\
    \    my $is_upper = 0;\n    my $is_lower = 0;\n    if (scalar(keys %$dict) ==\
    \ 0) {\n        $ret = 0;\n    } else {\n        while (($key, $val) = each %$dict)\
    \ {\n            if ($key =~ /^[A-Z]+$/) {\n                $is_upper = 1;\n \
    \           } elsif ($key =~ /^[a-z]+$/) {\n                $is_lower = 1;\n \
    \           } else {\n                $ret = 0;\n                last;\n     \
    \       }\n        }\n        if ($is_upper && $is_lower) {\n            $ret\
    \ = 0;\n        }\n    }\n    return $ret;\n}", "    my $lower = 0;\n    my $upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n\
    \        } else {\n            return 0;\n        }\n    }\n    if ($lower > 0\
    \ && $upper > 0) {\n        return 0;\n    }\n    return 1;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $result = 1;\n    my $count = 0;\n    my $key_type\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($count == 0) {\n \
    \           if ($key =~ /[a-z]/) {\n                $key_type = \"lower\";\n \
    \           } elsif ($key =~ /[A-Z]/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = 0;\n                last;\n\
    \            }\n        } else {\n            if ($key_type eq \"lower\" && $key\
    \ =~ /[A-Z]/) {\n                $result = 0;\n                last;\n       \
    \     } elsif ($key_type eq \"upper\" && $key =~ /[a-z]/) {\n                $result\
    \ = 0;\n                last;\n            }\n        }\n        $count++;\n \
    \   }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $key_type = \"\";\n    my $value_type = \"\";\n    my $key_type_count\
    \ = 0;\n    my $value_type_count = 0;\n    my $key_type_lower = 0;\n    my $key_type_upper\
    \ = 0;\n    my $value_type_lower = 0;\n    my $value_type_upper = 0;\n    my $key_type_other\
    \ = 0;\n    my $value_type_other = 0;\n    my $key_type_count_lower = 0;\n   \
    \ my $key_type_count_upper = 0;\n    my $value_type_count_lower = 0;\n    my $value_type_count_upper\
    \ = 0;\n    my $key_type_count_other = 0;\n    my $value_type_count_other = 0;\n\
    \    my $key_type_count_total = 0;\n    my $value_type_count_total = 0;\n    my\
    \ $key_type_count_total_lower = 0;\n    my $key_type_count_total_upper = 0;\n\
    \    my $value_type_count_total_lower = 0;\n    my $value_type_count_total_upper\
    \ = 0;\n    my $key_type_count_total_other = 0;\n    my $value_type_count_total_other\
    \ = 0;\n    my $key_type_count_total_lower_upper = 0;\n    my $value_type_count_total_lower_upper\
    \ = 0;\n    my $key_type_count_total_lower_other = 0;\n    my $value_type_count_total_lower_other\
    \ = 0;\n    my $key_type_count_total_upper_other = 0;\n    my $value_type_count_total_upper_other\
    \ = 0;\n    my $key_type_count_total_lower_upper_other = 0;\n    my $value_type_count_total_lower_upper_other\
    \ = 0;\n    my $key_type_count_total_lower_upper_other_count =", "    my $ret\
    \ = 1;\n    my $key;\n    my $value;\n    my $key_type = \"\";\n    my $value_type\
    \ = \"\";\n    my $key_type_count = 0;\n    my $value_type_count = 0;\n    my\
    \ $key_type_upper = 0;\n    my $key_type_lower = 0;\n    my $value_type_upper\
    \ = 0;\n    my $value_type_lower = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_int = 0;\n    my $value_type_int = 0;\n    my $key_type_float\
    \ = 0;\n    my $value_type_float = 0;\n    my $key_type_string = 0;\n    my $value_type_string\
    \ = 0;\n    my $key_type_bool = 0;\n    my $value_type_bool = 0;\n    my $key_type_array\
    \ = 0;\n    my $value_type_array = 0;\n    my $key_type_hash = 0;\n    my $value_type_hash\
    \ = 0;\n    my $key_type_undef = 0;\n    my $value_type_undef = 0;\n    my $key_type_ref\
    \ = 0;\n    my $value_type_ref = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_other = 0;\n    my $value_type_other = 0;\n    my $key_type_other\
    \ = 0;\n    my $value_type_other = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_other = 0;\n    my $value_type_other = 0;\n    my $key_type_other\
    \ = 0;\n    my $value_type_other = 0;\n    my $key_type_other = 0;\n    my $value_type_other\
    \ = 0;\n    my $key_type_other = 0;\n   ", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        $all_lower = 0 if $key =~\
    \ /[A-Z]/;\n        $all_upper = 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    return $all_lower || $all_upper;\n}", "    my $is_lower\
    \ = 0;\n    my $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        elsif\
    \ ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n        else\
    \ {\n            return 0;\n        }\n    }\n    return ($is_lower && $is_upper)\
    \ ? 0 : 1;\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n      \
    \  }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        }\n\
    \        else {\n            return 0;\n        }\n    }\n    return $lower ==\
    \ 0 || $upper == 0;\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $is_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n\
    \        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $result = 1;\n\
    \    my $key;\n    my $value;\n    my $upper = 0;\n    my $lower = 0;\n    my\
    \ $other = 0;\n    while (($key, $value) = each %$dict) {\n        if ($key =~\
    \ /^[A-Z]+$/) {\n            $upper++;\n        } elsif ($key =~ /^[a-z]+$/) {\n\
    \            $lower++;\n        } else {\n            $other++;\n        }\n \
    \   }\n    if ($upper > 0 && $lower > 0) {\n        $result = 0;\n    }\n    if\
    \ ($other > 0) {\n        $result = 0;\n    }\n    return $result;\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        $all_lower = 0 if ($key !~ /^[a-z]+$/);\n        $all_upper = 0 if ($key\
    \ !~ /^[A-Z]+$/);\n    }\n    return ($all_lower || $all_upper);\n}", "    my\
    \ $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        $is_lower = 0 if $key !~ /^[a-z]+$/;\n        $is_upper = 0 if $key !~\
    \ /^[A-Z]+$/;\n    }\n    return $is_lower || $is_upper;\n}", "    my($key, $value);\n\
    \    my($lower, $upper);\n    $lower = $upper = 1;\n    while(($key, $value) =\
    \ each %$dict) {\n        if($key =~ /[a-z]/) {\n            $upper = 0;\n   \
    \     }\n        if($key =~ /[A-Z]/) {\n            $lower = 0;\n        }\n \
    \   }\n    return ($lower || $upper);\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return 0;\n\
    \        }\n    }\n    if ($is_lower && $is_upper) {\n        return 0;\n    }\n\
    \    else {\n        return 1;\n    }\n}", "    my $ret = 1;\n    my $key;\n \
    \   my $val;\n    my $lc_key;\n    my $uc_key;\n    my $lc_val;\n    my $uc_val;\n\
    \    my $lc_count = 0;\n    my $uc_count = 0;\n    my $key_count = 0;\n    my\
    \ $val_count = 0;\n    my $dict_size = keys %$dict;\n    if ($dict_size == 0)\
    \ {\n        $ret = 0;\n    } else {\n        while (($key, $val) = each %$dict)\
    \ {\n            $key_count++;\n            $val_count++;\n            $lc_key\
    \ = lc($key);\n            $uc_key = uc($key);\n            $lc_val = lc($val);\n\
    \            $uc_val = uc($val);\n            if ($key eq $lc_key) {\n       \
    \         $lc_count++;\n            } elsif ($key eq $uc_key) {\n            \
    \    $uc_count++;\n            }\n            if ($val eq $lc_val) {\n       \
    \         $lc_count++;\n            } elsif ($val eq $uc_val) {\n            \
    \    $uc_count++;\n            }\n        }\n        if ($lc_count == $key_count\
    \ + $val_count) {\n            $ret = 1;\n        } elsif ($uc_count == $key_count\
    \ + $val_count) {\n            $ret = 1;\n        } else {\n            $ret =\
    \ 0;\n        }\n    }\n    return $ret;\n}", "    my $all_lower = 1;\n    my\
    \ $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/)\
    \ {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n\
    \            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $is_all_lower = 1;\n    my $is_all_upper = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        $is_all_lower = 0 if $key !~ /^[a-z]+$/;\n        $is_all_upper\
    \ = 0 if $key !~ /^[A-Z]+$/;\n    }\n    return $is_all_lower || $is_all_upper;\n\
    }", "    my $ret = 1;\n    my $key;\n    my $val;\n    my $key_type = \"\";\n\
    \    my $val_type = \"\";\n    my $key_type_count = 0;\n    my $val_type_count\
    \ = 0;\n    my $key_type_count_lower = 0;\n    my $key_type_count_upper = 0;\n\
    \    my $val_type_count_lower = 0;\n    my $val_type_count_upper = 0;\n    my\
    \ $key_type_count_num = 0;\n    my $val_type_count_num = 0;\n    my $key_type_count_other\
    \ = 0;\n    my $val_type_count_other = 0;\n    my $key_type_count_mixed = 0;\n\
    \    my $val_type_count_mixed = 0;\n    my $key_type_count_mixed_lower = 0;\n\
    \    my $val_type_count_mixed_lower = 0;\n    my $key_type_count_mixed_upper =\
    \ 0;\n    my $val_type_count_mixed_upper = 0;\n    my $key_type_count_mixed_num\
    \ = 0;\n    my $val_type_count_mixed_num = 0;\n    my $key_type_count_mixed_other\
    \ = 0;\n    my $val_type_count_mixed_other = 0;\n    my $key_type_count_mixed_lower_upper\
    \ = 0;\n    my $val_type_count_mixed_lower_upper = 0;\n    my $key_type_count_mixed_lower_num\
    \ = 0;\n    my $val_type_count_mixed_lower_num = 0;\n    my $key_type_count_mixed_lower_other\
    \ = 0;\n    my $val_type_count_mixed_lower_other = 0;\n    my $key_type_count_mixed_upper_num\
    \ = 0;\n    my $val_type_count_mixed_upper_num = 0;\n    my $key_type_count_mixed_upper_other\
    \ = 0", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n \
    \       }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n\
    \        }\n        else {\n            return 0;\n        }\n    }\n    return\
    \ $is_lower || $is_upper;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $key_type = \"\";\n    my $value_type = \"\";\n    my $key_type_count\
    \ = 0;\n    my $value_type_count = 0;\n    my $key_type_lower = 0;\n    my $key_type_upper\
    \ = 0;\n    my $value_type_lower = 0;\n    my $value_type_upper = 0;\n    my $key_type_count_lower\
    \ = 0;\n    my $key_type_count_upper = 0;\n    my $value_type_count_lower = 0;\n\
    \    my $value_type_count_upper = 0;\n    my $key_type_count_other = 0;\n    my\
    \ $value_type_count_other = 0;\n    my $key_type_count_total = 0;\n    my $value_type_count_total\
    \ = 0;\n    my $key_type_count_total_lower = 0;\n    my $key_type_count_total_upper\
    \ = 0;\n    my $value_type_count_total_lower = 0;\n    my $value_type_count_total_upper\
    \ = 0;\n    my $key_type_count_total_other = 0;\n    my $value_type_count_total_other\
    \ = 0;\n    my $key_type_count_total_lower_other = 0;\n    my $key_type_count_total_upper_other\
    \ = 0;\n    my $value_type_count_total_lower_other = 0;\n    my $value_type_count_total_upper_other\
    \ = 0;\n    my $key_type_count_total_lower_upper = 0;\n    my $value_type_count_total_lower_upper\
    \ = 0;\n    my $key_type_count_total_lower_upper_other = 0;\n    my $value_type_count_total_lower_upper_other\
    \ = 0;\n    my $key_type_count_total_lower_upper_other_lower = 0;\n    my $key_type_count_total_lower_upper_other_upper\
    \ = 0;", "    my $ret = 1;\n    my $key;\n    my $val;\n    my $key_type = \"\"\
    ;\n    my $val_type = \"\";\n    my $key_type_count = 0;\n    my $val_type_count\
    \ = 0;\n    my $key_type_count_lower = 0;\n    my $key_type_count_upper = 0;\n\
    \    my $val_type_count_lower = 0;\n    my $val_type_count_upper = 0;\n    my\
    \ $key_type_count_num = 0;\n    my $val_type_count_num = 0;\n    my $key_type_count_alpha\
    \ = 0;\n    my $val_type_count_alpha = 0;\n    my $key_type_count_other = 0;\n\
    \    my $val_type_count_other = 0;\n    my $key_type_count_mixed = 0;\n    my\
    \ $val_type_count_mixed = 0;\n    my $key_type_count_mixed_alpha = 0;\n    my\
    \ $val_type_count_mixed_alpha = 0;\n    my $key_type_count_mixed_num = 0;\n  \
    \  my $val_type_count_mixed_num = 0;\n    my $key_type_count_mixed_other = 0;\n\
    \    my $val_type_count_mixed_other = 0;\n    my $key_type_count_mixed_alpha_num\
    \ = 0;\n    my $val_type_count_mixed_alpha_num = 0;\n    my $key_type_count_mixed_alpha_other\
    \ = 0;\n    my $val_type_count_mixed_alpha_other = 0;\n    my $key_type_count_mixed_num_other\
    \ = 0;\n    my $val_type_count_mixed_num_other = 0;\n    my $key_type_count_mixed_alpha_num_other\
    \ = 0;\n    my $val_type_count_mixed_alpha_num_other = 0;\n    my $key_type_count_mixed_alpha_num_other_lower",
  "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        $all_lower = 0 if $key =~\
    \ /[A-Z]/;\n        $all_upper = 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n    my $is_empty\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        $is_empty = 0;\n        if\
    \ ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n    return $is_empty\
    \ ? 0 : ($is_lower || $is_upper);\n}", "    my $lower = 0;\n    my $upper = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n    \
    \        $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n\
    \        } else {\n            return 0;\n        }\n    }\n    return ($lower\
    \ == 0 || $upper == 0);\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $upper = 0;\n    my $lower = 0;\n    my $other = 0;\n    my $count = 0;\n\
    \    my $retval = 0;\n    foreach $key (keys %$dict) {\n        $value = $dict->{$key};\n\
    \        $count++;\n        if ($key =~ /[A-Z]/) {\n            $upper++;\n  \
    \      } elsif ($key =~ /[a-z]/) {\n            $lower++;\n        } else {\n\
    \            $other++;\n        }\n    }\n    if ($count > 0) {\n        if ($upper\
    \ > 0 && $lower > 0) {\n            $retval = 0;\n        } elsif ($other > 0)\
    \ {\n            $retval = 0;\n        } else {\n            $retval = 1;\n  \
    \      }\n    }\n    return $retval;\n}", "    my $ret = 1;\n    my $key;\n  \
    \  my $val;\n    my $first_key;\n    my $first_val;\n    my $first_key_type;\n\
    \    my $first_val_type;\n    my $key_type;\n    my $val_type;\n    my $key_is_upper\
    \ = 0;\n    my $key_is_lower = 0;\n    my $val_is_upper = 0;\n    my $val_is_lower\
    \ = 0;\n    my $key_is_alpha = 0;\n    my $val_is_alpha = 0;\n    my $key_is_num\
    \ = 0;\n    my $val_is_num = 0;\n    my $key_is_alnum = 0;\n    my $val_is_alnum\
    \ = 0;\n    my $key_is_space = 0;\n    my $val_is_space = 0;\n    my $key_is_punct\
    \ = 0;\n    my $val_is_punct = 0;\n    my $key_is_graph = 0;\n    my $val_is_graph\
    \ = 0;\n    my $key_is_print = 0;\n    my $val_is_print = 0;\n    my $key_is_xdigit\
    \ = 0;\n    my $val_is_xdigit = 0;\n    my $key_is_cntrl = 0;\n    my $val_is_cntrl\
    \ = 0;\n    my $key_is_blank = 0;\n    my $val_is_blank = 0;\n    my $key_is_ascii\
    \ = 0;\n    my $val_is_ascii = 0;\n    my $key_is_utf8 = 0;\n    my $val_is_utf8\
    \ = 0;\n    my $key_is_utf8_cntrl = 0;\n    my $val_is_utf8_cntrl = 0;\n    my\
    \ $key_is_utf8_mark = 0;\n    my $val_is_utf8_mark = 0;\n    my $key_is_utf8_space\
    \ = 0;\n    my $val_is_utf", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $upper = 0;\n    my $lower = 0;\n    my $other = 0;\n    while (($key,\
    \ $value) = each %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $upper++;\n\
    \        } elsif ($key =~ /[a-z]/) {\n            $lower++;\n        } else {\n\
    \            $other++;\n        }\n    }\n    if (($upper > 0 && $lower > 0) ||\
    \ $other > 0) {\n        $result = 0;\n    }\n    return $result;\n}", "    my\
    \ $key;\n    my $value;\n    my $lower = 0;\n    my $upper = 0;\n    my $count\
    \ = 0;\n    my $result = 0;\n    foreach $key (keys %$dict) {\n        $value\
    \ = $dict->{$key};\n        if ($key =~ /[a-z]/) {\n            $lower++;\n  \
    \      }\n        if ($key =~ /[A-Z]/) {\n            $upper++;\n        }\n \
    \       $count++;\n    }\n    if ($count == 0) {\n        $result = 0;\n    }\n\
    \    elsif ($lower == $count) {\n        $result = 1;\n    }\n    elsif ($upper\
    \ == $count) {\n        $result = 1;\n    }\n    else {\n        $result = 0;\n\
    \    }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $is_lower = 0;\n    my $is_upper = 0;\n    my $is_empty = 1;\n    while\
    \ (($key, $value) = each %$dict) {\n        $is_empty = 0;\n        if ($key =~\
    \ /[a-z]/) {\n            $is_lower = 1;\n        }\n        if ($key =~ /[A-Z]/)\
    \ {\n            $is_upper = 1;\n        }\n    }\n    if ($is_empty) {\n    \
    \    $result = 0;\n    }\n    if ($is_lower && $is_upper) {\n        $result =\
    \ 0;\n    }\n    return $result;\n}", "    my $ret = 1;\n    my $key;\n    my\
    \ $val;\n    my $lc_key;\n    my $uc_key;\n    my $lc_val;\n    my $uc_val;\n\
    \    my $lc_count = 0;\n    my $uc_count = 0;\n    my $key_count = 0;\n    my\
    \ $val_count = 0;\n    my $lc_key_count = 0;\n    my $uc_key_count = 0;\n    my\
    \ $lc_val_count = 0;\n    my $uc_val_count = 0;\n    my $lc_key_val_count = 0;\n\
    \    my $uc_key_val_count = 0;\n    my $lc_val_key_count = 0;\n    my $uc_val_key_count\
    \ = 0;\n    my $lc_key_val_key_count = 0;\n    my $uc_key_val_key_count = 0;\n\
    \    my $lc_val_key_val_count = 0;\n    my $uc_val_key_val_count = 0;\n    my\
    \ $lc_key_val_key_val_count = 0;\n    my $uc_key_val_key_val_count = 0;\n    my\
    \ $lc_key_val_key_val_key_count = 0;\n    my $uc_key_val_key_val_key_count = 0;\n\
    \    my $lc_key_val_key_val_key_val_count = 0;\n    my $uc_key_val_key_val_key_val_count\
    \ = 0;\n    my $lc_key_val_key_val_key_val_key_count = 0;\n    my $uc_key_val_key_val_key_val_key_count\
    \ = 0;\n    my $lc_key_val_key_val_key_val_key_val_count = 0;\n    my $uc_key_val_key_val_key_val_key_val_count\
    \ = 0;\n    my $lc_key_val_key_val_key_val_key_val_key_count = 0;\n    my $",
  "    my $retval = 1;\n    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n \
    \       } else {\n            $retval = 0;\n            last;\n        }\n   \
    \ }\n    if ($is_lower && $is_upper) {\n        $retval = 0;\n    }\n    return\
    \ $retval;\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n      \
    \  }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        }\n\
    \        else {\n            return 0;\n        }\n    }\n    if ($lower == 0\
    \ || $upper == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n\
    \    }\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n    \
    \    }\n        if ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n        }\n\
    \    }\n    return $lower && $upper ? 0 : 1;\n}", "    my $lower = 0;\n    my\
    \ $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n         \
    \   $upper++;\n        } else {\n            return 0;\n        }\n    }\n   \
    \ return ($lower == 0 || $upper == 0) ? 1 : 0;\n}", "    my $all_upper = 1;\n\
    \    my $all_lower = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_upper || $all_lower;\n\
    }", "    my $lower = 1;\n    my $upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $lower = 0;\n        }\n    \
    \    if ($key =~ /[a-z]/) {\n            $upper = 0;\n        }\n    }\n    return\
    \ $lower || $upper;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $key_count = 0;\n    my $upper_count = 0;\n    my $lower_count = 0;\n\
    \    my $other_count = 0;\n    while(($key, $value) = each %$dict) {\n       \
    \ $key_count++;\n        if ($key =~ /^[A-Z]+$/) {\n            $upper_count++;\n\
    \        } elsif ($key =~ /^[a-z]+$/) {\n            $lower_count++;\n       \
    \ } else {\n            $other_count++;\n        }\n    }\n    if ($key_count\
    \ == 0) {\n        $result = 0;\n    } elsif ($upper_count > 0 && $lower_count\
    \ > 0) {\n        $result = 0;\n    } elsif ($other_count > 0) {\n        $result\
    \ = 0;\n    }\n    return $result;\n}", "    my $lower = 0;\n    my $upper = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n    \
    \        $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n\
    \        } else {\n            return 0;\n        }\n    }\n    return $lower\
    \ == 0 || $upper == 0;\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n  \
    \  foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n         \
    \   $is_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_upper\
    \ = 0;\n        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $lower\
    \ = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper = 1;\n        } else {\n            return 0;\n      \
    \  }\n    }\n    return $lower || $upper;\n}", "    my $is_lower = 1;\n    my\
    \ $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        $is_lower = 0 if\
    \ $key !~ /^[a-z]+$/;\n        $is_upper = 0 if $key !~ /^[A-Z]+$/;\n    }\n \
    \   return $is_lower || $is_upper;\n}", "    my $ret = 1;\n    my $key;\n    my\
    \ $val;\n    my $lc_key;\n    my $uc_key;\n    my $lc_val;\n    my $uc_val;\n\
    \    my $lc_count = 0;\n    my $uc_count = 0;\n    my $key_count = 0;\n    my\
    \ $val_count = 0;\n    my $lc_key_count = 0;\n    my $uc_key_count = 0;\n    my\
    \ $lc_val_count = 0;\n    my $uc_val_count = 0;\n    my $lc_key_val_count = 0;\n\
    \    my $uc_key_val_count = 0;\n    my $lc_val_key_count = 0;\n    my $uc_val_key_count\
    \ = 0;\n    my $lc_key_val_key_count = 0;\n    my $uc_key_val_key_count = 0;\n\
    \    my $lc_val_key_val_count = 0;\n    my $uc_val_key_val_count = 0;\n    my\
    \ $lc_key_val_key_val_count = 0;\n    my $uc_key_val_key_val_count = 0;\n    my\
    \ $lc_key_val_key_val_key_count = 0;\n    my $uc_key_val_key_val_key_count = 0;\n\
    \    my $lc_key_val_key_val_key_val_count = 0;\n    my $uc_key_val_key_val_key_val_count\
    \ = 0;\n    my $lc_key_val_key_val_key_val_key_count = 0;\n    my $uc_key_val_key_val_key_val_key_count\
    \ = 0;\n    my $lc_key_val_key_val_key_val_key_val_count = 0;\n    my $uc_key_val_key_val_key_val_key_val_count\
    \ = 0;\n    my $lc_key_val_key_val_key_val_key_val_key_count = 0;\n    my $",
  "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n \
    \       if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $ret = 1;\n    my $key;\n   \
    \ my $val;\n    my $is_upper = 0;\n    my $is_lower = 0;\n    my $is_mixed = 0;\n\
    \    my $is_num = 0;\n    my $is_empty = 1;\n    my $is_str = 0;\n    my $is_other\
    \ = 0;\n    my $is_all_str = 1;\n    my $is_all_num = 1;\n    my $is_all_other\
    \ = 1;\n    my $is_all_upper = 1;\n    my $is_all_lower = 1;\n    my $is_all_mixed\
    \ = 1;\n    my $is_all_empty = 1;\n    my $is_all_non_empty = 1;\n    my $is_all_non_num\
    \ = 1;\n    my $is_all_non_str = 1;\n    my $is_all_non_other = 1;\n    my $is_all_non_upper\
    \ = 1;\n    my $is_all_non_lower = 1;\n    my $is_all_non_mixed = 1;\n    my $is_all_non_empty\
    \ = 1;\n    my $is_all_non_non_empty = 1;\n    my $is_all_non_non_num = 1;\n \
    \   my $is_all_non_non_str = 1;\n    my $is_all_non_non_other = 1;\n    my $is_all_non_non_upper\
    \ = 1;\n    my $is_all_non_non_lower = 1;\n    my $is_all_non_non_mixed = 1;\n\
    \    my $is_all_non_non_empty = 1;\n    my $is_all_non_non_non_empty = 1;\n  \
    \  my $is_all_non_non_non_num = 1;\n    my $is_all_non_non_non_str = 1;\n    my\
    \ $is_all_non_non_non_other = 1;\n    my $is_all_non_non_non_upper = 1;\n    my\
    \ $", "    my $ret = 1;\n    my $first_key = undef;\n    my $first_key_type =\
    \ undef;\n    foreach my $key (keys %$dict) {\n        if (!defined $first_key)\
    \ {\n            $first_key = $key;\n            $first_key_type = ($key =~ /^[a-z]+$/)\
    \ ? 'lower' : 'upper';\n        } else {\n            if ($first_key_type eq 'lower'\
    \ && $key =~ /^[A-Z]+$/) {\n                $ret = 0;\n                last;\n\
    \            } elsif ($first_key_type eq 'upper' && $key =~ /^[a-z]+$/) {\n  \
    \              $ret = 0;\n                last;\n            }\n        }\n  \
    \  }\n    return $ret;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

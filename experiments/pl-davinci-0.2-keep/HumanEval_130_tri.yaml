completions:
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @tri = (1, 3, 2);\n    for my $i (3 .. $n) {\n        $tri[$i] = $i % 2\
  \ ? $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1] : 1 + $i / 2;\n    }\n    return\
  \ @tri;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @seq = (1, 3, 2);\n    for my $i (3 .. $n) {\n        if ($i % 2 == 0) {\n\
  \            push @seq, 1 + $i / 2;\n        } else {\n            push @seq, $seq[$i\
  \ - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n    return @seq;\n}"
- "    my @a = (1, 3, 2);\n    for (3..$n) {\n        push @a, $a[$_ - 1] + $a[$_\
  \ - 2] + $a[$_ - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @tri = (1, 3, 2);\n    for my $i (3 .. $n) {\n        $tri[$i] = $i % 2\
  \ ? $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1] : 1 + $i / 2;\n    }\n    return\
  \ @tri;\n}"
- "    my @seq = (1, 3, 2);\n    while (@seq < $n + 1) {\n        push @seq, $seq[-1]\
  \ + $seq[-2] + $seq[-3];\n    }\n    return @seq;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @seq = (1, 3, 2);\n    while(@seq < $n + 1) {\n        my $next = $seq[-1]\
  \ + $seq[-2] + $seq[-3];\n        push @seq, $next;\n    }\n    return @seq;\n}"
- "    my @result = (1, 3, 2);\n    return @result if $n < 3;\n    for (my $i = 3;\
  \ $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            push @result, 1 + $i\
  \ / 2;\n        } else {\n            push @result, $result[$i - 1] + $result[$i\
  \ - 2] + $result[$i + 1];\n        }\n    }\n    return @result;\n}"
- "    my @t = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $t[$i] =\
  \ $t[$i - 1] + $t[$i - 2] + $t[$i - 3];\n    }\n    return @t;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (3..$n) {\n        $tri[$_] = $tri[$_-1] + $tri[$_-2]\
  \ + $tri[$_-3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    my $i = 3;\n    while ($i <= $n) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n        $i++;\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $res[$i]\
  \ = $res[$i - 1] + $res[$i - 2] + $res[$i - 3];\n    }\n    return @res;\n}"
- "    my @seq = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @seq, 1 + $i / 2;\n        } else {\n          \
  \  push @seq, $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n  \
  \  return @seq;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @ret = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @ret, 1 + $i / 2;\n        } else {\n          \
  \  push @ret, $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n        }\n    }\n  \
  \  return @ret;\n}"
- "    my @result = (1, 3, 2);\n    my $i = 3;\n    while ($i <= $n) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n        $i++;\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @tribonacci = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n      \
  \  $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i\
  \ - 3];\n    }\n    return @tribonacci;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    if ($n < 3) {\n        return @result[0..$n];\n\
  \    }\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n    \
  \        push @result, 1 + $i / 2;\n        } else {\n            push @result,\
  \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return\
  \ @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @ret = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i %\
  \ 2 == 0) {\n            push @ret, 1 + $i / 2;\n        } else {\n            push\
  \ @ret, $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n        }\n    }\n    return\
  \ @ret;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i %\
  \ 2 == 0) {\n            push @a, 1 + $i / 2;\n        } else {\n            push\
  \ @a, $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n        }\n    }\n    return @a;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i %\
  \ 2 == 0) {\n            push @a, 1 + $i / 2;\n        } else {\n            push\
  \ @a, $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n        }\n    }\n    return @a;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @tri = (1, 3, 2);\n    for (3..$n) {\n        push @tri, ($_ % 2) ? $tri[-1]\
  \ + $tri[-2] + $tri[-3] : 1 + $_ / 2;\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    return @result if $n <= 2;\n    for my $i (3 ..\
  \ $n) {\n        if ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n   \
  \     } else {\n            push @result, $result[$i - 1] + $result[$i - 2] + $result[$i\
  \ + 1];\n        }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @ret;\n    for (my $i = 0; $i <= $n; $i++) {\n        if ($i == 0) {\n \
  \           push @ret, 1;\n        } elsif ($i == 1) {\n            push @ret, 3;\n\
  \        } elsif ($i == 2) {\n            push @ret, 2;\n        } else {\n    \
  \        my $last = $ret[$i - 1];\n            my $last2 = $ret[$i - 2];\n     \
  \       my $last3 = $ret[$i - 3];\n            my $cur = $last3 + $last2 + $last;\n\
  \            push @ret, $cur;\n        }\n    }\n    return @ret;\n}"
- "    my @a = (1, 3, 2);\n    for (3..$n) {\n        push @a, $a[$_ - 1] + $a[$_\
  \ - 2] + $a[$_ - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @result = (1, 3, 2);\n    return @result if $n < 3;\n    for (3..$n) {\n\
  \        push @result, $result[$_ - 1] + $result[$_ - 2] + $result[$_ - 3];\n  \
  \  }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @a = (1, 3, 2);\n    for my $i (3 .. $n) {\n        $a[$i] = $i % 2 ? $a[$i\
  \ - 1] + $a[$i - 2] + $a[$i + 1] : 1 + $i / 2;\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @a = (1, 3, 2);\n    for my $i (3 .. $n) {\n        push @a, $i % 2 ? $a[-1]\
  \ + $a[-2] + $a[-3] : 1 + $i / 2;\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @ret = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i %\
  \ 2 == 0) {\n            push @ret, 1 + $i / 2;\n        } else {\n            push\
  \ @ret, $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n        }\n    }\n    return\
  \ @ret;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @seq = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @seq, 1 + $i / 2;\n        } else {\n          \
  \  push @seq, $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n  \
  \  return @seq;\n}"
- "    my @seq = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @seq, 1 + $i / 2;\n        } else {\n          \
  \  push @seq, $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n  \
  \  return @seq;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (3..$n) {\n        push @result, $result[$_\
  \ - 1] + $result[$_ - 2] + $result[$_ - 3];\n    }\n    return @result;\n}"
- "    my @r;\n    for (1..$n) {\n        if ($_ == 1) {\n            push @r, 3;\n\
  \        } elsif ($_ % 2 == 0) {\n            push @r, 1 + $_ / 2;\n        } else\
  \ {\n            push @r, $r[-1] + $r[-2] + $r[-3];\n        }\n    }\n    return\
  \ @r;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (3..$n) {\n        push @tri, $tri[$_ - 1] +\
  \ $tri[$_ - 2] + $tri[$_ - 3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    while(@result < $n + 1) {\n        my $last =\
  \ $result[-1];\n        my $second_last = $result[-2];\n        my $third_last =\
  \ $result[-3];\n        push @result, $last + $second_last + $third_last;\n    }\n\
  \    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (3..$n) {\n        push @res, $res[$_ - 1] +\
  \ $res[$_ - 2] + $res[$_ - 3];\n    }\n    return @res;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @r;\n    push @r, 1;\n    push @r, 3;\n    push @r, 2;\n    for (my $i =\
  \ 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            push @r, 1 + $i\
  \ / 2;\n        } else {\n            push @r, $r[$i - 1] + $r[$i - 2] + $r[$i +\
  \ 1];\n        }\n    }\n    return @r;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    my $i = 3;\n    while ($i <= $n) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n        $i++;\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @tri = (1, 3, 2);\n    for my $i (3 .. $n) {\n        if ($i % 2 == 0) {\n\
  \            push @tri, 1 + $i / 2;\n        } else {\n            push @tri, $tri[$i\
  \ - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @ret = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @ret, 1 + $i / 2;\n        } else {\n          \
  \  push @ret, $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n        }\n    }\n  \
  \  return @ret;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = ();\n    for (my $i = 0; $i <= $n; $i++) {\n        if ($i ==\
  \ 0) {\n            push @result, 1;\n        } elsif ($i == 1) {\n            push\
  \ @result, 3;\n        } elsif ($i == 2) {\n            push @result, 2;\n     \
  \   } else {\n            my $tri = $result[$i - 1] + $result[$i - 2] + $result[$i\
  \ - 3];\n            push @result, $tri;\n        }\n    }\n    return @result;\n\
  }"
- "    my @tri = (1, 3, 2);\n    for (3..$n) {\n        push @tri, $tri[$_ - 1] +\
  \ $tri[$_ - 2] + $tri[$_ - 3];\n    }\n    return @tri;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    if ($n <= 2) {\n        return @result[0..$n];\n\
  \    }\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n    \
  \        push @result, 1 + $i / 2;\n        } else {\n            push @result,\
  \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return\
  \ @result;\n}"
- "    my @ret = (1, 3, 2);\n    return @ret if $n <= 2;\n    for (3..$n) {\n    \
  \    push @ret, ($_ % 2) ? $ret[-1] + $ret[-2] + $ret[-3] : 1 + $_ / 2;\n    }\n\
  \    return @ret;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @seq = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @seq, 1 + $i / 2;\n        } else {\n          \
  \  push @seq, $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n  \
  \  return @seq;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $res[$i]\
  \ = $res[$i - 1] + $res[$i - 2] + $res[$i - 3];\n    }\n    return @res;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @tri, 1 + $i / 2;\n        } else {\n          \
  \  push @tri, $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n  \
  \  return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @seq = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @seq, 1 + $i / 2;\n        } else {\n          \
  \  push @seq, $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n  \
  \  return @seq;\n}"
- "    my @ret = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @ret, 1 + $i / 2;\n        } else {\n          \
  \  push @ret, $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n        }\n    }\n  \
  \  return @ret;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $result[$i]\
  \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return @result;\n\
  }"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i %\
  \ 2 == 0) {\n            push @a, 1 + $i / 2;\n        } else {\n            push\
  \ @a, $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n        }\n    }\n    return @a;\n}"
- "    my @a = (1, 3, 2);\n    for (3..$n) {\n        push @a, $a[-1] + $a[-2] + $a[-3];\n\
  \    }\n    return \\@a;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @tri = (1, 3, 2);\n    for my $i (3 .. $n) {\n        $tri[$i] = $i % 2\
  \ ? $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1] : 1 + $i / 2;\n    }\n    return\
  \ @tri;\n}"
- "    my @tri = (1, 3, 2);\n    for my $i (3 .. $n) {\n        $tri[$i] = $i % 2\
  \ ? $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1] : 1 + $i / 2;\n    }\n    return\
  \ @tri;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @seq = (1, 3, 2);\n    for (3..$n) {\n        push @seq, $seq[$_ - 1] +\
  \ $seq[$_ - 2] + $seq[$_ - 3];\n    }\n    return @seq;\n}"
- "    my @tri = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $tri[$i]\
  \ = $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return @tri;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tri = (1, 3, 2);\n    while (@tri < $n + 1) {\n        my $next = $tri[-1]\
  \ + $tri[-2] + $tri[-3];\n        push @tri, $next;\n    }\n    return @tri;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @result = (1, 3, 2);\n    return @result if $n < 3;\n    for (my $i = 3;\
  \ $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            push @result, 1 + $i\
  \ / 2;\n        } else {\n            push @result, $result[$i - 1] + $result[$i\
  \ - 2] + $result[$i + 1];\n        }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @res, 1 + $i / 2;\n        } else {\n          \
  \  push @res, $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n        }\n    }\n  \
  \  return @res;\n}"
- "    my @ret = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @ret, 1 + $i / 2;\n        } else {\n          \
  \  push @ret, $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n        }\n    }\n  \
  \  return @ret;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @tribonacci = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n      \
  \  if ($i % 2 == 0) {\n            push @tribonacci, 1 + $i / 2;\n        } else\
  \ {\n            push @tribonacci, $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i\
  \ + 1];\n        }\n    }\n    return @tribonacci;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        if($i\
  \ % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n       \
  \     push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
  \   }\n    }\n    return @result;\n}"
- "    my @res = (1, 3, 2);\n    for(my $i = 3; $i <= $n; $i++) {\n        $res[$i]\
  \ = $res[$i - 1] + $res[$i - 2] + $res[$i - 3];\n    }\n    return @res;\n}"
- "    my @tri = (1, 3, 2);\n    for my $i (3 .. $n) {\n        $tri[$i] = $i % 2\
  \ ? $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1] : 1 + $i / 2;\n    }\n    return\
  \ @tri;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i %\
  \ 2 == 0) {\n            push @a, 1 + $i / 2;\n        } else {\n            push\
  \ @a, $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n        }\n    }\n    return @a;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @seq = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if ($i\
  \ % 2 == 0) {\n            push @seq, 1 + $i / 2;\n        } else {\n          \
  \  push @seq, $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n  \
  \  return @seq;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @result = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        if\
  \ ($i % 2 == 0) {\n            push @result, 1 + $i / 2;\n        } else {\n   \
  \         push @result, $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
  \       }\n    }\n    return @result;\n}"
- "    my @seq = (1, 3, 2);\n    return @seq if $n < 3;\n    for my $i (3 .. $n) {\n\
  \        push @seq, $i % 2 ? $seq[-1] + $seq[-2] + $seq[-3] : 1 + $i / 2;\n    }\n\
  \    return @seq;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
- "    my @a = (1, 3, 2);\n    for (my $i = 3; $i <= $n; $i++) {\n        $a[$i] =\
  \ $a[$i - 1] + $a[$i - 2] + $a[$i - 3];\n    }\n    return @a;\n}"
language: pl
name: HumanEval_130_tri
prompt: "# Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n# the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n# Tribonacci sequence is defined by the recurrence:\n# tri(1) = 3\n\
  # tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n - 2) + tri(n\
  \ + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n# tri(4) = 3\n\
  # tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are given a non-negative\
  \ integer number n, you have to a return a list of the \n# first n + 1 numbers of\
  \ the Tribonacci sequence.\n# Examples:\n# tri(3) = [1, 3, 2, 8]\nsub tri {\n  \
  \  my($n) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&tri;\n  \
  \      if(eq_deeply($candidate->(3),[1, 3, 2, 8])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(4),[1, 3, 2, 8, 3]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5),[1,\
  \ 3, 2, 8, 3, 15])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(6),[1, 3, 2, 8, 3, 15, 4])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7),[1,\
  \ 3, 2, 8, 3, 15, 4, 24])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(8),[1, 3, 2, 8, 3, 15, 4, 24, 5])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9),[1,\
  \ 3, 2, 8, 3, 15, 4, 24, 5, 35])) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(20),[1, 3, 2, 8, 3, 15, 4, 24,\
  \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(0),[1])) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),[1,\
  \ 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

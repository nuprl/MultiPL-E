completions:
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- '    return (($a**2 + $b**2 == $c**2) or ($a**2 + $c**2 == $b**2) or ($b**2 + $c**2
  == $a**2));

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max * $max == $min * $min + $mid * $mid;\n\
  }"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse\
  \ ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}"
- "    my $hyp = max($a, $b, $c);\n    my $adj = $a + $b + $c - $hyp;\n    my $opp\
  \ = sqrt($adj**2 - $hyp**2);\n    return $opp == int($opp);\n}"
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($b**2 + $c**2 == $a**2) || ($c**2 + $a**2
  == $b**2);

  }'
- '    return ($a ** 2 + $b ** 2 == $c ** 2) || ($a ** 2 + $c ** 2 == $b ** 2) ||
  ($b ** 2 + $c ** 2 == $a ** 2);

  }'
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return ($a**2 + $b**2 == $c**2) ? 1 : 0;

  }'
- '    return $a**2 + $b**2 == $c**2;

  }'
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $min = min($a,\
  \ $b, $c);\n    my $mid = $sum - $max - $min;\n    return $max * $max == $mid *\
  \ $mid + $min * $min;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $diff\
  \ = $sum - $hypotenuse;\n    return $hypotenuse * $hypotenuse == $diff * $diff;\n\
  }"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return ($max *\
  \ $max) == ($sum - $max) * ($sum - $max);\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $side1 = min($a, $b, $c);\n    my\
  \ $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n    return $hypotenuse**2 ==\
  \ $side1**2 + $side2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max ** 2 == $min ** 2 + $mid ** 2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $r = 0;\n    my @s = sort {$a <=> $b} ($a, $b, $c);\n    $r = ($s[0] **\
  \ 2 + $s[1] ** 2 == $s[2] ** 2);\n    return $r;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- "    my $hyp = max($a, $b, $c);\n    my $adj = $a + $b + $c - $hyp;\n    my $opp\
  \ = $hyp - $adj;\n    return $adj**2 + $opp**2 == $hyp**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    return ($a ** 2 + $b ** 2 == $c ** 2) ||\n           ($a ** 2 + $c ** 2 ==\
  \ $b ** 2) ||\n           ($b ** 2 + $c ** 2 == $a ** 2);\n}"
- "    my $hyp = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $diff = $sum\
  \ - $hyp;\n    return $hyp**2 == $diff**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    if ($max == $a)\
  \ {\n        return $sum - $max - $max == $max;\n    } elsif ($max == $b) {\n  \
  \      return $sum - $max - $max == $max;\n    } else {\n        return $sum - $max\
  \ - $max == $max;\n    }\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $min = min($a,\
  \ $b, $c);\n    return ($max ** 2 == $min ** 2 + ($sum - $max - $min) ** 2);\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return ($a**2 + $b**2 == $c**2);

  }'
- '    return ($a**2 + $b**2 == $c**2) ? 1 : 0;

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- '    return ($a ** 2 + $b ** 2 == $c ** 2) || ($a ** 2 + $c ** 2 == $b ** 2) ||
  ($b ** 2 + $c ** 2 == $a ** 2);

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my @s = sort {$a <=> $b} ($a, $b, $c);\n    return $s[0]**2 + $s[1]**2 == $s[2]**2;\n\
  }"
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return ($sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2);\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) ? 1 : 0;

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $side1 = min($a, $b, $c);\n    my\
  \ $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n    return $hypotenuse**2 ==\
  \ $side1**2 + $side2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $other_two\
  \ = $sum - $hypotenuse;\n    return $hypotenuse ** 2 == $other_two ** 2;\n}"
- '    return ($a**2 + $b**2 == $c**2) ? 1 : 0;

  }'
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return ($max ** 2 == $min ** 2 + $mid ** 2);\n}"
- "    return ($a ** 2 + $b ** 2 == $c ** 2) ||\n           ($a ** 2 + $c ** 2 ==\
  \ $b ** 2) ||\n           ($b ** 2 + $c ** 2 == $a ** 2);\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return ($hypotenuse\
  \ ** 2) == ($cathetus1 ** 2 + $cathetus2 ** 2);\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse\
  \ ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $hyp = max($a, $b, $c);\n    my $adj = min($a, $b, $c);\n    my $opp = ($a\
  \ + $b + $c) - $hyp - $adj;\n    return $hyp**2 == $adj**2 + $opp**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $diff\
  \ = $sum - $hypotenuse;\n    return $hypotenuse**2 == $diff**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return\
  \ $sum - $hypotenuse - $hypotenuse == $hypotenuse;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = $a;\n    $max = $b if $b > $max;\n    $max = $c if $c > $max;\n \
  \   return $max == sqrt($a**2 + $b**2 + $c**2 - $max**2);\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- '    return ($a*$a + $b*$b == $c*$c) || ($a*$a + $c*$c == $b*$b) || ($b*$b + $c*$c
  == $a*$a);

  }'
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse\
  \ ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse\
  \ ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return ($a**2 + $b**2 == $c**2) ? 1 : 0;

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hyp = max($a, $b, $c);\n    my $opp = $a + $b + $c - $hyp;\n    my $adj\
  \ = $opp - $hyp;\n    return $hyp**2 == $opp**2 + $adj**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return ($max *\
  \ $max) * 2 == $sum * $sum;\n}"
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    # your code here\n    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return\
  \ $sides[0] ** 2 + $sides[1] ** 2 == $sides[2] ** 2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $rest = $sum\
  \ - $max;\n    return $max * $max == $rest * $rest;\n}"
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum_of_squares = $a**2 + $b**2 +\
  \ $c**2 - $hypotenuse**2;\n    return $sum_of_squares == $hypotenuse**2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $diff = $sum\
  \ - $max;\n    return $max * $max == $diff * $diff;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $max = max($a, $b, $c);\n    return $max == sqrt($a**2 + $b**2 + $c**2 -\
  \ $max**2);\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = $a\
  \ + $b + $c - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- '    return (($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2));

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    if ($hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2) {\n        return 1;\n    } else {\n       \
  \ return 0;\n    }\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $rest = $sum\
  \ - $max;\n    return $max * $max == $rest * $rest;\n}"
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) ? 1 : 0;

  }'
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- "    return ($a ** 2 + $b ** 2 == $c ** 2) ||\n           ($a ** 2 + $c ** 2 ==\
  \ $b ** 2) ||\n           ($b ** 2 + $c ** 2 == $a ** 2);\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = $a == $hypotenuse ?\
  \ min($b, $c) : min($a, $c);\n    my $cathetus2 = $b == $hypotenuse ? min($a, $c)\
  \ : min($a, $b);\n    return $hypotenuse**2 == $cathetus1**2 + $cathetus2**2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return $a**2 + $b**2 == $c**2;

  }'
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $others\
  \ = $sum - $hypotenuse;\n    return $hypotenuse * $hypotenuse == $others * $others;\n\
  }"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0] ** 2 + $sides[1]\
  \ ** 2 == $sides[2] ** 2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- '    # your code here

  }'
- '    return $a**2 + $b**2 == $c**2;

  }'
- "    my $max = max($a, $b, $c);\n    my $min = min($a, $b, $c);\n    my $mid = ($a\
  \ + $b + $c) - $max - $min;\n    return $max**2 == $min**2 + $mid**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    return $max *\
  \ $max == $sum - $max * $max;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return $sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $max_square\
  \ = $max * $max;\n    my $sum_square = $sum * $sum;\n    return $max_square == $sum_square\
  \ - $max_square;\n}"
- '    return ($a**2 + $b**2 == $c**2) || ($a**2 + $c**2 == $b**2) || ($b**2 + $c**2
  == $a**2);

  }'
- "    my $hypotenuse = max($a, $b, $c);\n    my $other1 = min($a, $b, $c);\n    my\
  \ $other2 = $a + $b + $c - $hypotenuse - $other1;\n    return $hypotenuse ** 2 ==\
  \ $other1 ** 2 + $other2 ** 2;\n}"
- "    my @sides = sort {$a <=> $b} ($a, $b, $c);\n    return ($sides[0]**2 + $sides[1]**2\
  \ == $sides[2]**2);\n}"
- "    my $result = 0;\n    if ($a > $b && $a > $c) {\n        $result = $b**2 + $c**2;\n\
  \    }\n    elsif ($b > $a && $b > $c) {\n        $result = $a**2 + $c**2;\n   \
  \ }\n    else {\n        $result = $a**2 + $b**2;\n    }\n    return $result ==\
  \ $a**2 || $result == $b**2 || $result == $c**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = sum($a, $b, $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $hypotenuse = max($a, $b, $c);\n    my $cathetus1 = min($a, $b, $c);\n \
  \   my $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n    return $hypotenuse**2\
  \ == $cathetus1**2 + $cathetus2**2;\n}"
- "    my $max = max($a, $b, $c);\n    my $sum = $a + $b + $c;\n    my $diff = $sum\
  \ - $max;\n    return $max * $max == $diff * $diff;\n}"
language: pl
name: HumanEval_157_right_angle_triangle
prompt: "# Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n# sides form a right-angled triangle, False otherwise.\n# A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n# 90 degree.\n#\
  \ Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1, 2,\
  \ 3) == False\nsub right_angle_triangle {\n    my($a, $b, $c) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&right_angle_triangle;\n\
  \        if(eq_deeply($candidate->(3, 4, 5),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2, 3),\"\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 6, 8),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(2, 2, 2),\"\")) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(7, 24, 25),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 5, 7),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(5, 12, 13),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(15, 8, 17),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(48,\
  \ 55, 73),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(1, 1, 1),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(2, 2, 10),\"\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

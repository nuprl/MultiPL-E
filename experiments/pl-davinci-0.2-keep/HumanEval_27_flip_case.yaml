completions:
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        $flipped\
  \ .= $char =~ /[a-z]/ ? uc $char : lc $char;\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $result = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n \
  \           $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- '    return join('''', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));

  }'
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        $flipped\
  \ .= $char =~ /[a-z]/ ? uc $char : lc $char;\n    }\n    return $flipped;\n}"
- "    my $flipped = \"\";\n    foreach my $char (split //, $string) {\n        if\
  \ ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n        } elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc($char);\n        } else {\n        \
  \    $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    foreach my $char (split(//, $string)) {\n        if\
  \ ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n        } elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc($char);\n        } else {\n        \
  \    $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- '    return join('''', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));

  }'
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my @chars = split //, $string;\n    my @flipped;\n    for my $char (@chars)\
  \ {\n        if ($char =~ /[a-z]/) {\n            push @flipped, uc $char;\n   \
  \     }\n        elsif ($char =~ /[A-Z]/) {\n            push @flipped, lc $char;\n\
  \        }\n        else {\n            push @flipped, $char;\n        }\n    }\n\
  \    return join '', @flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $result = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n \
  \           $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- '    return join('''', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));

  }'
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my @chars = split(//, $string);\n    my @flipped;\n    foreach my $char (@chars)\
  \ {\n        if ($char =~ /[a-z]/) {\n            push(@flipped, uc($char));\n \
  \       } elsif ($char =~ /[A-Z]/) {\n            push(@flipped, lc($char));\n \
  \       } else {\n            push(@flipped, $char);\n        }\n    }\n    return\
  \ join('', @flipped);\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my @chars = split(//, $string);\n    my @flipped;\n    foreach my $char (@chars)\
  \ {\n        if ($char =~ /[a-z]/) {\n            push(@flipped, uc($char));\n \
  \       } elsif ($char =~ /[A-Z]/) {\n            push(@flipped, lc($char));\n \
  \       } else {\n            push(@flipped, $char);\n        }\n    }\n    return\
  \ join('', @flipped);\n}"
- '    return join('''', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));

  }'
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my($result) = '';\n    my($char);\n    foreach $char (split(//, $string)) {\n\
  \        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif\
  \ ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n  \
  \          $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    return $string if !defined $string;\n    $string =~ tr/a-zA-Z/A-Za-z/;\n  \
  \  return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $result = '';\n    foreach my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n \
  \           $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my @chars = split(//, $string);\n    for (my $i = 0; $i < @chars; $i++) {\n\
  \        if ($chars[$i] =~ /[a-z]/) {\n            $chars[$i] = uc($chars[$i]);\n\
  \        } elsif ($chars[$i] =~ /[A-Z]/) {\n            $chars[$i] = lc($chars[$i]);\n\
  \        }\n    }\n    return join('', @chars);\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- '    return join('''', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));

  }'
- '    return join('''', map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));

  }'
- "    my $result = '';\n    foreach my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $result .= lc $char;\n        } else {\n            $result .=\
  \ $char;\n        }\n    }\n    return $result;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $result = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n \
  \           $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my @chars = split(//, $string);\n    my @flipped = map { $_ =~ /[a-z]/ ? uc($_)\
  \ : lc($_) } @chars;\n    return join('', @flipped);\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split '', $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
  \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped .=\
  \ $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $result = '';\n    foreach my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n \
  \           $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    my $result = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else {\n \
  \           $result .= $char;\n        }\n    }\n    return $result;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}"
- "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}"
- "    my $flipped = '';\n    for my $char (split //, $string) {\n        if ($char\
  \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
  \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
  \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}"
language: pl
name: HumanEval_27_flip_case
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\nsub flip_case {\n    my($string)\
  \ = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&flip_case;\n\
  \        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Hello!\"),\"hELLO!\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

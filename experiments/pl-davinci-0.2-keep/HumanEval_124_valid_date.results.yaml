language: pl
name: HumanEval_124_valid_date
results:
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp_nuetzll.pl line 88, at
    end of line

    syntax error at /tmp/tmp_nuetzll.pl line 88, at EOF

    Execution of /tmp/tmp_nuetzll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/[-\\/]/, $date);\n\
    \    return 0 if !$date || $month < 1 || $month > 12 || $day < 1 || $day > 31\
    \ || $year < 1;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11 && $day > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split /-/, $date;\n  \
    \  return 0 if $month < 1 or $month > 12;\n    return 0 if $day < 1 or $day >\
    \ 31;\n    return 0 if $month == 2 and $day > 29;\n    return 0 if $month == 4\
    \ and $day > 30;\n    return 0 if $month == 6 and $day > 30;\n    return 0 if\
    \ $month == 9 and $day > 30;\n    return 0 if $month == 11 and $day > 30;\n  \
    \  return 0 if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq \"\";\n    my ($m, $d, $y)\
    \ = split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d\
    \ < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m ==\
    \ 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9\
    \ && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 0;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split('-',\
    \ $date);\n    return 0 if scalar @date != 3;\n    my ($month, $day, $year) =\
    \ @date;\n    return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1\
    \ || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month\
    \ == 4 && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0\
    \ if $month == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n \
    \   return 0 if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $date_regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n\
    \    if ($date =~ $date_regex) {\n        $month = $1;\n        $day = $2;\n \
    \       $year = $3;\n        if ($month > 0 && $month < 13) {\n            if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n                if ($day > 0 && $day < 32)\
    \ {\n                    $valid = 1;\n                }\n            }\n     \
    \       elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \                if ($day > 0 && $day < 31) {\n                    $valid = 1;\n\
    \                }\n            }\n            elsif ($month == 2) {\n       \
    \         if ($day > 0 && $day < 30) {\n                    $valid = 1;\n    \
    \            }\n            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    my @months = (31, 29, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31);\n    my @date = split(/\\-/, $date);\n    if\
    \ (scalar(@date) == 3) {\n        my $month = $date[0];\n        my $day = $date[1];\n\
    \        my $year = $date[2];\n        if ($month > 0 && $month < 13) {\n    \
    \        if ($day > 0 && $day <= $months[$month - 1]) {\n                $result\
    \ = 1;\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 1;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month < 1 || $month > 12) {\n            $valid =\
    \ 0;\n        }\n        if ($month == 2) {\n            if ($day < 1 || $day\
    \ > 29) {\n                $valid = 0;\n            }\n        }\n        elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if\
    \ ($day < 1 || $day > 30) {\n                $valid = 0;\n            }\n    \
    \    }\n        else {\n            if ($day < 1 || $day > 31) {\n           \
    \     $valid = 0;\n            }\n        }\n    }\n    else {\n        $valid\
    \ = 0;\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    my $months = {\n        '01' =>\
    \ 31,\n        '02' => 29,\n        '03' => 31,\n        '04' => 30,\n       \
    \ '05' => 31,\n        '06' => 30,\n        '07' => 31,\n        '08' => 31,\n\
    \        '09' => 30,\n        '10' => 31,\n        '11' => 30,\n        '12' =>\
    \ 31,\n    };\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my\
    \ $month = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($year\
    \ > 1900 && $year < 2100) {\n            if ($month >= 1 && $month <= 12) {\n\
    \                if ($day >= 1 && $day <= $months->{$month}) {\n             \
    \       $ret = 1;\n                }\n            }\n        }\n    }\n    return\
    \ $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/-/,\
    \ $date);\n    return 0 if scalar(@date) != 3;\n    return 0 if $date[0] < 1 ||\
    \ $date[0] > 12;\n    return 0 if $date[1] < 1 || $date[1] > 31;\n    return 0\
    \ if $date[2] < 1;\n    return 0 if $date[0] == 2 && $date[1] > 29;\n    return\
    \ 0 if $date[0] == 4 && $date[1] > 30;\n    return 0 if $date[0] == 6 && $date[1]\
    \ > 30;\n    return 0 if $date[0] == 9 && $date[1] > 30;\n    return 0 if $date[0]\
    \ == 11 && $date[1] > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date =~ /\\//;\n    return 0 if $date\
    \ =~ /\\s/;\n    return 0 if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($month,\
    \ $day, $year) = split /-/, $date;\n    return 0 if $month < 1 || $month > 12;\n\
    \    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day >\
    \ 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6\
    \ && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month\
    \ == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my ($m, $d, $y) =\
    \ split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d <\
    \ 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4\
    \ && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 &&\
    \ $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $valid_date = 0;\n    my $valid_month = 0;\n\
    \    my $valid_day = 0;\n    my $valid_year = 0;\n    my $valid_format = 0;\n\
    \    my $valid_days = 0;\n    my $valid_month_days = 0;\n    my $valid_leap_year\
    \ = 0;\n    my $valid_month_days_leap_year = 0;\n    my $valid_month_days_non_leap_year\
    \ = 0;\n    my $valid_month_days_feb = 0;\n    my $valid_month_days_feb_leap_year\
    \ = 0;\n    my $valid_month_days_feb_non_leap_year = 0;\n    my $valid_month_days_non_feb\
    \ = 0;\n    my $valid_month_days_non_feb_leap_year = 0;\n    my $valid_month_days_non_feb_non_leap_year\
    \ = 0;\n    my $valid_month_days_non_feb_non_leap_year_31 = 0;\n    my $valid_month_days_non_feb_non_leap_year_30\
    \ = 0;\n    my $valid_month_days_non_feb_non_leap_year_29 = 0;\n    my $valid_month_days_non_feb_leap_year_31\
    \ = 0;\n    my $valid_month_days_non_feb_leap_year_30 = 0;\n    my $valid_month_days_non_feb_leap_year_29\
    \ = 0;\n    my $valid_month_days_feb_non_leap_year_31 = 0;\n    my $valid_month_days_feb_non_leap_year_30\
    \ = 0;\n    my $valid_month_days_feb_non_leap_year_29 = 0;\n    my $valid_month_days_feb_leap_year\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpk19cnwlf.pl line 46, at end
    of line

    syntax error at /tmp/tmpk19cnwlf.pl line 46, near "$valid_month_days_feb_leap_year

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpk19cnwlf.pl line 117, at end
    of line

    syntax error at /tmp/tmpk19cnwlf.pl line 117, at EOF

    Execution of /tmp/tmpk19cnwlf.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $days = 0;\n    my $month\
    \ = 0;\n    my $year = 0;\n    if($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n\
    \        $month = $1;\n        $days = $2;\n        $year = $3;\n        if($month\
    \ >= 1 && $month <= 12) {\n            if($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \            if($days >= 1 && $days <= 31) {\n                    $valid = 1;\n\
    \                }\n            }\n            elsif($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n                if($days >= 1 && $days\
    \ <= 30) {\n                    $valid = 1;\n                }\n            }\n\
    \            elsif($month == 2) {\n                if($days >= 1 && $days <= 29)\
    \ {\n                    $valid = 1;\n                }\n            }\n     \
    \   }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split /-/,\
    \ $date;\n    return 0 if @date != 3;\n    return 0 if $date[0] < 1 || $date[0]\
    \ > 12;\n    return 0 if $date[1] < 1 || $date[1] > 31;\n    return 0 if $date[0]\
    \ == 2 && $date[1] > 29;\n    return 0 if $date[0] == 4 && $date[1] > 30;\n  \
    \  return 0 if $date[0] == 6 && $date[1] > 30;\n    return 0 if $date[0] == 9\
    \ && $date[1] > 30;\n    return 0 if $date[0] == 11 && $date[1] > 30;\n    return\
    \ 0 if $date[2] < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split /-/, $date;\n  \
    \  return 0 if $month < 1 or $month > 12;\n    return 0 if $day < 1 or $day >\
    \ 31;\n    return 0 if $month == 2 and $day > 29;\n    return 0 if $month == 4\
    \ and $day > 30;\n    return 0 if $month == 6 and $day > 30;\n    return 0 if\
    \ $month == 9 and $day > 30;\n    return 0 if $month == 11 and $day > 30;\n  \
    \  return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $days = 0;\n    my $months\
    \ = 0;\n    my $years = 0;\n    my $month = 0;\n    my $day = 0;\n    my $year\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa =\
    \ 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n   \
    \ my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj =\
    \ 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n   \
    \ my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss =\
    \ 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n   \
    \ my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb\
    \ = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n\
    \    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my\
    \ $kkk = 0;\n    my $lll = 0;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpbm17k80a.pl line 150,
    at end of line

    syntax error at /tmp/tmpbm17k80a.pl line 150, at EOF

    Execution of /tmp/tmpbm17k80a.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @date_array = split(/-/, $date);\n    my $month\
    \ = $date_array[0];\n    my $day = $date_array[1];\n    my $year = $date_array[2];\n\
    \    my $valid_date = 0;\n    if ($date ne \"\") {\n        if ($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n            if ($day >= 1 && $day <= 31) {\n              \
    \  $valid_date = 1;\n            }\n        }\n        elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n            if ($day >= 1 && $day <=\
    \ 30) {\n                $valid_date = 1;\n            }\n        }\n        elsif\
    \ ($month == 2) {\n            if ($day >= 1 && $day <= 29) {\n              \
    \  $valid_date = 1;\n            }\n        }\n        if ($month >= 1 && $month\
    \ <= 12) {\n            $valid_date = 1;\n        }\n        if ($year >= 0) {\n\
    \            $valid_date = 1;\n        }\n    }\n    return $valid_date;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @months = (31, 28, 31, 30, 31, 30, 31, 31, 30,\
    \ 31, 30, 31);\n    my @date = split(/\\-/, $date);\n    my $month = $date[0];\n\
    \    my $day = $date[1];\n    my $year = $date[2];\n    if($month > 12 || $month\
    \ < 1) {\n        return 0;\n    }\n    if($day > $months[$month - 1] || $day\
    \ < 1) {\n        return 0;\n    }\n    if($year < 1) {\n        return 0;\n \
    \   }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $m == 2 && $d >\
    \ 29;\n    return 0 if $m == 2 && $d == 29 && $y % 4 != 0;\n    return 0 if $m\
    \ == 2 && $d == 29 && $y % 100 == 0 && $y % 400 != 0;\n    return 0 if $m == 2\
    \ && $d < 1;\n    return 0 if $m == 1 || $m == 3 || $m == 5 || $m == 7 || $m ==\
    \ 8 || $m == 10 || $m == 12 && $d > 31;\n    return 0 if $m == 4 || $m == 6 ||\
    \ $m == 9 || $m == 11 && $d > 30;\n    return 0 if $d < 1;\n    return 1;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/\\\
    -/, $date);\n    return 0 if scalar @date != 3;\n    return 0 if $date[0] < 1\
    \ || $date[0] > 12;\n    return 0 if $date[1] < 1 || $date[1] > 31;\n    return\
    \ 0 if $date[2] < 1;\n    return 0 if $date[0] == 2 && $date[1] > 29;\n    return\
    \ 0 if $date[0] == 4 && $date[1] > 30;\n    return 0 if $date[0] == 6 && $date[1]\
    \ > 30;\n    return 0 if $date[0] == 9 && $date[1] > 30;\n    return 0 if $date[0]\
    \ == 11 && $date[1] > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $year < 1;\n    return 1;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @months = qw(01 02 03 04 05 06 07 08 09 10 11\
    \ 12);\n    my @days = qw(01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18\
    \ 19 20 21 22 23 24 25 26 27 28 29 30 31);\n    my $year = substr($date, 6, 4);\n\
    \    my $month = substr($date, 0, 2);\n    my $day = substr($date, 3, 2);\n  \
    \  my $valid = 0;\n    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n        if ($year\
    \ > 0) {\n            if (grep {$_ eq $month} @months) {\n                if ($month\
    \ == 2) {\n                    if ($day <= 29) {\n                        $valid\
    \ = 1;\n                    }\n                }\n                elsif ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                    if ($day <= 31) {\n             \
    \           $valid = 1;\n                    }\n                }\n          \
    \      elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n \
    \                   if ($day <= 30) {\n                        $valid = 1;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq \"\";\n    my($month, $day,\
    \ $year) = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n  \
    \  return 0 if $day < 1 || $day > 31;\n    return 0 if $year < 1;\n    return\
    \ 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4 && $day > 30;\n\
    \    return 0 if $month == 6 && $day > 30;\n    return 0 if $month == 9 && $day\
    \ > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/;\n    return $date =~ $regex;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $max_day = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        $month = $1;\n        $day = $2;\n        $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 2)\
    \ {\n                $max_day = 29;\n            } elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n                $max_day = 30;\n   \
    \         } else {\n                $max_day = 31;\n            }\n          \
    \  if ($day >= 1 && $day <= $max_day) {\n                $valid = 1;\n       \
    \     }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    return 0 if $date\
    \ !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if\
    \ $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0 if $m\
    \ == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/-/,\
    \ $date);\n    return 0 if scalar(@date) != 3;\n    my $month = $date[0];\n  \
    \  my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 ||\
    \ $month > 12;\n    if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n        return 0 if $day\
    \ < 1 || $day > 31;\n    } elsif ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n        return 0 if $day < 1 || $day > 30;\n    } elsif ($month\
    \ == 2) {\n        return 0 if $day < 1 || $day > 29;\n    }\n    return 0 if\
    \ $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if !$m || !$d || !$y;\n    return 0 if $m < 1 || $m >\
    \ 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n\
    \    return 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n  \
    \  return 0 if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $result = 1;\n                }\n            } elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n                if ($day\
    \ >= 1 && $day <= 30) {\n                    $result = 1;\n                }\n\
    \            } elsif ($month == 2) {\n                if ($day >= 1 && $day <=\
    \ 29) {\n                    $result = 1;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 1;\n    if ($date eq \"\") {\n     \
    \   $valid = 0;\n    }\n    my @date_arr = split(/-/, $date);\n    if ($date_arr[0]\
    \ < 1 || $date_arr[0] > 12) {\n        $valid = 0;\n    }\n    if ($date_arr[0]\
    \ == 1 || $date_arr[0] == 3 || $date_arr[0] == 5 || $date_arr[0] == 7 || $date_arr[0]\
    \ == 8 || $date_arr[0] == 10 || $date_arr[0] == 12) {\n        if ($date_arr[1]\
    \ < 1 || $date_arr[1] > 31) {\n            $valid = 0;\n        }\n    }\n   \
    \ if ($date_arr[0] == 4 || $date_arr[0] == 6 || $date_arr[0] == 9 || $date_arr[0]\
    \ == 11) {\n        if ($date_arr[1] < 1 || $date_arr[1] > 30) {\n           \
    \ $valid = 0;\n        }\n    }\n    if ($date_arr[0] == 2) {\n        if ($date_arr[1]\
    \ < 1 || $date_arr[1] > 29) {\n            $valid = 0;\n        }\n    }\n   \
    \ if ($date_arr[2] < 1) {\n        $valid = 0;\n    }\n    return $valid;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n     \
    \   my ($month, $day, $year) = split /-/, $date;\n        if ($month < 1 || $month\
    \ > 12) {\n            return 0;\n        }\n        if ($month == 2) {\n    \
    \        if ($day < 1 || $day > 29) {\n                return 0;\n           \
    \ }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n            if ($day < 1 || $day > 30) {\n                return 0;\n   \
    \         }\n        } else {\n            if ($day < 1 || $day > 31) {\n    \
    \            return 0;\n            }\n        }\n        return 1;\n    }\n \
    \   return 0;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date =~ /\\D/;\n    my($m, $d, $y)\
    \ = split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d\
    \ < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m ==\
    \ 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9\
    \ && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($day, $month, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $day < 1;\n    return 0 if $month\
    \ < 1 || $month > 12;\n    return 0 if $year < 1;\n    return 0 if $day > 31 &&\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12);\n    return 0 if $day > 30 && ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11);\n    return 0 if $day > 29 && $month\
    \ == 2;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month > 0 && $month < 13) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day > 0 && $day < 32) {\n      \
    \              $result = 1;\n                }\n            }\n            elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            \
    \    if ($day > 0 && $day < 31) {\n                    $result = 1;\n        \
    \        }\n            }\n            elsif ($month == 2) {\n               \
    \ if ($day > 0 && $day < 30) {\n                    $result = 1;\n           \
    \     }\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(\\\
    d{4})$/;\n    return $date =~ $regex;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/-/,\
    \ $date);\n    return 0 if scalar(@date) != 3;\n    my $month = $date[0];\n  \
    \  my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 ||\
    \ $month > 12;\n    if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n        return 0 if $day\
    \ < 1 || $day > 31;\n    } elsif ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n        return 0 if $day < 1 || $day > 30;\n    } elsif ($month\
    \ == 2) {\n        return 0 if $day < 1 || $day > 29;\n    }\n    return 0 if\
    \ $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq \"\";\n    return 0 if $month < 1 || $month > 12;\n \
    \   return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day >\
    \ 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6\
    \ && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month\
    \ == 11 && $day > 30;\n    return 0 if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 2) {\n                if ($day >= 1 && $day <= 29) {\n                  \
    \  $valid = 1;\n                }\n            } elsif ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n                if ($day >= 1 && $day <= 31) {\n                 \
    \   $valid = 1;\n                }\n            } else {\n                if ($day\
    \ >= 1 && $day <= 30) {\n                    $valid = 1;\n                }\n\
    \            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split('-',\
    \ $date);\n    return 0 if scalar @date != 3;\n    my $month = $date[0];\n   \
    \ my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 ||\
    \ $month > 12;\n    if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n        return 0 if $day\
    \ < 1 || $day > 31;\n    } elsif ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n        return 0 if $day < 1 || $day > 30;\n    } elsif ($month\
    \ == 2) {\n        return 0 if $day < 1 || $day > 29;\n    }\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 2) {\n                if ($day >= 1 && $day <= 29) {\n                  \
    \  $valid = 1;\n                }\n            } elsif ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n                if ($day >= 1 && $day <= 31) {\n                 \
    \   $valid = 1;\n                }\n            } else {\n                if ($day\
    \ >= 1 && $day <= 30) {\n                    $valid = 1;\n                }\n\
    \            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split /-/,\
    \ $date;\n    return 0 if scalar @date != 3;\n    my $month = $date[0];\n    my\
    \ $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $year < 1;\n    if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    return 0 if $day < 1 || $day > 31;\n    } elsif ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n        return 0 if $day < 1 || $day >\
    \ 30;\n    } elsif ($month == 2) {\n        return 0 if $day < 1 || $day > 29;\n\
    \    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $months = {\n        1 =>\
    \ 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n\
    \        6 => 30,\n        7 => 31,\n        8 => 31,\n        9 => 30,\n    \
    \    10 => 31,\n        11 => 30,\n        12 => 31\n    };\n    if ($date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <= 12) {\n\
    \            if ($day >= 1 && $day <= $months->{$month}) {\n                $valid\
    \ = 1;\n            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n\
    \        $month = $1;\n        $day = $2;\n        $year = $3;\n        if ($month\
    \ >= 1 && $month <= 12) {\n            if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \            if ($day >= 1 && $day <= 31) {\n                    $valid = 1;\n\
    \                }\n            } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n                if ($day >= 1 && $day <= 30) {\n  \
    \                  $valid = 1;\n                }\n            } elsif ($month\
    \ == 2) {\n                if ($day >= 1 && $day <= 29) {\n                  \
    \  $valid = 1;\n                }\n            }\n        }\n    }\n    return\
    \ $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my @date = split(/-/, $date);\n\
    \    if (scalar @date == 3) {\n        my $month = $date[0];\n        my $day\
    \ = $date[1];\n        my $year = $date[2];\n        if ($month > 0 && $month\
    \ < 13) {\n            if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n                if ($day\
    \ > 0 && $day < 32) {\n                    $valid = 1;\n                }\n  \
    \          }\n            elsif ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n                if ($day > 0 && $day < 31) {\n            \
    \        $valid = 1;\n                }\n            }\n            elsif ($month\
    \ == 2) {\n                if ($day > 0 && $day < 30) {\n                    $valid\
    \ = 1;\n                }\n            }\n        }\n    }\n    return $valid;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($m, $d, $y) = split(/-/, $date);\n    return\
    \ 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if\
    \ $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0 if $m\
    \ == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    if($date =~ /^\\d{2}-\\d{2}-\\\
    d{4}$/) {\n        my($month, $day, $year) = split(/-/, $date);\n        if($month\
    \ >= 1 && $month <= 12) {\n            if($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \            if($day >= 1 && $day <= 31) {\n                    $valid = 1;\n\
    \                }\n            }\n            elsif($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n                if($day >= 1 && $day <=\
    \ 30) {\n                    $valid = 1;\n                }\n            }\n \
    \           elsif($month == 2) {\n                if($day >= 1 && $day <= 29)\
    \ {\n                    $valid = 1;\n                }\n            }\n     \
    \   }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq \"\";\n    my @date = split(/\\\
    -/, $date);\n    return 0 if @date != 3;\n    return 0 if $date[0] < 1 || $date[0]\
    \ > 12;\n    return 0 if $date[1] < 1 || $date[1] > 31;\n    return 0 if $date[0]\
    \ == 2 && $date[1] > 29;\n    return 0 if ($date[0] == 4 || $date[0] == 6 || $date[0]\
    \ == 9 || $date[0] == 11) && $date[1] > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $months = {\n        1 =>\
    \ 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n\
    \        6 => 30,\n        7 => 31,\n        8 => 31,\n        9 => 30,\n    \
    \    10 => 31,\n        11 => 30,\n        12 => 31\n    };\n    if ($date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month > 0 && $month < 13) {\n  \
    \          if ($day > 0 && $day <= $months->{$month}) {\n                $valid\
    \ = 1;\n            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/;\n    return $date =~ $regex;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @date = split(/\\-/, $date);\n    if (scalar\
    \ @date != 3) {\n        return 0;\n    }\n    my $month = $date[0];\n    my $day\
    \ = $date[1];\n    my $year = $date[2];\n    if ($month < 1 || $month > 12) {\n\
    \        return 0;\n    }\n    if ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day\
    \ < 1 || $day > 31) {\n            return 0;\n        }\n    }\n    if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1\
    \ || $day > 30) {\n            return 0;\n        }\n    }\n    if ($month ==\
    \ 2) {\n        if ($day < 1 || $day > 29) {\n            return 0;\n        }\n\
    \    }\n    if ($year < 1) {\n        return 0;\n    }\n    return 1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/[-\\\
    /]/, $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $max_days = 0;\n    my $date_regex = qr/^(\\\
    d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $date_regex) {\n        $month =\
    \ $1;\n        $day = $2;\n        $year = $3;\n        if ($month >= 1 && $month\
    \ <= 12) {\n            if ($month == 2) {\n                $max_days = 29;\n\
    \            } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n                $max_days = 30;\n            } else {\n                $max_days\
    \ = 31;\n            }\n            if ($day >= 1 && $day <= $max_days) {\n  \
    \              $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   my $days_in_month = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n\
    \        4 => 30,\n        5 => 31,\n        6 => 30,\n        7 => 31,\n    \
    \    8 => 31,\n        9 => 30,\n        10 => 31,\n        11 => 30,\n      \
    \  12 => 31,\n    };\n    if ($month < 1 || $month > 12) {\n        return 0;\n\
    \    }\n    if ($day < 1 || $day > $days_in_month->{$month}) {\n        return\
    \ 0;\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split /-/, $date;\n  \
    \  return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $months = {\n        1 =>\
    \ 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n\
    \        6 => 30,\n        7 => 31,\n        8 => 31,\n        9 => 30,\n    \
    \    10 => 31,\n        11 => 30,\n        12 => 31\n    };\n    if($date =~ /^(\\\
    d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n\
    \        my $year = $3;\n        if($month >= 1 && $month <= 12) {\n         \
    \   if($day >= 1 && $day <= $months->{$month}) {\n                $valid = 1;\n\
    \            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n\
    \    return $date =~ $regex;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    if ($date =~ /^\\d{2}-\\d{2}-\\\
    d{4}$/) {\n        my($m, $d, $y) = split(/-/, $date);\n        if ($m >= 1 &&\
    \ $m <= 12) {\n            if ($m == 2) {\n                if ($d >= 1 && $d <=\
    \ 29) {\n                    $ret = 1;\n                }\n            } elsif\
    \ ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12)\
    \ {\n                if ($d >= 1 && $d <= 31) {\n                    $ret = 1;\n\
    \                }\n            } else {\n                if ($d >= 1 && $d <=\
    \ 30) {\n                    $ret = 1;\n                }\n            }\n   \
    \     }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$day || !$month || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $days = 0;\n    my $valid_date = 0;\n    my\
    \ $valid_month = 0;\n    my $valid_year = 0;\n    my $valid_days = 0;\n    my\
    \ $valid_format = 0;\n    my $valid_day = 0;\n    my $valid_month_day = 0;\n \
    \   my $valid_leap_year = 0;\n    my $valid_month_day_leap_year = 0;\n    my $valid_month_day_leap_year_days\
    \ = 0;\n    my $valid_month_day_leap_year_days_year = 0;\n    my $valid_month_day_leap_year_days_year_format\
    \ = 0;\n    if ($date ne \"\") {\n        $result = 1;\n        if ($date =~ /^(\\\
    d{2})-(\\d{2})-(\\d{4})$/) {\n            $month = $1;\n            $day = $2;\n\
    \            $year = $3;\n            $valid_format = 1;\n        }\n        if\
    \ ($month >= 1 && $month <= 12) {\n            $valid_month = 1;\n        }\n\
    \        if ($year >= 1) {\n            $valid_year = 1;\n        }\n        if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n            if ($day >= 1 && $day <= 31) {\n\
    \                $valid_month_day = 1;\n            }\n        }\n        if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day\
    \ >= 1 && $day <= 30) {\n                $valid_month_day = 1;\n            }\n\
    \        }\n        if ($month == 2) {\n            if ($day >= 1 && $day <= 28)\
    \ {\n                $valid_month_day = 1;\n            }\n        }\n       \
    \ if ($year % 4 == 0) {\n            if\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpvmxfvuh9.pl line 64, near "if

    "

    syntax error at /tmp/tmpvmxfvuh9.pl line 64, near "if

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpvmxfvuh9.pl line 135, at end
    of line

    syntax error at /tmp/tmpvmxfvuh9.pl line 135, at EOF

    Execution of /tmp/tmpvmxfvuh9.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n       \
    \             $ret = 1;\n                }\n            } elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n                if ($day >= 1\
    \ && $day <= 30) {\n                    $ret = 1;\n                }\n       \
    \     } elsif ($month == 2) {\n                if ($day >= 1 && $day <= 29) {\n\
    \                    $ret = 1;\n                }\n            }\n        }\n\
    \    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date =~ /\\//;\n    my($m, $d, $y)\
    \ = split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d\
    \ < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m ==\
    \ 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9\
    \ && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 1;\n    my $months = {\n        1 =>\
    \ 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n\
    \        6 => 30,\n        7 => 31,\n        8 => 31,\n        9 => 30,\n    \
    \    10 => 31,\n        11 => 30,\n        12 => 31\n    };\n    my $month = substr($date,\
    \ 0, 2);\n    my $day = substr($date, 3, 2);\n    my $year = substr($date, 6,\
    \ 4);\n    if ($date eq '') {\n        $valid = 0;\n    }\n    if ($month < 1\
    \ || $month > 12) {\n        $valid = 0;\n    }\n    if ($day < 1 || $day > $months->{$month})\
    \ {\n        $valid = 0;\n    }\n    if ($year < 1) {\n        $valid = 0;\n \
    \   }\n    if ($date !~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n        $valid = 0;\n   \
    \ }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   if ($month < 1 || $month > 12) {\n        return 0;\n    }\n    if ($month\
    \ == 2) {\n        if ($day < 1 || $day > 29) {\n            return 0;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day < 1 || $day > 30) {\n            return 0;\n        }\n\
    \    }\n    if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return 0;\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $result = 1;\n                }\n            }\n            elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            \
    \    if ($day >= 1 && $day <= 30) {\n                    $result = 1;\n      \
    \          }\n            }\n            elsif ($month == 2) {\n             \
    \   if ($day >= 1 && $day <= 29) {\n                    $result = 1;\n       \
    \         }\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n   \
    \ return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day >\
    \ 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month == 11\
    \ && $day > 30;\n    return 0 if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $y < 1;\n    return 0 if $m == 2 && $d > 29;\n    return\
    \ 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0\
    \ if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 0;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n\
    \    return 0 unless $date =~ $regex;\n    my ($m, $d, $y) = ($1, $2, $3);\n \
    \   return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return\
    \ 0 if $m == 2 && $d > 29;\n    return 0 if ($m == 4 || $m == 6 || $m == 9 ||\
    \ $m == 11) && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $max_day = 0;\n    my $max_month = 12;\n   \
    \ my $max_year = 9999;\n    my $min_year = 1000;\n    my $min_month = 1;\n   \
    \ my $min_day = 1;\n    my $max_day_month = [31,28,31,30,31,30,31,31,30,31,30,31];\n\
    \    my $max_day_month_leap = [31,29,31,30,31,30,31,31,30,31,30,31];\n    my $date_regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $date_regex) {\n     \
    \   $month = $1;\n        $day = $2;\n        $year = $3;\n        if ($year >=\
    \ $min_year && $year <= $max_year && $month >= $min_month && $month <= $max_month\
    \ && $day >= $min_day) {\n            if ($year % 4 == 0) {\n                $max_day\
    \ = $max_day_month_leap->[$month-1];\n            } else {\n                $max_day\
    \ = $max_day_month->[$month-1];\n            }\n            if ($day <= $max_day)\
    \ {\n                $valid = 1;\n            }\n        }\n    }\n    return\
    \ $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $result = 1;\n                }\n            } elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n                if ($day\
    \ >= 1 && $day <= 30) {\n                    $result = 1;\n                }\n\
    \            } elsif ($month == 2) {\n                if ($day >= 1 && $day <=\
    \ 29) {\n                    $result = 1;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/-/,\
    \ $date);\n    return 0 if scalar @date != 3;\n    my $month = $date[0];\n   \
    \ my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 ||\
    \ $month > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month\
    \ == 2 && $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0\
    \ if $month == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n  \
    \  return 0 if $month == 11 && $day > 30;\n    return 0 if $year < 0;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/\\\
    -/, $date);\n    return 0 if scalar @date != 3;\n    my $month = $date[0];\n \
    \   my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1\
    \ or $month > 12;\n    return 0 if $day < 1 or $day > 31;\n    return 0 if $month\
    \ == 2 and $day > 29;\n    return 0 if $month == 2 and $day == 29 and $year %\
    \ 4 != 0;\n    return 0 if $month == 2 and $day == 29 and $year % 100 == 0 and\
    \ $year % 400 != 0;\n    return 0 if $month == 4 or $month == 6 or $month == 9\
    \ or $month == 11 and $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n\
    \        $month = $1;\n        $day = $2;\n        $year = $3;\n        if ($month\
    \ >= 1 && $month <= 12) {\n            if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \            if ($day >= 1 && $day <= 31) {\n                    $valid = 1;\n\
    \                }\n            }\n            elsif ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n                if ($day >= 1 && $day <=\
    \ 30) {\n                    $valid = 1;\n                }\n            }\n \
    \           elsif ($month == 2) {\n                if ($day >= 1 && $day <= 29)\
    \ {\n                    $valid = 1;\n                }\n            }\n     \
    \   }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/-/,\
    \ $date);\n    return 0 if scalar @date != 3;\n    my $month = $date[0];\n   \
    \ my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 ||\
    \ $month > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month\
    \ == 2 && $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0\
    \ if $month == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n  \
    \  return 0 if $month == 11 && $day > 30;\n    return 0 if $year < 0;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split(/-/,\
    \ $date);\n    return 0 if scalar @date != 3;\n    my $month = $date[0];\n   \
    \ my $day = $date[1];\n    my $year = $date[2];\n    return 0 if $month < 1 ||\
    \ $month > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month\
    \ == 2 && $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0\
    \ if $month == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n  \
    \  return 0 if $month == 11 && $day > 30;\n    return 0 if $year < 1000 || $year\
    \ > 9999;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date =~ /\\//;\n    my @date = split\
    \ /-/, $date;\n    return 0 if scalar @date != 3;\n    return 0 if $date[0] >\
    \ 12 || $date[0] < 1;\n    return 0 if $date[1] > 31 || $date[1] < 1;\n    return\
    \ 0 if $date[0] == 2 && $date[1] > 29;\n    return 0 if $date[0] == 4 && $date[1]\
    \ > 30;\n    return 0 if $date[0] == 6 && $date[1] > 30;\n    return 0 if $date[0]\
    \ == 9 && $date[1] > 30;\n    return 0 if $date[0] == 11 && $date[1] > 30;\n \
    \   return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @date = split(/\\-/, $date);\n    my $month =\
    \ $date[0];\n    my $day = $date[1];\n    my $year = $date[2];\n    if ($month\
    \ < 1 || $month > 12) {\n        return 0;\n    }\n    if ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n        if ($day < 1 || $day > 31) {\n            return 0;\n    \
    \    }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11) {\n        if ($day < 1 || $day > 30) {\n            return 0;\n       \
    \ }\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n   \
    \         return 0;\n        }\n    }\n    if ($year < 0) {\n        return 0;\n\
    \    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    return 0 if $date\
    \ !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if\
    \ $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0 if $m\
    \ == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $year < 1;\n    return 1;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $year < 1;\n    return 0\
    \ if $day > 30 && ($month == 4 || $month == 6 || $month == 9 || $month == 11);\n\
    \    return 0 if $day > 29 && $month == 2;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/[-\\/]/, $date);\n\
    \    return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n  \
    \  return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $y < 1;\n    return 0 if $m == 2 && $d > 29;\n    return\
    \ 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0\
    \ if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my ($m, $d, $y) =\
    \ split(/-/, $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d <\
    \ 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4\
    \ && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 &&\
    \ $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 1;\n  \
    \  return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    return 0 if $date\
    \ !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if\
    \ $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0 if $m\
    \ == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n   \
    \ return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day >\
    \ 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month == 11\
    \ && $day > 30;\n    return 0 if $year < 1900 || $year > 2100;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/;\n    return $date =~ $regex;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n   \
    \ return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day >\
    \ 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month == 11\
    \ && $day > 30;\n    return 0 if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if !$m || !$d || !$y;\n    return 0 if $m < 1 || $m >\
    \ 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n\
    \    return 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n  \
    \  return 0 if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n       \
    \             $ret = 1;\n                }\n            } elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n                if ($day >= 1\
    \ && $day <= 30) {\n                    $ret = 1;\n                }\n       \
    \     } elsif ($month == 2) {\n                if ($day >= 1 && $day <= 29) {\n\
    \                    $ret = 1;\n                }\n            }\n        }\n\
    \    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n       \
    \             $ret = 1;\n                }\n            } elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n                if ($day >= 1\
    \ && $day <= 30) {\n                    $ret = 1;\n                }\n       \
    \     } elsif ($month == 2) {\n                if ($day >= 1 && $day <= 29) {\n\
    \                    $ret = 1;\n                }\n            }\n        }\n\
    \    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $date_regex = '^(\\d{2})-(\\d{2})-(\\d{4})$';\n\
    \    if ($date =~ /$date_regex/) {\n        $month = $1;\n        $day = $2;\n\
    \        $year = $3;\n        if ($month >= 1 && $month <= 12) {\n           \
    \ if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8\
    \ || $month == 10 || $month == 12) {\n                if ($day >= 1 && $day <=\
    \ 31) {\n                    $valid = 1;\n                }\n            } elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            \
    \    if ($day >= 1 && $day <= 30) {\n                    $valid = 1;\n       \
    \         }\n            } elsif ($month == 2) {\n                if ($day >=\
    \ 1 && $day <= 29) {\n                    $valid = 1;\n                }\n   \
    \         }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my ($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $y < 1;\n    return 0 if $m == 2 && $d > 29;\n    return\
    \ 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0\
    \ if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($m, $d, $y) = split /-/, $date;\n    return 0\
    \ if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if $m\
    \ == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0 if $m ==\
    \ 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if $m == 11\
    \ && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 1\
    \ || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n       \
    \             $ret = 1;\n                }\n            } elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n                if ($day >= 1\
    \ && $day <= 30) {\n                    $ret = 1;\n                }\n       \
    \     } elsif ($month == 2) {\n                if ($day >= 1 && $day <= 29) {\n\
    \                    $ret = 1;\n                }\n            }\n        }\n\
    \    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if ($month < 1 || $month > 12);\n    return 0 if ($day < 1 || $day\
    \ > 31);\n    return 0 if ($year < 1);\n    return 0 if ($month == 2 && $day >\
    \ 29);\n    return 0 if ($month == 4 && $day > 30);\n    return 0 if ($month ==\
    \ 6 && $day > 30);\n    return 0 if ($month == 9 && $day > 30);\n    return 0\
    \ if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $days = 0;\n    my $month\
    \ = 0;\n    my $year = 0;\n    my $sep = '';\n    my $sep_count = 0;\n    my $sep_pos\
    \ = 0;\n    my $sep_pos_last = 0;\n    my $sep_pos_first = 0;\n    my $sep_pos_second\
    \ = 0;\n    my $sep_pos_third = 0;\n    my $sep_pos_fourth = 0;\n    my $sep_pos_fifth\
    \ = 0;\n    my $sep_pos_sixth = 0;\n    my $sep_pos_seventh = 0;\n    my $sep_pos_eighth\
    \ = 0;\n    my $sep_pos_ninth = 0;\n    my $sep_pos_tenth = 0;\n    my $sep_pos_eleventh\
    \ = 0;\n    my $sep_pos_twelfth = 0;\n    my $sep_pos_thirteenth = 0;\n    my\
    \ $sep_pos_fourteenth = 0;\n    my $sep_pos_fifteenth = 0;\n    my $sep_pos_sixteenth\
    \ = 0;\n    my $sep_pos_seventeenth = 0;\n    my $sep_pos_eighteenth = 0;\n  \
    \  my $sep_pos_nineteenth = 0;\n    my $sep_pos_twentieth = 0;\n    my $sep_pos_twentyfirst\
    \ = 0;\n    my $sep_pos_twentysecond = 0;\n    my $sep_pos_twentythird = 0;\n\
    \    my $sep_pos_twentyfourth = 0;\n    my $sep_pos_twentyfifth = 0;\n    my $sep_pos_twentysixth\
    \ = 0;\n    my $sep_pos_twentyseventh = 0;\n    my $sep_pos_twentyeighth = 0;\n\
    \    my $sep_pos_twentyninth = 0;\n    my $sep_pos_thirtieth = 0;\n    my\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'No such class use at /tmp/tmph08w8qgw.pl line 55, near "my

    use"

    syntax error at /tmp/tmph08w8qgw.pl line 55, near "my

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmph08w8qgw.pl line 126, at end
    of line

    syntax error at /tmp/tmph08w8qgw.pl line 126, at EOF

    Execution of /tmp/tmph08w8qgw.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @date = split(/\\-/, $date);\n    my $month =\
    \ $date[0];\n    my $day = $date[1];\n    my $year = $date[2];\n    my $valid\
    \ = 0;\n    if ($month > 0 && $month < 13) {\n        if ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n            if ($day > 0 && $day < 32) {\n                $valid =\
    \ 1;\n            }\n        }\n        elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day > 0 && $day < 31) {\n        \
    \        $valid = 1;\n            }\n        }\n        elsif ($month == 2) {\n\
    \            if ($day > 0 && $day < 30) {\n                $valid = 1;\n     \
    \       }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 or $month > 12;\n    return 0 if $day < 1 or $day >\
    \ 31;\n    return 0 if $month == 2 and $day > 29;\n    return 0 if $month == 4\
    \ and $day > 30;\n    return 0 if $month == 6 and $day > 30;\n    return 0 if\
    \ $month == 9 and $day > 30;\n    return 0 if $month == 11 and $day > 30;\n  \
    \  return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my ($m, $d, $y) =\
    \ split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d <\
    \ 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4\
    \ && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 &&\
    \ $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my @date = split /-/,\
    \ $date;\n    return 0 if scalar @date != 3;\n    return 0 if $date[0] < 1 ||\
    \ $date[0] > 12;\n    return 0 if $date[1] < 1 || $date[1] > 31;\n    return 0\
    \ if $date[0] == 2 && $date[1] > 29;\n    return 0 if $date[0] == 4 && $date[1]\
    \ > 30;\n    return 0 if $date[0] == 6 && $date[1] > 30;\n    return 0 if $date[0]\
    \ == 9 && $date[1] > 30;\n    return 0 if $date[0] == 11 && $date[1] > 30;\n \
    \   return 0 if $date[2] < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    return 0 if $date\
    \ !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n   \
    \ return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return\
    \ 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0\
    \ if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if\
    \ $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($m, $d, $y) = split(/-/, $date);\n    return\
    \ 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if\
    \ $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0 if $m\
    \ == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if !$m || !$d || !$y;\n    return 0 if $m < 1 || $m\
    \ > 12;\n    return 0 if $d < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n\
    \    return 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n  \
    \  return 0 if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date =~ /\\//;\n    my($m, $d, $y)\
    \ = split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d\
    \ < 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m ==\
    \ 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9\
    \ && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $year < 1;\n    return 1;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split /-/, $date;\n  \
    \  return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq \"\";\n    return 0 if $date\
    \ !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n   \
    \ return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return\
    \ 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0\
    \ if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if\
    \ $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n\
    \    return $date =~ $regex;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 2)\
    \ {\n                if ($day >= 1 && $day <= 29) {\n                    $ret\
    \ = 1;\n                }\n            } elsif ($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\
    \                if ($day >= 1 && $day <= 31) {\n                    $ret = 1;\n\
    \                }\n            } else {\n                if ($day >= 1 && $day\
    \ <= 30) {\n                    $ret = 1;\n                }\n            }\n\
    \        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $date_format = 0;\n    my $date_length = 0;\n\
    \    my $days_in_month = 0;\n    my $days_in_feb = 0;\n    my $days_in_apr = 0;\n\
    \    my $days_in_jun = 0;\n    my $days_in_sep = 0;\n    my $days_in_nov = 0;\n\
    \    my $days_in_feb_leap = 0;\n    my $days_in_apr_leap = 0;\n    my $days_in_jun_leap\
    \ = 0;\n    my $days_in_sep_leap = 0;\n    my $days_in_nov_leap = 0;\n    my $days_in_jan\
    \ = 0;\n    my $days_in_mar = 0;\n    my $days_in_may = 0;\n    my $days_in_jul\
    \ = 0;\n    my $days_in_aug = 0;\n    my $days_in_oct = 0;\n    my $days_in_dec\
    \ = 0;\n    my $days_in_jan_leap = 0;\n    my $days_in_mar_leap = 0;\n    my $days_in_may_leap\
    \ = 0;\n    my $days_in_jul_leap = 0;\n    my $days_in_aug_leap = 0;\n    my $days_in_oct_leap\
    \ = 0;\n    my $days_in_dec_leap = 0;\n    my $leap_year = 0;\n    my $four_digit_year\
    \ = 0;\n    my $two_digit_year = 0;\n    my $two_digit_month = 0;\n    my $two_digit_day\
    \ = 0;\n    my $two_digit_month_day = 0;\n    my $two_digit_year_month = 0;\n\
    \    my $two_digit_year_day = 0;\n    my $two_digit_year_month_day = 0\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp21rj49cw.pl line 56, at end
    of line

    syntax error at /tmp/tmp21rj49cw.pl line 56, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp21rj49cw.pl line 127, at end
    of line

    syntax error at /tmp/tmp21rj49cw.pl line 127, at EOF

    Execution of /tmp/tmp21rj49cw.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $y < 1;\n    return 0 if $m == 2 && $d > 29;\n    return\
    \ 0 if $m == 4 && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0\
    \ if $m == 9 && $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if ($month < 1 || $month > 12);\n    return 0 if ($day < 1 || $day\
    \ > 31);\n    return 0 if ($month == 2 && $day > 29);\n    return 0 if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) && $day > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my @date = split(/\\-/,\
    \ $date);\n    return 0 if scalar @date != 3;\n    my($month, $day, $year) = @date;\n\
    \    return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day\
    \ > 31;\n    return 0 if $year < 1;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/[-\\\
    /]/, $date);\n    return 0 if $m > 12 || $m < 1;\n    return 0 if $d > 31 || $d\
    \ < 1;\n    if ($m == 2) {\n        return 0 if $d > 29;\n    } elsif ($m == 4\
    \ || $m == 6 || $m == 9 || $m == 11) {\n        return 0 if $d > 30;\n    }\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 2) {\n                if ($day >= 1 && $day <= 29) {\n                  \
    \  $valid = 1;\n                }\n            } elsif ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n                if ($day >= 1 && $day <= 31) {\n                 \
    \   $valid = 1;\n                }\n            } else {\n                if ($day\
    \ >= 1 && $day <= 30) {\n                    $valid = 1;\n                }\n\
    \            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my ($month, $day,\
    \ $year) = split /-/, $date;\n    return 0 if $month < 1 || $month > 12;\n   \
    \ return 0 if $day < 1 || $day > 31;\n    return 0 if $year < 1;\n    return 0\
    \ if $month == 2 && $day > 29;\n    return 0 if $month == 4 && $day > 30;\n  \
    \  return 0 if $month == 6 && $day > 30;\n    return 0 if $month == 9 && $day\
    \ > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my ($m, $d, $y) =\
    \ split /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d <\
    \ 1 || $d > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4\
    \ && $d > 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 &&\
    \ $d > 30;\n    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/[-\\/]/, $date);\n\
    \    return 0 if $date eq '';\n    return 0 if $month < 1 || $month > 12;\n  \
    \  return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/[-\\\
    /]/, $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $date_regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n\
    \    if ($date =~ $date_regex) {\n        $month = $1;\n        $day = $2;\n \
    \       $year = $3;\n        if ($month > 0 && $month < 13) {\n            if\
    \ ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 ||\
    \ $month == 10 || $month == 12) {\n                if ($day > 0 && $day < 32)\
    \ {\n                    $valid = 1;\n                }\n            }\n     \
    \       elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \                if ($day > 0 && $day < 31) {\n                    $valid = 1;\n\
    \                }\n            }\n            elsif ($month == 2) {\n       \
    \         if ($day > 0 && $day < 30) {\n                    $valid = 1;\n    \
    \            }\n            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @date = split(/-/, $date);\n    my $month = $date[0];\n\
    \    my $day = $date[1];\n    my $year = $date[2];\n    if ($month > 12 || $month\
    \ < 1) {\n        return 0;\n    }\n    if ($month == 2) {\n        if ($day >\
    \ 29 || $day < 1) {\n            return 0;\n        }\n    }\n    if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day > 30 ||\
    \ $day < 1) {\n            return 0;\n        }\n    }\n    if ($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n        if ($day > 31 || $day < 1) {\n            return 0;\n\
    \        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $result = 1;\n                }\n            }\n            elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            \
    \    if ($day >= 1 && $day <= 30) {\n                    $result = 1;\n      \
    \          }\n            }\n            elsif ($month == 2) {\n             \
    \   if ($day >= 1 && $day <= 29) {\n                    $result = 1;\n       \
    \         }\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($m, $d, $y) = split(/[-\\\
    /]/, $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    return 0 if $date\
    \ !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n   \
    \ return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d > 31;\n    return\
    \ 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n    return 0\
    \ if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n    return 0 if\
    \ $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if !$month || !$day || !$year;\n    return\
    \ 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day > 31;\n  \
    \  return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4 && $day\
    \ > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month ==\
    \ 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq \"\";\n    my($month, $day,\
    \ $year) = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n  \
    \  return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n\
    \    return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day\
    \ > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month ==\
    \ 11 && $day > 30;\n    return 0 if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $sep = '';\n    if ($date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(\\\
    d{4})$/) {\n        $month = $1;\n        $day = $2;\n        $year = $3;\n  \
    \      $sep = '-';\n    }\n    if ($date =~ /^(0[1-9]|1[0-2])\\/(0[1-9]|[1-2][0-9]|3[0-1])\\\
    /(\\d{4})$/) {\n        $month = $1;\n        $day = $2;\n        $year = $3;\n\
    \        $sep = '/';\n    }\n    if ($month > 0 && $day > 0 && $year > 0) {\n\
    \        if ($month == 2) {\n            if ($day <= 29) {\n                $valid\
    \ = 1;\n            }\n        } elsif ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n            if ($day <= 30) {\n                $valid\
    \ = 1;\n            }\n        } else {\n            if ($day <= 31) {\n     \
    \           $valid = 1;\n            }\n        }\n    }\n    return $valid;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split('-', $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 1;\n    my $months = {\n        1 =>\
    \ 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n\
    \        6 => 30,\n        7 => 31,\n        8 => 31,\n        9 => 30,\n    \
    \    10 => 31,\n        11 => 30,\n        12 => 31\n    };\n    if ($date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $result = 0;\n        }\n        if ($day < 1 || $day > $months->{$month})\
    \ {\n            $result = 0;\n        }\n    } else {\n        $result = 0;\n\
    \    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/[-\\/]/, $date);\n\
    \    return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day\
    \ > 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    if ($date =~ /^\\d{2}-\\d{2}-\\\
    d{4}$/) {\n        my ($m, $d, $y) = split /-/, $date;\n        if ($m >= 1 &&\
    \ $m <= 12) {\n            if ($m == 2) {\n                if ($d >= 1 && $d <=\
    \ 29) {\n                    $valid = 1;\n                }\n            } elsif\
    \ ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12)\
    \ {\n                if ($d >= 1 && $d <= 31) {\n                    $valid =\
    \ 1;\n                }\n            } else {\n                if ($d >= 1 &&\
    \ $d <= 30) {\n                    $valid = 1;\n                }\n          \
    \  }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if !$month || !$day || !$year;\n    return 0 if $month < 1 || $month\
    \ > 12;\n    return 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 &&\
    \ $day > 29;\n    return 0 if $month == 4 && $day > 30;\n    return 0 if $month\
    \ == 6 && $day > 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $year < 0;\n    return 1;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if ($month < 1 || $month > 12);\n    return 0 if ($month == 2 &&\
    \ $day > 29);\n    return 0 if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) && $day > 30;\n    return 0 if ($day < 1 || $day > 31);\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return 0 if $month < 1 || $month > 12;\n    if ($month\
    \ == 2) {\n        return 0 if $day < 1 || $day > 29;\n    } elsif ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n        return 0 if $day\
    \ < 1 || $day > 30;\n    } else {\n        return 0 if $day < 1 || $day > 31;\n\
    \    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split /-/, $date;\n  \
    \  return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $month == 2 && $day > 29;\n    return 0 if $month == 4\
    \ && $day > 30;\n    return 0 if $month == 6 && $day > 30;\n    return 0 if $month\
    \ == 9 && $day > 30;\n    return 0 if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 0;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $months = {\n        1 =>\
    \ 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n        5 => 31,\n\
    \        6 => 30,\n        7 => 31,\n        8 => 31,\n        9 => 30,\n    \
    \    10 => 31,\n        11 => 30,\n        12 => 31\n    };\n    if ($date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <= 12) {\n\
    \            if ($day >= 1 && $day <= $months->{$month}) {\n                $valid\
    \ = 1;\n            }\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split\
    \ /-/, $date;\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 0 if $y < 0;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $result = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $result = 1;\n                }\n            } elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n                if ($day\
    \ >= 1 && $day <= 30) {\n                    $result = 1;\n                }\n\
    \            } elsif ($month == 2) {\n                if ($day >= 1 && $day <=\
    \ 29) {\n                    $result = 1;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my($month, $day, $year) = split(/-/, $date);\n \
    \   return 0 if $month < 1 || $month > 12;\n    return 0 if $day < 1 || $day >\
    \ 31;\n    return 0 if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d >\
    \ 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d > 30;\n\
    \    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n  \
    \  return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $valid = 0;\n    my $month = 0;\n    my $day\
    \ = 0;\n    my $year = 0;\n    my $max_day = 0;\n    my $max_month = 12;\n   \
    \ my $max_year = 9999;\n    my $min_year = 0;\n    my $min_month = 1;\n    my\
    \ $min_day = 1;\n    my $max_day_month = {\n        1 => 31,\n        2 => 29,\n\
    \        3 => 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n    \
    \    7 => 31,\n        8 => 31,\n        9 => 30,\n        10 => 31,\n       \
    \ 11 => 30,\n        12 => 31\n    };\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        $month = $1;\n        $day = $2;\n        $year = $3;\n  \
    \      if ($year >= $min_year && $year <= $max_year && $month >= $min_month &&\
    \ $month <= $max_month && $day >= $min_day && $day <= $max_day_month->{$month})\
    \ {\n            $valid = 1;\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my @date = split(/[-\\/]/, $date);\n    return 0\
    \ if scalar @date != 3;\n    my $month = $date[0];\n    my $day = $date[1];\n\
    \    my $year = $date[2];\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n   \
    \ return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day >\
    \ 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month == 11\
    \ && $day > 30;\n    return 0 if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $ret = 0;\n    my $year = 0;\n    my $month =\
    \ 0;\n    my $day = 0;\n    my $max_day = 0;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        $month = $1;\n        $day = $2;\n        $year =\
    \ $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month == 2)\
    \ {\n                $max_day = 29;\n            } elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n                $max_day = 30;\n   \
    \         } else {\n                $max_day = 31;\n            }\n          \
    \  if ($day >= 1 && $day <= $max_day) {\n                $ret = 1;\n         \
    \   }\n        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if !$date;\n    my @date = split(/\\-/,\
    \ $date);\n    return 0 if scalar @date != 3;\n    return 0 if $date[0] < 1 ||\
    \ $date[0] > 12;\n    return 0 if $date[1] < 1 || $date[1] > 31;\n    return 0\
    \ if $date[2] < 1;\n    return 0 if $date[0] == 2 && $date[1] > 29;\n    return\
    \ 0 if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) &&\
    \ $date[1] > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    my $re = qr/^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return $date =~ $re;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821413
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns True if the date is valid otherwise False.\n# The date is valid if all\
    \ of the following rules are satisfied:\n# 1. The date string is not empty.\n\
    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000')\
    \ => True\n# valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n\
    # valid_date('06-04-2020') => True\n# valid_date('06/04/2020') => False\nsub valid_date\
    \ {\n    my($date) = @_;\n    return 0 if $date eq '';\n    my($m, $d, $y) = split(/[-\\\
    /]/, $date);\n    return 0 if $m < 1 || $m > 12;\n    return 0 if $d < 1 || $d\
    \ > 31;\n    return 0 if $m == 2 && $d > 29;\n    return 0 if $m == 4 && $d >\
    \ 30;\n    return 0 if $m == 6 && $d > 30;\n    return 0 if $m == 9 && $d > 30;\n\
    \    return 0 if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821413

completions:
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(\" \", $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = 0;\n        foreach my $char (split(\"\", $word))\
  \ {\n            if ($char !~ /[aeiou]/i) {\n                $consonants++;\n  \
  \          }\n        }\n        if ($consonants == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if ($char !~ /[aeiou]/i);\n        }\n        push(@result, $word)\
  \ if ($count == $n);\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = () = $word =~ /[^aeiou]/gi;\n        push @result, $word if\
  \ $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            $count++\
  \ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            $count++\
  \ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @selected_words;\n    foreach my $word\
  \ (@words) {\n        my $consonants = 0;\n        foreach my $char (split(//, $word))\
  \ {\n            if ($char !~ /[aeiou]/i) {\n                $consonants++;\n  \
  \          }\n        }\n        if ($consonants == $n) {\n            push(@selected_words,\
  \ $word);\n        }\n    }\n    return @selected_words;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $c = substr($word, $i, 1);\n            if ($c !~ /[aeiou]/i) {\n\
  \                $count++;\n            }\n        }\n        if ($count == $n)\
  \ {\n            push @result, $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    for my $word (@words)\
  \ {\n        my $count = 0;\n        for my $char (split(//, $word)) {\n       \
  \     $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word if\
  \ $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = 0;\n        my @chars = split(//, $word);\n      \
  \  foreach my $char (@chars) {\n            if ($char =~ /[^aeiou]/i) {\n      \
  \          $consonants++;\n            }\n        }\n        if ($consonants ==\
  \ $n) {\n            push(@result, $word);\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[bcdfghjklmnpqrstvwxyz]/i;\n        }\n        push\
  \ @result, $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $c = substr($word, $i, 1);\n            if ($c !~ /[aeiou]/i) {\n\
  \                $count++;\n            }\n        }\n        if ($count == $n)\
  \ {\n            push(@result, $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            if\
  \ ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n         \
  \   }\n        }\n        if ($count == $n) {\n            push @result, $word;\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz/bcdfghjklmnpqrstvwxyz/;\n\
  \        push @result, $word if $consonants == $n;\n    }\n    return @result;\n\
  }"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            $count++\
  \ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach (@words) {\n  \
  \      my $count = 0;\n        $count++ while /[^aeiou]/g;\n        push @result,\
  \ $_ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $char = substr($word, $i, 1);\n            if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i)\
  \ {\n                $count++;\n            }\n        }\n        if ($count ==\
  \ $n) {\n            push @result, $word;\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            if\
  \ ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n         \
  \   }\n        }\n        if ($count == $n) {\n            push @result, $word;\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $c (split //, $word) {\n       \
  \     $count++ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count\
  \ == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if (is_consonant($char)) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        $count++ while $word =~ /[^aeiou]/g;\n    \
  \    push @result, $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @result = ();\n    my @words = split(/\\s+/, $s);\n    foreach my $word\
  \ (@words) {\n        my $count = 0;\n        for (my $i = 0; $i < length($word);\
  \ $i++) {\n            my $c = substr($word, $i, 1);\n            if ($c =~ /[^aeiou]/i)\
  \ {\n                $count++;\n            }\n        }\n        if ($count ==\
  \ $n) {\n            push(@result, $word);\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split /\\s+/, $s;\n    my @selected_words;\n    for my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @selected_words, $word if $consonants == $n;\n    }\n    return @selected_words;\n\
  }"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push @result,\
  \ $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            if ($c\
  \ =~ /[^aeiou]/i) {\n                $count++;\n            }\n        }\n     \
  \   if ($count == $n) {\n            push @result, $word;\n        }\n    }\n  \
  \  return @result;\n}"
- "    my @words = split(/ /, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = 0;\n        foreach my $char (split(//, $word)) {\n\
  \            if ($char !~ /[aeiou]/i) {\n                $consonants++;\n      \
  \      }\n        }\n        if ($consonants == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push @result,\
  \ $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $char = substr($word, $i, 1);\n            if ($char =~ /[^aeiou]/i)\
  \ {\n                $count++;\n            }\n        }\n        if ($count ==\
  \ $n) {\n            push(@result, $word);\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        if (consonants($word) == $n) {\n            push @result, $word;\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    for my $word (@words)\
  \ {\n        my $count = 0;\n        for my $c (split(//, $word)) {\n          \
  \  if ($c =~ /[^aeiou]/i) {\n                $count++;\n            }\n        }\n\
  \        if ($count == $n) {\n            push @result, $word;\n        }\n    }\n\
  \    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $letter (split //, $word) {\n  \
  \          if ($letter =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/ /, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = $word =~ tr/[bcdfghjklmnpqrstvwxyz]//;\n        push @result,\
  \ $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = $word =~ tr/[bcdfghjklmnpqrstvwxyz]//;\n        push @result,\
  \ $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $c = substr($word, $i, 1);\n            if ($c !~ /[aeiou]/i) {\n\
  \                $count++;\n            }\n        }\n        if ($count == $n)\
  \ {\n            push @result, $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @result = ();\n    my @words = split(/\\s+/, $s);\n    foreach my $word\
  \ (@words) {\n        my $count = 0;\n        foreach my $char (split(//, $word))\
  \ {\n            if ($char !~ /[aeiou]/i) {\n                $count++;\n       \
  \     }\n        }\n        if ($count == $n) {\n            push(@result, $word);\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for my $i (0 .. length($word) - 1) {\n    \
  \        my $char = substr($word, $i, 1);\n            if ($char !~ /[aeiou]/i)\
  \ {\n                $count++;\n            }\n        }\n        if ($count ==\
  \ $n) {\n            push @result, $word;\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[qwrtypsdfghjklzxcvbnm]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/ /, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $letter (split //, $word) {\n  \
  \          if ($letter =~ /[^aeiou]/i) {\n                $count++;\n          \
  \  }\n        }\n        if ($count == $n) {\n            push @result, $word;\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split ' ', $s;\n    my @selected;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split '', $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @selected, $word if $count ==\
  \ $n;\n    }\n    return @selected;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = 0;\n        foreach my $char (split //, $word) {\n\
  \            if ($char =~ /[^aeiou]/i) {\n                $consonants++;\n     \
  \       }\n        }\n        if ($consonants == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push @result,\
  \ $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @consonants = grep { $_ =~ /[^aeiou]/\
  \ } split //, $s;\n    my @result = grep { my $word = $_;\n                    \
  \    my @consonants = grep { $_ =~ /[^aeiou]/ } split //, $word;\n             \
  \           scalar @consonants == $n;\n                      } @words;\n    return\
  \ @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[bcdfghjklmnpqrstvwxyz]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            if\
  \ ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n        }\n\
  \        if ($count == $n) {\n            push @result, $word;\n        }\n    }\n\
  \    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $letter (split //, $word) {\n  \
  \          $count++ if $letter =~ /[^aeiou]/i;\n        }\n        push @result,\
  \ $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = 0;\n        foreach my $char (split //, $word) {\n\
  \            if ($char =~ /[^aeiou]/i) {\n                $consonants++;\n     \
  \       }\n        }\n        if ($consonants == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[bcdfghjklmnpqrstvwxyz]/i;\n        }\n        push\
  \ @result, $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $c = substr($word, $i, 1);\n            if ($c =~ /[^aeiou]/i) {\n\
  \                $count++;\n            }\n        }\n        if ($count == $n)\
  \ {\n            push(@result, $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz/bcdfghjklmnpqrstvwxyz/;\n\
  \        push @result, $word if $consonants == $n;\n    }\n    return @result;\n\
  }"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            $count++\
  \ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split(' ', $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split('', $word)) {\n   \
  \         $count++ if ($char !~ /[aeiou]/i);\n        }\n        push(@result, $word)\
  \ if ($count == $n);\n    }\n    return @result;\n}"
- "    my @words = split ' ', $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split '', $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @s = split / /, $s;\n    my @result;\n    for my $word (@s) {\n        my\
  \ $count = 0;\n        for my $letter (split //, $word) {\n            $count++\
  \ if $letter !~ /[aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push @result,\
  \ $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @ret;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $c (split(//, $word)) {\n      \
  \      if ($c !~ /[aeiou]/i) {\n                $count++;\n            }\n     \
  \   }\n        if ($count == $n) {\n            push(@ret, $word);\n        }\n\
  \    }\n    return @ret;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $letter (split(//, $word)) {\n \
  \           if ($letter =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @selected;\n    for my $word (@words)\
  \ {\n        my $count = 0;\n        for my $char (split //, $word) {\n        \
  \    $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @selected, $word\
  \ if $count == $n;\n    }\n    return @selected;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $char = substr($word, $i, 1);\n            if ($char !~ /[aeiou]/i)\
  \ {\n                $count++;\n            }\n        }\n        if ($count ==\
  \ $n) {\n            push(@result, $word);\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            $count++\
  \ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char !~ /[aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $c = substr($word, $i, 1);\n            if ($c !~ /[aeiou]/i) {\n\
  \                $count++;\n            }\n        }\n        if ($count == $n)\
  \ {\n            push(@result, $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        next if $char =~ /[aeiou]/i;\n            $count++;\n        }\n      \
  \  push @result, $word if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push @result,\
  \ $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $c (split //, $word) {\n            $count++\
  \ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count == $n;\n\
  \    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push(@result, $word);\n   \
  \     }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $c (split(//, $word)) {\n      \
  \      if ($c =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n    \
  \        }\n        }\n        if ($count == $n) {\n            push(@result, $word);\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            if\
  \ ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n        }\n\
  \        if ($count == $n) {\n            push @result, $word;\n        }\n    }\n\
  \    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n   \
  \         if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $count++;\n\
  \            }\n        }\n        if ($count == $n) {\n            push(@result,\
  \ $word);\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    for my $word (@words)\
  \ {\n        my $count = 0;\n        for my $c (split(//, $word)) {\n          \
  \  $count++ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count\
  \ == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = 0;\n        foreach my $letter (split(//, $word))\
  \ {\n            $consonants++ if $letter !~ /[aeiou]/i;\n        }\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @consonants = grep { $_ =~ /[^aeiou]/\
  \ } split //, $s;\n    my @result = ();\n    for my $word (@words) {\n        my\
  \ @word_consonants = grep { $_ =~ /[^aeiou]/ } split //, $word;\n        push @result,\
  \ $word if scalar @word_consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[bcdfghjklmnpqrstvwxyz]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $c (split //, $word) {\n       \
  \     $count++ if $c !~ /[aeiou]/i;\n        }\n        push @result, $word if $count\
  \ == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char =~ /[^aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
- "    my @words = split / /, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $consonants = 0;\n        for my $char (split //, $word) {\n       \
  \     if ($char =~ /[bcdfghjklmnpqrstvwxyz]/i) {\n                $consonants++;\n\
  \            }\n        }\n        if ($consonants == $n) {\n            push @result,\
  \ $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $letter (split(//, $word)) {\n \
  \           if ($letter !~ /[aeiou]/i) {\n                $count++;\n          \
  \  }\n        }\n        if ($count == $n) {\n            push(@result, $word);\n\
  \        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        for (my $i = 0; $i < length($word); $i++) {\n\
  \            my $c = substr($word, $i, 1);\n            if ($c !~ /[aeiou]/i) {\n\
  \                $count++;\n            }\n        }\n        if ($count == $n)\
  \ {\n            push @result, $word;\n        }\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        $count++ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word\
  \ if $count == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $count = 0;\n        for my $char (split //, $word) {\n            $count++\
  \ if $char =~ /[^aeiou]/i;\n        }\n        push @result, $word if $count ==\
  \ $n;\n    }\n    return @result;\n}"
- "    my @words = split(/\\s+/, $s);\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $consonants = $word =~ tr/bcdfghjklmnpqrstvwxyz//;\n        push\
  \ @result, $word if $consonants == $n;\n    }\n    return @result;\n}"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    for my $word (@words) {\n\
  \        my $c = 0;\n        for my $char (split //, $word) {\n            if ($char\
  \ !~ /[aeiou]/i) {\n                $c++;\n            }\n        }\n        if\
  \ ($c == $n) {\n            push @result, $word;\n        }\n    }\n    return @result;\n\
  }"
- "    my @words = split /\\s+/, $s;\n    my @result;\n    foreach my $word (@words)\
  \ {\n        my $count = 0;\n        foreach my $char (split //, $word) {\n    \
  \        if ($char !~ /[aeiou]/i) {\n                $count++;\n            }\n\
  \        }\n        if ($count == $n) {\n            push @result, $word;\n    \
  \    }\n    }\n    return @result;\n}"
language: pl
name: HumanEval_117_select_words
prompt: "# Given a string s and a natural number n, you have been tasked to implement\
  \ \n# a function that returns a list of all words from string s that contain exactly\
  \ \n# n consonants, in order these words appear in the string s.\n# If the string\
  \ s is empty then the function should return an empty list.\n# Note: you may assume\
  \ the input string contains only letters and spaces.\n# Examples:\n# select_words(\"\
  Mary had a little lamb\", 4) ==> [\"little\"]\n# select_words(\"Mary had a little\
  \ lamb\", 3) ==> [\"Mary\", \"lamb\"]\n# select_words(\"simple white space\", 2)\
  \ ==> []\n# select_words(\"Hello world\", 4) ==> [\"world\"]\n# select_words(\"\
  Uncle sam\", 3) ==> [\"Uncle\"]\nsub select_words {\n    my($s, $n) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&select_words;\n\
  \        if(eq_deeply($candidate->(\"Mary had a little lamb\", 4),[\"little\"]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Mary had a little lamb\", 3),[\"Mary\", \"lamb\"])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"simple white space\"\
  , 2),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Hello world\", 4),[\"world\"])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"Uncle sam\", 3),[\"Uncle\"])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \", 4),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"a b c d e f\", 1),[\"b\", \"c\", \"d\", \"f\"]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

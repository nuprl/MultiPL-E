completions:
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return ($a * $h) / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return ($a * $h) / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return ($a * $h) / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return ($a * $h) / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return ($a * $h) / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return ($a * $h) / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return 0.5 * $a * $h;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
- '    return $a * $h / 2;

  }'
language: pl
name: HumanEval_45_triangle_area
prompt: "# Given length of a side and high return area for a triangle.\n# >>> triangle_area(5,\
  \ 3)\n# 7.5\nsub triangle_area {\n    my($a, $h) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triangle_area;\n\
  \        if(eq_deeply($candidate->(5, 3),7.5)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(2, 2),2.0)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 8),40.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

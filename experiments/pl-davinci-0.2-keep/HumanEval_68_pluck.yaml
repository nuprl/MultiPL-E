name: HumanEval_68_pluck
language: humaneval_to_perl.py
prompt: "# \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n# your task is to pluck one of the nodes and return it.\n# The\
  \ plucked node should be the node with the smallest even value.\n# If multiple nodes\
  \ with the same smallest even value are found return the node that has smallest\
  \ index.\n# The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n# If there are no even values or the given array is empty, return [].\n\
  # Example 1:\n# Input: [4,2,3]\n# Output: [2, 1]\n# Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n# Example 2:\n# Input: [1,2,3]\n# Output:\
  \ [2, 1]\n# Explanation: 2 has the smallest even value, and 2 has the smallest index.\
  \ \n# Example 3:\n# Input: []\n# Output: []\n# Example 4:\n# Input: [5, 0, 3, 0,\
  \ 4, 2]\n# Output: [0, 1]\n# Explanation: 0 is the smallest value, but  there are\
  \ two zeros,\n# so we will choose the first zero, which has the smallest index.\n\
  # Constraints:\n# * 1 <= nodes.length <= 10000\n# * 0 <= node.value\nsub pluck {\n\
  \    my($arr) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pluck;\n\
  \        if(eq_deeply($candidate->([4, 2, 3]),[2, 1])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2,\
  \ 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 0, 3, 0, 4, 2]),[0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([1, 2, 3, 0, 5, 3]),[0, 3])) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 4, 8, 4, 8]),[4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([7, 6, 7, 1]),[6, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([7,\
  \ 9, 7, 1]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my $min = undef;\n    my $min_i = undef;\n    for my $i (0..$#$arr)\
    \ {\n        my $v = $arr->[$i];\n        if(!defined($min) && $v % 2 == 0) {\n\
    \            $min = $v;\n            $min_i = $i;\n        } elsif(defined($min)\
    \ && $v % 2 == 0 && $v < $min) {\n            $min = $v;\n            $min_i =\
    \ $i;\n        }\n    }\n    return defined($min) ? [$min, $min_i] : [];\n}",
  "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        my $v = $arr->[$i];\n        if($v % 2 == 0) {\n            if(!defined($min)\
    \ || $v < $min) {\n                $min = $v;\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = undef;\n    my $min_i = undef;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_i = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_i] :\
    \ [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) ||\
    \ $arr->[$i] < $min) {\n                $min = $arr->[$i];\n                $min_idx\
    \ = $i;\n            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = undef;\n    my $idx = undef;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    if (defined($min)) {\n        return [$min,\
    \ $idx];\n    } else {\n        return [];\n    }\n}", "    my $i = 0;\n    my\
    \ $min = -1;\n    my $min_i = -1;\n    for (@$arr) {\n        if ($_ % 2 == 0)\
    \ {\n            if ($min == -1 || $_ < $min) {\n                $min = $_;\n\
    \                $min_i = $i;\n            }\n        }\n        $i++;\n    }\n\
    \    return $min == -1 ? [] : [$min, $min_i];\n}", "    my $min = undef;\n   \
    \ my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i]\
    \ % 2) == 0) {\n            if(!defined($min) || ($arr->[$i] < $min)) {\n    \
    \            $min = $arr->[$i];\n                $idx = $i;\n            }\n \
    \       }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min\
    \ = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if\
    \ ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $min_idx = $i;\n    \
    \        }\n        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n\
    }", "    my $min = undef;\n    my $min_i = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) ||\
    \ $arr->[$i] < $min) {\n                $min = $arr->[$i];\n                $min_i\
    \ = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n        return\
    \ [$min, $min_i];\n    } else {\n        return [];\n    }\n}", "    my $min =\
    \ -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $min_idx = $i;\n            }\n    \
    \    }\n    }\n    return [$min, $min_idx];\n}", "    my $min = -1;\n    my $idx\
    \ = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n\
    \            if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return $min\
    \ == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i] % 2) == 0) {\n   \
    \         if(!defined($min) || ($arr->[$i] < $min)) {\n                $min =\
    \ $arr->[$i];\n                $min_idx = $i;\n            }\n        }\n    }\n\
    \    if(defined($min)) {\n        return [$min, $min_idx];\n    } else {\n   \
    \     return [];\n    }\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if(!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min))\
    \ {\n        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n\
    }", "    my @res = ();\n    my $min = $arr->[0];\n    my $idx = 0;\n    for my\
    \ $i (0..$#{$arr}) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min\
    \ % 2 == 0) {\n                if ($arr->[$i] < $min) {\n                    $min\
    \ = $arr->[$i];\n                    $idx = $i;\n                }\n         \
    \   } else {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    if ($min % 2 == 0) {\n        @res = ($min,\
    \ $idx);\n    }\n    return \\@res;\n}", "    my $min_even = undef;\n    my $min_even_idx\
    \ = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n\
    \            if (!defined($min_even) || $arr->[$i] < $min_even) {\n          \
    \      $min_even = $arr->[$i];\n                $min_even_idx = $i;\n        \
    \    }\n        }\n    }\n    if (defined($min_even)) {\n        return [$min_even,\
    \ $min_even_idx];\n    } else {\n        return [];\n    }\n}", "    my $min =\
    \ -1;\n    my $idx = -1;\n    for my $i (0..$#$arr) {\n        if($arr->[$i] %\
    \ 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n             \
    \   $min = $arr->[$i];\n                $idx = $i;\n            }\n        }\n\
    \    }\n    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min = -1;\n \
    \   my $idx = -1;\n    for my $i (0..$#$arr) {\n        if($arr->[$i] % 2 == 0)\
    \ {\n            if($min == -1 || $arr->[$i] < $min) {\n                $min =\
    \ $arr->[$i];\n                $idx = $i;\n            }\n        }\n    }\n \
    \   return [$min, $idx];\n}", "    my $min = -1;\n    my $index = -1;\n    for\
    \ my $i (0..$#$arr) {\n        if($arr->[$i] % 2 == 0) {\n            if($min\
    \ == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n        \
    \        $index = $i;\n            }\n        }\n    }\n    return [$min, $index];\n\
    }", "    my $min = -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if($min < 0 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return $min < 0 ? [] : [$min, $min_idx];\n\
    }", "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n  \
    \          }\n        }\n    }\n    return [$min, $idx];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n      \
    \          $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n}", "  \
    \  my @res = ();\n    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min)\
    \ || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n              \
    \  $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n\
    \        @res = ($min, $min_idx);\n    }\n    return \\@res;\n}", "    my $min\
    \ = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n   \
    \     if(defined($min) && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
    \            $min_idx = $i;\n        }\n        elsif(!defined($min) && $arr->[$i]\
    \ % 2 == 0) {\n            $min = $arr->[$i];\n            $min_idx = $i;\n  \
    \      }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n}", "    my\
    \ $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n     \
    \   if (defined($arr->[$i]) && $arr->[$i] % 2 == 0) {\n            if (!defined($min)\
    \ || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n              \
    \  $min_idx = $i;\n            }\n        }\n    }\n    return defined($min) ?\
    \ [$min, $min_idx] : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if(!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return defined($min)\
    \ ? [$min, $min_idx] : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if(!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min))\
    \ {\n        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n\
    }", "    my $min = undef;\n    my $min_i = undef;\n    for my $i (0..$#$arr) {\n\
    \        if(!defined($min) && $arr->[$i] % 2 == 0) {\n            $min = $arr->[$i];\n\
    \            $min_i = $i;\n        } elsif(defined($min) && $arr->[$i] % 2 ==\
    \ 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n            $min_i\
    \ = $i;\n        }\n    }\n    return defined($min) ? [$min, $min_i] : [];\n}",
  "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if(!defined($min) && $arr->[$i] % 2 == 0) {\n            $min = $arr->[$i];\n\
    \            $min_idx = $i;\n        } elsif(defined($min) && $arr->[$i] % 2 ==\
    \ 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n            $min_idx\
    \ = $i;\n        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n\
    }", "    my $min = -1;\n    my $idx = -1;\n    for my $i (0..$#$arr) {\n     \
    \   if ($arr->[$i] % 2 == 0) {\n            if ($min == -1 || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $idx = $i;\n        \
    \    }\n        }\n    }\n    return [$min, $idx];\n}", "    my $min = -1;\n \
    \   my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $min_idx = $i;\n            }\n    \
    \    }\n    }\n    return [$min, $min_idx];\n}", "    my $min = undef;\n    my\
    \ $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    if(defined($min)) {\n        return [$min, $min_idx];\n\
    \    } else {\n        return [];\n    }\n}", "    my $min = -1;\n    my $idx\
    \ = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]%2==0) {\n \
    \           if($min==-1) {\n                $min = $arr->[$i];\n             \
    \   $idx = $i;\n            }\n            elsif($arr->[$i]<$min) {\n        \
    \        $min = $arr->[$i];\n                $idx = $i;\n            }\n     \
    \   }\n    }\n    return [$min, $idx];\n}", "    my $min = undef;\n    my $min_idx\
    \ = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0)\
    \ {\n            if(!defined($min) || $arr->[$i] < $min) {\n                $min\
    \ = $arr->[$i];\n                $min_idx = $i;\n            }\n        }\n  \
    \  }\n    if(defined($min)) {\n        return [$min, $min_idx];\n    } else {\n\
    \        return [];\n    }\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if(!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min))\
    \ {\n        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n\
    }", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) ||\
    \ $arr->[$i] < $min) {\n                $min = $arr->[$i];\n                $min_idx\
    \ = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n        return\
    \ [$min, $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min\
    \ = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n       \
    \ if(($arr->[$i] % 2) == 0) {\n            if(!defined($min) || ($arr->[$i] <\
    \ $min)) {\n                $min = $arr->[$i];\n                $idx = $i;\n \
    \           }\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n\
    }", "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n\
    }", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if(($arr->[$i] % 2) == 0) {\n            if(!defined($min)\
    \ || ($arr->[$i] < $min)) {\n                $min = $arr->[$i];\n            \
    \    $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n\
    \        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n}",
  "    my @res = ();\n    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if(($arr->[$i] % 2) == 0) {\n            if($min == -1) {\n\
    \                $min = $arr->[$i];\n                $idx = $i;\n            }\
    \ else {\n                if($arr->[$i] < $min) {\n                    $min =\
    \ $arr->[$i];\n                    $idx = $i;\n                }\n           \
    \ }\n        }\n    }\n    if($min != -1) {\n        @res = ($min, $idx);\n  \
    \  }\n    return \\@res;\n}", "    my $min_even = undef;\n    my $min_even_idx\
    \ = undef;\n    for my $i (0..$#$arr) {\n        my $val = $arr->[$i];\n     \
    \   if (defined($val) && $val % 2 == 0) {\n            if (!defined($min_even)\
    \ || $val < $min_even) {\n                $min_even = $val;\n                $min_even_idx\
    \ = $i;\n            }\n        }\n    }\n    return defined($min_even) ? [$min_even,\
    \ $min_even_idx] : [];\n}", "    my $min = -1;\n    my $min_idx = -1;\n    for(my\
    \ $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if($min\
    \ < 0 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n          \
    \      $min_idx = $i;\n            }\n        }\n    }\n    return [$min, $min_idx];\n\
    }", "    my $min = $arr->[0];\n    my $min_i = 0;\n    for my $i (0..$#$arr) {\n\
    \        if ($arr->[$i] % 2 == 0) {\n            if ($arr->[$i] < $min) {\n  \
    \              $min = $arr->[$i];\n                $min_i = $i;\n            }\n\
    \        }\n    }\n    return [$min, $min_i];\n}", "    my $min = undef;\n   \
    \ my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i]\
    \ % 2) == 0) {\n            if(defined($min)) {\n                if($arr->[$i]\
    \ < $min) {\n                    $min = $arr->[$i];\n                    $min_idx\
    \ = $i;\n                }\n            } else {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min))\
    \ {\n        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n\
    }", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if(!($arr->[$i] % 2)) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if(defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min = -1;\n\
    \    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $idx = $i;\n            }\n        }\n\
    \    }\n    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    if(defined($min)) {\n        return [$min, $min_idx];\n\
    \    } else {\n        return [];\n    }\n}", "    my $min = $arr->[0];\n    my\
    \ $min_idx = 0;\n    my $found = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if ($found == 0) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n                $found = 1;\n            } else\
    \ {\n                if ($arr->[$i] < $min) {\n                    $min = $arr->[$i];\n\
    \                    $min_idx = $i;\n                }\n            }\n      \
    \  }\n    }\n    if ($found == 0) {\n        return [];\n    } else {\n      \
    \  return [$min, $min_idx];\n    }\n}", "    my $min = -1;\n    my $idx = -1;\n\
    \    for(my $i=0; $i<=$#{$arr}; $i++) {\n        if($arr->[$i] % 2 == 0) {\n \
    \           if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $idx];\n}", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min)\
    \ || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n              \
    \  $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n\
    \        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n}",
  "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n\
    }", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) ||\
    \ $arr->[$i] < $min) {\n                $min = $arr->[$i];\n                $min_idx\
    \ = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n        return\
    \ [$min, $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min\
    \ = $arr->[0];\n    my $index = 0;\n    my $found = 0;\n    for my $i (1..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if ($found == 0) {\n    \
    \            $min = $arr->[$i];\n                $index = $i;\n              \
    \  $found = 1;\n            } else {\n                if ($arr->[$i] < $min) {\n\
    \                    $min = $arr->[$i];\n                    $index = $i;\n  \
    \              }\n            }\n        }\n    }\n    if ($found == 0) {\n  \
    \      return [];\n    } else {\n        return [$min, $index];\n    }\n}", " \
    \   my $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n\
    \        if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if (defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my @res = ();\n\
    \    my $min = -1;\n    my $min_idx = -1;\n    for my $i (0..$#{$arr}) {\n   \
    \     if ($arr->[$i] % 2 == 0) {\n            if ($min == -1) {\n            \
    \    $min = $arr->[$i];\n                $min_idx = $i;\n            } else {\n\
    \                if ($arr->[$i] < $min) {\n                    $min = $arr->[$i];\n\
    \                    $min_idx = $i;\n                }\n            }\n      \
    \  }\n    }\n    if ($min != -1) {\n        @res = ($min, $min_idx);\n    }\n\
    \    return \\@res;\n}", "    my $min = -1;\n    my $min_i = -1;\n    for my $i\
    \ (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min == -1\
    \ || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n              \
    \  $min_i = $i;\n            }\n        }\n    }\n    return [$min, $min_i];\n\
    }", "    my $min = -1;\n    my $min_idx = -1;\n    for my $i (0..$#$arr) {\n \
    \       if ($arr->[$i] % 2 == 0) {\n            if ($min == -1 || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return $min == -1 ? [] : [$min, $min_idx];\n\
    }", "    my $min = $arr->[0];\n    my $idx = 0;\n    for my $i (1..$#$arr) {\n\
    \        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n          \
    \  $idx = $i;\n        }\n    }\n    return [$min, $idx];\n}", "    my $min =\
    \ undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n     \
    \   if(($arr->[$i] % 2) == 0) {\n            if(!defined($min) || ($arr->[$i]\
    \ < $min)) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) ||\
    \ $arr->[$i] < $min) {\n                $min = $arr->[$i];\n                $idx\
    \ = $i;\n            }\n        }\n    }\n    return defined($min) ? [$min, $idx]\
    \ : [];\n}", "    my $min;\n    my $idx;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    if(defined($min)) {\n        return [$min,\
    \ $idx];\n    } else {\n        return [];\n    }\n}", "    my $min = -1;\n  \
    \  my $min_idx = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2\
    \ == 0) {\n            if ($min == -1 || $arr->[$i] < $min) {\n              \
    \  $min = $arr->[$i];\n                $min_idx = $i;\n            }\n       \
    \ }\n    }\n    return $min == -1 ? [] : [$min, $min_idx];\n}", "    my $min =\
    \ -1;\n    my $idx = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if ($min == -1 || $arr->[$i] < $min) {\n          \
    \      $min = $arr->[$i];\n                $idx = $i;\n            }\n       \
    \ }\n    }\n    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if(!defined($min)\
    \ && $arr->[$i] % 2 == 0) {\n            $min = $arr->[$i];\n            $min_idx\
    \ = $i;\n        } elsif(defined($min) && $arr->[$i] % 2 == 0 && $arr->[$i] <\
    \ $min) {\n            $min = $arr->[$i];\n            $min_idx = $i;\n      \
    \  }\n    }\n    if(defined($min)) {\n        return [$min, $min_idx];\n    }\
    \ else {\n        return [];\n    }\n}", "    my $min = undef;\n    my $idx =\
    \ undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n  \
    \          if (!defined($min) || $arr->[$i] < $min) {\n                $min =\
    \ $arr->[$i];\n                $idx = $i;\n            }\n        }\n    }\n \
    \   if (defined($min)) {\n        return [$min, $idx];\n    } else {\n       \
    \ return [];\n    }\n}", "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if($min ==\
    \ -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n           \
    \     $idx = $i;\n            }\n        }\n    }\n    return [$min, $idx];\n}",
  "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n    \
    \    if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $idx = $i;\n        \
    \    }\n        }\n    }\n    return ($min == -1) ? [] : [$min, $idx];\n}", " \
    \   my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if(defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min = $arr->[0];\n\
    \    my $idx = 0;\n    for my $i (1..$#$arr) {\n        if ($arr->[$i] < $min)\
    \ {\n            $min = $arr->[$i];\n            $idx = $i;\n        }\n    }\n\
    \    return [$min, $idx];\n}", "    my $min = -1;\n    my $idx = -1;\n    for\
    \ my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min\
    \ == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n        \
    \        $idx = $i;\n            }\n        }\n    }\n    return $min == -1 ?\
    \ [] : [$min, $idx];\n}", "    my $min = undef;\n    my $min_idx = undef;\n  \
    \  for(my $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i] % 2) == 0) {\n     \
    \       if(!defined($min) || ($arr->[$i] < $min)) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return defined($min)\
    \ ? [$min, $min_idx] : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n           \
    \ if (!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return defined($min)\
    \ ? [$min, $min_idx] : [];\n}", "    my $min = -1;\n    my $min_idx = -1;\n  \
    \  for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n       \
    \     if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $min_idx];\n}", "    my $min = undef;\n    my $min_idx = undef;\n    for(my\
    \ $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min)\
    \ || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n              \
    \  $min_idx = $i;\n            }\n        }\n    }\n    return defined($min) ?\
    \ [$min, $min_idx] : [];\n}", "    my $res = [];\n    my $min = undef;\n    my\
    \ $min_idx = undef;\n    for my $i (0..$#$arr) {\n        my $v = $arr->[$i];\n\
    \        if ($v % 2 == 0) {\n            if (!defined($min) || $v < $min) {\n\
    \                $min = $v;\n                $min_idx = $i;\n            }\n \
    \       }\n    }\n    if (defined($min)) {\n        $res = [$min, $min_idx];\n\
    \    }\n    return $res;\n}", "    my $min = -1;\n    my $min_idx = -1;\n    for\
    \ my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min\
    \ == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n        \
    \        $min_idx = $i;\n            }\n        }\n    }\n    return $min == -1\
    \ ? [] : [$min, $min_idx];\n}", "    my $min = -1;\n    my $idx = -1;\n    for\
    \ my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min\
    \ == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n        \
    \        $idx = $i;\n            }\n        }\n    }\n    return $min == -1 ?\
    \ [] : [$min, $idx];\n}", "    my $min = undef;\n    my $min_idx = undef;\n  \
    \  for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if\
    \ (!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return defined($min)\
    \ ? [$min, $min_idx] : [];\n}", "    my $min = -1;\n    my $min_idx = -1;\n  \
    \  for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n       \
    \     if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return $min\
    \ == -1 ? [] : [$min, $min_idx];\n}", "    my $min = -1;\n    my $idx = -1;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]%2==0) {\n         \
    \   if($min==-1 || $arr->[$i]<$min) {\n                $min = $arr->[$i];\n  \
    \              $idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $idx];\n}", "    my $min = -1;\n    my $idx = -1;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return [$min, $idx];\n}", "    my $min =\
    \ -1;\n    my $min_idx = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if ($min == -1 || $arr->[$i] < $min) {\n          \
    \      $min = $arr->[$i];\n                $min_idx = $i;\n            }\n   \
    \     }\n    }\n    return $min == -1 ? [] : [$min, $min_idx];\n}", "    my $min\
    \ = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n   \
    \     if(defined($min) && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
    \            $min_idx = $i;\n        }\n        elsif(!defined($min) && $arr->[$i]\
    \ % 2 == 0) {\n            $min = $arr->[$i];\n            $min_idx = $i;\n  \
    \      }\n    }\n    if(defined($min)) {\n        return [$min, $min_idx];\n \
    \   }\n    else {\n        return [];\n    }\n}", "    my @res = ();\n    my $min\
    \ = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n\
    \            if($min == -1) {\n                $min = $arr->[$i];\n          \
    \      @res = ($min, $i);\n            } else {\n                if($arr->[$i]\
    \ < $min) {\n                    $min = $arr->[$i];\n                    @res\
    \ = ($min, $i);\n                }\n            }\n        }\n    }\n    return\
    \ @res;\n}", "    my $min = -1;\n    my $idx = -1;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return $min == -1 ? [] : [$min, $idx];\n\
    }", "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if(defined($min) && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
    \            $idx = $i;\n        }\n        elsif(!defined($min) && $arr->[$i]\
    \ % 2 == 0) {\n            $min = $arr->[$i];\n            $idx = $i;\n      \
    \  }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min =\
    \ -1;\n    my $index = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if ($min == -1 || $arr->[$i] < $min) {\n          \
    \      $min = $arr->[$i];\n                $index = $i;\n            }\n     \
    \   }\n    }\n    return $min == -1 ? [] : [$min, $index];\n}", "    my $min =\
    \ undef;\n    my $idx = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n      \
    \          $min = $arr->[$i];\n                $idx = $i;\n            }\n   \
    \     }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min\
    \ = $arr->[0];\n    my $min_idx = 0;\n    for(my $i=0; $i<@$arr; $i++) {\n   \
    \     if($arr->[$i]%2 == 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
    \            $min_idx = $i;\n        }\n    }\n    return $min%2 == 0 ? [$min,\
    \ $min_idx] : [];\n}", "    my $min = undef;\n    my $idx = undef;\n    for(my\
    \ $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i] % 2) == 0) {\n            if(defined($min))\
    \ {\n                if($arr->[$i] < $min) {\n                    $min = $arr->[$i];\n\
    \                    $idx = $i;\n                }\n            } else {\n   \
    \             $min = $arr->[$i];\n                $idx = $i;\n            }\n\
    \        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my\
    \ $min = $arr->[0];\n    my $idx = 0;\n    for my $i (1..$#$arr) {\n        if\
    \ ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n            $idx = $i;\n\
    \        }\n    }\n    return [$min, $idx];\n}", "    my $min = -1;\n    my $idx\
    \ = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if ($arr->[$i] % 2 == 0)\
    \ {\n            if ($min == -1 || $arr->[$i] < $min) {\n                $min\
    \ = $arr->[$i];\n                $idx = $i;\n            }\n        }\n    }\n\
    \    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min = 1e9;\n    my $idx\
    \ = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0 && $arr->[$i]\
    \ < $min) {\n            $min = $arr->[$i];\n            $idx = $i;\n        }\n\
    \    }\n    return $idx == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n}", "  \
    \  my $min = $arr->[0];\n    my $min_idx = 0;\n    for my $i (0..$#$arr) {\n \
    \       if ($arr->[$i] < $min && $arr->[$i] % 2 == 0) {\n            $min = $arr->[$i];\n\
    \            $min_idx = $i;\n        }\n    }\n    return [$min, $min_idx];\n}",
  "    my $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n \
    \       if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = undef;\n    my $min_i = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if(!defined($min) && $arr->[$i] % 2 == 0) {\n            $min\
    \ = $arr->[$i];\n            $min_i = $i;\n        } elsif(defined($min) && $arr->[$i]\
    \ % 2 == 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n         \
    \   $min_i = $i;\n        }\n    }\n    return defined($min) ? [$min, $min_i]\
    \ : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if (defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min = 1e9;\n\
    \    my $i = -1;\n    for(my $j=0; $j<@$arr; $j++) {\n        if(($arr->[$j] %\
    \ 2 == 0) && ($arr->[$j] < $min)) {\n            $min = $arr->[$j];\n        \
    \    $i = $j;\n        }\n    }\n    return ($i == -1) ? [] : [$min, $i];\n}",
  "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if(defined($min) && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
    \            $idx = $i;\n        }\n        elsif(!defined($min) && $arr->[$i]\
    \ % 2 == 0) {\n            $min = $arr->[$i];\n            $idx = $i;\n      \
    \  }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min =\
    \ -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $idx = $i;\n            }\n        }\n\
    \    }\n    return [$min, $idx];\n}", "    my $min = 1e9;\n    my $idx = -1;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0 && $arr->[$i]\
    \ < $min) {\n            $min = $arr->[$i];\n            $idx = $i;\n        }\n\
    \    }\n    return $idx == -1 ? [] : [$min, $idx];\n}", "    my @res = ();\n \
    \   my $min = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] %\
    \ 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n             \
    \   $min = $arr->[$i];\n                @res = ($min, $i);\n            }\n  \
    \      }\n    }\n    return @res;\n}", "    my $n = scalar(@$arr);\n    my $min\
    \ = undef;\n    my $min_i = undef;\n    for(my $i=0; $i<$n; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $min_i = $i;\n            }\n  \
    \      }\n    }\n    return defined($min) ? [$min, $min_i] : [];\n}", "    my\
    \ $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n     \
    \   if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min_even = -1;\n    my $min_even_idx = -1;\n    for my $i\
    \ (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min_even\
    \ == -1 || $arr->[$i] < $min_even) {\n                $min_even = $arr->[$i];\n\
    \                $min_even_idx = $i;\n            }\n        }\n    }\n    return\
    \ $min_even == -1 ? [] : [$min_even, $min_even_idx];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        my $n =\
    \ $arr->[$i];\n        if($n % 2 == 0) {\n            if(!defined($min) || $n\
    \ < $min) {\n                $min = $n;\n                $min_idx = $i;\n    \
    \        }\n        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n\
    }", "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n\
    }", "    my $min = -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return $min == -1 ? [] : [$min, $min_idx];\n\
    }", "    my $n = scalar(@$arr);\n    my $min = undef;\n    my $min_i = undef;\n\
    \    for my $i (0..$n-1) {\n        if ($arr->[$i] % 2 == 0) {\n            if\
    \ (!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_i = $i;\n            }\n        }\n    }\n    if (defined($min))\
    \ {\n        return [$min, $min_i];\n    } else {\n        return [];\n    }\n\
    }", "    my $min = -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0 && ($min == -1 || $arr->[$i] < $min)) {\n\
    \            $min = $arr->[$i];\n            $min_idx = $i;\n        }\n    }\n\
    \    return $min == -1 ? [] : [$min, $min_idx];\n}", "    my $min = -1;\n    my\
    \ $index = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2\
    \ == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n               \
    \ $min = $arr->[$i];\n                $index = $i;\n            }\n        }\n\
    \    }\n    return ($min == -1) ? [] : [$min, $index];\n}", "    my $min = undef;\n\
    \    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $idx = $i;\n            }\n    \
    \    }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $i =\
    \ 0;\n    my $min = -1;\n    my $min_i = -1;\n    while($i < scalar(@$arr)) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $min_i = $i;\n\
    \            }\n        }\n        $i++;\n    }\n    return [$min, $min_i];\n}",
  "    my $min = -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return [$min, $min_idx];\n}", "    my $min\
    \ = -1;\n    my $idx = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if ($min == -1 || $arr->[$i] < $min) {\n          \
    \      $min = $arr->[$i];\n                $idx = $i;\n            }\n       \
    \ }\n    }\n    return $min == -1 ? [] : [$min, $idx];\n}", "    my @res = ();\n\
    \    my $min_even = 10001;\n    my $min_even_idx = -1;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if($arr->[$i] < $min_even)\
    \ {\n                $min_even = $arr->[$i];\n                $min_even_idx =\
    \ $i;\n            }\n        }\n    }\n    if($min_even_idx >= 0) {\n       \
    \ @res = ($min_even, $min_even_idx);\n    }\n    return \\@res;\n}", "    my $min\
    \ = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if\
    \ ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $min_idx = $i;\n    \
    \        }\n        }\n    }\n    if (defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min = -1;\n\
    \    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $idx = $i;\n            }\n        }\n\
    \    }\n    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min_even = undef;\n\
    \    my $min_even_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min_even) || $arr->[$i] < $min_even) {\n\
    \                $min_even = $arr->[$i];\n                $min_even_idx = $i;\n\
    \            }\n        }\n    }\n    if(defined($min_even)) {\n        return\
    \ [$min_even, $min_even_idx];\n    } else {\n        return [];\n    }\n}", " \
    \   my $min = undef;\n    my $idx = undef;\n    for my $i (0..$#$arr) {\n    \
    \    if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n\
    }", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) ||\
    \ $arr->[$i] < $min) {\n                $min = $arr->[$i];\n                $min_idx\
    \ = $i;\n            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if (defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min = undef;\n\
    \    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $idx = $i;\n            }\n    \
    \    }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $i =\
    \ 0;\n    my $j = -1;\n    my $min = -1;\n    for (@$arr) {\n        if ($_ %\
    \ 2 == 0) {\n            if ($j == -1 || $_ < $min) {\n                $min =\
    \ $_;\n                $j = $i;\n            }\n        }\n        $i++;\n   \
    \ }\n    return $j == -1 ? [] : [$min, $j];\n}", "    my $min = undef;\n    my\
    \ $min_i = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 ==\
    \ 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n             \
    \   $min = $arr->[$i];\n                $min_i = $i;\n            }\n        }\n\
    \    }\n    return defined($min) ? [$min, $min_i] : [];\n}", "    my $min = -1;\n\
    \    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $idx = $i;\n            }\n        }\n\
    \    }\n    return [$min, $idx];\n}", "    my $min = -1;\n    my $idx = -1;\n\
    \    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n           \
    \ if ($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $idx];\n}", "    my $min = $arr->[0];\n    my $index = 0;\n    my $found = 0;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if($found == 0) {\n                $min = $arr->[$i];\n              \
    \  $index = $i;\n                $found = 1;\n            } else {\n         \
    \       if($arr->[$i] < $min) {\n                    $min = $arr->[$i];\n    \
    \                $index = $i;\n                }\n            }\n        }\n \
    \   }\n    if($found == 0) {\n        return [];\n    } else {\n        return\
    \ [$min, $index];\n    }\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for my $i (0..$#$arr) {\n        my $val = $arr->[$i];\n        if ($val\
    \ % 2 == 0) {\n            if (!defined($min) || $val < $min) {\n            \
    \    $min = $val;\n                $min_idx = $i;\n            }\n        }\n\
    \    }\n    return defined($min) ? [$min, $min_idx] : [];\n}", "    my $min =\
    \ undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n      \
    \          $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n}", "  \
    \  my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if(!defined($min) && $arr->[$i] % 2 == 0) {\n            $min = $arr->[$i];\n\
    \            $idx = $i;\n        } elsif(defined($min) && $arr->[$i] % 2 == 0\
    \ && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n            $idx =\
    \ $i;\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", " \
    \   my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if(($arr->[$i] % 2) == 0) {\n            if(!defined($min) || ($arr->[$i]\
    \ < $min)) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = -1;\n    my $idx = -1;\n    for my $i (0..$#$arr)\
    \ {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return $min == -1 ? [] : [$min, $idx];\n\
    }", "    my $min = -1;\n    my $idx = -1;\n    for my $i (0..$#$arr) {\n     \
    \   if ($arr->[$i] % 2 == 0) {\n            if ($min == -1 || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $idx = $i;\n        \
    \    }\n        }\n    }\n    return [$min, $idx];\n}", "    my $min = 1e9;\n\
    \    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n         \
    \   $min_idx = $i;\n        }\n    }\n    return $min_idx == -1 ? [] : [$min,\
    \ $min_idx];\n}", "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        my $val = $arr->[$i];\n        if($val % 2 == 0)\
    \ {\n            if(!defined($min) || $val < $min) {\n                $min = $val;\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return defined($min)\
    \ ? [$min, $idx] : [];\n}", "    my $min = -1;\n    my $idx = -1;\n    for my\
    \ $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min ==\
    \ -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n           \
    \     $idx = $i;\n            }\n        }\n    }\n    return [$min, $idx];\n}",
  "    my $min = 1e9;\n    my $idx = -1;\n    for my $i (0..$#$arr) {\n        if\
    \ ($arr->[$i] % 2 == 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
    \            $idx = $i;\n        }\n    }\n    return $idx == -1 ? [] : [$min,\
    \ $idx];\n}", "    my $min = -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return [$min, $min_idx];\n}", "    my $min\
    \ = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if\
    \ ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $min_idx = $i;\n    \
    \        }\n        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n\
    }", "    my $min = -1;\n    my $min_idx = -1;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if($min == -1) {\n        return [];\n \
    \   }\n    return [$min, $min_idx];\n}", "    my $min = -1;\n    my $idx = -1;\n\
    \    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n           \
    \ if ($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return $min\
    \ == -1 ? [] : [$min, $idx];\n}", "    my $min = 1e9;\n    my $idx = -1;\n   \
    \ for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0 && $arr->[$i]\
    \ < $min) {\n            $min = $arr->[$i];\n            $idx = $i;\n        }\n\
    \    }\n    return $idx == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n\
    \    my $min_i = undef;\n    for my $i (0..$#$arr) {\n        if (defined($arr->[$i])\
    \ && $arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $min_i = $i;\n      \
    \      }\n        }\n    }\n    return defined($min) ? [$min, $min_i] : [];\n}",
  "    my $min = $arr->[0];\n    my $idx = 0;\n    for my $i (0..$#$arr) {\n     \
    \   if ($arr->[$i] % 2 == 0) {\n            if ($arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $idx = $i;\n            }\n    \
    \    }\n    }\n    return $min % 2 == 0 ? [$min, $idx] : [];\n}", "    my $min_even\
    \ = undef;\n    my $min_even_idx = undef;\n    for my $i (0..$#$arr) {\n     \
    \   if ($arr->[$i] % 2 == 0) {\n            if (!defined($min_even) || $arr->[$i]\
    \ < $min_even) {\n                $min_even = $arr->[$i];\n                $min_even_idx\
    \ = $i;\n            }\n        }\n    }\n    if (defined($min_even)) {\n    \
    \    return [$min_even, $min_even_idx];\n    } else {\n        return [];\n  \
    \  }\n}", "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++)\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if($min == -1) {\n       \
    \         $min = $arr->[$i];\n                $idx = $i;\n            } else {\n\
    \                if($arr->[$i] < $min) {\n                    $min = $arr->[$i];\n\
    \                    $idx = $i;\n                }\n            }\n        }\n\
    \    }\n    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n      \
    \          $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    return [$min, $min_idx];\n}", "    my $min = undef;\n \
    \   my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $idx = $i;\n            }\n    \
    \    }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min\
    \ = undef;\n    my $idx = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n      \
    \          $min = $arr->[$i];\n                $idx = $i;\n            }\n   \
    \     }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min\
    \ = -1;\n    my $index = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $index = $i;\n            }\n      \
    \  }\n    }\n    return $min == -1 ? [] : [$min, $index];\n}", "    my $min =\
    \ $arr->[0];\n    my $idx = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n         \
    \   $idx = $i;\n        }\n    }\n    return $min % 2 == 0 ? [$min, $idx] : [];\n\
    }", "    my $n = scalar(@$arr);\n    my $min = undef;\n    my $min_i = undef;\n\
    \    for(my $i=0; $i<$n; $i++) {\n        my $v = $arr->[$i];\n        if($v %\
    \ 2 == 0) {\n            if(defined($min)) {\n                if($v < $min) {\n\
    \                    $min = $v;\n                    $min_i = $i;\n          \
    \      }\n            } else {\n                $min = $v;\n                $min_i\
    \ = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n        return\
    \ [$min, $min_i];\n    } else {\n        return [];\n    }\n}", "    my $min =\
    \ undef;\n    my $min_i = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n       \
    \ if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $min_i = $i;\n      \
    \      }\n        }\n    }\n    return defined($min) ? [$min, $min_i] : [];\n}",
  "    my $min = undef;\n    my $idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n\
    }", "    my $n = scalar(@$arr);\n    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<$n; $i++) {\n        if($arr->[$i] % 2 == 0) {\n        \
    \    if(!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min))\
    \ {\n        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n\
    }", "    my $min_even = undef;\n    my $min_even_idx = undef;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min_even)\
    \ || $arr->[$i] < $min_even) {\n                $min_even = $arr->[$i];\n    \
    \            $min_even_idx = $i;\n            }\n        }\n    }\n    return\
    \ defined($min_even) ? [$min_even, $min_even_idx] : [];\n}", "    my $n = scalar(@$arr);\n\
    \    my $min = undef;\n    my $min_i = undef;\n    for(my $i=0; $i<$n; $i++) {\n\
    \        my $v = $arr->[$i];\n        if ($v % 2 == 0) {\n            if (!defined($min)\
    \ || $v < $min) {\n                $min = $v;\n                $min_i = $i;\n\
    \            }\n        }\n    }\n    if (!defined($min)) {\n        return [];\n\
    \    }\n    return [$min, $min_i];\n}", "    my @res = ();\n    my $min = undef;\n\
    \    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    if(defined($min)) {\n        @res = ($min, $min_idx);\n\
    \    }\n    return \\@res;\n}\nmy $arr;\n$arr = [4,2,3];\nprint Dumper(pluck($arr));\n\
    $arr = [1,2,3];\nprint Dumper(pluck($arr));\n$arr = [];\nprint Dumper(pluck($arr));\n\
    $arr = [5, 0, 3, 0, 4, 2];\nprint Dumper(pluck($arr));", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if(defined($arr->[$i])\
    \ && $arr->[$i] % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min)\
    \ {\n                $min = $arr->[$i];\n                $min_idx = $i;\n    \
    \        }\n        }\n    }\n    if(defined($min)) {\n        return [$min, $min_idx];\n\
    \    } else {\n        return [];\n    }\n}", "    my $min = undef;\n    my $min_idx\
    \ = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if(defined($min) && $arr->[$i]\
    \ < $min) {\n            $min = $arr->[$i];\n            $min_idx = $i;\n    \
    \    }\n        elsif(!defined($min) && $arr->[$i] % 2 == 0) {\n            $min\
    \ = $arr->[$i];\n            $min_idx = $i;\n        }\n    }\n    return defined($min)\
    \ ? [$min, $min_idx] : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if(defined($min) && $arr->[$i] <\
    \ $min) {\n            $min = $arr->[$i];\n            $min_idx = $i;\n      \
    \  }\n        elsif(!defined($min) && $arr->[$i] % 2 == 0) {\n            $min\
    \ = $arr->[$i];\n            $min_idx = $i;\n        }\n    }\n    return defined($min)\
    \ ? [$min, $min_idx] : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for my $i (0..$#$arr) {\n        my $v = $arr->[$i];\n        if (defined($min)\
    \ && $v < $min) {\n            $min = $v;\n            $min_idx = $i;\n      \
    \  }\n        elsif (!defined($min) && $v % 2 == 0) {\n            $min = $v;\n\
    \            $min_idx = $i;\n        }\n    }\n    return defined($min) ? [$min,\
    \ $min_idx] : [];\n}", "    my $min = 1e9;\n    my $index = -1;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0 && $arr->[$i] < $min) {\n\
    \            $min = $arr->[$i];\n            $index = $i;\n        }\n    }\n\
    \    return $index == -1 ? [] : [$min, $index];\n}", "    my $min = 10001;\n \
    \   my $min_i = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0 && $arr->[$i] < $min) {\n            $min = $arr->[$i];\n         \
    \   $min_i = $i;\n        }\n    }\n    return $min_i == -1 ? [] : [$min, $min_i];\n\
    }", "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n  \
    \          }\n        }\n    }\n    return $min == -1 ? [] : [$min, $idx];\n}",
  "    my $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n \
    \       if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    if (defined($min)) {\n        return [$min,\
    \ $min_idx];\n    } else {\n        return [];\n    }\n}", "    my $min = -1;\n\
    \    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $idx = $i;\n            }\n        }\n\
    \    }\n    return [$min, $idx];\n}", "    my $min = undef;\n    my $idx = undef;\n\
    \    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n           \
    \ if (!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return defined($min)\
    \ ? [$min, $idx] : [];\n}", "    my $min = $arr->[0];\n    my $min_i = 0;\n  \
    \  for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0 && $arr->[$i] < $min)\
    \ {\n            $min = $arr->[$i];\n            $min_i = $i;\n        }\n   \
    \ }\n    return [$min, $min_i];\n}", "    my $min = -1;\n    my $min_idx = -1;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $min_idx];\n}", "    my $min = 2**31;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0 && $arr->[$i] < $min) {\n          \
    \  $min = $arr->[$i];\n            $idx = $i;\n        }\n    }\n    return $idx\
    \ == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n    my $idx = undef;\n\
    \    for my $i (0..$#$arr) {\n        if (defined($arr->[$i]) && $arr->[$i] %\
    \ 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n        \
    \        $min = $arr->[$i];\n                $idx = $i;\n            }\n     \
    \   }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my $min\
    \ = -1;\n    my $index = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if($min == -1 || $arr->[$i] < $min) {\n           \
    \     $min = $arr->[$i];\n                $index = $i;\n            }\n      \
    \  }\n    }\n    return [$min, $index];\n}", "    my $min = -1;\n    my $index\
    \ = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n\
    \            if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $index = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $index];\n}", "    my $min = undef;\n    my $idx = undef;\n    for my $i (0..$#$arr)\
    \ {\n        my $n = $arr->[$i];\n        if(!defined($min) && $n % 2 == 0) {\n\
    \            $min = $n;\n            $idx = $i;\n        } elsif(defined($min)\
    \ && $n % 2 == 0 && $n < $min) {\n            $min = $n;\n            $idx = $i;\n\
    \        }\n    }\n    return defined($min) ? [$min, $idx] : [];\n}", "    my\
    \ $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]%2==0)\
    \ {\n            if($min==-1 || $arr->[$i]<$min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return $min==-1\
    \ ? [] : [$min, $idx];\n}", "    my $min = 1e9;\n    my $idx = -1;\n    for(my\
    \ $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0 && $arr->[$i] < $min)\
    \ {\n            $min = $arr->[$i];\n            $idx = $i;\n        }\n    }\n\
    \    return $idx == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n    my\
    \ $min_idx = undef;\n    for my $i (0..$#$arr) {\n        my $v = $arr->[$i];\n\
    \        if ($v % 2 == 0) {\n            if (!defined($min) || $v < $min) {\n\
    \                $min = $v;\n                $min_idx = $i;\n            }\n \
    \       }\n    }\n    if (defined($min)) {\n        return [$min, $min_idx];\n\
    \    } else {\n        return [];\n    }\n}", "    my $min_even = undef;\n   \
    \ my $min_even_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min_even) || $arr->[$i] < $min_even) {\n\
    \                $min_even = $arr->[$i];\n                $min_even_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min_even) ? [$min_even,\
    \ $min_even_idx] : [];\n}", "    my @res = ();\n    my $min = 2**31-1;\n    for\
    \ my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0 && $arr->[$i] < $min) {\n\
    \            $min = $arr->[$i];\n            @res = ($min, $i);\n        }\n \
    \   }\n    return @res;\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n           \
    \ if (!defined($min) || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    if (defined($min))\
    \ {\n        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n\
    }", "    my $i = 0;\n    my $min = -1;\n    my $min_i = -1;\n    while($i < scalar(@$arr))\
    \ {\n        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_i = $i;\n\
    \            }\n        }\n        $i++;\n    }\n    if($min == -1) {\n      \
    \  return [];\n    }\n    return [$min, $min_i];\n}", "    my $min = undef;\n\
    \    my $min_idx = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i]\
    \ % 2 == 0) {\n            if(!defined($min) || $arr->[$i] < $min) {\n       \
    \         $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    if(defined($min)) {\n        return [$min, $min_idx];\n\
    \    } else {\n        return [];\n    }\n}", "    my $min = $arr->[0];\n    my\
    \ $idx = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n\
    \            if ($arr->[$i] < $min) {\n                $min = $arr->[$i];\n  \
    \              $idx = $i;\n            }\n        }\n    }\n    return $min %\
    \ 2 == 0 ? [$min, $idx] : [];\n}", "    my $min = -1;\n    my $idx = -1;\n   \
    \ for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n        \
    \    if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $idx];\n}", "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n\
    \            }\n        }\n    }\n    return [$min, $idx];\n}", "    my $min =\
    \ undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i]\
    \ % 2 == 0) {\n            if (!defined($min) || $arr->[$i] < $min) {\n      \
    \          $min = $arr->[$i];\n                $min_idx = $i;\n            }\n\
    \        }\n    }\n    return defined($min) ? [$min, $min_idx] : [];\n}", "  \
    \  my $min = undef;\n    my $min_idx = undef;\n    for my $i (0..$#$arr) {\n \
    \       if ($arr->[$i] % 2 == 0) {\n            if (!defined($min) || $arr->[$i]\
    \ < $min) {\n                $min = $arr->[$i];\n                $min_idx = $i;\n\
    \            }\n        }\n    }\n    return defined($min) ? [$min, $min_idx]\
    \ : [];\n}", "    my $min = undef;\n    my $min_idx = undef;\n    for(my $i=0;\
    \ $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n            if(!defined($min)\
    \ || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n              \
    \  $min_idx = $i;\n            }\n        }\n    }\n    if(defined($min)) {\n\
    \        return [$min, $min_idx];\n    } else {\n        return [];\n    }\n}",
  "    my $n = scalar(@$arr);\n    my $min = undef;\n    my $min_i = undef;\n    for(my\
    \ $i=0; $i<$n; $i++) {\n        my $x = $arr->[$i];\n        if(($x % 2) == 0)\
    \ {\n            if(!defined($min) || ($x < $min)) {\n                $min = $x;\n\
    \                $min_i = $i;\n            }\n        }\n    }\n    if(defined($min))\
    \ {\n        return [$min, $min_i];\n    } else {\n        return [];\n    }\n\
    }", "    my $min = -1;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n\
    \        if($arr->[$i] % 2 == 0) {\n            if($min == -1 || $arr->[$i] <\
    \ $min) {\n                $min = $arr->[$i];\n                $idx = $i;\n  \
    \          }\n        }\n    }\n    return [$min, $idx];\n}", "    my $min = -1;\n\
    \    my $idx = -1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] % 2 ==\
    \ 0) {\n            if ($min == -1 || $arr->[$i] < $min) {\n                $min\
    \ = $arr->[$i];\n                $idx = $i;\n            }\n        }\n    }\n\
    \    return $min == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n    my\
    \ $min_index = undef;\n    for(my $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i]\
    \ % 2) == 0) {\n            if(!defined($min) || ($arr->[$i] < $min)) {\n    \
    \            $min = $arr->[$i];\n                $min_index = $i;\n          \
    \  }\n        }\n    }\n    if(defined($min)) {\n        return [$min, $min_index];\n\
    \    } else {\n        return [];\n    }\n}", "    my $min = -1;\n    my $min_idx\
    \ = -1;\n    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n\
    \            if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return $min\
    \ == -1 ? [] : [$min, $min_idx];\n}", "    my $min = -1;\n    my $min_idx = -1;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if($arr->[$i] % 2 == 0) {\n     \
    \       if($min == -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n\
    \                $min_idx = $i;\n            }\n        }\n    }\n    return [$min,\
    \ $min_idx];\n}", "    my $min = 1e9;\n    my $idx = -1;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if($arr->[$i] % 2 == 0 && $arr->[$i] < $min) {\n          \
    \  $min = $arr->[$i];\n            $idx = $i;\n        }\n    }\n    return $idx\
    \ == -1 ? [] : [$min, $idx];\n}", "    my $min = undef;\n    my $min_idx = undef;\n\
    \    for(my $i=0; $i<@$arr; $i++) {\n        if(($arr->[$i] % 2) == 0) {\n   \
    \         if(!defined($min) || ($arr->[$i] < $min)) {\n                $min =\
    \ $arr->[$i];\n                $min_idx = $i;\n            }\n        }\n    }\n\
    \    if(defined($min)) {\n        return [$min, $min_idx];\n    } else {\n   \
    \     return [];\n    }\n}", "    my $min = -1;\n    my $idx = -1;\n    for my\
    \ $i (0..$#$arr) {\n        if ($arr->[$i] % 2 == 0) {\n            if ($min ==\
    \ -1 || $arr->[$i] < $min) {\n                $min = $arr->[$i];\n           \
    \     $idx = $i;\n            }\n        }\n    }\n    return [$min, $idx];\n}",
  "    my $min_even = undef;\n    my $min_even_idx = undef;\n    for(my $i=0; $i<@$arr;\
    \ $i++) {\n        if(defined($min_even) && $arr->[$i] < $min_even) {\n      \
    \      $min_even = $arr->[$i];\n            $min_even_idx = $i;\n        }\n \
    \       elsif(!defined($min_even) && $arr->[$i] % 2 == 0) {\n            $min_even\
    \ = $arr->[$i];\n            $min_even_idx = $i;\n        }\n    }\n    return\
    \ defined($min_even) ? [$min_even, $min_even_idx] : [];\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

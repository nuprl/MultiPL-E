completions:
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for (my $i = 0; $i < $len / 2; $i++)\
  \ {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n\
  }"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    for my $e (@$q) {\n        $sum += $e;\n    }\n    return $sum <= $w;\n\
  }"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    for my $i (0..$#$q/2)\
  \ {\n        return 0 if $q->[$i] != $q->[$#$q-$i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    return 0 if $len % 2 == 0;\n \
  \   my $mid = int($len / 2);\n    for my $i (0..$mid) {\n        return 0 if $q->[$i]\
  \ != $q->[$len - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    if\
  \ ($sum <= $w) {\n        my $len = @$q;\n        my $i = 0;\n        my $j = $len\
  \ - 1;\n        while ($i < $j) {\n            if ($q->[$i] != $q->[$j]) {\n   \
  \             return 0;\n            }\n            $i++;\n            $j--;\n \
  \       }\n        return 1;\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i < $j) {\n\
  \        $sum += $q->[$i] + $q->[$j];\n        $i++;\n        $j--;\n    }\n   \
  \ $sum += $q->[$i] if $i == $j;\n    return $sum <= $w && $sum == $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    my $half = int($len / 2);\n    for my\
  \ $i (0..$half-1) {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n \
  \   return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach (@$q) {\n        $sum += $_;\n    }\n    return 0\
  \ if $sum > $w;\n    my $len = scalar @$q;\n    my $i = 0;\n    while ($i < $len/2)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n        $i++;\n    }\n  \
  \  return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $l = scalar @$q;\n    for my $i (0..$l/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$l-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    if ($sum\
  \ <= $w) {\n        my $len = scalar @$q;\n        my $i = 0;\n        while ($i\
  \ < $len) {\n            if ($q->[$i] != $q->[$len - $i - 1]) {\n              \
  \  return 0;\n            }\n            $i++;\n        }\n        return 1;\n \
  \   }\n    return 0;\n}"
- "    my $sum = 0;\n    my $len = @$q;\n    for (my $i = 0; $i < $len; $i++) {\n\
  \        $sum += $q->[$i];\n    }\n    if ($sum <= $w) {\n        for (my $i = 0;\
  \ $i < $len / 2; $i++) {\n            if ($q->[$i] != $q->[$len - $i - 1]) {\n \
  \               return 0;\n            }\n        }\n        return 1;\n    }\n\
  \    return 0;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n\
  \        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n\
  \    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for(my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    return $sum <= $w && $q->[0] == $q->[$len\
  \ - 1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $l = scalar @$q;\n    return 1 if $l == 1;\n\
  \    for my $i (0..$l/2-1) {\n        return 0 if $q->[$i] != $q->[$l-$i-1];\n \
  \   }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len/2; $i++)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    for my $i (0..$#$q/2)\
  \ {\n        return 0 if $q->[$i] != $q->[$#$q-$i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for(my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    if($sum <= $w) {\n        for(my $i =\
  \ 0; $i < $len; $i++) {\n            if($q->[$i] != $q->[$len - $i - 1]) {\n   \
  \             return 0;\n            }\n        }\n        return 1;\n    }\n  \
  \  return 0;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return 0 if\
  \ $sum > $w;\n    my $len = @$q;\n    for (my $i = 0; $i < $len / 2; $i++) {\n \
  \       return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..int($len/2)) {\n\
  \        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $e (@$q) {\n        $sum += $e;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    my $mid = int($len / 2);\n   \
  \ for my $i (0..$mid) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return 0 if\
  \ $sum > $w;\n    my $len = @$q;\n    for (my $i = 0; $i < $len / 2; $i++) {\n \
  \       return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n\
  \        $sum += $q->[$i] + $q->[$j];\n        return 0 if $sum > $w;\n        return\
  \ 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n    return 1;\n\
  }"
- "    my $sum = 0;\n    my $mid = int(@$q/2);\n    for my $i (0..$mid-1) {\n    \
  \    return 0 if $q->[$i] != $q->[-1-$i];\n        $sum += $q->[$i];\n    }\n  \
  \  $sum += $q->[$mid] if @$q % 2;\n    return $sum <= $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    my $half = int($len / 2);\n    for my\
  \ $i (0..$half-1) {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n \
  \   return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for (my $i = 0; $i < $len/2; $i++) {\n\
  \        return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    my $i = 0;\n    my\
  \ $j = $#$q;\n    while ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2-1) {\n  \
  \      return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    my $balanced = 0;\n    for (my $i = 0; $i < scalar @$q; $i++)\
  \ {\n        $sum += $q->[$i];\n        if ($q->[$i] == $q->[scalar @$q - $i - 1])\
  \ {\n            $balanced = 1;\n        } else {\n            $balanced = 0;\n\
  \            last;\n        }\n    }\n    return $sum <= $w && $balanced;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for(my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    if($sum <= $w) {\n        my $i = 0;\n\
  \        my $j = $len - 1;\n        while($i < $j) {\n            if($q->[$i] !=\
  \ $q->[$j]) {\n                return 0;\n            }\n            $i++;\n   \
  \         $j--;\n        }\n        return 1;\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach (@$q) {\n        $sum += $_;\n    }\n    return 0\
  \ if $sum > $w;\n    my $len = scalar @$q;\n    return 1 if $len == 1;\n    return\
  \ 0 if $len % 2 == 0;\n    my $mid = int($len / 2);\n    for (my $i = 0; $i < $mid;\
  \ $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return\
  \ 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    return 0 if $len == 1;\n    for my $i\
  \ (0..$len/2-1) {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n   \
  \ return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    my $half = int($len / 2);\n  \
  \  for my $i (0..$half-1) {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n\
  \        $sum += $q->[$i] + $q->[$j];\n        $i++;\n        $j--;\n    }\n   \
  \ return $sum <= $w && $i > $j;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2-1) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for (my $i\
  \ = 0; $i < $len / 2; $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i -\
  \ 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for my $i (0..$len-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    my $mid = int($len / 2);\n   \
  \ for my $i (0..$mid) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    return 1 if $sum <= $w && $q->[0] == $q->[-1];\n    return\
  \ 0;\n}"
- "    my $sum = 0;\n    foreach (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1] ? 1 : 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $e (@$q) {\n        $sum += $e;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2-1) {\n  \
  \      return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    my $i = 0;\n    my\
  \ $j = $#$q;\n    while ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for(my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    if($sum <= $w) {\n        for(my $i =\
  \ 0; $i < $len; $i++) {\n            if($q->[$i] != $q->[$len - $i - 1]) {\n   \
  \             return 0;\n            }\n        }\n        return 1;\n    }\n  \
  \  return 0;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    for my $i (0..$#$q/2)\
  \ {\n        return 0 if $q->[$i] != $q->[$#$q-$i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i < $j) {\n  \
  \      return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n\
  \    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    if\
  \ ($sum <= $w) {\n        my $rev = reverse @$q;\n        if ($rev eq @$q) {\n \
  \           return 1;\n        }\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $e (@$q) {\n        $sum += $e;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    return 0 if $len == 1;\n    for my $i\
  \ (0..$len/2-1) {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n   \
  \ return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $len = $#$q;\n    for my $i (0..$len/2) {\n\
  \        return 0 if $q->[$i] != $q->[$len-$i];\n    }\n    return 1;\n}"
- "    return 0 if sum($q) > $w;\n    return is_palindrome($q);\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = @$q;\n    for my $i (0..$len-1) {\n        $sum\
  \ += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    return 0 if $len == 1;\n\
  \    for my $i (0..$len-1) {\n        return 0 if $q->[$i] != $q->[$len-1-$i];\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    $sum += $_ for @$q;\n    return $sum <= $w && $q->[0] ==\
  \ $q->[-1] ? 1 : 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    return 0 if $sum != $q->[0] * @$q;\n    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    return $sum + $q->[$i] <= $w;\n}"
- "    my $sum = 0;\n    foreach my $e (@$q) {\n        $sum += $e;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n\
  \        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n\
  \    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for my $i (0..$len-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-1-$i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $left = 0;\n    my $right = $#$q;\n    while ($left <\
  \ $right) {\n        return 0 if $q->[$left] != $q->[$right];\n        $left++;\n\
  \        $right--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1] ? 1 : 0;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    if ($sum <= $w) {\n        for my $i (0..$len-1)\
  \ {\n            if ($q->[$i] != $q->[$len-1-$i]) {\n                return 0;\n\
  \            }\n        }\n        return 1;\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $e (@$q) {\n        $sum += $e;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n\
  \        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n\
  \    return 1;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    return $sum <= $w;\n}"
- "    my $sum = 0;\n    for(@$q) {\n        $sum += $_;\n    }\n    return $sum <=\
  \ $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    return 0 if $len % 2 == 0;\n \
  \   my $mid = int($len / 2);\n    my $left = 0;\n    my $right = $len - 1;\n   \
  \ while ($left < $mid) {\n        return 0 if $q->[$left] != $q->[$right];\n   \
  \     $left++;\n        $right--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    if ($sum\
  \ <= $w) {\n        my $len = scalar @$q;\n        my $i = 0;\n        my $j = $len\
  \ - 1;\n        while ($i < $j) {\n            if ($q->[$i] != $q->[$j]) {\n   \
  \             return 0;\n            }\n            $i++;\n            $j--;\n \
  \       }\n        return 1;\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    return 0 if $len % 2 == 0;\n    my $mid\
  \ = int($len / 2);\n    my $left = 0;\n    my $right = $len - 1;\n    while ($left\
  \ < $mid) {\n        return 0 if $q->[$left] != $q->[$right];\n        $left++;\n\
  \        $right--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for my $i (0..$len-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    if\
  \ ($sum <= $w) {\n        my $rev = reverse @$q;\n        if ($rev eq $q) {\n  \
  \          return 1;\n        }\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && is_palindrome($q);\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    return $sum <= $w && $q->[0] == $q->[$len\
  \ - 1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    return 0 if (sum(@$q) > $w);\n    return is_palindrome($q);\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && is_palindrome($q);\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    if ($sum <= $w) {\n        for my $i (0..$len-1)\
  \ {\n            if ($q->[$i] != $q->[$len-$i-1]) {\n                return 0;\n\
  \            }\n        }\n        return 1;\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    return $sum <= $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    return 0 if $len == 1;\n    my $mid =\
  \ int($len / 2);\n    my $left = 0;\n    my $right = $len - 1;\n    while ($left\
  \ < $mid) {\n        return 0 if $q->[$left] != $q->[$right];\n        $left++;\n\
  \        $right--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for (my $i\
  \ = 0; $i < $len / 2; $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i -\
  \ 1];\n    }\n    return 1;\n}"
- "    return 0 if (sum($q) > $w);\n    return is_palindrome($q);\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    return $sum + $q->[$i] <= $w;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $rev = reverse @$q;\n    return 0 if \"@$q\" ne \"@$rev\"\
  ;\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    return 0 if sum(@$q) > $w;\n    return 1 if sum(@$q) <= $w && is_palindrome($q);\n\
  \    return 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    if\
  \ ($sum <= $w) {\n        my $len = scalar @$q;\n        my $half = int($len / 2);\n\
  \        my $is_palindrome = 1;\n        for (my $i = 0; $i < $half; $i++) {\n \
  \           if ($q->[$i] != $q->[$len - $i - 1]) {\n                $is_palindrome\
  \ = 0;\n                last;\n            }\n        }\n        return $is_palindrome;\n\
  \    }\n    return 0;\n}"
- "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i];\n\
  \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
  \ $sum <= $w;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    my $half = int($len / 2);\n  \
  \  for my $i (0..$half) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    my $i = 0;\n    my\
  \ $j = $#$q;\n    while ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $l = 0;\n    my $r = $#$q;\n    while ($l <\
  \ $r) {\n        return 0 if $q->[$l] != $q->[$r];\n        $l++;\n        $r--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    for my $i (0..$#$q/2)\
  \ {\n        return 0 if $q->[$i] != $q->[$#$q-$i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    if\
  \ ($sum <= $w) {\n        if (join('', @$q) eq join('', reverse @$q)) {\n      \
  \      return 1;\n        }\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    return 0 if $sum != reverse $sum;\n    return 1;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    return 0 if $len == 1;\n    my $mid =\
  \ int($len / 2);\n    my $left = 0;\n    my $right = $len - 1;\n    while ($left\
  \ < $mid) {\n        return 0 if $q->[$left] != $q->[$right];\n        $left++;\n\
  \        $right--;\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    my $i = 0;\n    while ($i < $len) {\n\
  \        return 0 if $q->[$i] != $q->[$len - $i - 1];\n        $i++;\n    }\n  \
  \  return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $n = scalar @$q;\n    return 0 if $n % 2 ==\
  \ 0;\n    my $mid = int($n / 2);\n    for my $i (0..$mid) {\n        return 0 if\
  \ $q->[$i] != $q->[$n - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n\
  \        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n\
  \    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    if ($sum\
  \ <= $w) {\n        my $rev = reverse @$q;\n        if ($rev eq $q) {\n        \
  \    return 1;\n        }\n    }\n    return 0;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = sum(@$q);\n    return $sum <= $w && is_palindrome($q);\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    my $half = int($len / 2);\n  \
  \  for (my $i = 0; $i < $half; $i++) {\n        return 0 if $q->[$i] != $q->[$len\
  \ - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for my $i (0..$len-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n    \
  \    $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for my $i (0..$len-1)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-1-$i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2) {\n    \
  \    return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    my\
  \ $len = scalar @$q;\n    my $mid = int($len/2);\n    my $flag = 1;\n    for (my\
  \ $i = 0; $i < $mid; $i++) {\n        if ($q->[$i] != $q->[$len - $i - 1]) {\n \
  \           $flag = 0;\n            last;\n        }\n    }\n    return $sum <=\
  \ $w && $flag;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    my $mid = int($len / 2);\n   \
  \ for (my $i = 0; $i < $mid; $i++) {\n        return 0 if $q->[$i] != $q->[$len\
  \ - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q < 1;\n    return 0 if $#$q % 2\
  \ == 0;\n    my $mid = int($#$q / 2);\n    for my $i (0..$mid) {\n        return\
  \ 0 if $q->[$i] != $q->[$#$q - $i];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    return 0 if $#$q == 0;\n    for my $i (0..$#$q/2)\
  \ {\n        return 0 if $q->[$i] != $q->[-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $i = 0;\n    my $j = $#$q;\n    while ($i <\
  \ $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return 0 if\
  \ $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2-1) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n    }\n\
  \    return 0 if $sum > $w;\n    my $len = scalar @$q;\n    for my $i (0..$len/2)\
  \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len / 2;\
  \ $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return\
  \ 1;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $r = reverse @$q;\n    return 0 if \"@$q\" ne \"@$r\"\
  ;\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach (@$q) {\n        $sum += $_;\n    }\n    return 0\
  \ if $sum > $w;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i < $j)\
  \ {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n \
  \   }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    return 0 if $len % 2 == 0;\n \
  \   my $mid = int($len / 2);\n    for (my $i = 0; $i < $mid; $i++) {\n        return\
  \ 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    foreach my $e (@$q) {\n        $sum += $e;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n\
  \        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n\
  \    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2-1) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len / 2;\
  \ $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return\
  \ 1;\n}"
- "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n    return $sum\
  \ <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    my $len = scalar @$q;\n    for (my $i = 0; $i < $len; $i++)\
  \ {\n        $sum += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for (my $i\
  \ = 0; $i < $len / 2; $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i -\
  \ 1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n        return\
  \ 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}"
- "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return\
  \ $sum <= $w && $q->[0] == $q->[-1];\n}"
language: pl
name: HumanEval_72_will_it_fly
prompt: "# Write a function that returns True if the object q will fly, and False\
  \ otherwise.\n# The object q will fly if it's balanced (it is a palindromic list)\
  \ and the sum of its elements is less than or equal the maximum possible weight\
  \ w.\n# Example:\n# will_it_fly([1, 2], 5) \u279E False \n# # 1+2 is less than the\
  \ maximum possible weight, but it's unbalanced.\n# will_it_fly([3, 2, 3], 1) \u279E\
  \ False\n# # it's balanced, but 3+2+3 is more than the maximum possible weight.\n\
  # will_it_fly([3, 2, 3], 9) \u279E True\n# # 3+2+3 is less than the maximum possible\
  \ weight, and it's balanced.\n# will_it_fly([3], 5) \u279E True\n# # 3 is less than\
  \ the maximum possible weight, and it's balanced.\nsub will_it_fly {\n    my($q,\
  \ $w) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&will_it_fly;\n\
  \        if(eq_deeply($candidate->([3, 2, 3], 9),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], 5),\"\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3],\
  \ 5),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
  \ 2, 3], 1),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1, 2, 3], 6),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5], 5),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

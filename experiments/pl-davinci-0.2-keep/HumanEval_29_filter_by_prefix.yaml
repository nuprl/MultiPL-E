completions:
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { m/^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- "    my @result = grep { /^$prefix/ } @$strings;\n    return \\@result;\n}"
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered;\n    for my $string (@$strings) {\n        push @filtered, $string\
  \ if $string =~ /^\\Q$prefix/;\n    }\n    return @filtered;\n}"
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { substr($_, 0, length($prefix)) eq $prefix } @$strings;

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return @filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { m/^\Q$prefix\E/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { $_ =~ /^\Q$prefix/ } @$strings;

  }'
- '    return [grep {/^$prefix/} @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}"
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [ grep { /^$prefix/ } @$strings ];

  }'
- '    return [grep { /^\Q$prefix\E/ } @$strings];

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
- '    return grep { /^\Q$prefix\E/ } @$strings;

  }'
language: pl
name: HumanEval_29_filter_by_prefix
prompt: "# Filter an input list of strings only for ones that start with a given prefix.\n\
  # >>> filter_by_prefix([], 'a')\n# []\n# >>> filter_by_prefix(['abc', 'bcd', 'cde',\
  \ 'array'], 'a')\n# ['abc', 'array']\nsub filter_by_prefix {\n    my($strings, $prefix)\
  \ = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_by_prefix;\n\
  \        if(eq_deeply($candidate->([], \"john\"),[])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"xxx\", \"asd\"\
  , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"\
  xxx\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

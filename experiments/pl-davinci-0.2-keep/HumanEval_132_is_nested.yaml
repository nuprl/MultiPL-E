name: HumanEval_132_is_nested
language: humaneval_to_perl.py
prompt: "# Create a function that takes a string as input which contains only square\
  \ brackets.\n# The function should return True if and only if there is a valid subsequence\
  \ of brackets \n# where at least one bracket in the subsequence is nested.\n# is_nested('[[]]')\
  \ \u279E True\n# is_nested('[]]]]]]][[[[[]') \u279E False\n# is_nested('[][]') \u279E\
  \ False\n# is_nested('[]') \u279E False\n# is_nested('[[][]]') \u279E True\n# is_nested('[[]][[')\
  \ \u279E True\nsub is_nested {\n    my($string) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_nested;\n\
  \        if(eq_deeply($candidate->(\"[[]]\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"[]]]]]]][[[[[]\"\
  ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  [][]\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"[]\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"[[[[]]]]\"),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  []]]]]]]]]]\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->(\"[][][[]]\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"[[]\"\
  ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  []]\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(\"[[]][[\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"[[][]]\"),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"[[[[[[[[\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"]]]]]]]]\"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    for my $char (split //, $string) {\n      \
    \  if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    my $nested = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        if\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n        if ($count > 1) {\n           \
    \ $nested = 1;\n        }\n    }\n    return $count == 0 && $nested;\n}", "  \
    \  my $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n \
    \           $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    my $nested = 0;\n    my $last_char = '';\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \            if ($last_char eq '[') {\n                $nested++;\n          \
    \  }\n        }\n        elsif ($char eq ']') {\n            $count--;\n     \
    \   }\n        $last_char = $char;\n    }\n    return $count == 0 && $nested >\
    \ 0;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n      \
    \  if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n       \
    \     $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n \
    \   my $nested = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n       \
    \     $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n        if ($count > $nested) {\n            $nested = $count;\n \
    \       }\n    }\n    return $nested > 1;\n}", "    my $count = 0;\n    for my\
    \ $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my @stack;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            push @stack, $char;\n        }\n\
    \        elsif ($char eq ']') {\n            if (@stack) {\n                pop\
    \ @stack;\n            }\n            else {\n                return 0;\n    \
    \        }\n        }\n    }\n    return @stack ? 0 : 1;\n}", "    my @chars =\
    \ split //, $string;\n    my $count = 0;\n    for my $char (@chars) {\n      \
    \  if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        $count++ if\
    \ $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n    my $flag\
    \ = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string,\
    \ $i, 1) eq '[') {\n            $count++;\n        }\n        elsif(substr($string,\
    \ $i, 1) eq ']') {\n            $count--;\n        }\n        if($count < 0) {\n\
    \            $flag = 1;\n            last;\n        }\n    }\n    if($count ==\
    \ 0 && $flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n\
    \    }\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n    \
    \    if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    my $result = 0;\n    for my $i (0..length($string)-1)\
    \ {\n        my $char = substr($string, $i, 1);\n        if ($char eq '[') {\n\
    \            $count++;\n        } elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            $result = 1;\n        }\n \
    \   }\n    if ($count == 0 && $result == 1) {\n        return \"True\";\n    }\
    \ else {\n        return \"False\";\n    }\n}", "    my $count = 0;\n    for my\
    \ $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    my $flag = 0;\n    my @arr\
    \ = split('', $string);\n    for my $i (0..$#arr) {\n        if ($arr[$i] eq '[')\
    \ {\n            $count++;\n        } else {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            $flag = 1;\n            last;\n      \
    \  }\n    }\n    if ($count == 0 && $flag == 0) {\n        return 1;\n    } else\
    \ {\n        return 0;\n    }\n}", "    my $count = 0;\n    my $flag = 0;\n  \
    \  foreach my $char (split //, $string) {\n        if ($char eq '[') {\n     \
    \       $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            $flag = 1;\n            last;\n\
    \        }\n    }\n    if ($count == 0 && $flag == 0) {\n        return 1;\n \
    \   }\n    else {\n        return 0;\n    }\n}", "    my $count = 0;\n    my $result\
    \ = 0;\n    for my $char (split //, $string) {\n        $count++ if $char eq '[';\n\
    \        $count-- if $char eq ']';\n        $result = 1 if $count < 0;\n    }\n\
    \    return $result;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    my $nested = 0;\n    my $prev = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n            $prev = 1;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n          \
    \  if ($prev == 1) {\n                $nested = 1;\n            }\n          \
    \  $prev = 0;\n        }\n        if ($count < 0) {\n            return 0;\n \
    \       }\n    }\n    if ($count == 0 && $nested == 1) {\n        return 1;\n\
    \    }\n    return 0;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n       \
    \     $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my @brackets = split\
    \ //, $string;\n    my $open = 0;\n    my $close = 0;\n    for my $bracket (@brackets)\
    \ {\n        if ($bracket eq '[') {\n            $open++;\n        }\n       \
    \ elsif ($bracket eq ']') {\n            $close++;\n        }\n    }\n    if ($open\
    \ == $close) {\n        return False;\n    }\n    else {\n        return True;\n\
    \    }\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n    \
    \    $count++ if $char eq '[';\n        $count-- if $char eq ']';\n        return\
    \ 0 if $count < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n\
    \    my $result = 0;\n    my $len = length($string);\n    for(my $i = 0; $i <\
    \ $len; $i++) {\n        if(substr($string, $i, 1) eq '[') {\n            $count++;\n\
    \        }\n        elsif(substr($string, $i, 1) eq ']') {\n            $count--;\n\
    \        }\n        if($count < 0) {\n            $result = 1;\n            last;\n\
    \        }\n    }\n    return $result;\n}", "    my @stack;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            push @stack,\
    \ $char;\n        }\n        elsif ($char eq ']') {\n            if (@stack &&\
    \ $stack[-1] eq '[') {\n                pop @stack;\n            }\n         \
    \   else {\n                return 0;\n            }\n        }\n    }\n    return\
    \ @stack ? 0 : 1;\n}", "    my $count = 0;\n    my $flag = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            $flag = 1;\n            last;\n      \
    \  }\n    }\n    if ($count == 0 && $flag == 0) {\n        return 1;\n    }\n\
    \    else {\n        return 0;\n    }\n}", "    my $count = 0;\n    my $result\
    \ = 0;\n    my $nested = 0;\n    for my $char (split //, $string) {\n        if\
    \ ($char eq '[') {\n            $count++;\n        }\n        elsif ($char eq\
    \ ']') {\n            $count--;\n        }\n        if ($count < 0) {\n      \
    \      $result = 1;\n        }\n        if ($count > 0) {\n            $nested\
    \ = 1;\n        }\n    }\n    if ($result == 1 || $count != 0) {\n        return\
    \ 0;\n    }\n    else {\n        return $nested;\n    }\n}", "    my $count =\
    \ 0;\n    my $nested = 0;\n    for my $char (split //, $string) {\n        if\
    \ ($char eq '[') {\n            $count++;\n        }\n        elsif ($char eq\
    \ ']') {\n            $count--;\n        }\n        if ($count < 0) {\n      \
    \      return 0;\n        }\n        if ($count > 0) {\n            $nested =\
    \ 1;\n        }\n    }\n    return $nested;\n}", "    my $count = 0;\n    my $nested\
    \ = 0;\n    foreach my $char (split //, $string) {\n        if ($char eq '[')\
    \ {\n            $count++;\n        }\n        if ($char eq ']') {\n         \
    \   $count--;\n        }\n        if ($count < 0) {\n            return 0;\n \
    \       }\n        if ($count > 0) {\n            $nested = 1;\n        }\n  \
    \  }\n    return $nested;\n}", "    my $count = 0;\n    my $nested = 0;\n    my\
    \ $last_char = \"\";\n    for my $char (split //, $string) {\n        if($char\
    \ eq \"[\") {\n            $count++;\n            if($last_char eq \"[\") {\n\
    \                $nested++;\n            }\n        }\n        $last_char = $char;\n\
    \    }\n    return $count > 1 && $nested > 0;\n}", "    my $count = 0;\n    my\
    \ $flag = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n        if(substr($string,\
    \ $i, 1) eq '[') {\n            $count++;\n        }\n        elsif(substr($string,\
    \ $i, 1) eq ']') {\n            $count--;\n        }\n        if($count < 0) {\n\
    \            $flag = 1;\n            last;\n        }\n    }\n    if($count ==\
    \ 0 && $flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n\
    \    }\n}", "    my @stack;\n    for my $char (split //, $string) {\n        if\
    \ ($char eq '[') {\n            push @stack, $char;\n        }\n        elsif\
    \ ($char eq ']') {\n            if (@stack) {\n                pop @stack;\n \
    \           }\n            else {\n                return 0;\n            }\n\
    \        }\n    }\n    return @stack ? 0 : 1;\n}", "    my $count = 0;\n    for\
    \ my $char (split //, $string) {\n        $count++ if $char eq '[';\n        $count--\
    \ if $char eq ']';\n        return 0 if $count < 0;\n    }\n    return $count\
    \ == 0;\n}", "    my @stack;\n    for my $char (split //, $string) {\n       \
    \ if ($char eq '[') {\n            push @stack, $char;\n        }\n        elsif\
    \ ($char eq ']') {\n            if (@stack) {\n                pop @stack;\n \
    \           }\n            else {\n                return 0;\n            }\n\
    \        }\n    }\n    return @stack ? 0 : 1;\n}", "    my $count = 0;\n    for\
    \ my $char (split //, $string) {\n        $count++ if $char eq '[';\n        $count--\
    \ if $char eq ']';\n        return 0 if $count < 0;\n    }\n    return $count\
    \ == 0;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n   \
    \     if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n       \
    \     $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n \
    \   for my $char (split //, $string) {\n        if ($char eq '[') {\n        \
    \    $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}", "    my $count = 0;\n    my $nested = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n        if ($count\
    \ > 0) {\n            $nested = 1;\n        }\n    }\n    return $nested;\n}",
  "    my $count = 0;\n    my $len = length($string);\n    for(my $i = 0; $i < $len;\
    \ $i++) {\n        my $char = substr($string, $i, 1);\n        if($char eq '[')\
    \ {\n            $count++;\n        }\n        elsif($char eq ']') {\n       \
    \     $count--;\n        }\n        if($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count == 0;\n}", "    my $count = 0;\n    for my\
    \ $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my @arr = split('', $string);\n    my $count = 0;\n    for my $i (0..$#arr)\
    \ {\n        if ($arr[$i] eq '[') {\n            $count++;\n        }\n      \
    \  elsif ($arr[$i] eq ']') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 :\
    \ 1;\n}", "    my $count = 0;\n    my $nested = 0;\n    my $last = '';\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \            $last = $char;\n        } elsif ($char eq ']') {\n            $count--;\n\
    \            if ($last eq '[') {\n                $nested++;\n            }\n\
    \            $last = $char;\n        }\n    }\n    return $count == 0 && $nested\
    \ > 0;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n    \
    \    $count++ if $char eq '[';\n        $count-- if $char eq ']';\n        return\
    \ 0 if $count < 0;\n    }\n    return 1 if $count == 0;\n    return 0;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        $count++ if $char eq '[';\n \
    \       $count-- if $char eq ']';\n        return 0 if $count < 0;\n    }\n  \
    \  return $count == 0;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        } elsif ($char eq ']') {\n            $count--;\n   \
    \     }\n        return 0 if $count < 0;\n    }\n    return 1 if $count == 0;\n\
    \    return 0;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    my $is_nested = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n        if ($count > 1) {\n            $is_nested\
    \ = 1;\n        }\n    }\n    return $is_nested;\n}", "    my $count = 0;\n  \
    \  my $flag = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n \
    \           $count--;\n        }\n        if ($count < 0) {\n            $flag\
    \ = 1;\n            last;\n        }\n    }\n    return $count == 0 && $flag ==\
    \ 0;\n}", "    my @stack;\n    for my $char (split //, $string) {\n        if\
    \ ($char eq '[') {\n            push @stack, $char;\n        }\n        elsif\
    \ ($char eq ']') {\n            if (@stack) {\n                pop @stack;\n \
    \           }\n            else {\n                return 0;\n            }\n\
    \        }\n    }\n    return @stack ? 0 : 1;\n}", "    my $count = 0;\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $nested =\
    \ 0;\n    my $open = 0;\n    my $close = 0;\n    foreach my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $open++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $close++;\n        }\n        if ($open > 0 &&\
    \ $close > 0) {\n            $nested++;\n        }\n    }\n    if ($nested > 0)\
    \ {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}", "   \
    \ my $count = 0;\n    for my $char (split //, $string) {\n        $count++ if\
    \ $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n    my $result\
    \ = 0;\n    my $flag = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n\
    \        my $char = substr($string, $i, 1);\n        if($char eq '[') {\n    \
    \        $count++;\n        }\n        elsif($char eq ']') {\n            $count--;\n\
    \        }\n        if($count < 0) {\n            $flag = 1;\n        }\n    \
    \    if($count == 0 && $flag == 0) {\n            $result = 1;\n        }\n  \
    \  }\n    if($count == 0 && $result == 1) {\n        return 1;\n    }\n    else\
    \ {\n        return 0;\n    }\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ } elsif ($char eq ']') {\n            $count--;\n        }\n        return 0\
    \ if $count < 0;\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count =\
    \ 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n  \
    \          $count++;\n        } elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}", "    my @arr = split //, $string;\n    my $count = 0;\n  \
    \  for my $i (0..$#arr) {\n        if ($arr[$i] eq '[') {\n            $count++;\n\
    \        }\n        elsif ($arr[$i] eq ']') {\n            $count--;\n       \
    \ }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    my $nested = 0;\n    for my\
    \ $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n        if ($count\
    \ > 0) {\n            $nested = 1;\n        }\n    }\n    return $nested;\n}",
  "    my $count = 0;\n    for my $char (split //, $string) {\n        $count++ if\
    \ $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return 0 if $count;\n    return 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n  \
    \      if(substr($string, $i, 1) eq '[') {\n            $count++;\n        }\n\
    \        elsif(substr($string, $i, 1) eq ']') {\n            $count--;\n     \
    \   }\n        if($count < 0) {\n            return 0;\n        }\n    }\n   \
    \ return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        $count++ if $char eq '[';\n        $count-- if $char\
    \ eq ']';\n        return 0 if $count < 0;\n    }\n    return $count == 0;\n}",
  "    my @stack;\n    for my $char (split //, $string) {\n        if ($char eq '[')\
    \ {\n            push @stack, $char;\n        }\n        elsif ($char eq ']')\
    \ {\n            if (@stack) {\n                pop @stack;\n            }\n \
    \           else {\n                return 0;\n            }\n        }\n    }\n\
    \    return @stack ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        $count++ if $char eq '[';\n        $count-- if $char\
    \ eq ']';\n        return 0 if $count < 0;\n    }\n    return 1 if $count == 0;\n\
    \    return 0;\n}", "    my $count = 0;\n    my $nested = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n        if ($count\
    \ > 0) {\n            $nested = 1;\n        }\n    }\n    return $nested;\n}",
  "    my $count = 0;\n    my $flag = 0;\n    for my $char (split //, $string) {\n\
    \        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            $flag = 1;\n            last;\n        }\n    }\n    if ($count\
    \ == 0 && $flag == 0) {\n        return 1;\n    }\n    else {\n        return\
    \ 0;\n    }\n}", "    my $count = 0;\n    my $result = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            $result = 1;\n        }\n    }\n    if ($count\
    \ == 0 && $result == 1) {\n        return \"True\";\n    }\n    else {\n     \
    \   return \"False\";\n    }\n}\nprint is_nested('[[]]') . \"\\n\";\nprint is_nested('[]]]]]]][[[[[]')\
    \ . \"\\n\";\nprint is_nested('[][]') . \"\\n\";\nprint is_nested('[]') . \"\\\
    n\";\nprint is_nested('[[][]]') . \"\\n\";\nprint is_nested('[[]][[') . \"\\n\"\
    ;", "    my $count = 0;\n    my $nested = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        } elsif ($count > 0) {\n            $nested = 1;\n\
    \        }\n    }\n    return $nested;\n}", "    my $count = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    my $result = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        $result = 1 if $count <\
    \ 0;\n    }\n    return $result;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        $count++ if $char eq '[';\n        $count-- if $char\
    \ eq ']';\n        return 0 if $count < 0;\n    }\n    return $count == 0;\n}",
  "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n \
    \           $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my @stack;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            push @stack, $char;\n\
    \        }\n        elsif ($char eq ']') {\n            if (@stack) {\n      \
    \          pop @stack;\n            }\n            else {\n                return\
    \ 0;\n            }\n        }\n    }\n    return @stack ? 0 : 1;\n}", "    my\
    \ $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq '[')\
    \ {\n            $count++;\n        }\n        elsif ($char eq ']') {\n      \
    \      $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n \
    \   my $nested = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n        if ($count > 1) {\n            $nested = 1;\n       \
    \ }\n    }\n    return $count == 0 && $nested;\n}", "    my $count = 0;\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        $count++\
    \ if $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        return 0 if $count < 0;\n    }\n    return 0 if $count != 0;\n    return\
    \ 1;\n}", "    my @stack;\n    my $result = 0;\n    my $len = length($string);\n\
    \    for (my $i = 0; $i < $len; $i++) {\n        my $char = substr($string, $i,\
    \ 1);\n        if ($char eq '[') {\n            push(@stack, $char);\n       \
    \ } elsif ($char eq ']') {\n            if (scalar(@stack) > 0) {\n          \
    \      pop(@stack);\n                $result = 1;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my $count = 0;\n    my $nested = 0;\n  \
    \  for(my $i = 0; $i < length($string); $i++){\n        if(substr($string, $i,\
    \ 1) eq '['){\n            $count++;\n        }\n        elsif(substr($string,\
    \ $i, 1) eq ']'){\n            $count--;\n        }\n        if($count < 0){\n\
    \            return 0;\n        }\n        if($count > $nested){\n           \
    \ $nested = $count;\n        }\n    }\n    if($count == 0 && $nested > 1){\n \
    \       return 1;\n    }\n    return 0;\n}", "    my $count = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my @arr = split //, $string;\n    my $count =\
    \ 0;\n    for my $i (0..$#arr) {\n        if ($arr[$i] eq '[') {\n           \
    \ $count++;\n        }\n        elsif ($arr[$i] eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    my $result = 0;\n    foreach my $char (split //,\
    \ $string) {\n        if ($char eq '[') {\n            $count++;\n        } elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            $result = 1;\n        }\n    }\n    if ($count == 0 && $result\
    \ == 0) {\n        return 'True';\n    } else {\n        return 'False';\n   \
    \ }\n}", "    my $count = 0;\n    my $flag = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            $flag = 1;\n            last;\n        }\n    }\n    if ($count\
    \ == 0 && $flag == 0) {\n        return 1;\n    }\n    else {\n        return\
    \ 0;\n    }\n}", "    my $count = 0;\n    my $is_nested = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n        if ($count\
    \ > 0) {\n            $is_nested = 1;\n        }\n    }\n    return $is_nested;\n\
    }", "    my $count = 0;\n    my $nested = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n        if ($count > 0) {\n           \
    \ $nested = 1;\n        }\n    }\n    return $nested;\n}", "    my $nested = 0;\n\
    \    my $open = 0;\n    my $close = 0;\n    for my $char (split //, $string) {\n\
    \        if ($char eq '[') {\n            $open++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $close++;\n        }\n        if ($open > 0 && $close\
    \ > 0) {\n            $nested++;\n        }\n    }\n    return $nested > 0;\n}",
  "    my $count = 0;\n    my $nested = 0;\n    my $result = 0;\n    my @array = split\
    \ //, $string;\n    foreach my $char (@array) {\n        if ($char eq '[') {\n\
    \            $count++;\n        }\n        elsif ($char eq ']') {\n          \
    \  $count--;\n        }\n        if ($count < 0) {\n            $result = 1;\n\
    \        }\n        if ($count > $nested) {\n            $nested = $count;\n \
    \       }\n    }\n    if ($count == 0 && $nested > 1 && $result == 0) {\n    \
    \    return 1;\n    }\n    else {\n        return 0;\n    }\n}", "    my $count\
    \ = 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n\
    \            $count++;\n        } elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        return 0 if $count < 0;\n    }\n    return 1 if $count ==\
    \ 0;\n    return 0;\n}", "    my @brackets = split(//, $string);\n    my $count\
    \ = 0;\n    for my $bracket (@brackets) {\n        if ($bracket eq '[') {\n  \
    \          $count++;\n        }\n        elsif ($bracket eq ']') {\n         \
    \   $count--;\n        }\n        if ($count < 0) {\n            return 0;\n \
    \       }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n  \
    \  for my $char (split //, $string) {\n        if ($char eq '[') {\n         \
    \   $count++;\n        } elsif ($char eq ']') {\n            $count--;\n     \
    \   }\n        return 0 if $count < 0;\n    }\n    return $count == 0;\n}", " \
    \   my $counter = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $counter++;\n        }\n        elsif ($char eq ']')\
    \ {\n            $counter--;\n        }\n        if ($counter < 0) {\n       \
    \     return 0;\n        }\n    }\n    return $counter > 0 ? 0 : 1;\n}", "   \
    \ my $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        } elsif ($char eq ']') {\n          \
    \  $count--;\n        }\n        return 1 if $count < 0;\n    }\n    return 0;\n\
    }", "    my @chars = split //, $string;\n    my $count = 0;\n    for my $char\
    \ (@chars) {\n        $count++ if $char eq '[';\n        $count-- if $char eq\
    \ ']';\n        return 0 if $count < 0;\n    }\n    return 1 if $count == 0;\n\
    \    return 0;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n  \
    \      if(substr($string, $i, 1) eq '[') {\n            $count++;\n        } else\
    \ {\n            $count--;\n        }\n        if($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $nested =\
    \ 0;\n    my $open = 0;\n    my $close = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $open++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $close++;\n        }\n        if ($open < $close)\
    \ {\n            return 0;\n        }\n        if ($open > $close) {\n       \
    \     $nested = 1;\n        }\n    }\n    return $nested;\n}", "    my $count\
    \ = 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n\
    \            $count++;\n        }\n        elsif ($char eq ']') {\n          \
    \  $count--;\n        }\n        if ($count < 0) {\n            return 0;\n  \
    \      }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n   \
    \ my $nested = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n \
    \           $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n        if ($count > 0) {\n            $nested = 1;\n       \
    \ }\n    }\n    return $nested;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        return 0 if $count < 0;\n\
    \    }\n    return 0 if $count != 0;\n    return 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        } elsif ($char eq ']') {\n            $count--;\n   \
    \     }\n        return 0 if $count < 0;\n    }\n    return $count == 0;\n}",
  "    my $nested = 0;\n    my $open = 0;\n    my $close = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $open++;\n        }\n\
    \        elsif ($char eq ']') {\n            $close++;\n        }\n        if\
    \ ($open > 0 && $close > 0) {\n            $nested++;\n        }\n    }\n    if\
    \ ($nested > 0) {\n        return 1;\n    }\n    else {\n        return 0;\n \
    \   }\n}", "    my @stack;\n    for my $char (split //, $string) {\n        if\
    \ ($char eq '[') {\n            push @stack, $char;\n        }\n        elsif\
    \ ($char eq ']') {\n            if (scalar @stack == 0) {\n                return\
    \ 0;\n            }\n            else {\n                pop @stack;\n       \
    \     }\n        }\n    }\n    return scalar @stack == 0;\n}", "    my $count\
    \ = 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n\
    \            $count++;\n        }\n        elsif ($char eq ']') {\n          \
    \  $count--;\n        }\n        if ($count < 0) {\n            return 0;\n  \
    \      }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n   \
    \ for my $char (split //, $string) {\n        if ($char eq '[') {\n          \
    \  $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ } elsif ($char eq ']') {\n            $count--;\n        }\n        return 0\
    \ if $count < 0;\n    }\n    return 1 if $count == 0;\n    return 0;\n}", "  \
    \  my $count = 0;\n    my $flag = 0;\n    for(my $i = 0; $i < length($string);\
    \ $i++) {\n        if(substr($string, $i, 1) eq '[') {\n            $count++;\n\
    \        }\n        elsif(substr($string, $i, 1) eq ']') {\n            $count--;\n\
    \        }\n        if($count < 0) {\n            $flag = 1;\n            last;\n\
    \        }\n    }\n    if($count == 0 && $flag == 0) {\n        return 1;\n  \
    \  }\n    else {\n        return 0;\n    }\n}", "    my $count = 0;\n    for my\
    \ $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        $count++\
    \ if $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n    for my $char\
    \ (split //, $string) {\n        $count++ if $char eq '[';\n        $count-- if\
    \ $char eq ']';\n        return 0 if $count < 0;\n    }\n    return $count ==\
    \ 0;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n      \
    \  if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n       \
    \     $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my @stack;\n    for\
    \ my $c (split //, $string) {\n        if ($c eq '[') {\n            push @stack,\
    \ $c;\n        } elsif ($c eq ']') {\n            if (@stack && $stack[-1] eq\
    \ '[') {\n                pop @stack;\n            } else {\n                return\
    \ 0;\n            }\n        }\n    }\n    return @stack ? 0 : 1;\n}", "    my\
    \ $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq '[')\
    \ {\n            $count++;\n        }\n        elsif ($char eq ']') {\n      \
    \      $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my @stack;\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            push\
    \ @stack, $char;\n        }\n        elsif ($char eq ']') {\n            if (@stack)\
    \ {\n                pop @stack;\n            }\n            else {\n        \
    \        return 0;\n            }\n        }\n    }\n    return @stack ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my @arr = split(//,\
    \ $string);\n    my $count = 0;\n    for my $i (0..$#arr) {\n        if ($arr[$i]\
    \ eq '[') {\n            $count++;\n        }\n        if ($arr[$i] eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    if ($count == 0) {\n        return 1;\n    }\n   \
    \ return 0;\n}", "    my $count = 0;\n    my $nested = 0;\n    for(my $i = 0;\
    \ $i < length($string); $i++){\n        if(substr($string, $i, 1) eq '['){\n \
    \           $count++;\n        }\n        elsif(substr($string, $i, 1) eq ']'){\n\
    \            $count--;\n        }\n        if($count < 0){\n            return\
    \ 0;\n        }\n        if($count > 1){\n            $nested = 1;\n        }\n\
    \    }\n    if($count == 0 && $nested == 1){\n        return 1;\n    }\n    else{\n\
    \        return 0;\n    }\n}", "    my $count = 0;\n    for my $char (split //,\
    \ $string) {\n        if ($char eq '[') {\n            $count++;\n        }\n\
    \        elsif ($char eq ']') {\n            $count--;\n        }\n        if\
    \ ($count < 0) {\n            return 0;\n        }\n    }\n    return $count >\
    \ 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n\
    \        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my @arr = split\
    \ //, $string;\n    my $count = 0;\n    for my $i (@arr) {\n        if ($i eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($i eq ']') {\n    \
    \        $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count == 0;\n}", "    my $nesting = 0;\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $nesting++;\n\
    \        } elsif ($char eq ']') {\n            $nesting--;\n        }\n      \
    \  return 0 if $nesting < 0;\n    }\n    return 1 if $nesting > 0;\n    return\
    \ 0;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n      \
    \  $count++ if $char eq '[';\n        $count-- if $char eq ']';\n        return\
    \ 0 if $count < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ } elsif ($char eq ']') {\n            $count--;\n        }\n        return 0\
    \ if $count < 0;\n    }\n    return 1 if $count == 0;\n    return 0;\n}", "  \
    \  my $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n \
    \           $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    my $nested = 0;\n\
    \    for my $c (split //, $string) {\n        if ($c eq '[') {\n            $count++;\n\
    \        }\n        elsif ($c eq ']') {\n            $count--;\n        }\n  \
    \      if ($count < 0) {\n            return 0;\n        }\n        if ($count\
    \ > 0) {\n            $nested = 1;\n        }\n    }\n    return $nested;\n}",
  "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        } elsif ($char eq ']') {\n          \
    \  $count--;\n        }\n        return 1 if $count < 0;\n    }\n    return 0;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        } elsif ($char eq ']') {\n            $count--;\n   \
    \     }\n        return 0 if $count < 0;\n    }\n    return 1 if $count == 0;\n\
    \    return 0;\n}", "    my $count = 0;\n    my $nested = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        } elsif ($char eq ']') {\n            $count--;\n        }\n        if\
    \ ($count < 0) {\n            return 0;\n        }\n        if ($count > 1) {\n\
    \            $nested = 1;\n        }\n    }\n    return $count == 0 && $nested;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count != 0 ? 0 : 1;\n}", "    my $count =\
    \ 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n  \
    \          $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}", "    my @stack;\n    for my $char (split //, $string) {\n\
    \        if ($char eq '[') {\n            push @stack, $char;\n        }\n   \
    \     elsif ($char eq ']') {\n            if (@stack && $stack[-1] eq '[') {\n\
    \                pop @stack;\n            }\n            else {\n            \
    \    return 0;\n            }\n        }\n    }\n    return @stack ? 0 : 1;\n}",
  "    my @chars = split //, $string;\n    my $count = 0;\n    for my $char (@chars)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    my $result = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n       \
    \     $count--;\n        }\n        if ($count < 0) {\n            $result = 1;\n\
    \        }\n    }\n    return $result;\n}", "    my $count = 0;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    my $nested = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n        if ($count > $nested) {\n            $nested\
    \ = $count;\n        }\n    }\n    return $nested > 1;\n}", "    my @stack;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     push @stack, $char;\n        }\n        elsif ($char eq ']') {\n       \
    \     if (scalar @stack == 0) {\n                return 0;\n            }\n  \
    \          pop @stack;\n        }\n    }\n    return scalar @stack > 0;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count != 0 ? 0 : 1;\n}", "    my $nested = 0;\n    for my $c (split\
    \ //, $string) {\n        if ($c eq '[') {\n            $nested++;\n        }\n\
    \        elsif ($c eq ']') {\n            $nested--;\n        }\n        if ($nested\
    \ < 0) {\n            return 0;\n        }\n    }\n    return $nested > 0;\n}",
  "    my $count = 0;\n    my $nested = 0;\n    for my $char (split //, $string) {\n\
    \        if ($char eq '[') {\n            $count++;\n        } elsif ($char eq\
    \ ']') {\n            $count--;\n        }\n        if ($count < 0) {\n      \
    \      return 0;\n        }\n        if ($count > $nested) {\n            $nested\
    \ = $count;\n        }\n    }\n    return $nested > 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        } elsif ($char eq ']') {\n            $count--;\n   \
    \     }\n        return 0 if $count < 0;\n    }\n    return $count == 0;\n}",
  "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char eq\
    \ '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n \
    \           $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    my $result = 0;\n    my $nested = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            $result = 1;\n        }\n        if ($count > 0) {\n        \
    \    $nested = 1;\n        }\n    }\n    if ($count == 0 && $result == 0 && $nested\
    \ == 1) {\n        return \"True\";\n    }\n    else {\n        return \"False\"\
    ;\n    }\n}", "    my $count = 0;\n    my $flag = 0;\n    for(my $i = 0; $i <\
    \ length($string); $i++) {\n        if(substr($string, $i, 1) eq '[') {\n    \
    \        $count++;\n        }\n        elsif(substr($string, $i, 1) eq ']') {\n\
    \            $count--;\n        }\n        if($count < 0) {\n            $flag\
    \ = 1;\n            last;\n        }\n    }\n    if($count == 0 && $flag == 0)\
    \ {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}", "   \
    \ my $count = 0;\n    my $result = 0;\n    my $last_char = '';\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count == 0 && $last_char eq '[') {\n            $result = 1;\n \
    \       }\n        $last_char = $char;\n    }\n    return $result;\n}", "    my\
    \ $count = 0;\n    my $result = 0;\n    for my $char (split //, $string) {\n \
    \       if ($char eq '[') {\n            $count++;\n        }\n        elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         $result = 1;\n        }\n    }\n    if ($count == 0 && $result == 1)\
    \ {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}", "   \
    \ my $count = 0;\n    for my $char (split //, $string) {\n        $count++ if\
    \ $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return $count == 0;\n}", "    my $count = 0;\n    my $nested\
    \ = 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n\
    \            $count++;\n        } elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    \
    \    if ($count > 1) {\n            $nested = 1;\n        }\n    }\n    return\
    \ $count == 0 && $nested;\n}", "    my $count = 0;\n    for my $char (split //,\
    \ $string) {\n        $count++ if $char eq '[';\n        $count-- if $char eq\
    \ ']';\n        return 0 if $count < 0;\n    }\n    return 1 if $count == 0;\n\
    \    return 0;\n}", "    my @stack;\n    for my $char (split //, $string) {\n\
    \        if ($char eq '[') {\n            push @stack, $char;\n        }\n   \
    \     elsif ($char eq ']') {\n            if (@stack) {\n                pop @stack;\n\
    \            }\n            else {\n                return 0;\n            }\n\
    \        }\n    }\n    return @stack ? 0 : 1;\n}", "    my $count = 0;\n    for\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n    }\n    return\
    \ $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    my $is_nested = 0;\n    foreach\
    \ my $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        } elsif ($char eq ']') {\n            $count--;\n        }\n        if\
    \ ($count < 0) {\n            $is_nested = 1;\n        }\n    }\n    return $is_nested;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count != 0 ? 0 : 1;\n}", "    my $count =\
    \ 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n  \
    \          $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ } elsif ($char eq ']') {\n            $count--;\n        }\n        return 0\
    \ if $count < 0;\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count =\
    \ 0;\n    for my $char (split //, $string) {\n        if ($char eq '[') {\n  \
    \          $count++;\n        } elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        return 0 if $count < 0;\n    }\n    return $count > 0 ? 0\
    \ : 1;\n}", "    my $count = 0;\n    for my $char (split //, $string) {\n    \
    \    if ($char eq '[') {\n            $count++;\n        } elsif ($char eq ']')\
    \ {\n            $count--;\n        }\n        return 0 if $count < 0;\n    }\n\
    \    return $count == 0;\n}", "    my $count = 0;\n    for my $char (split //,\
    \ $string) {\n        $count++ if $char eq '[';\n        $count-- if $char eq\
    \ ']';\n        return 0 if $count < 0;\n    }\n    return $count == 0;\n}", " \
    \   my $count = 0;\n    for my $char (split //, $string) {\n        $count++ if\
    \ $char eq '[';\n        $count-- if $char eq ']';\n        return 0 if $count\
    \ < 0;\n    }\n    return $count == 0;\n}", "    my @stack;\n    for my $char\
    \ (split //, $string) {\n        if ($char eq '[') {\n            push @stack,\
    \ $char;\n        }\n        elsif ($char eq ']') {\n            if (scalar @stack\
    \ == 0) {\n                return 0;\n            }\n            else {\n    \
    \            pop @stack;\n            }\n        }\n    }\n    return scalar @stack\
    \ > 0 ? 1 : 0;\n}", "    my $count = 0;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            $count++;\n        }\n        elsif\
    \ ($char eq ']') {\n            $count--;\n        }\n        if ($count < 0)\
    \ {\n            return 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n\
    }", "    my $count = 0;\n    my $nested = 0;\n    for my $char (split(//, $string))\
    \ {\n        if ($char eq '[') {\n            $count++;\n        } elsif ($char\
    \ eq ']') {\n            $count--;\n        }\n        if ($count < 0) {\n   \
    \         return 0;\n        }\n        if ($count > 1) {\n            $nested\
    \ = 1;\n        }\n    }\n    return $count == 0 && $nested;\n}", "    my $count\
    \ = 0;\n    my $flag = 0;\n    for(my $i = 0; $i < length($string); $i++) {\n\
    \        if(substr($string, $i, 1) eq '[') {\n            $count++;\n        }\n\
    \        if(substr($string, $i, 1) eq ']') {\n            $count--;\n        }\n\
    \        if($count < 0) {\n            $flag = 1;\n        }\n    }\n    if($count\
    \ == 0 && $flag == 0) {\n        return 1;\n    }\n    else {\n        return\
    \ 0;\n    }\n}", "    my $count = 0;\n    my $result = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            $result = 1;\n        }\n    }\n    if ($count\
    \ == 0 && $result == 1) {\n        return \"True\";\n    }\n    else {\n     \
    \   return \"False\";\n    }\n}\nprint is_nested('[[]]');\nprint \"\\n\";\nprint\
    \ is_nested('[]]]]]]][[[[[]');\nprint \"\\n\";\nprint is_nested('[][]');\nprint\
    \ \"\\n\";\nprint is_nested('[]');\nprint \"\\n\";\nprint is_nested('[[][]]');\n\
    print \"\\n\";\nprint is_nested('[[]][[');\nprint \"\\n\";", "    my $count =\
    \ 0;\n    my $flag = 0;\n    foreach my $char (split //, $string) {\n        if\
    \ ($char eq '[') {\n            $count++;\n        } elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            $flag\
    \ = 1;\n        }\n    }\n    if ($count == 0 && $flag == 0) {\n        return\
    \ 1;\n    } else {\n        return 0;\n    }\n}", "    my @chars = split //, $string;\n\
    \    my $count = 0;\n    foreach my $char (@chars) {\n        if ($char eq '[')\
    \ {\n            $count++;\n        }\n        elsif ($char eq ']') {\n      \
    \      $count--;\n        }\n        if ($count < 0) {\n            return 0;\n\
    \        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my @stack;\n    my\
    \ $is_nested = 0;\n    my $is_valid = 1;\n    for my $char (split //, $string)\
    \ {\n        if ($char eq '[') {\n            push @stack, $char;\n        } elsif\
    \ ($char eq ']') {\n            if (@stack) {\n                pop @stack;\n \
    \               $is_nested = 1;\n            } else {\n                $is_valid\
    \ = 0;\n                last;\n            }\n        }\n    }\n    return $is_valid\
    \ && $is_nested;\n}", "    my $count = 0;\n    my $is_nested = 0;\n    for my\
    \ $char (split //, $string) {\n        if ($char eq '[') {\n            $count++;\n\
    \        }\n        elsif ($char eq ']') {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return 0;\n        }\n        if ($count\
    \ > 0) {\n            $is_nested = 1;\n        }\n    }\n    return $is_nested;\n\
    }", "    my $count = 0;\n    for my $char (split //, $string) {\n        if ($char\
    \ eq '[') {\n            $count++;\n        }\n        elsif ($char eq ']') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ 0;\n        }\n    }\n    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n\
    \    for my $char (split //, $string) {\n        if ($char eq '[') {\n       \
    \     $count++;\n        }\n        elsif ($char eq ']') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return 0;\n        }\n    }\n\
    \    return $count > 0 ? 0 : 1;\n}", "    my $count = 0;\n    for my $char (split\
    \ //, $string) {\n        if ($char eq '[') {\n            $count++;\n       \
    \ }\n        elsif ($char eq ']') {\n            $count--;\n        }\n      \
    \  if ($count < 0) {\n            return 0;\n        }\n    }\n    return $count\
    \ > 0 ? 0 : 1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

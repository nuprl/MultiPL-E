name: HumanEval_110_exchange
language: humaneval_to_perl.py
prompt: "# In this problem, you will implement a function that takes two lists of\
  \ numbers,\n# and determines whether it is possible to perform an exchange of elements\n\
  # between them to make lst1 a list of only even numbers.\n# There is no limit on\
  \ the number of exchanged elements between lst1 and lst2.\n# If it is possible to\
  \ exchange elements between the lst1 and lst2 to make\n# all the elements of lst1\
  \ to be even, return \"YES\".\n# Otherwise, return \"NO\".\n# For example:\n# exchange([1,\
  \ 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n# exchange([1, 2, 3, 4], [1, 5, 3, 4]) =>\
  \ \"NO\"\n# It is assumed that the input lists will be non-empty.\nsub exchange\
  \ {\n    my($lst1, $lst2) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&exchange;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4], [1, 2, 3, 4]),\"YES\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4], [1, 5, 3, 4]),\"NO\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4], [2, 1, 4, 3]),\"\
  YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 7, 3], [2, 6, 4]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([5, 7, 3], [2, 6, 3]),\"NO\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
  \ 2, 6, 1, 8, 9], [3, 5, 5, 1, 1, 1]),\"NO\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([100, 200], [200,\
  \ 200]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"
completions: ["    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1) {\n\
    \        if ($i % 2 == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    foreach my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even > $odd) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $evens = 0;\n\
    \    my $odds = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n   \
    \         $evens++;\n        } else {\n            $odds++;\n        }\n    }\n\
    \    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens > $odds)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even_count = 0;\n    my $odd_count = 0;\n    for my $i (@$lst1) {\n   \
    \     if ($i % 2 == 0) {\n            $even_count++;\n        } else {\n     \
    \       $odd_count++;\n        }\n    }\n    for my $i (@$lst2) {\n        if\
    \ ($i % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n \
    \   my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            $lst1_odd = 1;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even = 1;\n      \
    \  }\n    }\n    if ($lst1_odd == 1 && $lst2_even == 1) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n \
    \   my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even++;\n        }\n\
    \    }\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $odd_count\
    \ = 0;\n    my $even_count = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count % 2 == 0) {\n        return \"YES\";\n\
    \    } else {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n \
    \   my $odd_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = grep {\
    \ $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_even = 0;\n \
    \   my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    for\
    \ my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even++;\n  \
    \      } else {\n            $lst1_odd++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n        } else {\n\
    \            $lst2_odd++;\n        }\n    }\n    if ($lst1_even == 0) {\n    \
    \    return \"NO\";\n    }\n    if ($lst1_odd == 0) {\n        return \"YES\"\
    ;\n    }\n    if ($lst1_even == $lst2_odd) {\n        return \"YES\";\n    }\n\
    \    return \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my\
    \ $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    foreach my $i (@$lst2) {\n   \
    \     if ($i % 2 == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n    \
    \    return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (@$lst1) {\n        $lst1_even++\
    \ if $i % 2 == 0;\n    }\n    for my $i (@$lst2) {\n        $lst2_even++ if $i\
    \ % 2 == 0;\n    }\n    return $lst1_even == @$lst1 || $lst2_even == @$lst2 ?\
    \ \"YES\" : \"NO\";\n}", "    my $evens = 0;\n    my $odds = 0;\n    for my $i\
    \ (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $evens++;\n        } else\
    \ {\n            $odds++;\n        }\n    }\n    return $evens >= $odds ? \"YES\"\
    \ : \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $odd_count =\
    \ 0;\n    my $even_count = 0;\n    my $odd_index = 0;\n    my $even_index = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $temp = 0;\n    my $flag = 0;\n    my\
    \ $result = \"NO\";\n    my @odd_indexes = ();\n    my @even_indexes = ();\n \
    \   for ($i = 0; $i < scalar(@$lst1); $i++) {\n        if ($lst1->[$i] % 2 ==\
    \ 0) {\n            $even_count++;\n            $even_index = $i;\n          \
    \  push(@even_indexes, $even_index);\n        } else {\n            $odd_count++;\n\
    \            $odd_index = $i;\n            push(@odd_indexes, $odd_index);\n \
    \       }\n    }\n    if ($even_count == scalar(@$lst1)) {\n        $result =\
    \ \"YES\";\n    } else {\n        for ($i = 0; $i < scalar(@odd_indexes); $i++)\
    \ {\n            for ($j = 0; $j < scalar(@$lst2); $j++) {\n                if\
    \ ($lst2->[$j] % 2 == 0) {\n                    $temp = $lst1->[$odd_indexes[$i]];\n\
    \                    $lst1->[$odd_indexes[$i]] = $lst2->[$j];\n              \
    \      $lst2->[$j] = $temp;\n                    $flag = 1;\n                \
    \    last;\n                }\n            }\n            if ($flag == 0) {\n\
    \                last;\n            }\n        }\n        if ($flag == 1) {\n\
    \            $result = \"YES\";\n        }\n    }\n    return $result;\n}", " \
    \   my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { !($_ %\
    \ 2) } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", " \
    \   my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n\
    \        if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n        }\n \
    \   }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n   \
    \         $lst2_even++;\n        }\n    }\n    if ($lst1_even == $#$lst1 + 1)\
    \ {\n        return \"YES\";\n    }\n    if ($lst2_even == $#$lst2 + 1) {\n  \
    \      return \"YES\";\n    }\n    if ($lst1_even + $lst2_even >= $#$lst1 + 1)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $odd_count\
    \ = 0;\n    my $even_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count % 2 == 0) {\n        return \"YES\";\n\
    \    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = grep { $_\
    \ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_even = 0;\n \
    \   my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        $lst1_even++ if\
    \ $lst1->[$i] % 2 == 0;\n    }\n    for my $i (0..$#$lst2) {\n        $lst2_even++\
    \ if $lst2->[$i] % 2 == 0;\n    }\n    return \"YES\" if $lst1_even >= $#$lst1\
    \ + 1 - $lst2_even;\n    return \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even\
    \ = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n  \
    \          $lst1_odd = 1;\n        }\n    }\n    for my $i (0..$#$lst2) {\n  \
    \      if ($lst2->[$i] % 2 == 0) {\n            $lst2_even = 1;\n        }\n \
    \   }\n    if ($lst1_odd && $lst2_even) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $count = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 1) {\n            for my $j (0..$#$lst2) {\n\
    \                if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i]\
    \ = $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n           \
    \         $count++;\n                    last;\n                }\n          \
    \  }\n        }\n    }\n    return $count == 0 ? \"YES\" : \"NO\";\n}", "    my\
    \ $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n    \
    \    if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n        }\n    }\n\
    \    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n         \
    \   $lst2_even++;\n        }\n    }\n    return $lst1_even == $#$lst1 || $lst2_even\
    \ == $#$lst2 ? 'YES' : 'NO';\n}", "    my $count = 0;\n    my $count2 = 0;\n \
    \   my $count3 = 0;\n    my $count4 = 0;\n    my $count5 = 0;\n    my $count6\
    \ = 0;\n    my $count7 = 0;\n    my $count8 = 0;\n    my $count9 = 0;\n    my\
    \ $count10 = 0;\n    my $count11 = 0;\n    my $count12 = 0;\n    my $count13 =\
    \ 0;\n    my $count14 = 0;\n    my $count15 = 0;\n    my $count16 = 0;\n    my\
    \ $count17 = 0;\n    my $count18 = 0;\n    my $count19 = 0;\n    my $count20 =\
    \ 0;\n    my $count21 = 0;\n    my $count22 = 0;\n    my $count23 = 0;\n    my\
    \ $count24 = 0;\n    my $count25 = 0;\n    my $count26 = 0;\n    my $count27 =\
    \ 0;\n    my $count28 = 0;\n    my $count29 = 0;\n    my $count30 = 0;\n    my\
    \ $count31 = 0;\n    my $count32 = 0;\n    my $count33 = 0;\n    my $count34 =\
    \ 0;\n    my $count35 = 0;\n    my $count36 = 0;\n    my $count37 = 0;\n    my\
    \ $count38 = 0;\n    my $count39 = 0;\n    my $count40 = 0;\n    my $count41 =\
    \ 0;\n    my $count42 = 0;\n    my $count43 = 0;\n    my $count44 = 0;\n    my\
    \ $count45 = 0;\n    my $count46 = 0;\n    my $count47 = 0;\n    my $count48 =\
    \ 0;\n    my $count49 = 0;\n    my $count50 = 0;\n    my $count51 = 0;\n    my\
    \ $count52 = 0;\n    my $count53 = 0;\n    my $count54 = 0;\n    my $count55 =\
    \ 0;\n    my $count56 = 0;\n    my $count57 = 0;", "    my $even = 0;\n    my\
    \ $odd = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n  \
    \          $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    foreach my $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 ==\
    \ 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n\
    }", "    my $odd_count = 0;\n    my $even_count = 0;\n    foreach my $num (@$lst1)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n\
    \        if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n        }\n \
    \   }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n   \
    \         $lst2_even++;\n        }\n    }\n    if ($lst1_even == $#$lst1 + 1)\
    \ {\n        return \"YES\";\n    }\n    elsif ($lst2_even == $#$lst2 + 1) {\n\
    \        return \"YES\";\n    }\n    elsif ($lst1_even + $lst2_even == $#$lst1\
    \ + $#$lst2 + 2) {\n        return \"YES\";\n    }\n    else {\n        return\
    \ \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $even_count = 0;\n    my $odd_count = 0;\n    for my $num (@$lst1) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    for my $num (@$lst2) {\n   \
    \     if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n   \
    \         $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $odd_count = 0;\n    my $even_count = 0;\n    foreach my $num (@$lst1)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    if ($even_count % 2 == 0\
    \ && $odd_count % 2 == 0) {\n        return \"YES\";\n    }\n    return \"NO\"\
    ;\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n        }\n\
    \    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n  \
    \          $lst2_even++;\n        }\n    }\n    if ($lst1_even == $#$lst1 + 1)\
    \ {\n        return \"YES\";\n    }\n    if ($lst2_even == $#$lst2 + 1) {\n  \
    \      return \"YES\";\n    }\n    if ($lst1_even + $lst2_even >= $#$lst1 + 1)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n    \
    \        $even_count++;\n        } else {\n            $odd_count++;\n       \
    \ }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\";\n   \
    \ } else {\n        return \"NO\";\n    }\n}", "    my $lst1_even = 0;\n    my\
    \ $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach my\
    \ $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $lst1_even++;\n \
    \       } else {\n            $lst1_odd++;\n        }\n    }\n    foreach my $num\
    \ (@$lst2) {\n        if ($num % 2 == 0) {\n            $lst2_even++;\n      \
    \  } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even ==\
    \ scalar(@$lst1) || $lst2_even == scalar(@$lst2)) {\n        return \"YES\";\n\
    \    }\n    if ($lst1_even > $lst2_odd && $lst2_even > $lst1_odd) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even\
    \ = 0;\n    foreach my $n (@$lst1) {\n        $lst1_odd++ if $n % 2;\n    }\n\
    \    foreach my $n (@$lst2) {\n        $lst2_even++ if !($n % 2);\n    }\n   \
    \ return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $count = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2 == 1) {\n            $count++;\n\
    \        }\n    }\n    my $count2 = 0;\n    foreach my $i (@$lst2) {\n       \
    \ if ($i % 2 == 0) {\n            $count2++;\n        }\n    }\n    if ($count\
    \ == $count2) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even =\
    \ grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" :\
    \ \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    foreach my\
    \ $num (@$lst1) {\n        if ($num % 2 == 1) {\n            $lst1_odd = 1;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd && $lst2_even)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ $even > $odd ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n\
    \    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my\
    \ $lst2_even = grep { !($_ % 2) } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $exchange = 0;\n    my $i = 0;\n    my $j =\
    \ 0;\n    while ($i < scalar(@$lst1)) {\n        if ($lst1->[$i] % 2 == 1) {\n\
    \            while ($j < scalar(@$lst2)) {\n                if ($lst2->[$j] %\
    \ 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n                \
    \    $lst2->[$j] = $lst1->[$i];\n                    $exchange = 1;\n        \
    \            last;\n                }\n                $j++;\n            }\n\
    \        }\n        $i++;\n    }\n    if ($exchange == 1) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = grep\
    \ { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_even = 0;\n \
    \   my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    for\
    \ my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even++;\n  \
    \      } else {\n            $lst1_odd++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n        } else {\n\
    \            $lst2_odd++;\n        }\n    }\n    if ($lst1_even == @$lst1) {\n\
    \        return \"YES\";\n    }\n    if ($lst2_even == @$lst2) {\n        return\
    \ \"YES\";\n    }\n    if ($lst1_even == @$lst1 - 1 && $lst2_odd == 1) {\n   \
    \     return \"YES\";\n    }\n    if ($lst2_even == @$lst2 - 1 && $lst1_odd ==\
    \ 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $evens\
    \ = 0;\n    my $odds = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0)\
    \ {\n            $evens++;\n        } else {\n            $odds++;\n        }\n\
    \    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens > $odds)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $result = \"NO\";\n    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_odd\
    \ = grep { $_ % 2 } @$lst2;\n    if ($lst1_odd == $lst2_odd) {\n        $result\
    \ = \"YES\";\n    }\n    return $result;\n}", "    my $exchange = 0;\n    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    for my $i (0 .. $#{$lst1}) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $lst1_even++;\n        }\n        if ($lst2->[$i] %\
    \ 2 == 0) {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_even ==\
    \ $#{$lst1} + 1) {\n        return \"YES\";\n    }\n    if ($lst2_even == $#{$lst2}\
    \ + 1) {\n        return \"YES\";\n    }\n    if ($lst1_even + $lst2_even == $#{$lst1}\
    \ + 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if ($even\
    \ % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n      \
    \  return \"NO\";\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n  \
    \  my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i\
    \ (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n       \
    \ if ($i % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return $even > $odd ? \"YES\" : \"NO\";\n}", "    my $odds\
    \ = 0;\n    my $evens = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0)\
    \ {\n            $evens++;\n        } else {\n            $odds++;\n        }\n\
    \    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    return $odds %\
    \ 2 == 0 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n\
    \    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd <= $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $result = \"NO\";\n    my $lst1_odd_count =\
    \ 0;\n    my $lst2_odd_count = 0;\n    foreach my $item (@$lst1) {\n        if\
    \ ($item % 2 == 1) {\n            $lst1_odd_count++;\n        }\n    }\n    foreach\
    \ my $item (@$lst2) {\n        if ($item % 2 == 1) {\n            $lst2_odd_count++;\n\
    \        }\n    }\n    if ($lst1_odd_count == $lst2_odd_count) {\n        $result\
    \ = \"YES\";\n    }\n    return $result;\n}", "    my $evens = 0;\n    my $odds\
    \ = 0;\n    for my $item (@$lst1) {\n        if ($item % 2 == 0) {\n         \
    \   $evens++;\n        } else {\n            $odds++;\n        }\n    }\n    for\
    \ my $item (@$lst2) {\n        if ($item % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens > $odds)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $exchange = 0;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$lst1))\
    \ {\n        if ($lst1->[$i] % 2 == 1) {\n            $j = 0;\n            while\
    \ ($j < scalar(@$lst2)) {\n                if ($lst2->[$j] % 2 == 0) {\n     \
    \               $lst1->[$i] = $lst2->[$j];\n                    $lst2->[$j] =\
    \ $lst1->[$i];\n                    $exchange = 1;\n                    last;\n\
    \                }\n                $j++;\n            }\n            if ($exchange\
    \ == 0) {\n                return \"NO\";\n            }\n        }\n        $i++;\n\
    \    }\n    return \"YES\";\n}", "    my $result = \"NO\";\n    my $odd_count\
    \ = 0;\n    my $even_count = 0;\n    my $i = 0;\n    my $j = 0;\n    my $lst1_len\
    \ = scalar @$lst1;\n    my $lst2_len = scalar @$lst2;\n    for ($i = 0; $i < $lst1_len;\
    \ $i++) {\n        if ($lst1->[$i] % 2 == 0) {\n            $even_count++;\n \
    \       } else {\n            $odd_count++;\n        }\n    }\n    for ($j = 0;\
    \ $j < $lst2_len; $j++) {\n        if ($lst2->[$j] % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        $result = \"YES\";\n    }\n    return $result;\n}",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n\
    \        $lst1_even++ if $lst1->[$i] % 2 == 0;\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n    return $lst1_even\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd_count = 0;\n    my\
    \ $lst2_odd_count = 0;\n    for my $num (@$lst1) {\n        $lst1_odd_count++\
    \ if $num % 2 == 1;\n    }\n    for my $num (@$lst2) {\n        $lst2_odd_count++\
    \ if $num % 2 == 1;\n    }\n    return \"YES\" if $lst1_odd_count == $lst2_odd_count;\n\
    \    return \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even\
    \ = grep { !($_ % 2) } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" :\
    \ \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$lst1)\
    \ {\n        if ($num % 2 == 0) {\n            $even++;\n        } else {\n  \
    \          $odd++;\n        }\n    }\n    foreach my $num (@$lst2) {\n       \
    \ if ($num % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    if ($even > $odd) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $odds = 0;\n    my $evens = 0;\n\
    \    for my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    for my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $evens++;\n        } else {\n \
    \           $odds++;\n        }\n    }\n    return $odds % 2 == 0 ? \"YES\" :\
    \ \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even\
    \ = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\"\
    \ : \"NO\";\n}", "    my $lst1_even = grep { $_ % 2 == 0 } @$lst1;\n    my $lst2_even\
    \ = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_even + $lst2_even == @$lst1\
    \ + @$lst2 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even\
    \ = 0;\n    for my $i (0..$#$lst1) {\n        $lst1_odd++ if $lst1->[$i] % 2;\n\
    \        $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n    return $lst1_odd ==\
    \ $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    foreach my $num (@$lst1) {\n        $lst1_even++ if $num % 2 == 0;\n\
    \    }\n    foreach my $num (@$lst2) {\n        $lst2_even++ if $num % 2 == 0;\n\
    \    }\n    return $lst1_even == @$lst1 || $lst2_even == @$lst2 ? \"YES\" : \"\
    NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (@$lst1)\
    \ {\n        $lst1_odd++ if $i % 2;\n    }\n    for my $i (@$lst2) {\n       \
    \ $lst2_even++ if $i % 2 == 0;\n    }\n    return $lst1_odd == $lst2_even ? \"\
    YES\" : \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n    for\
    \ my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even_count++;\n \
    \       } else {\n            $odd_count++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even = 1;\n    my $odd = 1;\n    for my $n (@$lst1) {\n        if ($n %\
    \ 2 == 0) {\n            $even = 0;\n        } else {\n            $odd = 0;\n\
    \        }\n    }\n    for my $n (@$lst2) {\n        if ($n % 2 == 0) {\n    \
    \        $even = 0;\n        } else {\n            $odd = 0;\n        }\n    }\n\
    \    return $even || $odd ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep {\
    \ $_ % 2 } @$lst1;\n    my $lst2_even = grep { !($_ % 2) } @$lst2;\n    return\
    \ $lst1_odd <= $lst2_even ? \"YES\" : \"NO\";\n}", "    my $odd_count = 0;\n \
    \   my $even_count = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count % 2 == 0 && $odd_count % 2 == 0) {\n  \
    \      return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "   \
    \ my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n \
    \       if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n        }\n  \
    \  }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n    \
    \        $lst2_even++;\n        }\n    }\n    return $lst1_even == $#$lst1 ||\
    \ $lst2_even == $#$lst2 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_\
    \ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $count = 0;\n    for\
    \ my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n            $count++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $count--;\n        }\n    }\n    return $count == 0 ? \"YES\"\
    \ : \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$lst1)\
    \ {\n        if ($num % 2 == 0) {\n            $even++;\n        } else {\n  \
    \          $odd++;\n        }\n    }\n    foreach my $num (@$lst2) {\n       \
    \ if ($num % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n \
    \   my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        $lst1_odd++ if $lst1->[$i]\
    \ % 2;\n        $lst2_even++ if !($lst2->[$i] % 2);\n    }\n    return $lst1_odd\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 ==\
    \ 1 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n           \
    \ $even_count++;\n        } else {\n            $odd_count++;\n        }\n   \
    \ }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $i = 0;\n    my $j = 0;\n    my $lst1_len = scalar @$lst1;\n\
    \    my $lst2_len = scalar @$lst2;\n    while ($i < $lst1_len) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $i++;\n            next;\n        }\n        while\
    \ ($j < $lst2_len) {\n            if ($lst2->[$j] % 2 == 1) {\n              \
    \  $lst1->[$i] = $lst2->[$j];\n                $lst2->[$j] = $lst1->[$i];\n  \
    \              $i++;\n                $j++;\n                last;\n         \
    \   }\n            $j++;\n        }\n        if ($j == $lst2_len) {\n        \
    \    return \"NO\";\n        }\n    }\n    return \"YES\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0) {\n \
    \           $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    if ($even > $odd) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n    for\
    \ my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    for my $num\
    \ (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n     \
    \   } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (@$lst1)\
    \ {\n        $lst1_odd++ if $i % 2;\n    }\n    for my $i (@$lst2) {\n       \
    \ $lst2_even++ if !($i % 2);\n    }\n    return $lst1_odd == $lst2_even ? \"YES\"\
    \ : \"NO\";\n}", "    my $odd_count = 0;\n    my $even_count = 0;\n    for my\
    \ $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    for my $num\
    \ (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n     \
    \   } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n\
    \    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep\
    \ { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\"\
    ;\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { !($_ % 2)\
    \ } @$lst2;\n    return $lst1_odd <= $lst2_even ? \"YES\" : \"NO\";\n}", "   \
    \ my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (@$lst1) {\n      \
    \  $lst1_odd++ if $i % 2;\n    }\n    for my $i (@$lst2) {\n        $lst2_even++\
    \ if !($i % 2);\n    }\n    return \"YES\" if $lst1_odd == $lst2_even;\n    return\
    \ \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    foreach my\
    \ $num (@$lst1) {\n        $lst1_even++ if $num % 2 == 0;\n    }\n    foreach\
    \ my $num (@$lst2) {\n        $lst2_even++ if $num % 2 == 0;\n    }\n    return\
    \ \"YES\" if $lst1_even + $lst2_even >= @$lst1;\n    return \"NO\";\n}", "   \
    \ my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 ==\
    \ 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", " \
    \   my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$lst1) {\n        if\
    \ ($num % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n\
    \    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = grep { $_\
    \ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $result = \"NO\";\n\
    \    my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n    my $lst1_even_count\
    \ = 0;\n    my $lst2_even_count = 0;\n    foreach my $num (@$lst1) {\n       \
    \ if ($num % 2 == 0) {\n            $lst1_even_count++;\n        } else {\n  \
    \          $lst1_odd_count++;\n        }\n    }\n    foreach my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $lst2_even_count++;\n        }\
    \ else {\n            $lst2_odd_count++;\n        }\n    }\n    if ($lst1_odd_count\
    \ == $lst2_even_count) {\n        $result = \"YES\";\n    }\n    return $result;\n\
    }", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_\
    \ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n\
    }", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        $lst1_even++ if $lst1->[$i] % 2 == 0;\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n    return \"YES\"\
    \ if $lst1_even == $#$lst1 + 1 || $lst2_even == $#$lst2 + 1;\n    return \"NO\"\
    ;\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep {\
    \ $_ % 2 == 0 } @$lst2;\n    return $lst1_odd <= $lst2_even ? \"YES\" : \"NO\"\
    ;\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1) {\n  \
    \      if ($i % 2 == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my\
    \ $odd = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    for\
    \ my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd\
    \ % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n\
    \    }\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n \
    \       if ($i % 2 == 0) {\n            $even++;\n        } else {\n         \
    \   $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else {\n   \
    \     return \"NO\";\n    }\n}", "    my $ret = \"NO\";\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $lst1_len = scalar @$lst1;\n    my $lst2_len = scalar @$lst2;\n\
    \    while ($i < $lst1_len) {\n        if ($lst1->[$i] % 2 == 0) {\n         \
    \   $i++;\n            next;\n        }\n        $j = 0;\n        while ($j <\
    \ $lst2_len) {\n            if ($lst2->[$j] % 2 == 1) {\n                $lst1->[$i]\
    \ = $lst2->[$j];\n                $lst2->[$j] = $lst1->[$i];\n               \
    \ $ret = \"YES\";\n                last;\n            }\n            $j++;\n \
    \       }\n        $i++;\n    }\n    return $ret;\n}", "    my $odd_count = 0;\n\
    \    foreach my $item (@$lst1) {\n        $odd_count++ if $item % 2 == 1;\n  \
    \  }\n    foreach my $item (@$lst2) {\n        $odd_count-- if $item % 2 == 1;\n\
    \    }\n    return $odd_count == 0 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n\
    \    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n\
    \    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 1) {\n            $lst1_odd = 1;\n        }\n    }\n    foreach my $num\
    \ (@$lst2) {\n        if ($num % 2 == 0) {\n            $lst2_even = 1;\n    \
    \    }\n    }\n    if ($lst1_odd && $lst2_even) {\n        return \"YES\";\n \
    \   } else {\n        return \"NO\";\n    }\n}", "    my $odd_count = 0;\n   \
    \ my $even_count = 0;\n    for my $num (@$lst1) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $num (@$lst2) {\n        if ($num % 2 == 0) {\n\
    \            $even_count++;\n        } else {\n            $odd_count++;\n   \
    \     }\n    }\n    if ($even_count % 2 == 0) {\n        return \"YES\";\n   \
    \ } else {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my\
    \ $odd_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $count = 0;\n    my\
    \ $count1 = 0;\n    my $count2 = 0;\n    foreach my $i (@$lst1) {\n        if\
    \ ($i % 2 == 0) {\n            $count++;\n        }\n    }\n    foreach my $i\
    \ (@$lst2) {\n        if ($i % 2 == 0) {\n            $count1++;\n        }\n\
    \    }\n    foreach my $i (@$lst1) {\n        if ($i % 2 != 0) {\n           \
    \ $count2++;\n        }\n    }\n    if ($count == @$lst1) {\n        return \"\
    YES\";\n    }\n    elsif ($count1 >= $count2) {\n        return \"YES\";\n   \
    \ }\n    else {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n\
    \    my $odd_count = 0;\n    my $lst1_even_count = 0;\n    my $lst1_odd_count\
    \ = 0;\n    my $lst2_even_count = 0;\n    my $lst2_odd_count = 0;\n    foreach\
    \ my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \            $lst1_even_count++;\n        } else {\n            $odd_count++;\n\
    \            $lst1_odd_count++;\n        }\n    }\n    foreach my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n            $lst2_even_count++;\n\
    \        } else {\n            $odd_count++;\n            $lst2_odd_count++;\n\
    \        }\n    }\n    if ($even_count == 0 || $odd_count == 0) {\n        return\
    \ \"NO\";\n    }\n    if ($lst1_even_count == 0) {\n        return \"YES\";\n\
    \    }\n    if ($lst2_odd_count == 0) {\n        return \"YES\";\n    }\n    if\
    \ ($lst1_odd_count == $lst2_even_count) {\n        return \"YES\";\n    }\n  \
    \  return \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $odd_count =\
    \ 0;\n    my $even_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my\
    \ $odd = 0;\n    my $i = 0;\n    while ($i < scalar(@$lst1)) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        $i++;\n    }\n    $i = 0;\n    while ($i < scalar(@$lst2))\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $i++;\n    }\n    if ($even > $odd)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ $even > $odd ? \"YES\" : \"NO\";\n}", "    my $odd_count = 0;\n    my $even_count\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$lst1)) {\n  \
    \      if ($lst1->[$i] % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n        $i++;\n    }\n    while ($j\
    \ < scalar(@$lst2)) {\n        if ($lst2->[$j] % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n        $j++;\n    }\n\
    \    if ($odd_count % 2 == 0) {\n        return \"YES\";\n    } else {\n     \
    \   return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n\
    \    foreach my $num (@$lst1) {\n        if ($num % 2 == 1) {\n            $lst1_odd\
    \ = 1;\n        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2\
    \ == 0) {\n            $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd ==\
    \ 1 && $lst2_even == 1) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for\
    \ my $i (0..$#$lst1) {\n        $lst1_even++ if $lst1->[$i] % 2 == 0;\n    }\n\
    \    for my $i (0..$#$lst2) {\n        $lst2_even++ if $lst2->[$i] % 2 == 0;\n\
    \    }\n    return \"YES\" if $lst1_even + $lst2_even >= @$lst1;\n    return \"\
    NO\";\n}", "    my $exchange = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2 == 1) {\n            $lst1_odd++;\n\
    \        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 1) {\n\
    \            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd == $lst2_odd) {\n\
    \        $exchange = 1;\n    }\n    if ($exchange) {\n        return \"YES\";\n\
    \    } else {\n        return \"NO\";\n    }\n}", "    my $odd_count = 0;\n  \
    \  my $even_count = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n\
    \            $even_count++;\n        } else {\n            $odd_count++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    if ($odd_count % 2 == 0) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 1) {\n           \
    \ $lst1_odd = 1;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i\
    \ % 2 == 0) {\n            $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd\
    \ == 1 && $lst2_even == 1) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $count = 0;\n    my $count2 = 0;\n    foreach my\
    \ $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $count++;\n        }\n\
    \    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 1) {\n           \
    \ $count2++;\n        }\n    }\n    if ($count == @$lst1 || $count2 == @$lst2)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_odd\
    \ = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n\
    \    return $lst1_odd <= $lst2_even ? \"YES\" : \"NO\";\n}", "    my $odd_count\
    \ = 0;\n    my $even_count = 0;\n    for my $i (@$lst1) {\n        if ($i % 2\
    \ == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n    \
    \        $even_count++;\n        } else {\n            $odd_count++;\n       \
    \ }\n    }\n    if ($odd_count % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $i = 0;\n    my $j = 0;\n    my $lst1_len = scalar @$lst1;\n    my $lst2_len\
    \ = scalar @$lst2;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    my $lst1_odd_index = 0;\n    my $lst2_odd_index\
    \ = 0;\n    my $lst1_even_index = 0;\n    my $lst2_even_index = 0;\n    my $lst1_odd_index_list\
    \ = [];\n    my $lst2_odd_index_list = [];\n    my $lst1_even_index_list = [];\n\
    \    my $lst2_even_index_list = [];\n    my $lst1_odd_list = [];\n    my $lst2_odd_list\
    \ = [];\n    my $lst1_even_list = [];\n    my $lst2_even_list = [];\n    my $lst1_odd_list_len\
    \ = 0;\n    my $lst2_odd_list_len = 0;\n    my $lst1_even_list_len = 0;\n    my\
    \ $lst2_even_list_len = 0;\n    my $lst1_odd_index_list_len = 0;\n    my $lst2_odd_index_list_len\
    \ = 0;\n    my $lst1_even_index_list_len = 0;\n    my $lst2_even_index_list_len\
    \ = 0;\n    my $lst1_odd_index_list_len_min = 0;\n    my $lst2_odd_index_list_len_min\
    \ = 0;\n    my $lst1_even_index_list_len_min = 0;\n    my $lst2_even_index_list_len_min\
    \ = 0;\n    my $lst1_odd_index_list_len_max = 0;\n    my $lst2_", "    my $even\
    \ = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if ($even\
    \ % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n      \
    \  return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n    for my\
    \ $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n       \
    \ if ($i % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $odd1 = 0;\n    my $odd2 = 0;\n\
    \    for my $i (@$lst1) {\n        $odd1++ if $i % 2;\n    }\n    for my $i (@$lst2)\
    \ {\n        $odd2++ if $i % 2;\n    }\n    return $odd1 == $odd2 ? \"YES\" :\
    \ \"NO\";\n}", "    my $odd_count = 0;\n    my $even_count = 0;\n    for my $i\
    \ (@$lst1) {\n        if ($i % 2 == 0) {\n            $even_count++;\n       \
    \ } else {\n            $odd_count++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($odd_count % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $evens = 0;\n    my $odds = 0;\n    for my $i (@$lst1) {\n        if ($i\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n    \
    \        $evens++;\n        } else {\n            $odds++;\n        }\n    }\n\
    \    if ($evens % 2 == 0) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $count = 0;\n    my $count2 = 0;\n    foreach my\
    \ $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $count++;\n        }\n\
    \    }\n    foreach my $j (@$lst2) {\n        if ($j % 2 != 0) {\n           \
    \ $count2++;\n        }\n    }\n    if ($count == scalar(@$lst1) || $count2 ==\
    \ scalar(@$lst2)) {\n        return \"YES\";\n    }\n    else {\n        return\
    \ \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for\
    \ my $i (0..$#$lst1) {\n        $lst1_odd++ if $lst1->[$i] % 2 == 1;\n       \
    \ $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n\
    \    my $lst1_even_count = 0;\n    my $lst1_odd_count = 0;\n    my $lst2_even_count\
    \ = 0;\n    my $lst2_odd_count = 0;\n    my $lst1_even_index = 0;\n    my $lst1_odd_index\
    \ = 0;\n    my $lst2_even_index = 0;\n    my $lst2_odd_index = 0;\n    my @lst1_even\
    \ = ();\n    my @lst1_odd = ();\n    my @lst2_even = ();\n    my @lst2_odd = ();\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1\
    \ = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o1 = 0;\n    my $p1 = 0;\n \
    \   my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1\
    \ = 0;\n    my $v1 = 0;\n   ", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n \
    \   my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd <= $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n\
    \    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    foreach my\
    \ $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n\
    \        if ($i % 2 == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    if ($even > $odd) {\n        return \"YES\";\n    } else {\n     \
    \   return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n\
    \    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    foreach my\
    \ $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        $lst1_even++ if $lst1->[$i] % 2 == 0;\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n    return \"YES\"\
    \ if $lst1_even + $lst2_even == $#$lst1 + 1;\n    return \"NO\";\n}", "    my\
    \ $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { !($_ % 2) }\
    \ @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my\
    \ $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0\
    \ } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "   \
    \ my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $num (@$lst1) {\n   \
    \     $lst1_even++ if $num % 2 == 0;\n    }\n    for my $num (@$lst2) {\n    \
    \    $lst2_even++ if $num % 2 == 0;\n    }\n    return $lst1_even == @$lst1 ||\
    \ $lst2_even == @$lst2 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = 0;\n    my\
    \ $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 ==\
    \ 1) {\n            $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even++;\n        }\n\
    \    }\n    if ($lst1_odd == $lst2_even) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even\
    \ = 0;\n    for my $i (@$lst1) {\n        $lst1_odd++ if $i % 2;\n    }\n    for\
    \ my $i (@$lst2) {\n        $lst2_even++ if !($i % 2);\n    }\n    return $lst1_odd\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $exchange = 0;\n    for my $i\
    \ (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n            for my $j (0..$#$lst2)\
    \ {\n                if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i]\
    \ = $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n           \
    \         $exchange = 1;\n                    last;\n                }\n     \
    \       }\n        }\n        if ($exchange == 0) {\n            return \"NO\"\
    ;\n        }\n    }\n    return \"YES\";\n}", "    my $even = 0;\n    my $odd\
    \ = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    foreach\
    \ my $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even++;\n   \
    \     } else {\n            $odd++;\n        }\n    }\n    if ($even >= $odd)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $odd = 0;\n    my $even = 0;\n    for my $i (@$lst1) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if\
    \ ($odd % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even\
    \ = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\"\
    \ : \"NO\";\n}", "    my $count = 0;\n    my $count2 = 0;\n    my $count3 = 0;\n\
    \    my $count4 = 0;\n    my $count5 = 0;\n    my $count6 = 0;\n    my $count7\
    \ = 0;\n    my $count8 = 0;\n    my $count9 = 0;\n    my $count10 = 0;\n    my\
    \ $count11 = 0;\n    my $count12 = 0;\n    my $count13 = 0;\n    my $count14 =\
    \ 0;\n    my $count15 = 0;\n    my $count16 = 0;\n    my $count17 = 0;\n    my\
    \ $count18 = 0;\n    my $count19 = 0;\n    my $count20 = 0;\n    my $count21 =\
    \ 0;\n    my $count22 = 0;\n    my $count23 = 0;\n    my $count24 = 0;\n    my\
    \ $count25 = 0;\n    my $count26 = 0;\n    my $count27 = 0;\n    my $count28 =\
    \ 0;\n    my $count29 = 0;\n    my $count30 = 0;\n    my $count31 = 0;\n    my\
    \ $count32 = 0;\n    my $count33 = 0;\n    my $count34 = 0;\n    my $count35 =\
    \ 0;\n    my $count36 = 0;\n    my $count37 = 0;\n    my $count38 = 0;\n    my\
    \ $count39 = 0;\n    my $count40 = 0;\n    my $count41 = 0;\n    my $count42 =\
    \ 0;\n    my $count43 = 0;\n    my $count44 = 0;\n    my $count45 = 0;\n    my\
    \ $count46 = 0;\n    my $count47 = 0;\n    my $count48 = 0;\n    my $count49 =\
    \ 0;\n    my $count50 = 0;\n    my $count51 = 0;\n    my $count52 = 0;\n    my\
    \ $count53 = 0;\n    my $count54 = 0;\n    my $count55 = 0;\n    my $count56 =\
    \ 0;\n    my $count57 = 0;", "    my $lst1_odd = grep {$_ % 2} @$lst1;\n    my\
    \ $lst2_even = grep {$_ % 2 == 0} @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n  \
    \  my $lst1_even = 0;\n    my $lst2_odd = 0;\n    foreach my $i (@$lst1) {\n \
    \       if ($i % 2 == 0) {\n            $lst1_even++;\n        } else {\n    \
    \        $lst1_odd++;\n        }\n    }\n    foreach my $i (@$lst2) {\n      \
    \  if ($i % 2 == 0) {\n            $lst2_even++;\n        } else {\n         \
    \   $lst2_odd++;\n        }\n    }\n    if ($lst1_even >= $lst2_odd && $lst2_even\
    \ >= $lst1_odd) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $even_count = 0;\n    for my $num (@$lst1) {\n        $even_count++\
    \ if $num % 2 == 0;\n    }\n    my $odd_count = scalar(@$lst1) - $even_count;\n\
    \    for my $num (@$lst2) {\n        $even_count++ if $num % 2 == 0;\n       \
    \ $odd_count++ if $num % 2 == 1;\n    }\n    return $even_count == scalar(@$lst1)\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my\
    \ $lst2_even = grep { !($_ % 2) } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count\
    \ = 0;\n    for my $i (0 .. $#$lst1) {\n        $lst1_odd_count++ if $lst1->[$i]\
    \ % 2;\n        $lst2_odd_count++ if $lst2->[$i] % 2;\n    }\n    return $lst1_odd_count\
    \ == $lst2_odd_count ? \"YES\" : \"NO\";\n}", "    my $even = 0;\n    my $odd\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n    }\n    foreach\
    \ my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd\
    \ % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n\
    \    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep\
    \ { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\"\
    ;\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep {\
    \ $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\"\
    ;\n}", "    my $result = \"NO\";\n    my $even_count = 0;\n    my $odd_count =\
    \ 0;\n    foreach my $item (@$lst1) {\n        if ($item % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    foreach my $item (@$lst2) {\n        if ($item % 2 == 0) {\n     \
    \       $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    if ($even_count > $odd_count) {\n        $result = \"YES\";\n    }\n\
    \    return $result;\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n   \
    \ for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd\
    \ = 1;\n        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i]\
    \ % 2 == 0) {\n            $lst2_even = 1;\n        }\n    }\n    return $lst1_odd\
    \ && $lst2_even ? \"YES\" : \"NO\";\n}", "    my $odd_count = 0;\n    my $even_count\
    \ = 0;\n    my $i = 0;\n    for ($i = 0; $i < @$lst1; $i++) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for ($i = 0; $i < @$lst2; $i++) {\n        if ($lst2->[$i]\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $exchange = 0;\n \
    \   my $i = 0;\n    my $j = 0;\n    my $len1 = scalar @$lst1;\n    my $len2 =\
    \ scalar @$lst2;\n    while ($i < $len1) {\n        if ($$lst1[$i] % 2 == 0) {\n\
    \            $i++;\n        } else {\n            while ($j < $len2) {\n     \
    \           if ($$lst2[$j] % 2 == 0) {\n                    $$lst1[$i] = $$lst2[$j];\n\
    \                    $$lst2[$j] = 0;\n                    $exchange = 1;\n   \
    \                 last;\n                }\n                $j++;\n          \
    \  }\n            if ($exchange == 0) {\n                return \"NO\";\n    \
    \        }\n            $i++;\n        }\n    }\n    return \"YES\";\n}", "  \
    \  my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even = grep { !($_ % 2)\
    \ } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "   \
    \ my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if\
    \ ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n\
    \    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $count = 0;\n    for my $i (0..$#$lst1) {\n\
    \        if ($lst1->[$i] % 2 == 1) {\n            for my $j (0..$#$lst2) {\n \
    \               if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i] =\
    \ $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n             \
    \       $count++;\n                    last;\n                }\n            }\n\
    \        }\n    }\n    return $count == 0 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even++;\n        }\n\
    \    }\n    if ($lst1_odd == $lst2_even) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    if ($even_count > $odd_count) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $exchange = 0;\n    my $lst1_odd\
    \ = 0;\n    my $lst2_odd = 0;\n    my $lst1_even = 0;\n    my $lst2_even = 0;\n\
    \    foreach my $l1 (@$lst1) {\n        if ($l1 % 2 == 0) {\n            $lst1_even++;\n\
    \        } else {\n            $lst1_odd++;\n        }\n    }\n    foreach my\
    \ $l2 (@$lst2) {\n        if ($l2 % 2 == 0) {\n            $lst2_even++;\n   \
    \     } else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd\
    \ == $lst2_even) {\n        $exchange = 1;\n    }\n    if ($exchange) {\n    \
    \    return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    #\
    \ your code here\n    my $count = 0;\n    foreach my $i (@$lst1) {\n        if\
    \ ($i % 2 == 0) {\n            $count++;\n        }\n    }\n    if ($count ==\
    \ scalar @$lst1) {\n        return \"YES\";\n    }\n    else {\n        foreach\
    \ my $i (@$lst1) {\n            foreach my $j (@$lst2) {\n                if ($i\
    \ % 2 == 0 && $j % 2 != 0) {\n                    return \"YES\";\n          \
    \      }\n            }\n        }\n    }\n    return \"NO\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    if ($even > $odd)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n\
    \        $lst1_even++ if $lst1->[$i] % 2 == 0;\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n    return $lst1_even\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    for my $i\
    \ (@$lst2) {\n        if ($i % 2 == 0) {\n            $even_count++;\n       \
    \ } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count >\
    \ $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even =\
    \ grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" :\
    \ \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n    for my $num\
    \ (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n     \
    \   } else {\n            $odd_count++;\n        }\n    }\n    for my $num (@$lst2)\
    \ {\n        if ($num % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $ret = \"NO\";\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    foreach\
    \ my $i (@$lst1) {\n        if ($i % 2 == 1) {\n            $lst1_odd++;\n   \
    \     }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 1) {\n   \
    \         $lst2_odd++;\n        }\n    }\n    if ($lst1_odd == $lst2_odd) {\n\
    \        $ret = \"YES\";\n    }\n    return $ret;\n}", "    my $odd1 = 0;\n  \
    \  my $odd2 = 0;\n    my $even1 = 0;\n    my $even2 = 0;\n    foreach my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $even1++;\n        } else {\n   \
    \         $odd1++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if\
    \ ($i % 2 == 0) {\n            $even2++;\n        } else {\n            $odd2++;\n\
    \        }\n    }\n    if ($even1 == 0) {\n        return \"NO\";\n    }\n   \
    \ if ($odd1 == 0) {\n        return \"YES\";\n    }\n    if ($even1 + $even2 >=\
    \ $odd1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_even = 1;\n\
    \    my $lst2_even = 1;\n    for my $i (0 .. $#$lst1) {\n        $lst1_even =\
    \ 0 if $lst1->[$i] % 2;\n        $lst2_even = 0 if $lst2->[$i] % 2;\n    }\n \
    \   return $lst1_even || $lst2_even ? \"YES\" : \"NO\";\n}", "    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0)\
    \ {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $len1 = scalar @$lst1;\n\
    \    my $len2 = scalar @$lst2;\n    my $i = 0;\n    my $j = 0;\n    my $count\
    \ = 0;\n    while ($i < $len1) {\n        if ($lst1->[$i] % 2 == 0) {\n      \
    \      $i++;\n        } else {\n            $j = 0;\n            while ($j < $len2)\
    \ {\n                if ($lst2->[$j] % 2 == 1) {\n                    $count++;\n\
    \                    last;\n                }\n                $j++;\n       \
    \     }\n            $i++;\n        }\n    }\n    if ($count == $len1) {\n   \
    \     return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my\
    \ @lst1 = @$lst1;\n    my @lst2 = @$lst2;\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n\
    \    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n\
    \    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11 =\
    \ 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15\
    \ = 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n    my\
    \ $flag19 = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n\
    \    my $flag23 = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26\
    \ = 0;\n    my $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my\
    \ $flag30 = 0;\n    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n\
    \    my $flag34 = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37\
    \ = 0;\n    my $flag38 = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n    my\
    \ $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n\
    \    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47 = 0;\n    my $flag48\
    \ = 0;\n    my $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51 = 0;\n", "  \
    \  my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if\
    \ ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n\
    \    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n\
    \    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 0) {\n         \
    \   $even_count++;\n        } else {\n            $odd_count++;\n        }\n \
    \   }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n   \
    \         $even_count++;\n        } else {\n            $odd_count++;\n      \
    \  }\n    }\n    if ($even_count == $#$lst1 + 1) {\n        return \"YES\";\n\
    \    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n   \
    \ my $lst2_even = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 1) {\n \
    \           $lst1_odd++;\n        }\n    }\n    for my $i (@$lst2) {\n       \
    \ if ($i % 2 == 0) {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd\
    \ == $lst2_even) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even =\
    \ grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" :\
    \ \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $exchange = 0;\n\
    \    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n         \
    \   for my $j (0..$#$lst2) {\n                if ($lst2->[$j] % 2 == 0) {\n  \
    \                  $lst1->[$i] = $lst2->[$j];\n                    $lst2->[$j]\
    \ = $i;\n                    $exchange = 1;\n                    last;\n     \
    \           }\n            }\n            if (!$exchange) {\n                return\
    \ \"NO\";\n            }\n        }\n    }\n    return \"YES\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if ($even\
    \ > $odd) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n \
    \   }\n}", "    my $exchange = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            for my $j (0..$#$lst2) {\n                if ($lst2->[$j]\
    \ % 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n              \
    \      $lst2->[$j] = 1;\n                    $exchange = 1;\n                \
    \    last;\n                }\n            }\n        }\n        if ($exchange\
    \ == 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n\
    }", "    my $even = 0;\n    my $odd = 0;\n    foreach my $item (@$lst1) {\n  \
    \      if ($item % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n    }\n    foreach my $item (@$lst2) {\n        if ($item\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    if ($even > $odd) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    if ($even_count > $odd_count) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    foreach my $num (@$lst2) {\n        if ($num % 2 == 0) {\n       \
    \     $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    if ($even_count > $odd_count) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $odd_count = 0;\n    my $even_count\
    \ = 0;\n    for my $num (@$lst1) {\n        if ($num % 2 == 0) {\n           \
    \ $even_count++;\n        } else {\n            $odd_count++;\n        }\n   \
    \ }\n    for my $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even =\
    \ grep { !($_ % 2) } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" : \"\
    NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n  \
    \      if ($i % 2 == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    if ($even > $odd) {\n        return \"YES\";\n    } else {\n     \
    \   return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    foreach my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $even = 0;\n    my $odd = 0;\n    foreach my $n (@$lst1) {\n        if\
    \ ($n % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    foreach my $n (@$lst2) {\n        if ($n % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    if ($even > $odd) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $odds = 0;\n    for my $i (0..$#$lst1) {\n     \
    \   if ($lst1->[$i] % 2 == 1) {\n            $odds++;\n        }\n    }\n    for\
    \ my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 1) {\n            $odds--;\n\
    \        }\n    }\n    return $odds == 0 ? \"YES\" : \"NO\";\n}", "    my $result\
    \ = \"NO\";\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    for my $i (0 ..\
    \ $#{$lst1}) {\n        if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd++;\n\
    \        }\n    }\n    for my $i (0 .. $#{$lst2}) {\n        if ($lst2->[$i] %\
    \ 2 == 1) {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd ==\
    \ $lst2_odd) {\n        $result = \"YES\";\n    }\n    return $result;\n}", " \
    \   my $result = \"NO\";\n    my $odd_count = 0;\n    my $even_count = 0;\n  \
    \  foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    foreach my\
    \ $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        $result = \"YES\";\n    }\n    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

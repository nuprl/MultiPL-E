completions:
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    return 1 if @$arr == 0;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n\
  \    for my $i (1 .. $#$arr) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return $max - $min\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $max = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        $max = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $i = 0;\n    my $j\
  \ = $n - 1;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$i + 1]) {\n \
  \           return 0 if $arr->[$i] > $arr->[$j];\n            $i++;\n        } else\
  \ {\n            $j--;\n        }\n    }\n    return 1;\n}"
- "    my $size = scalar @$arr;\n    my $i = 0;\n    my $j = $size - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n        \
  \    $count++;\n            $i++;\n            $j--;\n        } else {\n       \
  \     $i++;\n        }\n    }\n    return $count <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n  \
  \  my $min = $arr->[0];\n    my $max = $arr->[0];\n    my $flag = 0;\n    for($i\
  \ = 0; $i < $n; $i++) {\n        if($arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
  \        }\n        if($arr->[$i] > $max) {\n            $max = $arr->[$i];\n  \
  \      }\n    }\n    if($min == $max) {\n        return 1;\n    }\n    for($i =\
  \ 0; $i < $n; $i++) {\n        if($arr->[$i] == $min) {\n            $j = $i;\n\
  \            last;\n        }\n    }\n    for($i = $j; $i < $n; $i++) {\n      \
  \  if($arr->[$i] == $max) {\n            $k = $i;\n            last;\n        }\n\
  \    }\n    if($k == $j) {\n        return 1;\n    }\n    for($i = $j; $i < $k;\
  \ $i++) {\n        if($arr->[$i] > $arr->[$i + 1]) {\n            $flag = 1;\n \
  \           last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n \
  \   }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while($i\
  \ < $j) {\n        if($arr->[$i] > $arr->[$i + 1]) {\n            $i++;\n      \
  \  }\n        if($arr->[$j] < $arr->[$j - 1]) {\n            $j--;\n        }\n\
  \        if($i == $j) {\n            return 1;\n        }\n        if($arr->[$i]\
  \ < $arr->[$j]) {\n            return 0;\n        }\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n \
  \   my $flag = 0;\n    my $count = 0;\n    my $min = $arr->[0];\n    my $min_index\
  \ = 0;\n    my $max = $arr->[0];\n    my $max_index = 0;\n    my $temp = 0;\n  \
  \  my $temp_index = 0;\n    my $temp_flag = 0;\n    my $temp_count = 0;\n    my\
  \ $temp_min = 0;\n    my $temp_min_index = 0;\n    my $temp_max = 0;\n    my $temp_max_index\
  \ = 0;\n    if ($len == 0) {\n        return 1;\n    }\n    if ($len == 1) {\n \
  \       return 1;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr->[$i]\
  \ < $min) {\n            $min = $arr->[$i];\n            $min_index = $i;\n    \
  \    }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n     \
  \       $max_index = $i;\n        }\n    }\n    if ($min_index == $len - 1) {\n\
  \        return 1;\n    }\n    if ($max_index == 0) {\n        return 1;\n    }\n\
  \    for ($i = 0; $i < $len; $i++) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n\
  \            $flag = 1;\n            $count++;\n        }\n    }\n    if ($flag\
  \ == 0) {\n        return 1;\n    }\n    if ($count > 1) {\n        return 0;\n\
  \    }\n    for ($i = 0; $i < $len; $i++) {\n        $temp = $arr->[$i];\n     \
  \   $temp_index = $i;\n        $temp_flag = 0;\n        $temp_count = 0;\n     \
  \   $temp_min = $arr"
- "    my $len = scalar @$arr;\n    my @sorted = sort {$a <=> $b} @$arr;\n    my $i\
  \ = 0;\n    while ($i < $len) {\n        if ($arr->[$i] == $sorted[$i]) {\n    \
  \        $i++;\n        } else {\n            my $j = $i + 1;\n            while\
  \ ($j < $len) {\n                if ($arr->[$j] == $sorted[$i]) {\n            \
  \        my $tmp = $arr->[$j];\n                    splice(@$arr, $j, 1);\n    \
  \                unshift(@$arr, $tmp);\n                    last;\n            \
  \    }\n                $j++;\n            }\n            if ($j == $len) {\n  \
  \              return 0;\n            }\n        }\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    for(my $i = 1; $i < $n; $i++) {\n        if($arr->[$i] < $min) {\n        \
  \    return 0;\n        }\n        $min = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 1;\n}"
- "    my $n = scalar(@$arr);\n    if($n == 0) {\n        return 1;\n    }\n    my\
  \ $i = 0;\n    while($i < $n) {\n        if($i == $n - 1) {\n            return\
  \ 1;\n        }\n        if($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n\
  \        }\n        $i++;\n    }\n    return 1;\n}"
- "    my $len = @$arr;\n    return 1 if $len == 0;\n    my @sorted = sort {$a <=>\
  \ $b} @$arr;\n    my $i = 0;\n    while ($i < $len) {\n        if ($arr->[$i] ==\
  \ $sorted[$i]) {\n            $i++;\n        } else {\n            my $j = $i +\
  \ 1;\n            while ($j < $len) {\n                if ($arr->[$j] == $sorted[$i])\
  \ {\n                    my $tmp = $arr->[$j];\n                    $arr->[$j] =\
  \ $arr->[$i];\n                    $arr->[$i] = $tmp;\n                    last;\n\
  \                }\n                $j++;\n            }\n            if ($j ==\
  \ $len) {\n                return 0;\n            }\n        }\n    }\n    return\
  \ 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n        \
  \    $count++;\n            $i++;\n            $j--;\n        } else {\n       \
  \     $i++;\n        }\n    }\n    return $count <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $min_index = 0;\n    for my $i (1..$len-1) {\n        if ($arr->[$i] < $min)\
  \ {\n            $min = $arr->[$i];\n            $min_index = $i;\n        }\n \
  \   }\n    if ($min_index == 0) {\n        return 1;\n    }\n    my $max = $arr->[0];\n\
  \    for my $i (1..$min_index-1) {\n        if ($arr->[$i] > $max) {\n         \
  \   $max = $arr->[$i];\n        }\n    }\n    if ($max > $min) {\n        return\
  \ 0;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$i+1]) {\n        \
  \    $count++;\n        }\n        if($arr->[$j] < $arr->[$j-1]) {\n           \
  \ $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count <=\
  \ 2;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if ($arr->[$i]\
  \ > $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = $n - 1;\n    while ($i > 0 && $arr->[$i\
  \ - 1] > $arr->[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return\
  \ 0;\n    }\n    my $j = $n - 1;\n    while ($arr->[$j] < $arr->[$i - 1]) {\n  \
  \      $j--;\n    }\n    my $tmp = $arr->[$i - 1];\n    $arr->[$i - 1] = $arr->[$j];\n\
  \    $arr->[$j] = $tmp;\n    $j = $n - 1;\n    while ($i < $j) {\n        $tmp =\
  \ $arr->[$i];\n        $arr->[$i] = $arr->[$j];\n        $arr->[$j] = $tmp;\n  \
  \      $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n\
  \        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n \
  \       if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n  \
  \  }\n    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \      }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if ($max - $min == $len - 1) {\n        return 1;\n    }\n \
  \   return 0;\n}"
- "    my $n = @$arr;\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n    my\
  \ $max = $arr->[0];\n    for my $i (1..$n-1) {\n        $min = $arr->[$i] if $arr->[$i]\
  \ < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return 1\
  \ if $min == $arr->[0] && $max == $arr->[$n-1];\n    return 0;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n    my\
  \ $max = $arr->[0];\n    for my $i (1..$n-1) {\n        $min = $arr->[$i] if $arr->[$i]\
  \ < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return 1\
  \ if $max - $min == $n - 1;\n    return 0;\n}"
- "    return 1 if scalar @$arr == 0;\n    my @sorted = sort {$a <=> $b} @$arr;\n\
  \    my $i = 0;\n    my $j = 0;\n    while($i < scalar @$arr && $j < scalar @sorted)\
  \ {\n        if($arr->[$i] == $sorted[$j]) {\n            $i++;\n            $j++;\n\
  \        } else {\n            $i++;\n        }\n    }\n    return $j == scalar\
  \ @sorted;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n\
  \        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n \
  \       if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n  \
  \  }\n    if ($max - $min == $len - 1) {\n        return 1;\n    }\n    return 0;\n\
  }"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \      }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if ($max - $min + 1 == $len) {\n        return 1;\n    }\n \
  \   return 0;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if ($arr->[$i]\
  \ > $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    for my $i (1..$len-1) {\n        if ($arr->[$i] <\
  \ $min) {\n            return 0;\n        }\n        $min = $arr->[$i];\n    }\n\
  \    return 1;\n}"
- "    my $len = @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j)\
  \ {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n       \
  \ }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n       \
  \ }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n\
  \        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n \
  \       if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n  \
  \  }\n    if ($max - $min + 1 == $len) {\n        return 1;\n    }\n    return 0;\n\
  }"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$n-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = 0;\n    my $min = $arr->[0];\n\
  \    my $min_idx = 0;\n    while ($i < $len) {\n        if ($arr->[$i] < $min) {\n\
  \            $min = $arr->[$i];\n            $min_idx = $i;\n        }\n       \
  \ $i++;\n    }\n    $i = $min_idx;\n    while ($i < $len) {\n        if ($arr->[$i]\
  \ > $arr->[$i+1]) {\n            return 0;\n        }\n        $i++;\n    }\n  \
  \  $i = 0;\n    while ($i < $min_idx) {\n        if ($arr->[$i] > $arr->[$i+1])\
  \ {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $i = 0;\n    my\
  \ $j = $len - 1;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$i+1]) {\n\
  \            if($arr->[$j] < $arr->[$j-1]) {\n                return 0;\n      \
  \      }\n            $j--;\n        }\n        else {\n            $i++;\n    \
  \    }\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = $n - 1;\n    while ($i > 0) {\n       \
  \ if ($arr->[$i] < $arr->[$i - 1]) {\n            return 0;\n        }\n       \
  \ $i--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $count = 0;\n    for(my $i = 0; $i < $n; $i++)\
  \ {\n        if($arr->[$i] != $i + 1) {\n            $count++;\n        }\n    }\n\
  \    return $count <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        if ($arr->[$i] < $min) {\n            return\
  \ 0;\n        }\n        $min = $arr->[$i] if $arr->[$i] < $min;\n    }\n    return\
  \ 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    my $count = 0;\n \
  \   while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            $count++;\n\
  \        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            $count++;\n\
  \        }\n        $i++;\n        $j--;\n    }\n    return $count <= 2;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n\
  \    my $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1;\
  \ $j < $len; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n              \
  \  $flag = 1;\n                last;\n            }\n        }\n        if($flag\
  \ == 1) {\n            last;\n        }\n        $count++;\n    }\n    if($count\
  \ == $len) {\n        return 1;\n    }\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n        \
  \    $count++;\n            $i++;\n            $j--;\n        }\n        else {\n\
  \            $i++;\n        }\n    }\n    return $count <= 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \      }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if ($max - $min == $len - 1) {\n        return 1;\n    }\n \
  \   return 0;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$j]) {\n          \
  \  $count++;\n            $i++;\n            $j--;\n        }\n        else {\n\
  \            $i++;\n        }\n    }\n    if($count <= 1) {\n        return 1;\n\
  \    }\n    else {\n        return 0;\n    }\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $min_index = 0;\n    for my $i (1..$len-1) {\n        if ($arr->[$i] < $min)\
  \ {\n            $min = $arr->[$i];\n            $min_index = $i;\n        }\n \
  \   }\n    if ($min_index == 0) {\n        return 1;\n    }\n    else {\n      \
  \  my $i = $min_index;\n        while ($i < $len-1) {\n            if ($arr->[$i]\
  \ > $arr->[$i+1]) {\n                return 0;\n            }\n            $i++;\n\
  \        }\n        return 1;\n    }\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $min =\
  \ $arr->[0];\n    my $max = $arr->[0];\n    while ($i < $j) {\n        if ($arr->[$i]\
  \ > $arr->[$i + 1]) {\n            return 0;\n        }\n        if ($arr->[$j]\
  \ < $arr->[$j - 1]) {\n            return 0;\n        }\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$j] if $arr->[$j] > $max;\n     \
  \   $i++;\n        $j--;\n    }\n    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $min = $arr->[0];\n    my $min_idx\
  \ = 0;\n    while ($i < $len) {\n        if ($arr->[$i] < $min) {\n            $min\
  \ = $arr->[$i];\n            $min_idx = $i;\n        }\n        $i++;\n    }\n \
  \   if ($min_idx == 0) {\n        return 1;\n    }\n    my $j = $min_idx;\n    while\
  \ ($j < $len - 1) {\n        if ($arr->[$j] > $arr->[$j + 1]) {\n            return\
  \ 0;\n        }\n        $j++;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 2;\n}"
- "    my $n = scalar(@$arr);\n    if($n == 0) {\n        return 1;\n    }\n    my\
  \ $min = $arr->[0];\n    my $max = $arr->[0];\n    for(my $i = 1; $i < $n; $i++)\
  \ {\n        if($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n\
  \        if($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n  \
  \  }\n    return $max - $min + 1 == $n;\n}"
- "    my $len = @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j)\
  \ {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n       \
  \ }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n       \
  \ }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $i = 0;\n    while($i\
  \ < $n - 1) {\n        if($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n\
  \        }\n        $i++;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $i = 0;\n    my $j\
  \ = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] <= $arr->[$j]) {\n  \
  \          $i++;\n        } else {\n            return 0;\n        }\n    }\n  \
  \  return 1;\n}"
- "    my $size = scalar @$arr;\n    return 1 if $size == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$size-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $count = 0;\n \
  \   for(my $i = 0; $i < $len - 1; $i++) {\n        if($arr->[$i] > $arr->[$i + 1])\
  \ {\n            $count++;\n        }\n    }\n    return $count == 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while($i <\
  \ $j) {\n        if($arr->[$i] > $arr->[$j]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 1;\n}"
- "    my $size = scalar @$arr;\n    if ($size == 0) {\n        return 1;\n    }\n\
  \    my $min = $arr->[0];\n    my $max = $arr->[0];\n    for my $i (1 .. $size -\
  \ 1) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n     \
  \   }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n      \
  \  }\n    }\n    if ($max - $min + 1 == $size) {\n        return 1;\n    }\n   \
  \ return 0;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $min = $arr->[0];\n    my $min_index\
  \ = 0;\n    while ($i < $len) {\n        if ($arr->[$i] < $min) {\n            $min\
  \ = $arr->[$i];\n            $min_index = $i;\n        }\n        $i++;\n    }\n\
  \    if ($min_index == 0) {\n        return 1;\n    }\n    my $j = $min_index;\n\
  \    while ($j < $len) {\n        if ($arr->[$j] < $min) {\n            return 0;\n\
  \        }\n        $j++;\n    }\n    return 1;\n}"
- "    my @arr = @$arr;\n    my $n = @arr;\n    my $i = 0;\n    my $j = $n - 1;\n\
  \    while ($i < $j) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            return\
  \ 0;\n        }\n        if ($arr[$j] < $arr[$j - 1]) {\n            return 0;\n\
  \        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $min\
  \ = $arr->[0];\n    my $max = $arr->[$len - 1];\n    while ($i < $len) {\n     \
  \   if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n      \
  \  if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n       \
  \ $i++;\n    }\n    if ($min == $arr->[0] && $max == $arr->[$len - 1]) {\n     \
  \   return 1;\n    }\n    return 0;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $count = 0;\n    for (my $i = 0; $i < $len - 1; $i++) {\n        if ($arr->[$i]\
  \ > $arr->[$i + 1]) {\n            $count++;\n        }\n    }\n    if ($count >\
  \ 1) {\n        return 0;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $i = 0;\n    while\
  \ ($i < $len) {\n        my $j = $i + 1;\n        while ($j < $len) {\n        \
  \    if ($arr->[$i] > $arr->[$j]) {\n                return 0;\n            }\n\
  \            $j++;\n        }\n        $i++;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $k = 0;\n\
  \    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $k =\
  \ $j;\n            while ($k > $i && $arr->[$k] < $arr->[$k - 1]) {\n          \
  \      ($arr->[$k], $arr->[$k - 1]) = ($arr->[$k - 1], $arr->[$k]);\n          \
  \      $k--;\n            }\n            $i++;\n        }\n        else {\n    \
  \        $j--;\n        }\n    }\n    return $arr;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return 1 if $max - $min == $len - 1;\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    if ($n == 0) {\n        return 1;\n    }\n    my\
  \ $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] >\
  \ $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $min = $arr->[0];\n    my $min_index = 0;\n\
  \    for(my $i = 1; $i < $len; $i++) {\n        if($arr->[$i] < $min) {\n      \
  \      $min = $arr->[$i];\n            $min_index = $i;\n        }\n    }\n    if($min_index\
  \ == 0) {\n        return 1;\n    }\n    for(my $i = 1; $i < $len; $i++) {\n   \
  \     if($arr->[$i] < $arr->[$i - 1]) {\n            return 0;\n        }\n    }\n\
  \    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$j]) {\n          \
  \  $count++;\n            $i++;\n            $j--;\n        }\n        else {\n\
  \            $i++;\n        }\n    }\n    if($count > 1) {\n        return 0;\n\
  \    }\n    else {\n        return 1;\n    }\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    if ($n == 0) {\n        return 1;\n    }\n    my\
  \ $max = $arr->[0];\n    for my $i (1 .. $n - 1) {\n        if ($arr->[$i] < $max)\
  \ {\n            return 0;\n        }\n        $max = $arr->[$i];\n    }\n    return\
  \ 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 2;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if ($arr->[$i]\
  \ > $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \      }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if ($max - $min + 1 == $len) {\n        return 1;\n    }\n \
  \   return 0;\n}"
- "    my $n = scalar(@$arr);\n    if($n == 0) {\n        return 1;\n    }\n    my\
  \ $max = $arr->[0];\n    for(my $i = 1; $i < $n; $i++) {\n        if($arr->[$i]\
  \ < $max) {\n            return 0;\n        }\n        $max = $arr->[$i];\n    }\n\
  \    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    return $count\
  \ <= 2;\n}"
- "    return 1 if @$arr == 0;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n\
  \    for my $i (1 .. $#$arr) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return $max - $min\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $max = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        $max = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1 .. $n - 1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n\
  \        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n \
  \       if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n  \
  \  }\n    if ($max - $min == $len - 1) {\n        return 1;\n    }\n    return 0;\n\
  }"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return 1 if $max - $min == $len - 1;\n    return 0;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $count\
  \ = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    my $flag3\
  \ = 0;\n    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7\
  \ = 0;\n    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11\
  \ = 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15\
  \ = 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19\
  \ = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23\
  \ = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my $flag27\
  \ = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n    my $flag31\
  \ = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34 = 0;\n    my $flag35\
  \ = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my $flag38 = 0;\n    my $flag39\
  \ = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43\
  \ = 0;\n    my $flag44 = 0;\n    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47\
  \ = 0;\n    my $flag48 = 0;\n    my $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51\
  \ = 0;\n    my"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] <= $arr->[$j]) {\n            $i++;\n        }\
  \ else {\n            return 0;\n        }\n    }\n    return 1;\n}"
- "    # Write your code here\n    my $len = scalar @$arr;\n    return 1 if $len ==\
  \ 0;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n    for(my $i = 1; $i\
  \ < $len; $i++){\n        if($arr->[$i] < $min){\n            $min = $arr->[$i];\n\
  \        }\n        if($arr->[$i] > $max){\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if($max - $min + 1 == $len){\n        return 1;\n    }\n   \
  \ return 0;\n}"
- "    my $len = scalar @$arr;\n    my $count = 0;\n    my $i = 0;\n    my $j = 0;\n\
  \    my $k = 0;\n    my $flag = 0;\n    my $temp = 0;\n    my $flag1 = 0;\n    my\
  \ $flag2 = 0;\n    my $flag3 = 0;\n    my $flag4 = 0;\n    my $flag5 = 0;\n    my\
  \ $flag6 = 0;\n    my $flag7 = 0;\n    my $flag8 = 0;\n    my $flag9 = 0;\n    my\
  \ $flag10 = 0;\n    my $flag11 = 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n\
  \    my $flag14 = 0;\n    my $flag15 = 0;\n    my $flag16 = 0;\n    my $flag17 =\
  \ 0;\n    my $flag18 = 0;\n    my $flag19 = 0;\n    my $flag20 = 0;\n    my $flag21\
  \ = 0;\n    my $flag22 = 0;\n    my $flag23 = 0;\n    my $flag24 = 0;\n    my $flag25\
  \ = 0;\n    my $flag26 = 0;\n    my $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29\
  \ = 0;\n    my $flag30 = 0;\n    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33\
  \ = 0;\n    my $flag34 = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37\
  \ = 0;\n    my $flag38 = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n    my $flag41\
  \ = 0;\n    my $flag42 = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n    my $flag45\
  \ = 0;\n    my $flag46 = 0;\n    my $flag47 = 0;\n    my $flag48 = 0;\n    my $flag49\
  \ = 0;\n    my $flag50 = 0;\n   "
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return 1 if $max - $min == $len - 1;\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $size = scalar @$arr;\n    if ($size == 0) {\n        return 1;\n    }\n\
  \    my $max = $arr->[0];\n    for (my $i = 1; $i < $size; $i++) {\n        if ($arr->[$i]\
  \ < $max) {\n            return 0;\n        }\n        $max = $arr->[$i];\n    }\n\
  \    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    if ($n == 0) {\n        return 1;\n    }\n    my\
  \ $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $n; $i++)\
  \ {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n        $max = $arr->[$i]\
  \ if $arr->[$i] > $max;\n    }\n    return $max - $min == $n - 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \      }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if ($max - $min == $len - 1) {\n        return 1;\n    }\n \
  \   return 0;\n}"
- "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$arr);\n    my $count = 0;\n\
  \    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n\
  \    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n\
  \    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11 = 0;\n\
  \    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15 =\
  \ 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19\
  \ = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23\
  \ = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my $flag27\
  \ = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n    my $flag31\
  \ = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34 = 0;\n    my $flag35\
  \ = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my $flag38 = 0;\n    my $flag39\
  \ = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43\
  \ = 0;\n    my $flag44 = 0;\n    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47\
  \ = 0;\n    my $flag48 = 0;\n    my $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51\
  \ = 0;\n    my $flag52 = 0"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    my $k = 0;\n    while\
  \ ($i < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $k++;\n     \
  \       $i++;\n            $j--;\n        } else {\n            $i++;\n        }\n\
  \    }\n    return $k <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1 .. $n - 1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min == $n - 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] <= $arr->[$j]) {\n            $i++;\n        }\
  \ else {\n            return 0;\n        }\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        if ($arr->[$i] <\
  \ $min) {\n            $min = $arr->[$i];\n        }\n        if ($arr->[$i] > $max)\
  \ {\n            $max = $arr->[$i];\n        }\n    }\n    return $max - $min <=\
  \ 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return ($max - $min) == ($len - 1);\n}"
- "    my $len = @$arr;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $min\
  \ = 0;\n    my $max = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 =\
  \ 0;\n    my $flag3 = 0;\n    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6\
  \ = 0;\n    my $flag7 = 0;\n    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10\
  \ = 0;\n    my $flag11 = 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14\
  \ = 0;\n    my $flag15 = 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18\
  \ = 0;\n    my $flag19 = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22\
  \ = 0;\n    my $flag23 = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26\
  \ = 0;\n    my $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30\
  \ = 0;\n    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34\
  \ = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my $flag38\
  \ = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42\
  \ = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n    my $flag45 = 0;\n    my $flag46\
  \ = 0;\n    my $flag47 = 0;\n    my $flag48 = 0;\n    my $flag49 = 0;\n    my $flag50\
  \ = 0;\n    my $"
- "    my $n = @$arr;\n    return 1 if $n == 0;\n    my $i = 0;\n    while ($i < $n\
  \ - 1) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n  \
  \      }\n        $i++;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    while ($i < $n) {\n        my $j\
  \ = $i + 1;\n        while ($j < $n && $arr->[$j] > $arr->[$i]) {\n            $j++;\n\
  \        }\n        if ($j == $n) {\n            return 1;\n        }\n        $i\
  \ = $j;\n    }\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $i = 0;\n    while\
  \ ($i < $n - 1) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            my $j\
  \ = $i + 1;\n            while ($j < $n && $arr->[$j] < $arr->[$j - 1]) {\n    \
  \            $j++;\n            }\n            if ($j == $n) {\n               \
  \ return 0;\n            }\n            my $k = $j;\n            while ($k > $i)\
  \ {\n                ($arr->[$k], $arr->[$k - 1]) = ($arr->[$k - 1], $arr->[$k]);\n\
  \                $k--;\n            }\n            $i++;\n        }\n        else\
  \ {\n            $i++;\n        }\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    while ($i < $len) {\n        if\
  \ ($i == $len - 1) {\n            return 1;\n        }\n        if ($arr->[$i] >\
  \ $arr->[$i + 1]) {\n            return 0;\n        }\n        $i++;\n    }\n  \
  \  return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $max = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        $max = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            if ($arr->[$j]\
  \ < $arr->[$j - 1]) {\n                return 0;\n            }\n            $j--;\n\
  \        } else {\n            $i++;\n        }\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        if ($arr->[$i] <\
  \ $min) {\n            $min = $arr->[$i];\n        }\n        if ($arr->[$i] > $max)\
  \ {\n            $max = $arr->[$i];\n        }\n    }\n    return $max - $min <=\
  \ 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    my $min_idx = 0;\n    my $max_idx = 0;\n    for my\
  \ $i (1..$len-1) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n\
  \            $min_idx = $i;\n        }\n        if ($arr->[$i] > $max) {\n     \
  \       $max = $arr->[$i];\n            $max_idx = $i;\n        }\n    }\n    if\
  \ ($min_idx == 0) {\n        return 1;\n    }\n    if ($max_idx == $len-1) {\n \
  \       return 1;\n    }\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $max = $arr->[0];\n\
  \    for my $i (1 .. $n - 1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        $max = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    if ($n == 0) {\n        return 1;\n    }\n    my\
  \ $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        if ($arr->[$i] >\
  \ $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    my $k = 0;\n\
  \    my $count = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n\
  \    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n           \
  \ $flag = 1;\n            $k = $i;\n            last;\n        }\n        $i++;\n\
  \    }\n    if ($flag == 0) {\n        return 1;\n    }\n    while ($j > $k) {\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            $flag1 = 1;\n         \
  \   last;\n        }\n        $j--;\n    }\n    if ($flag1 == 0) {\n        return\
  \ 1;\n    }\n    for (my $i = $k; $i <= $j; $i++) {\n        if ($arr->[$i] > $arr->[$i\
  \ + 1]) {\n            $flag2 = 1;\n            last;\n        }\n    }\n    if\
  \ ($flag2 == 0) {\n        return 1;\n    }\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $min = $arr->[0];\n    my $min_i\
  \ = 0;\n    while ($i < $n) {\n        if ($arr->[$i] < $min) {\n            $min\
  \ = $arr->[$i];\n            $min_i = $i;\n        }\n        $i++;\n    }\n   \
  \ if ($min_i == 0) {\n        return 1;\n    }\n    $i = $min_i;\n    while ($i\
  \ < $n) {\n        if ($arr->[$i] < $arr->[$i - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        return 0 if $arr->[$i] < $arr->[$i-1];\n    }\n    return 1 if $min ==\
  \ $arr->[0];\n    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$arr);\n    my $flag = 0;\n\
  \    my $count = 0;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1;\
  \ $j < $n; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $flag\
  \ = 1;\n                $count++;\n            }\n        }\n    }\n    if($count\
  \ == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    my $flag3\
  \ = 0;\n    if ($len == 0) {\n        return 1;\n    }\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            $flag = 1;\n          \
  \  last;\n        }\n        $i++;\n    }\n    while ($j > 0) {\n        if ($arr->[$j]\
  \ < $arr->[$j - 1]) {\n            $flag1 = 1;\n            last;\n        }\n \
  \       $j--;\n    }\n    if ($flag == 0) {\n        return 1;\n    }\n    if ($flag1\
  \ == 0) {\n        return 1;\n    }\n    if ($arr->[$i] > $arr->[$j]) {\n      \
  \  return 0;\n    }\n    if ($arr->[$i] == $arr->[$j]) {\n        return 0;\n  \
  \  }\n    if ($arr->[$i] < $arr->[$j]) {\n        return 1;\n    }\n}"
- "    my $n = scalar(@$arr);\n    my $i = $n - 1;\n    my $j = $n - 1;\n    while\
  \ ($i >= 0) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $j = $i;\n  \
  \      }\n        $i--;\n    }\n    if ($j == $n - 1) {\n        return 1;\n   \
  \ }\n    $i = $j + 1;\n    while ($i < $n) {\n        if ($arr->[$i] < $arr->[$j])\
  \ {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    my $count = 0;\n \
  \   while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            $count++;\n\
  \        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            $count++;\n\
  \        }\n        $i++;\n        $j--;\n    }\n    return $count <= 2;\n}"
- "    return 1 if !@$arr;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n \
  \   for my $i (1 .. $#$arr) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return $max - $min\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1 .. $n - 1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \      }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n   \
  \     }\n    }\n    if ($max - $min + 1 == $len) {\n        return 1;\n    }\n \
  \   return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $count = 0;\n    for (my $i = 0; $i < $len - 1; $i++) {\n        if ($arr->[$i]\
  \ > $arr->[$i + 1]) {\n            $count++;\n        }\n    }\n    if ($count >\
  \ 1) {\n        return 0;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    while ($i < $n - 1) {\n       \
  \ if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n       \
  \ $i++;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    if ($count\
  \ <= 2) {\n        return 1;\n    }\n    return 0;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        return 0 if $arr->[$i] < $arr->[$i-1];\n    }\n    return 1 if $min ==\
  \ $arr->[0];\n    return 0;\n}"
- "    my $len = @$arr;\n    return 1 if $len == 0;\n    my $max = $arr->[0];\n  \
  \  for my $i (1..$len-1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        $max = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = $n - 1;\n    while ($i > 0 && $arr->[$i\
  \ - 1] > $arr->[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return\
  \ 0;\n    }\n    my $j = $n - 1;\n    while ($arr->[$j] < $arr->[$i - 1]) {\n  \
  \      $j--;\n    }\n    my $tmp = $arr->[$i - 1];\n    $arr->[$i - 1] = $arr->[$j];\n\
  \    $arr->[$j] = $tmp;\n    $j = $n - 1;\n    while ($i < $j) {\n        $tmp =\
  \ $arr->[$i];\n        $arr->[$i] = $arr->[$j];\n        $arr->[$j] = $tmp;\n  \
  \      $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = $n - 1;\n    while ($i > 0) {\n       \
  \ if ($arr->[$i] < $arr->[$i - 1]) {\n            my $j = $i - 1;\n            while\
  \ ($j >= 0 && $arr->[$j] > $arr->[$i]) {\n                $j--;\n            }\n\
  \            if ($j < 0) {\n                return 0;\n            }\n         \
  \   my $temp = $arr->[$i];\n            $arr->[$i] = $arr->[$j];\n            $arr->[$j]\
  \ = $temp;\n            return 1;\n        }\n        $i--;\n    }\n    return 1;\n\
  }"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    return 1 if !@$arr;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n \
  \   for my $i (1 .. $#$arr) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return $max - $min\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if ($arr->[$i]\
  \ > $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$j]) {\n          \
  \  $count++;\n            $i++;\n            $j--;\n        }\n        else {\n\
  \            $i++;\n        }\n    }\n    if($count == 1) {\n        return 1;\n\
  \    }\n    else {\n        return 0;\n    }\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $count = 0;\n    for (my $i = 0; $i < $n; $i++)\
  \ {\n        if ($arr->[$i] != $i + 1) {\n            $count++;\n        }\n   \
  \ }\n    return $count <= 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    for my $i (1 .. $n - 1) {\n        if ($arr->[$i] < $min) {\n            return\
  \ 0;\n        }\n        $min = $arr->[$i] if $arr->[$i] < $min;\n    }\n    return\
  \ 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $max = $arr->[0];\n    for (my $i = 1; $i < $len; $i++) {\n        if ($arr->[$i]\
  \ < $max) {\n            return 0;\n        }\n        $max = $arr->[$i];\n    }\n\
  \    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if ($arr->[$i]\
  \ > $arr->[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n\
  \    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$j]) {\n            return 0;\n     \
  \   }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1 .. $n - 1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while ($i < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n    \
  \        $count++;\n        }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n    \
  \        $count++;\n        }\n        $i++;\n        $j--;\n    }\n    if ($count\
  \ <= 2) {\n        return 1;\n    }\n    return 0;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $min_index = 0;\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n  \
  \          $min_index = $i;\n        }\n    }\n    if ($min_index == 0) {\n    \
  \    return 1;\n    }\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $len;\
  \ $i++) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n  \
  \      }\n    }\n    if ($min < $max) {\n        return 0;\n    }\n    return 1;\n\
  }"
- "    my $n = scalar(@$arr);\n    my $count = 0;\n    for(my $i = 0; $i < $n; $i++)\
  \ {\n        if($arr->[$i] != $i + 1) {\n            $count++;\n        }\n    }\n\
  \    return $count <= 1;\n}"
- "    my $n = scalar(@$arr);\n    if ($n == 0) {\n        return 1;\n    }\n    my\
  \ $max = $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        if ($arr->[$i]\
  \ < $max) {\n            return 0;\n        }\n        $max = $arr->[$i];\n    }\n\
  \    return 1;\n}"
- "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_pos = 0;\n    my\
  \ $min_pos = 0;\n    for my $i (1 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n\
  \            $max = $arr->[$i];\n            $max_pos = $i;\n        }\n       \
  \ if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n            $min_pos\
  \ = $i;\n        }\n    }\n    if ($max_pos == $#$arr && $min_pos == 0) {\n    \
  \    return 1;\n    }\n    if ($max_pos < $min_pos) {\n        return 1;\n    }\n\
  \    return 0;\n}"
- "    my $n = scalar(@$arr);\n    my $i = $n - 1;\n    while ($i > 0) {\n       \
  \ if ($arr->[$i] < $arr->[$i - 1]) {\n            return 0;\n        }\n       \
  \ $i--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return 1 if $max - $min == $len - 1;\n    return 0;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    if ($len == 0) {\n        return 1;\n    }\n \
  \   my $min = $arr->[0];\n    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n\
  \        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n        }\n \
  \       if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n  \
  \  }\n    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $i = 0;\n    while\
  \ ($i < $len) {\n        my $j = $i + 1;\n        while ($j < $len) {\n        \
  \    if ($arr->[$i] > $arr->[$j]) {\n                my $temp = $arr->[$i];\n  \
  \              $arr->[$i] = $arr->[$j];\n                $arr->[$j] = $temp;\n \
  \           }\n            $j++;\n        }\n        $i++;\n    }\n    return 1;\n\
  }"
- "    my $n = scalar(@$arr);\n    return 1 if $n == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for(my $i = 1; $i < $n; $i++) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return $max - $min <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $max = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        $max = $arr->[$i];\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    my $count\
  \ = 0;\n    while($i < $j) {\n        if($arr->[$i] > $arr->[$i+1]) {\n        \
  \    $count++;\n        }\n        if($arr->[$j] < $arr->[$j-1]) {\n           \
  \ $count++;\n        }\n        $i++;\n        $j--;\n    }\n    if($count > 1)\
  \ {\n        return 0;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            if ($arr->[$j] < $arr->[$j\
  \ - 1]) {\n                return 0;\n            }\n            $j--;\n       \
  \ } else {\n            $i++;\n        }\n    }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n\
  \        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n        }\n\
  \        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n        }\n\
  \        $i++;\n        $j--;\n    }\n    return 1;\n}"
- "    return 1 if !@$arr;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n \
  \   for my $i (1 .. $#$arr) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return $max - $min\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    my $max = $arr->[0];\n    for my $i (1..$len-1) {\n        $min = $arr->[$i]\
  \ if $arr->[$i] < $min;\n        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n\
  \    return 1 if $max - $min == $len - 1;\n    return 0;\n}"
- "    my $n = @$arr;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $min\
  \ = $arr->[0];\n    my $max = $arr->[0];\n    my $min_i = 0;\n    my $max_i = 0;\n\
  \    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n\
  \    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n\
  \    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11 = 0;\n\
  \    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15 =\
  \ 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19\
  \ = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23\
  \ = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my $flag27\
  \ = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n    my $flag31\
  \ = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34 = 0;\n    my $flag35\
  \ = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my $flag38 = 0;\n    my $flag39\
  \ = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43\
  \ = 0;\n    my $flag44 = 0;\n    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47\
  \ = 0;\n    my"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $min = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        return 0 if $arr->[$i] < $min;\n        $min\
  \ = $arr->[$i] if $arr->[$i] < $min;\n    }\n    return 1;\n}"
- "    my $n = @$arr;\n    return 1 if $n == 0;\n    my $i = 0;\n    while ($i < $n\
  \ - 1) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            my $j = $i + 1;\n\
  \            while ($j < $n && $arr->[$j] < $arr->[$j - 1]) {\n                $j++;\n\
  \            }\n            if ($j == $n) {\n                return 0;\n       \
  \     }\n            my $temp = $arr->[$j];\n            for (my $k = $j; $k > $i;\
  \ $k--) {\n                $arr->[$k] = $arr->[$k - 1];\n            }\n       \
  \     $arr->[$i] = $temp;\n            $i++;\n        }\n        else {\n      \
  \      $i++;\n        }\n    }\n    return 1;\n}"
- "    return 1 if !@$arr;\n    my $min = $arr->[0];\n    my $max = $arr->[0];\n \
  \   for my $i (1 .. $#$arr) {\n        $min = $arr->[$i] if $arr->[$i] < $min;\n\
  \        $max = $arr->[$i] if $arr->[$i] > $max;\n    }\n    return $max - $min\
  \ <= 1;\n}"
- "    my $len = scalar @$arr;\n    return 1 if $len == 0;\n    my $max = $arr->[0];\n\
  \    for my $i (1..$len-1) {\n        if ($arr->[$i] < $max) {\n            return\
  \ 0;\n        }\n        else {\n            $max = $arr->[$i];\n        }\n   \
  \ }\n    return 1;\n}"
- "    my $len = scalar @$arr;\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i\
  \ < $j) {\n        if ($arr->[$i] > $arr->[$i + 1]) {\n            return 0;\n \
  \       }\n        if ($arr->[$j] < $arr->[$j - 1]) {\n            return 0;\n \
  \       }\n        $i++;\n        $j--;\n    }\n    return 1;\n}"
language: pl
name: HumanEval_109_move_one_ball
prompt: "# We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
  # numbers in the array will be randomly ordered. Your task is to determine if\n\
  # it is possible to get an array sorted in non-decreasing order by performing \n\
  # the following operation on the given array:\n# You are allowed to perform right\
  \ shift operation any number of times.\n# One right shift operation means shifting\
  \ all elements of the array by one\n# position in the right direction. The last\
  \ element of the array will be moved to\n# the starting position in the array i.e.\
  \ 0th index. \n# If it is possible to obtain the sorted array by performing the\
  \ above operation\n# then return True else return False.\n# If the given array is\
  \ empty then return True.\n# Note: The given list is guaranteed to have unique elements.\n\
  # For Example:\n# move_one_ball([3, 4, 5, 1, 2])==>True\n# Explanation: By performin\
  \ 2 right shift operations, non-decreasing order can\n# be achieved for the given\
  \ array.\n# move_one_ball([3, 5, 4, 1, 2])==>False\n# Explanation:It is not possible\
  \ to get non-decreasing order for the given\n# array by performing any number of\
  \ right shift operations.\nsub move_one_ball {\n    my($arr) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&move_one_ball;\n\
  \        if(eq_deeply($candidate->([3, 4, 5, 1, 2]),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 5, 10,\
  \ 1, 2]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([4, 3, 1, 2]),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 5, 4, 1, 2]),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

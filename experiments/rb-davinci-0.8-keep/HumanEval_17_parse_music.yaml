name: HumanEval_17_parse_music
language: rb
prompt: "# Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n# Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n# not last.\n# Here is a legend:\n\
  # 'o' - whole note, lasts four beats\n# 'o|' - half note, lasts two beats\n# '.|'\
  \ - quater note, lasts one beat\n# >>> parse_music('o o| .| o| o| .| .| .| .| o\
  \ o')\n# [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\ndef parse_music(music_string)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parse_music\n\
  \    candidate = method(:parse_music)\n    assert_equal([], candidate.call(\"\"\
  ))\n    assert_equal([4, 4, 4, 4], candidate.call(\"o o o o\"))\n    assert_equal([1,\
  \ 1, 1, 1], candidate.call(\".| .| .| .|\"))\n    assert_equal([2, 2, 1, 1, 4, 4,\
  \ 4, 4], candidate.call(\"o| o| .| .| o o o o\"))\n    assert_equal([2, 1, 2, 1,\
  \ 4, 2, 4, 2], candidate.call(\"o| .| o| .| o o| o o|\"))\n  end\nend\n"
completions: ["  beats = []\n  music_string.split.each do |note|\n    beats << 4 if\
    \ note == 'o'\n    beats << 2 if note == 'o|'\n    beats << 1 if note == '.|'\n\
    \  end\n  beats\nend", "\tbeat_lengths = []\n\tlengths = music_string.split(\"\
    \ \")\n\t\n\tlengths.each do |symbol|\n\t\tif symbol == \"o\"\n\t\t\tbeat_lengths\
    \ << 4\n\t\telsif symbol == \"o|\"\n\t\t\tbeat_lengths << 2\n\t\telsif symbol\
    \ == \".|\"\n\t\t\tbeat_lengths << 1\n\t\tend\n\tend\n\t\n\tbeat_lengths\nend",
  "  duration = Hash.new(1)\n  duration['.'] = 1\n  duration['o'] = 4\n  duration['o|']\
    \ = 2\n  durations = []\n  music_string.split(' ').each do |a|\n    durations\
    \ << duration[a]\n  end\n  durations\nend", "  count = 0\n  music_string.split('\
    \ ').map do |note|\n    if note == 'o'\n      count = 4\n    elsif note == 'o|'\n\
    \      count = 2\n    elsif note == '.|'\n      count = 1\n    end\n  end\nend",
  "  music_string.split(' ').map do |symbol|\n    case symbol\n    when 'o'\n    \
    \  4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n  end\nend", " \
    \ beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  result = []\n\
    \  music_string.split(' ').each do |symbol|\n    result << beats[symbol]\n  end\n\
    \  result\nend", "  beats = []\n  music_string.split(' ').each do |symbol|\n \
    \   case symbol\n    when 'o'\n      beats << 4\n    when 'o|'\n      beats <<\
    \ 2\n    when '.|'\n      beats << 1\n    end\n  end\n  beats\nend", "  music_string.gsub!('o\
    \ o', 'o o|')\n  music_string.gsub!('| o o', '| o o|')\n  music_string.gsub!('|\
    \ |', '| .|')\n  music_string.gsub!('|', ' .|')\n  music_string.gsub!('o', 'o|')\n\
    \  result = []\n  music_string.split(' ').each do |string|\n    if string == 'o|'\n\
    \      result << 4\n    elsif string == 'o'\n      result << 4\n    elsif string\
    \ == '.|'\n      result << 1\n    elsif string == 'o o|'\n      result << 4\n\
    \      result << 4\n    elsif string == '| o o|'\n      result << 4\n      result\
    \ << 4\n    elsif string == '| .|'\n      result << 1\n    end\n  end\n  result\n\
    end", "\t#your code here\nend", "  music_list = music_string.split(' ')\n  music_list.map\
    \ { |note| { 'o' => 4, 'o|' => 2, '.|' => 1 }[note] }\nend", "  result = []\n\
    \  music_string.split(' ').each do |note|\n    case note\n    when 'o'\n     \
    \ result << 4\n    when 'o|'\n      result << 2\n    when '.|'\n      result <<\
    \ 1\n    end\n  end\n  result\nend", "  beats = {\n    'o' => 4,\n    'o|' =>\
    \ 2,\n    '.|' => 1\n  }\n  beats_array = []\n  music_string.split(' ').each do\
    \ |chunk|\n    beats_array << beats[chunk]\n  end\n  beats_array\nend", "  beats\
    \ = []\n  notes = music_string.split(' ')\n  notes.each do |note|\n    if note\
    \ == 'o'\n      beats << 4\n    elsif note == 'o|'\n      beats << 2\n    elsif\
    \ note == '.|'\n      beats << 1\n    end\n  end\n  beats\nend", "  beats = music_string.split('\
    \ ')\n  values = []\n  beats.each do |beat|\n    if beat == 'o'\n      values\
    \ << 4\n    elsif beat == 'o|'\n      values << 2\n    elsif beat == '.|'\n  \
    \    values << 1\n    end\n  end\n  values\nend", "    array = music_string.split(\"\
    \ \")\n    res = []\n    array.each do |i|\n        if i == \"o\"\n          \
    \  res.push(4)\n        elsif i == \"o|\"\n            res.push(2)\n        elsif\
    \ i == \".|\"\n            res.push(1)\n        end\n    end\n    return res\n\
    end", "  music_string.split(' ').map { |symbol| symbols_to_beats[symbol] }\nend",
  "  # Insert your solution here\n  arr = music_string.split(' ')\n  arr.map { |el|\
    \ el == 'o' ? 4 : 2 }\nend", "  half = \"o|\"\n  quarter = \".|\"\n  whole = \"\
    o\"\n  arr = []\n  str_arr = music_string.split(\" \")\n  str_arr.each do |e|\n\
    \    if e == half\n      arr << 2\n    elsif e == quarter\n      arr << 1\n  \
    \  elsif e == whole\n      arr << 4\n    end\n  end\n  arr\nend", "\tresult =\
    \ []\n\tmusic_string.split(' ').each do |x|\n\t\tif x == 'o'\n\t\t\tresult <<\
    \ 4\n\t\telsif x == 'o|'\n\t\t\tresult << 2\n\t\telsif x == '.|'\n\t\t\tresult\
    \ << 1\n\t\tend\n\tend\n\treturn result\nend", "  if music_string.class != String\
    \ || music_string == \"\"\n    puts \"Please enter a string\"\n    return\n  end\n\
    \  #convert the string into an array of characters\n  notes = music_string.split(\"\
    \")\n  #create an empty array to save the output\n  beats = []\n  #loop over each\
    \ character in the array of characters\n  notes.each do |x|\n    #if character\
    \ is o push 4 beats to the output array\n    if x == \"o\"\n      beats.push(4)\n\
    \    #if character is o| push 2 beats to the output array\n    elsif x == \"o|\"\
    \n      beats.push(2)\n    #if character is .| push 1 beat to the output array\n\
    \    elsif x == \".|\"\n      beats.push(1)\n    #if character is a space, skip\n\
    \    elsif x == \" \"\n      next\n    #if character is anything else, print out\
    \ a message and don't push anything to the output array\n    else\n      puts\
    \ \"Please enter only o, o|, .|, and spaces.\"\n      return\n    end\n  end\n\
    \  #return the output array\n  return beats\nend", end, "  beats = ['o' , 'o|'\
    \ , '.|']\n  arr = []\n  music_string.split(' ').each do |music|\n    if music\
    \ == beats[0]\n      arr << 4\n    elsif music == beats[1]\n      arr << 2\n \
    \   elsif music == beats[2]\n      arr << 1\n    end\n  end\n  arr\nend", "  beats\
    \ = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split.map\
    \ { |note| beats[note] }\nend", "    beats = []\n    chars = music_string.split('')\n\
    \    chars.each do |ch|\n        if ch == 'o'\n            beats.push(4)\n   \
    \     elsif ch == 'o|'\n            beats.push(2)\n        elsif ch == '.|'\n\
    \            beats.push(1)\n        end\n    end\n    return beats\nend", "  beats\
    \ = []\n  music_string.split(\" \").each do |chunk|\n    if chunk == 'o'\n   \
    \   beats << 4\n    elsif chunk == 'o|'\n      beats << 2\n    elsif chunk ==\
    \ '.|'\n      beats << 1\n    end\n  end\n  beats\nend", "  music_array = music_string.split('\
    \ ')\n  beats_array = []\n  music_array.each do |note|\n    if note == 'o'\n \
    \     beats_array << 4\n    elsif note == 'o|'\n      beats_array << 2\n    elsif\
    \ note == '.|'\n      beats_array << 1\n    end\n  end\n  beats_array\nend", " \
    \ result = []\n  music_string.split.each do |note|\n    result << note.count('o')*4\
    \ if note.count('o') > 0\n    result << note.count('.')*2 if note.count('.') >\
    \ 0\n    result << note.count('|')*1 if note.count('|') > 0\n  end\n  result\n\
    end", "  music_string = music_string.split(' ')\n  output = []\n  music_string.each\
    \ do |beat|\n    if beat == 'o'\n      output << 4\n    elsif beat == 'o|'\n \
    \     output << 2\n    elsif beat == '.|'\n      output << 1\n    end\n  end\n\
    \  output\nend", "  beats = {\n    \"o\" => 4,\n    \"o|\" => 2,\n    \".|\" =>\
    \ 1\n  }\n  music_string.split(\" \").map do |note|\n    beats[note]\n  end\n\
    end", "  beats = {\n    \"o\" => 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n\
    \  music_string.split(\" \").map { |note| beats[note] }\nend", "  beats = {'o'\
    \ => 4, 'o|' => 2, '.|' => 1}\n  # your code goes here\n  music_string.split(\"\
    \ \").map { |note| beats[note] }\nend", "  duration = {'o' => 4, 'o|' => 2, '.|'\
    \ => 1}\n  notes = music_string.split(' ')\n  durations = []\n  notes.each do\
    \ |note|\n    durations << duration[note]\n  end\n  durations\nend", "  beats\
    \ = []\n  c = 0\n  music_string.split(' ').each do |m|\n    beats[c] = case m\n\
    \               when 'o' then 4\n               when 'o|' then 2\n           \
    \    when '.|' then 1\n               end\n    c += 1\n  end\n  beats\nend", " \
    \ music_string.split.map { |n| n.length == 1 ? 4 : 2 }\nend", "\ttime = []\n\t\
    music_string.split(' ').each { |note| time << get_time(note) }\n\ttime\nend",
  "  beats = music_string.gsub(/o/,'4 ').gsub(/o\\|/,'2 ').gsub(/\\.\\|/,'1 ').split('\
    \ ')\n  beats.map { |beat| beat.to_i }\nend", "  beats = {\n    'o' => 4,\n  \
    \  'o|' => 2,\n    '.|' => 1\n  }\n  result = []\n  music_string.split.each do\
    \ |symbol|\n    result << beats[symbol]\n  end\n  result\nend", "  beats = []\n\
    \  music_string.split(' ').each do |note|\n    if note == 'o'\n      beats <<\
    \ 4\n    elsif note == 'o|'\n      beats << 2\n    elsif note == '.|'\n      beats\
    \ << 1\n    end\n  end\n  beats\nend", "  beat = []\n  length = []\n  music_string.split.each\
    \ do |i|\n    if i == 'o'\n      beat << i\n      length << 4\n    elsif i ==\
    \ 'o|'\n      beat << i\n      length << 2\n    elsif i == '.|'\n      beat <<\
    \ i\n      length << 1\n    end\n  end\n  return length\nend", "  beats = { 'o'\
    \ => 4, 'o|' => 2, '.|' => 1 }\n  music_string.split(' ').map { |x| beats[x] }\n\
    end", "  # your code here\nend", "  notes = []\n  music_string.split(\" \").each\
    \ do |note|\n    if note.match(\"o\")\n      notes << 4\n    elsif note.match(\"\
    o|\")\n      notes << 2\n    elsif note.match(\".|\")\n      notes << 1\n    end\n\
    \  end\n  notes\nend", "  # Your code goes here\nend", "  beats = { \"o\" => 4,\
    \ \"o|\" => 2, \".|\" => 1 }\n  music_string.split.map { |note| beats[note] }\n\
    end", "  music_string.scan(/[^\\s|]+/).map { |a| a.length % 2 == 0 ? a.length\
    \ / 2 : (a.length + 1) / 2 }\nend", "  music_string.split.map do |note|\n    case\
    \ note\n    when 'o'\n      4\n    when 'o|'\n      2\n    when '.|'\n      1\n\
    \    end\n  end\nend", "  music_string.gsub('o o|', 'o.|').gsub('o o', 'oo').split('\
    \ ').map do |note|\n    note.split('|').length\n  end\nend", "  beats = { 'o'\
    \ => 4, 'o|' => 2, '.|' => 1 }\n  music_string.split.map { |note| beats[note]\
    \ }\nend", "  notes = music_string.split(' ')\n  array = []\n  for note in notes\n\
    \    if note == 'o'\n      array.push(4)\n    elsif note == 'o|'\n      array.push(2)\n\
    \    elsif note == '.|'\n      array.push(1)\n    end\n  end\n  array\nend", " \
    \ beat_list = []\n  music_string.split(' ').each do |note|\n    if note == 'o'\n\
    \      beat_list << 4\n    elsif note == 'o|'\n      beat_list << 2\n    elsif\
    \ note == '.|'\n      beat_list << 1\n    end\n  end\n  beat_list\nend", "  arr\
    \ = []\n  music_string.split(' ').each do |i|\n    if i == 'o'\n      arr << 4\n\
    \    elsif i == 'o|'\n      arr << 2\n    elsif i == '.|'\n      arr << 1\n  \
    \  end\n  end\n  arr\nend", "  music_string.gsub(/\\s+/, '').chars.map do |note|\n\
    \    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when '.|' then\
    \ 1\n    end\n  end\nend", "  music_hash = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n\
    \  music_arr = music_string.split(' ')\n  result = []\n  music_arr.each do |note|\n\
    \    result << music_hash[note]\n  end\n  result\nend", "  music_string.scan(/[o|.|]+/).map\
    \ { |n| n.chars.last == '|' ? n.chars.length - 1 : n.chars.length * 2 }\nend",
  "  beats = []\n  music_string.split(' ').each do |m|\n    if m == 'o'\n      beats\
    \ << 4\n    elsif m == 'o|'\n      beats << 2\n    elsif m == '.|'\n      beats\
    \ << 1\n    end\n  end\n  beats\nend", "  beats = []\n  music_string.split(\"\
    \ \").each do |note|\n    if note == 'o'\n      beats << 4\n    elsif note ==\
    \ 'o|'\n      beats << 2\n    elsif note == '.|'\n      beats << 1\n    end\n\
    \  end\n  beats\nend", "  beats = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split.map\
    \ { |note| beats[note] }\nend", "  beats = 0\n  music_string.split.map do |note|\n\
    \    if note == 'o'\n      beats = 4\n    elsif note == 'o|'\n      beats = 2\n\
    \    elsif note == '.|'\n      beats = 1\n    end\n  end\nend", "  key = { 'o'\
    \ => 4, 'o|' => 2, '.|' => 1 }\n  times = []\n  music_string.split.each do |note|\n\
    \    times << key[note]\n  end\n  times\nend", "  beats = []\n  arr = music_string.split('\
    \ ')\n  arr.each do |val|\n    case val\n    when 'o'\n      beats << 4\n    when\
    \ 'o|'\n      beats << 2\n    when '.|'\n      beats << 1\n    end\n  end\n  beats\n\
    end", "  notes = music_string.split(' ')\n  notes.map do |note|\n    case note\n\
    \    when 'o'\n      4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n\
    \  end\nend", "  beats = []\n  dur = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split('\
    \ ').each do |note|\n    beats << dur[note]\n  end\n  beats\nend", "  music_string.split('\
    \ ').map do |note|\n    case note\n    when 'o' then 4\n    when 'o|' then 2\n\
    \    when '.|' then 1\n    end\n  end\nend", "  beats = ['o', 'o|', '.|']\n  song\
    \ = []\n  music_string.split(' ').each do |note|\n    beats.each_with_index do\
    \ |beat, index|\n      song << index + 1 if note == beat\n    end\n  end\n  song\n\
    end", "  music_string.gsub('o', '4').gsub('o|', '2').gsub('.|', '1').split(\"\
    \ \").map(&:to_i)\nend", "  beats = {\n    \"o\" => 4,\n    \"o|\" => 2,\n   \
    \ \".|\" => 1\n  }\n  music_string.split(\" \").map do |note|\n    beats[note]\n\
    \  end\nend", "  raise Exception.new(\"No music here\") if music_string.nil?\n\
    \  beats = []\n  music_string.split(\" \").each do |note|\n    beats << 4 if note\
    \ == \"o\"\n    beats << 2 if note == \"o|\"\n    beats << 1 if note == \".|\"\
    \n  end\n  beats\nend", "  music_string.split(' ').map do |note|\n    if note\
    \ == 'o'\n      4\n    elsif note == 'o|'\n      2\n    elsif note == '.|'\n \
    \     1\n    end\n  end\nend", "  music_string.gsub(/o/, '4').gsub(/o\\|/, '2').gsub(/\\\
    .\\|/, '1').split.map { |s| s.to_i }\nend", "  music_string.split(' ').map do\
    \ |note|\n    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when '.|'\
    \ then 1\n    end\n  end\nend", "  legend = { \"o\" => 4, \"o|\" => 2, \".|\"\
    \ => 1 }\n  music_string.split(\" \").map { |note| legend[note] }\nend", "  beats\
    \ = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').map { |note| beats[note]\
    \ }\nend", "  beats = {\"o\" => 4, \"o|\" => 2, \".|\" => 1}\n  beats_list = music_string.scan(/o|\\\
    .\\|/)\n  beats_list.map { |beat| beats[beat] }\nend", "  music_keys = {'o' =>\
    \ 4, 'o|' => 2, '.|' => 1}\n  music_string.split.map{|note| music_keys[note]}\n\
    end", "  # your code goes here\nend", "  array = music_string.split(' ')\n  new_array\
    \ = []\n  array.each do |string|\n    case string\n    when 'o'\n      new_array\
    \ << 4\n    when 'o|'\n      new_array << 2\n    when '.|'\n      new_array <<\
    \ 1\n    end\n  end\n  new_array\nend", "\tbeat = []\n\tmusic_string.split.each\
    \ do |s|\n\t\tcase s\n\t\twhen 'o'\n\t\t\tbeat << 4\n\t\twhen 'o|'\n\t\t\tbeat\
    \ << 2\n\t\twhen '.|'\n\t\t\tbeat << 1\n\t\tend\n\tend\n\tbeat\nend", "  result\
    \ = []\n  music_arr = music_string.split(' ')\n  music_arr.each do |note|\n  \
    \  case note\n    when 'o'\n      result << 4\n    when 'o|'\n      result <<\
    \ 2\n    when '.|'\n      result << 1\n    end\n  end\n  result\nend", "  note_lengths\
    \ = {\n    \"o\" => 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n  music_string.split.map\
    \ do |note|\n    note_lengths[note]\n  end\nend", "  music_array = music_string.split('\
    \ ')\n  beats_array = []\n  music_array.each do |x|\n    if x == 'o'\n      beats_array\
    \ << 4\n    elsif x == 'o|'\n      beats_array << 2\n    elsif x == '.|'\n   \
    \   beats_array << 1\n    end\n  end\n  beats_array\nend", "    notes = music_string.split('\
    \ ')\n    arr = []\n    notes.each do |note|\n        if note == 'o'\n       \
    \     arr.push(4)\n        elsif note == 'o|'\n            arr.push(2)\n     \
    \   elsif note == '.|'\n            arr.push(1)\n        end\n    end\n    return\
    \ arr\nend", "  beats = []\n  music_string.split(' ').each do |beat|\n    if beat.include?(\"\
    o\")\n      beats << beat.count(\"o\")\n    else\n      beats << 1\n    end\n\
    \  end\n  beats\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' =>\
    \ 1\n  }\n  result = []\n  notes = music_string.split(' ')\n  notes.each do |note|\n\
    \    result << beats[note]\n  end\n  result\nend", "  beats = music_string.split('\
    \ ')\n  beats.map { |beat| beat.size }\nend", "  # TODO: implement me\nend", " \
    \   result = []\n    music_string.split(' ').each do |element|\n        case element\n\
    \        when 'o'\n            result << 4\n        when 'o|'\n            result\
    \ << 2\n        when '.|'\n            result << 1\n        end\n    end\n   \
    \ result\nend", "  res = []\n  i = 0\n  while i < music_string.length\n    case\
    \ music_string[i]\n    when 'o'\n      res << 4\n      i += 1\n    when '.'\n\
    \      res << 1\n      i += 2\n    else\n      res << 2\n      i += 2\n    end\n\
    \  end\n  res\nend", "  beats = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  music_string.gsub(/o|o|.|/)\
    \ { |match| beats[match] }.split.map(&:to_i)\nend", "\tp music_string.split('\
    \ ').map do |note|\n\t\tnote.include?('o') ? 4 : 2\n\tend\nend", "  str = \"o\
    \ o| .| o| o| .| .| .| .| o o\"\n  arr = str.split('')\n  arr.map do |ele|\n \
    \   if ele == 'o'\n      4\n    elsif ele == '.'\n      1\n    else\n      2\n\
    \    end\n  end\nend", "  notes = {\"o\" => 4, \"o|\" => 2, \".|\" => 1}\n  music_string.split.map\
    \ { |note| notes[note] }\nend", "  parsed_music = []\n  music_string.split(' ').each\
    \ do |symbol|\n    case symbol\n    when 'o'\n      parsed_music << 4\n    when\
    \ 'o|'\n      parsed_music << 2\n    when '.|'\n      parsed_music << 1\n    end\n\
    \  end\n  parsed_music\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n  \
    \  '.|' => 1\n  }\n  result = []\n  music_string.split(' ').each do |element|\n\
    \    result << beats[element]\n  end\n  result\nend", "  music_array = music_string.split('\
    \ ')\n  note_array = []\n  music_array.each do |notes|\n    note_array << notes.count('o')\
    \ * 4 + notes.count('.')\n  end\n  return note_array\nend", "\tnotes = {'o' =>\
    \ 4, 'o|' => 2, '.|' => 1}\n\tmusic_string.split(' ').map { |x| notes[x] }\nend",
  "  beats = {\"o\" => 4, \"o|\" => 2, \".|\" => 1}\n  music_string.split.map { |note|\
    \ beats[note] }\nend", "  result = []\n  music_string.split(' ').each do |symbol|\n\
    \    if symbol == 'o'\n      result << 4\n    elsif symbol == 'o|'\n      result\
    \ << 2\n    elsif symbol == '.|'\n      result << 1\n    end\n  end\n  result\n\
    end", "  notes = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').map\
    \ { |s| notes[s] }\nend", "  beats = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  notes\
    \ = music_string.split(' ')\n  notes.map { |note| beats[note] }\nend", "  beat_map\
    \ = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  beats = []\n  music_string.split('\
    \ ').each do |note|\n    beats << beat_map[note]\n  end\n  beats\nend", "    notes\
    \ = {\n        'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n    }\n    result\
    \ = []\n    current_pos = 0\n    while current_pos < music_string.length do\n\
    \        notes.each do |note, beats|\n            note_length = note.length\n\
    \            if music_string[current_pos, note_length] == note\n             \
    \   result << beats\n                current_pos += note_length\n            \
    \    break\n            end\n        end\n    end\n    result\nend", "  music_string.split.map\
    \ { |x| x.chars.size }\nend", "  beats = []\n  music_string.split(' ').each do\
    \ |note|\n    case note\n    when 'o'\n      beats << 4\n    when 'o|'\n     \
    \ beats << 2\n    when '.|'\n      beats << 1\n    end\n  end\n  beats\nend",
  "  music_string.scan(/(\\D)/).map { |m| m[0] == 'o' ? 4 : 2 }\nend", "  beats =\
    \ {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').map{|note| beats[note]}\n\
    end", "  music_string.split(' ').map do |note|\n    case note\n    when 'o'\n\
    \      4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n  end\nend",
  "  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  (music_string.split\
    \ + ['o']).map do |i|\n    beats[i]\n  end\nend", "  map = {\n    'o' => 4,\n\
    \    'o|' => 2,\n    '.|' => 1\n  }\n  words = music_string.split(' ')\n  notes\
    \ = words.map { |word| map[word] }\n  notes\nend", "  conversion = {\n    'o'\
    \ => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  output = []\n  music_string.split('\
    \ ').each do |note|\n    output << conversion[note]\n  end\n  output\nend", " \
    \ beats = {\"o\" => 4, \"o|\" => 2, \".|\" => 1}\n  music_string.split.map{|beat|\
    \ beats[beat]}\nend", "  note_durations = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n\
    \  music_string.split(' ').map { |note| note_durations[note] }\nend", "  result\
    \ = []\n  music_string.split(' ').each do |n|\n    if n == 'o'\n      result <<\
    \ 4\n    elsif n == 'o|'\n      result << 2\n    elsif n == '.|'\n      result\
    \ << 1\n    end\n  end\n  result\nend", "  beats = {\"o\" => 4, \"o|\" => 2, \"\
    .|\" => 1}\n  notes = music_string.split\n  notes.map{|note| beats[note]}\nend",
  "  music_string.split(' ').map do |chars|\n    if chars == 'o'\n      4\n    elsif\
    \ chars == 'o|'\n      2\n    elsif chars == '.|'\n      1\n    end\n  end\nend",
  "  if music_string.nil?\n    return []\n  end\n  beats = []\n  music_array = music_string.split('\
    \ ')\n  music_array.each do |symbol|\n    case symbol\n    when 'o'\n      beats\
    \ << 4\n    when 'o|'\n      beats << 2\n    when '.|'\n      beats << 1\n   \
    \ end\n  end\n  beats\nend", "  # your code here\nend", "  raise NotImplementedError\n\
    end", "  beats = {\n    \"o\" => 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n\
    \  music_string.split.map { |note| beats[note] }\nend", "  s = music_string.split\n\
    \  t = []\n  i = 0\n  while i < s.length\n    if s[i] == 'o'\n      t.push(4)\n\
    \      i += 1\n    elsif s[i] == 'o|'\n      t.push(2)\n      i += 1\n    elsif\
    \ s[i] == '.|'\n      t.push(1)\n      i += 1\n    end\n  end\n  return t\nend",
  "    beats = {\n        'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n    }\n\
    \    music_string.split.map { |note| beats[note] }\nend", "  beats = {'o' => 4,\
    \ 'o|' => 2, '.|' => 1}\n  music_string.split(' ').map { |note| beats[note] }\n\
    end", "  beats = []\n  music_string.split(\" \").each do |s|\n    case s\n   \
    \ when 'o'\n      beats << 4\n    when 'o|'\n      beats << 2\n    when '.|'\n\
    \      beats << 1\n    end\n  end\n  beats\nend", "  result = []\n  music_string.split('\
    \ ').each do |p|\n    if p == 'o'\n      result << 4\n    elsif p == 'o|'\n  \
    \    result << 2\n    elsif p == '.|'\n      result << 1\n    end\n  end\n  result\n\
    end", "  music_list = music_string.split(' ')\n  beats_list = []\n  music_list.each\
    \ do |note|\n    if note == 'o'\n      beats_list.push(4)\n    elsif note == 'o|'\n\
    \      beats_list.push(2)\n    elsif note == '.|'\n      beats_list.push(1)\n\
    \    end\n  end\n  beats_list\nend", "  beats = []\n  music_string.split(' ').each\
    \ do |music_note|\n    case music_note\n    when 'o'\n      beats << 4\n    when\
    \ 'o|'\n      beats << 2\n    when '.|'\n      beats << 1\n    end\n  end\n  beats\n\
    end", "  note_values = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split.map{|note|\
    \ note_values[note]}\nend", "  # Go through each note in the music string, and\
    \ return the proper beat count.\n  beats = []\n  music_string.split(' ').each\
    \ do |note|\n    case note\n    when 'o'\n      beats << 4\n    when 'o|'\n  \
    \    beats << 2\n    when '.|'\n      beats << 1\n    end\n  end\n  beats\nend",
  "  if music_string.empty?\n    return []\n  end\n  music_string = music_string.gsub(/o/,\
    \ 'o|o|o|o|')\n  music_string = music_string.gsub(/\\./, 'o|')\n  beats = music_string.split('|')\n\
    \  beats = beats.map do |x|\n    x.length\n  end\n  beats\nend", "  beats = music_string.split('\
    \ ')\n  music_arr = []\n  beats.each do |beat|\n    if beat == 'o'\n      music_arr\
    \ << 4\n    elsif beat == 'o|'\n      music_arr << 2\n    elsif beat == '.|'\n\
    \      music_arr << 1\n    end\n  end\n  music_arr\nend", "  beats = {\n    'o'\
    \ => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  beats_per_note = []\n  note_arr\
    \ = music_string.split(' ')\n  note_arr.each do |note|\n    beats_per_note <<\
    \ beats[note]\n  end\n  beats_per_note\nend", "  notes = []\n  keys = music_string.split('\
    \ ')\n  keys.each do |note|\n    if note.length == 1\n      notes << 4\n    elsif\
    \ note.length == 2\n      notes << 2\n    elsif note.length == 3\n      notes\
    \ << 1\n    end\n  end\n  notes\nend", "  array_of_notes = music_string.split('\
    \ ')\n  array_of_notes.map { |element| element == 'o' ? 4 : 2 }\nend", "  # Write\
    \ your code here\n  notes = []\n  beats = {'o' => 4, 'o|' => 2, '.|' => 1}\n \
    \ while !music_string.empty?\n    beats.each do |note, beat|\n      if music_string.start_with?(note)\n\
    \        notes << beat\n        music_string.slice!(note)\n      end\n    end\n\
    \  end\n  notes\nend", "  beats = []\n  music_string.split(' ').each do |note|\n\
    \    if note == 'o'\n      beats << 4\n    elsif note == 'o|'\n      beats <<\
    \ 2\n    elsif note == '.|'\n      beats << 1\n    end\n  end\n  beats\nend",
  "  # split the string into separate notes and symbols\n  notes = music_string.split('\
    \ ')\n  # iterate through list of notes and their symbols\n  durations = []\n\
    \  notes.each do |note|\n    durations << 4 if note == 'o'\n    durations << 2\
    \ if note == 'o|'\n    durations << 1 if note == '.|'\n  end\n  durations\nend",
  "    music_string.scan(/\\w{1,2}/).map do |x|\n        case x\n        when 'o'\n\
    \            4\n        when 'o|'\n            2\n        when '.|'\n        \
    \    1\n        end\n    end\nend", "  result = []\n  music_string.split.each\
    \ do |symbol|\n    case symbol\n    when 'o'\n      result << 4\n    when 'o|'\n\
    \      result << 2\n    when '.|'\n      result << 1\n    end\n  end\n  result\n\
    end", "    note_time = {'o' => 4, 'o|' => 2, '.|' => 1}\n    music_string.split('\
    \ ').map { |note| note_time[note] }\nend", "  beats = []\n  music_array = music_string.split\n\
    \  music_array.each do |note|\n    if note == 'o'\n      beats << 4\n    elsif\
    \ note == 'o|'\n      beats << 2\n    elsif note == '.|'\n      beats << 1\n \
    \   end\n  end\n  beats\nend", "  beats = {\n      \"o\" => 4,\n      \"o|\" =>\
    \ 2,\n      \".|\" => 1\n  }\n  note_chars = music_string.chars\n  note_chars.each_with_object([])\
    \ do |char, result|\n    result << beats[char]\n  end\nend", "  music_string.scan(/(([o|\\\
    .])\\2*)/).map do |elem|\n    if elem[0].start_with?('o')\n      4\n    elsif\
    \ elem[0].start_with?('o|')\n      2\n    else\n      1\n    end\n  end\nend",
  "  beats = []\n  music_string.split(\" \").each do |note|\n    beats << (note ==\
    \ 'o' ? 4 : 2)\n  end\n  beats\nend", "    notes = music_string.split(' ')\n \
    \   beats = []\n    notes.each do |note|\n        if note == 'o'\n           \
    \ beats.push(4)\n        elsif note == 'o|'\n            beats.push(2)\n     \
    \   elsif note == '.|'\n            beats.push(1)\n        end\n    end\n    return\
    \ beats\nend", "  result = []\n  music_string.split.each do |item|\n    case item\n\
    \    when 'o'\n      result << 4\n    when 'o|'\n      result << 2\n    when '.|'\n\
    \      result << 1\n    end\n  end\n  result\nend", "  beats = music_string.split(/\\\
    s+/)\n  beats.each_with_object([]) do |note, arr|\n    arr << 4 if note == 'o'\n\
    \    arr << 2 if note == 'o|'\n    arr << 1 if note == '.|'\n  end\nend", "  a\
    \ = music_string.split\n  b = []\n  a.each do |x|\n    if x == 'o'\n      b <<\
    \ 4\n    elsif x == 'o|'\n      b << 2\n    elsif x == '.|'\n      b << 1\n  \
    \  end\n  end\n  b\nend", "    parse_music_dict = {\n        'o' => 4,\n     \
    \   'o|' => 2,\n        '.|' => 1\n    }\n    arr = music_string.split(\" \")\n\
    \    result = []\n    arr.each { |e| result << parse_music_dict[e] }\n    result\n\
    end", "  parsed_music = []\n  music_string.split.each do |note|\n    case note\n\
    \    when 'o'\n      parsed_music << 4\n    when 'o|'\n      parsed_music << 2\n\
    \    when '.|'\n      parsed_music << 1\n    end\n  end\n  parsed_music\nend",
  "  beats = []\n  music_string.split.each do |note|\n    case note\n    when 'o'\n\
    \      beats << 4\n    when 'o|'\n      beats << 2\n    when '.|'\n      beats\
    \ << 1\n    end\n  end\n  beats\nend", "  note_regex = /\\A(o)|(o\\|)|(\\.\\|)/\n\
    \  music_string.split.map do |item|\n    match = note_regex.match(item)\n    case\
    \ match[0]\n    when 'o'\n      4\n    when 'o|'\n      2\n    when '.|'\n   \
    \   1\n    end\n  end\nend", "  # Your code here\nend", "  # TODO your code here\n\
    \  music_arr = music_string.split\n  beats = []\n  music_arr.each do |note|\n\
    \    beats << note.length\n  end\n  beats\nend", "  # Add code here\n  beats =\
    \ {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').map { |note| beats[note]\
    \ }\nend", "  music_string.split(' ').map do |ch|\n    case ch\n    when 'o'\n\
    \      4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n  end\nend",
  "  map = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  music_string.split(/\\s+/).map {\
    \ |note| map[note] }\nend", "\tnotes = music_string.split(' ')\n\tbeats = Array.new\n\
    \tnotes.each do |note|\n\t\tif note == 'o'\n\t\t\tbeats.push(4)\n\t\telsif note\
    \ == 'o|'\n\t\t\tbeats.push(2)\n\t\telsif note == '.|'\n\t\t\tbeats.push(1)\n\t\
    \tend\n\tend\n\tbeats\nend", "  beats = music_string.split\n  beats.map do |beat|\n\
    \    if beat == 'o'\n      4\n    elsif beat == 'o|'\n      2\n    elsif beat\
    \ == '.|'\n      1\n    end\n  end\nend", "  music_string.scan(/o o| o| o\\| o\\\
    | o\\| o\\| o\\|/).map{|x|x.count('o')}\nend", "  beats = music_string.split('\
    \ ')\n  beats.map do |b|\n    if b.count('|') == 0\n      4\n    elsif b.count('|')\
    \ == 1\n      2\n    else\n      1\n    end\n  end\nend", "    beats = []\n  \
    \  music_string.each_char do |c|\n        case c\n        when 'o'\n         \
    \   beats << 4\n        when 'o|'\n            beats << 2\n        when '.|'\n\
    \            beats << 1\n        end\n    end\n    beats\nend", "  # TODO: implement\
    \ me\n  arr = []\n  arr = music_string.split(\" \")\n  arr.map! do |e|\n    if\
    \ e.include?(\"o\")\n      if e.include?(\"|\")\n        e.count(\"o\") * 2\n\
    \      else\n        e.count(\"o\") * 4\n      end\n    else\n      e.count(\"\
    .\")\n    end\n  end\n  arr\nend", "  beats = {\"o\" => 4, \"o|\" => 2, \".|\"\
    \ => 1}\n  music_string.split(\" \").map{|e| beats[e]}\nend", "  # TODO\nend",
  "\tmusic_string = music_string.split(' ')\n\tresult = []\n\tmusic_string.each do\
    \ |v|\n\t\tcase v\n\t\twhen 'o'\n\t\t\tresult << 4\n\t\twhen 'o|'\n\t\t\tresult\
    \ << 2\n\t\twhen '.|'\n\t\t\tresult << 1\n\t\tend\n\tend\n\tresult\nend", "\t\
    music_string.split(' ').collect do |note|\n\t\tif note == 'o'\n\t\t\t4\n\t\telsif\
    \ note == 'o|'\n\t\t\t2\n\t\telsif note == '.|'\n\t\t\t1\n\t\tend\n\tend\nend",
  "  notes = ['o', 'o|', '.|']\n  durations = [4, 2, 1]\n  music_string.split(' ').map\
    \ { |symbol| durations[notes.index(symbol)] }\nend", "  music_string.split.map\
    \ do |note|\n    note == 'o' ? 4 : 2\n  end\nend", "  notes = {\n    \"o\" =>\
    \ 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n  notes_array = music_string.split(\"\
    \ \")\n  beats_array = []\n  notes_array.each do |note|\n    beats_array << notes[note]\n\
    \  end\n  beats_array\nend", "  musical_notes = music_string.split(' ')\n  musical_notes.map\
    \ do |note|\n    note == 'o' ? 4 : 2\n  end\nend", "  music_string.split(' ').map\
    \ do |char|\n    case char\n    when 'o' then 4\n    when 'o|' then 2\n    when\
    \ '.|' then 1\n    end\n  end\nend", "  music_string.split(' ').map do |note|\n\
    \    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when '.|' then\
    \ 1\n    end\n  end\nend", "  durations = []\n  music_string.split(\" \").each\
    \ do |note|\n    if note.length == 1\n      durations << 4\n    elsif note[1]\
    \ == \"|\"\n      durations << 2\n    else\n      durations << 1\n    end\n  end\n\
    \  durations\nend", "  beats = []\n  music_array = music_string.split(' ')\n \
    \ music_array.each do |note|\n    if note.length == 1\n      beats << 4\n    elsif\
    \ note.length == 2\n      beats << 2\n    elsif note.length == 3\n      beats\
    \ << 1\n    end\n  end\n  beats\nend", "  # your code here\n  music_string.gsub!(/o./,\
    \ 'o').gsub!(/\\./, '|').gsub!(/o/, '4').gsub!(/\\|/, '2').scan(/\\d+/).map(&:to_i)\n\
    end", "  beats = music_string.chars.map { |char|\n    if char == 'o'\n      4\n\
    \    elsif char == '.'\n      1\n    end\n  }\n  beats.compact\nend", "  music_string.split.map\
    \ do |element|\n    if element == 'o'\n      4\n    elsif element == 'o|'\n  \
    \    2\n    elsif element == '.|'\n      1\n    end\n  end\nend", "  music_array\
    \ = music_string.split(\" \")\n  result = []\n  music_array.each do |element|\n\
    \    if element == \"o\"\n      result << 4\n    elsif element == \"o|\"\n   \
    \   result << 2\n    elsif element == \".|\"\n      result << 1\n    end\n  end\n\
    \  result\nend", "  music_string.split(\" \").map do |note|\n    if note == \"\
    o\"\n      4\n    elsif note == \"o|\"\n      2\n    elsif note == \".|\"\n  \
    \    1\n    end\n  end\nend", "  result = []\n  for sym in music_string.split()\n\
    \    if sym == 'o'\n      result.append(4)\n    elsif sym == 'o|'\n      result.append(2)\n\
    \    elsif sym == '.|'\n      result.append(1)\n    end\n  end\n  return result\n\
    end", "  ret = []\n  current_note = \"\"\n  music_string.each_char { |c|\n   \
    \ if c == '|' || c == ' '\n      if current_note == \"o\"\n        ret << 4\n\
    \      elsif current_note == \"o.\"\n        ret << 2\n      elsif current_note\
    \ == \".|\"\n        ret << 1\n      end\n      current_note = \"\"\n    else\n\
    \      current_note += c\n    end\n  }\n  return ret\nend", "  ret = []\n  while\
    \ !music_string.empty?\n    if music_string.start_with?('o')\n      ret << 4\n\
    \      music_string = music_string[1..-1]\n    elsif music_string.start_with?('o|')\n\
    \      ret << 2\n      music_string = music_string[2..-1]\n    elsif music_string.start_with?('.|')\n\
    \      ret << 1\n      music_string = music_string[2..-1]\n    else\n      return\
    \ nil\n    end\n  end\n  ret\nend", "    beats = []\n    music_string.split.each\
    \ do |note|\n        beats << get_note_length(note)\n    end\n    beats\nend",
  "\tmusic_string.split(' ').map { |char| return char if char == 'o'\n\t\t\t\t\t\t\
    \t\t\t\t\t\t   char == 'o|' ? 2 : 1}\nend", "  # Your solution\nend", "  beats\
    \ = []\n  music_string.split.each do |note|\n    beats << case note\n    when\
    \ 'o'\n      4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n  end\n\
    \  beats\nend", "  result = music_string.scan(/\\b\\w+\\b/)\n  result.map! do\
    \ |element|\n    case element\n    when 'o'\n      4\n    when 'o|'\n      2\n\
    \    when '.|'\n      1\n    end\n  end\n  result\nend", "  # TODO:\n  # Your\
    \ code here\n  beats = []\n  music_string.split(' ').each do |s|\n    case s\n\
    \    when 'o'\n      beats << 4\n    when 'o|'\n      beats << 2\n    when '.|'\n\
    \      beats << 1\n    end\n  end\n  beats\nend", "  result = []\n  music_string.scan(/\\\
    w+/) do |match|\n    if match == 'o'\n      result << 4\n    elsif match == 'o|'\n\
    \      result << 2\n    elsif match == '.|'\n      result << 1\n    end\n  end\n\
    \  result\nend", "  notes = music_string.split(' ')\n  parsed_notes = []\n  notes.each\
    \ do |note|\n    if note == 'o'\n      parsed_notes << 4\n    elsif note == 'o|'\n\
    \      parsed_notes << 2\n    elsif note == '.|'\n      parsed_notes << 1\n  \
    \  end\n  end\n  parsed_notes\nend", "  beats = music_string.scan(/[\\.o\\|]/).each_slice(3).to_a\n\
    \  beats.map! do |e|\n    if e.count('o') == 1 && e.count('|') == 2\n      e =\
    \ [4]\n    elsif e.count('o') == 1 && e.count('|') == 1\n      e = [2]\n    elsif\
    \ e.count('|') == 1 && e.count('.') == 1\n      e = [1]\n    else\n      e = [4]\n\
    \    end\n  end\n  beats.flatten\nend", "  beats = []\n  music_string.split('\
    \ ').each do |note|\n    beats << case note\n             when 'o' then 4\n  \
    \           when 'o|' then 2\n             when '.|' then 1\n             end\n\
    \  end\n  beats\nend", "  music_string.split.map { |note| note.gsub('.', '').size\
    \ }\nend", "  # TODO implement me!\nend", "  music_keys = { 'o' => 4, 'o|' =>\
    \ 2, '.|' => 1 }\n  music_string.split(' ').map { |x| music_keys[x] }\nend", " \
    \ beats = {'o' => 4, 'o|' => 2, '.|' => 1}\n  list = []\n  music_string.scan(/\\\
    S+/).each do |x|\n    list << beats[x]\n  end\n  list\nend", "\tbeats_per_note\
    \ = []\n\tnotes = music_string.split(' ')\n\tnotes.each do |note|\n\t\tif note\
    \ == 'o'\n\t\t\tbeats_per_note << 4\n\t\telsif note == 'o|'\n\t\t\tbeats_per_note\
    \ << 2\n\t\telsif note == '.|'\n\t\t\tbeats_per_note << 1\n\t\tend\n\tend\n\t\
    return beats_per_note\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n   \
    \ '.|' => 1\n  }\n  music_string.split(' ').map { |element| beats[element] }\n\
    end", "  beats = []\n  music_string.split(' ').each do |note|\n    case note\n\
    \    when 'o'\n      beats << 4\n    when 'o|'\n      beats << 2\n    when '.|'\n\
    \      beats << 1\n    end\n  end\n  beats\nend", "  lst = []\n  music_string.split(\"\
    \ \").each do |x|\n    if x.eql?(\"o\")\n      lst.push(4)\n    elsif x.eql?(\"\
    o|\")\n      lst.push(2)\n    elsif x.eql?(\".|\")\n      lst.push(1)\n    end\n\
    \  end\n  return lst\nend", "  beats = [4, 2, 1]\n  music_string.split(' ').map\
    \ { |e| beats[e.index('|')] }\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

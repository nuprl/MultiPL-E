name: HumanEval_124_valid_date
language: rb
prompt: "# You have to write a function which validates a given date string and\n\
  # returns True if the date is valid otherwise False.\n# The date is valid if all\
  \ of the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
  \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  # 3. The months should not be less than 1 or higher than 12.\n# 4. The date should\
  \ be in the format: mm-dd-yyyy\n# for example: \n# valid_date('03-11-2000') => True\n\
  # valid_date('15-01-2012') => False\n# valid_date('04-0-2040') => False\n# valid_date('06-04-2020')\
  \ => True\n# valid_date('06/04/2020') => False\ndef valid_date(date)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_valid_date\n\
  \    candidate = method(:valid_date)\n    assert_equal(true, candidate.call(\"03-11-2000\"\
  ))\n    assert_equal(false, candidate.call(\"15-01-2012\"))\n    assert_equal(false,\
  \ candidate.call(\"04-0-2040\"))\n    assert_equal(true, candidate.call(\"06-04-2020\"\
  ))\n    assert_equal(true, candidate.call(\"01-01-2007\"))\n    assert_equal(false,\
  \ candidate.call(\"03-32-2011\"))\n    assert_equal(false, candidate.call(\"\"))\n\
  \    assert_equal(false, candidate.call(\"04-31-3000\"))\n    assert_equal(true,\
  \ candidate.call(\"06-06-2005\"))\n    assert_equal(false, candidate.call(\"21-31-2000\"\
  ))\n    assert_equal(true, candidate.call(\"04-12-2003\"))\n    assert_equal(false,\
  \ candidate.call(\"04122003\"))\n    assert_equal(false, candidate.call(\"20030412\"\
  ))\n    assert_equal(false, candidate.call(\"2003-04\"))\n    assert_equal(false,\
  \ candidate.call(\"2003-04-12\"))\n    assert_equal(false, candidate.call(\"04-2003\"\
  ))\n  end\nend\n"
completions: ["  date.split(\"-\").map(&:to_i).each { |n| return false if n == 0 }\n\
    \  date = date.split(\"-\").map(&:to_i)\n  date[0].between?(1,12) && date[1].between?(1,31)\
    \ && date[2].between?(1,9999)\nend", "  # code here...\nend", "  list = date.split('-')\n\
    \  return false if list.size != 3\n  return false if list[0].to_i < 1 or list[0].to_i\
    \ > 12\n  return false if list[2].to_i < 1 or list[2].to_i > 9999\n  if list[0].to_i\
    \ == 2\n    return false if list[1].to_i < 1 or list[1].to_i > 29\n  elsif list[0].to_i\
    \ == 1 or list[0].to_i == 3 or list[0].to_i == 5 or list[0].to_i == 7 or list[0].to_i\
    \ == 8 or list[0].to_i == 10 or list[0].to_i == 12\n    return false if list[1].to_i\
    \ < 1 or list[1].to_i > 31\n  else\n    return false if list[1].to_i < 1 or list[1].to_i\
    \ > 30\n  end\n  true\nend", "  # your code here\n  if date[2] != \"-\" || date[5]\
    \ != \"-\" || date.length != 10\n    return false\n  end\n  if date[0..1].to_i\
    \ < 1 || date[0..1].to_i > 12\n    return false\n  end\n  if date[3..4].to_i <\
    \ 1 || date[3..4].to_i > 31\n    return false\n  end\n  if (date[0..1].to_i ==\
    \ 2 && date[3..4].to_i > 29) || (date[0..1].to_i == 4 && date[3..4].to_i > 30)\
    \ || (date[0..1].to_i == 6 && date[3..4].to_i > 30) || (date[0..1].to_i == 9 &&\
    \ date[3..4].to_i > 30) || (date[0..1].to_i == 11 && date[3..4].to_i > 30)\n \
    \   return false\n  end\n  return true\nend", "  regex = /(^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-\\\
    d{4}$)|(^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-\\d{2}$)/\n  if date.scan(regex).empty?\n\
    \    return false\n  else\n    return true\n  end\nend", "    mmddyyyy = date.split('-')\n\
    \    if date == ''\n        return false\n    elsif mmddyyyy.length != 3\n   \
    \     return false\n    elsif mmddyyyy[0].to_i > 12\n        return false\n  \
    \  elsif mmddyyyy[0].to_i == 2 && mmddyyyy[1].to_i > 29\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 4 && mmddyyyy[1].to_i > 30\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 6 && mmddyyyy[1].to_i > 30\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 9 && mmddyyyy[1].to_i > 30\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 11 && mmddyyyy[1].to_i > 30\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 1 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 3 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 5 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 7 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 8 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 10 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    elsif mmddyyyy[0].to_i == 12 && mmddyyyy[1].to_i > 31\n        return false\n\
    \    else\n        return true\n    end\nend", "  months = [31,29,31,30,31,30,31,31,30,31,30,31]\n\
    \  date = date.split('-')\n  date.any? {|s| s.to_i < 1} ? false : true if date.length\
    \ != 3\n  if date[1].to_i > 12 || date[1].to_i < 1 || date[2].to_i > 31 || date[2].to_i\
    \ < 1\n    return false\n  elsif date[0].to_i > months[date[1].to_i-1]\n    return\
    \ false\n  else\n    return true\n  end\nend", "  date = date.split(\"-\")\n \
    \ if date.length == 3 && date[0].to_i.between?(1,12) && date[1].to_i.between?(1,28)\
    \ && date[2].to_i.between?(0,9999)\n    return true\n  else\n    return false\n\
    \  end\nend", "  #your code here\n  if !date.nil? and !date.empty? and !(date\
    \ =~ /\\d{2}-\\d{2}-\\d{4}/).nil?\n    md = date.split('-')\n    if md[0].to_i.between?(1,12)\n\
    \      case md[0].to_i\n      when 1,3,5,7,8,10,12\n        if md[1].to_i.between?(1,31)\n\
    \          return true\n        end\n      when 4,6,9,11\n        if md[1].to_i.between?(1,30)\n\
    \          return true\n        end\n      when 2\n        if md[1].to_i.between?(1,29)\n\
    \          return true\n        end\n      end\n    end\n  end\n  return false\n\
    end", "  return false if date.empty?\n  months = [1,3,5,7,8,10,12]\n  months.each\
    \ { |month|\n    return false if (date.split(\"-\")[1].to_i > 31 && date.split(\"\
    -\")[0].to_i == month)\n  }\n  months = [4,6,9,11]\n  months.each { |month|\n\
    \    return false if (date.split(\"-\")[1].to_i > 30 && date.split(\"-\")[0].to_i\
    \ == month)\n  }\n  return false if (date.split(\"-\")[1].to_i > 29 && date.split(\"\
    -\")[0].to_i == 2)\n  return false if (date.split(\"-\")[0].to_i > 12 || date.split(\"\
    -\")[0].to_i < 1)\n  return false if (date.split(\"-\")[1].to_i > 31 || date.split(\"\
    -\")[1].to_i < 1)\n  !(date =~ /^\\d{2}-\\d{2}-\\d{4}$/).nil?\nend", "   #your\
    \ code here\nend", "    date_arr = date.split('-')\n    return false if date_arr.length\
    \ != 3\n    return false if date_arr[0].to_i < 1 || date_arr[0].to_i > 12\n  \
    \  return false if date_arr[1].to_i < 1\n    return false if date_arr[0].to_i\
    \ == 1 || date_arr[0].to_i == 3 || date_arr[0].to_i == 5 || date_arr[0].to_i ==\
    \ 7 || date_arr[0].to_i == 8 || date_arr[0].to_i == 10 || date_arr[0].to_i ==\
    \ 12\n    return false if date_arr[1].to_i > 31\n    return false if date_arr[0].to_i\
    \ == 4 || date_arr[0].to_i == 6 || date_arr[0].to_i == 9 || date_arr[0].to_i ==\
    \ 11\n    return false if date_arr[1].to_i > 30\n    return false if date_arr[0].to_i\
    \ == 2\n    return false if date_arr[1].to_i > 29\n    return true\nend", "  (date.split(\"\
    -\").count == 3) && (date[2] == \"-\") && (date[5] == \"-\") && (1..31).include?(date[0..1].to_i)\
    \ && (1..12).include?(date[3..4].to_i) && (1..9999).include?(date[6..9].to_i)\
    \ && (([1,3,5,7,8,10,12].include?(date[3..4].to_i) && (1..31).include?(date[0..1].to_i))\
    \ || ([4,6,9,11].include?(date[3..4].to_i) && (1..30).include?(date[0..1].to_i))\
    \ || (date[3..4].to_i == 2 && (1..29).include?(date[0..1].to_i)))\nend", "  date\
    \ = date.gsub(/[\\/]/, '-')\n  if date =~ /^\\d{2}-\\d{2}-\\d{4}$/\n    date =\
    \ date.split('-')\n    months = {'01' => 31, '02' => 28, '03' => 31, '04' => 30,\
    \ '05' => 31, '06' => 30, '07' => 31, '08' => 31, '09' => 30, '10' => 31, '11'\
    \ => 30, '12' => 31}\n    return false if date[1].to_i > months[date[0]] || date[1].to_i\
    \ < 1\n    return false if date[0].to_i > 12 || date[0].to_i < 1\n    return true\n\
    \  else\n    return false\n  end\nend", "  if date.length > 0\n    if date.include?(\"\
    -\")\n      date = date.split(\"-\")\n      if date[1].to_i <= 12\n        if\
    \ date[1].to_i == 1 || date[1].to_i == 3 || date[1].to_i == 5 || date[1].to_i\
    \ == 7 || date[1].to_i == 8 || date[1].to_i == 10 || date[1].to_i == 12\n    \
    \      if date[0].to_i <= 31\n            true\n          else\n            false\n\
    \          end\n        elsif date[1].to_i == 4 || date[1].to_i == 6 || date[1].to_i\
    \ == 9 || date[1].to_i == 11\n          if date[0].to_i <= 30\n            true\n\
    \          else\n            false\n          end\n        elsif date[1].to_i\
    \ == 2\n          if date[0].to_i <= 29\n            true\n          else\n  \
    \          false\n          end\n        end\n      else\n        false\n    \
    \  end\n    else\n      false\n    end\n  else\n    false\n  end\nend", "  date\
    \ = date.gsub(/\\W+/, '-')\n  pattern = /(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})/\n\
    \  return false if date == '' or not date.match(pattern)\n  month, day, year =\
    \ date.split('-')\n  if [1,3,5,7,8,10,12].include?(month.to_i)\n    return false\
    \ if day.to_i > 31\n  elsif [4,6,9,11].include?(month.to_i)\n    return false\
    \ if day.to_i > 30\n  elsif month.to_i == 2\n    return false if day.to_i > 29\n\
    \  end\n  true\nend", "    date_array = date.split('-')\n    months = date_array[0].to_i\n\
    \    days = date_array[1].to_i\n    years = date_array[2].to_i\n    return false\
    \ if date_array.length != 3\n    return false if years.to_s.length != 4\n    return\
    \ false if months < 1 || months > 12\n    return false if days < 1 || days > 31\n\
    \    if months == 2\n        return false if days > 29\n    elsif months == 1\
    \ || months == 3 || months == 5 || months == 7 || months == 8 || months == 10\
    \ || months == 12\n        return false if days > 31\n    else\n        return\
    \ false if days > 30\n    end\n    return true\nend", "    # Write your code here\n\
    \    return false if date.size == 0\n    return false if !(date =~ /\\d{2}-\\\
    d{2}-\\d{4}/)\n    day, month, year = date.split('-')\n    return false if year.to_i\
    \ < 0 || month.to_i < 1 || month.to_i > 12 || day.to_i < 1\n    case month.to_i\n\
    \    when 1,3,5,7,8,10,12\n        return false if day.to_i > 31\n    when 4,6,9,11\n\
    \        return false if day.to_i > 30\n    when 2\n        return false if day.to_i\
    \ > 29\n    end\n    return true\nend", "    months = {\"1\" => 31, \"2\" => 28,\
    \ \"3\" => 31, \"4\" => 30, \"5\" => 31, \"6\" => 30, \"7\" => 31, \"8\" => 31,\
    \ \"9\" => 30, \"10\" => 31, \"11\" => 30, \"12\" => 31}\n    days = 0\n    months.each\
    \ do |key, value|\n        if date.include? key\n            days = value\n  \
    \      end\n    end\n    ary = date.split(\"-\")\n    return false if ary.length\
    \ != 3\n    return false if ary[0].to_i < 1 or ary[0].to_i > 12\n    return false\
    \ if ary[1].to_i < 1 or ary[1].to_i > days\n    return false if ary[2].to_i <\
    \ 1 or ary[2].to_i > 2020\n    return true\nend", "  date = date.split('-')\n\
    \  month = date[0].to_i\n  day = date[1].to_i\n  year = date[2].to_i\n  if month\
    \ < 1 || month > 12\n    return false\n  elsif month == 2 && day > 29\n    return\
    \ false\n  elsif (month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12) && day > 31\n    return false\n  elsif (month\
    \ == 4 || month == 6 || month == 9 || month == 11) && day > 30\n    return false\n\
    \  elsif day < 1\n    return false\n  elsif date.length != 3\n    return false\n\
    \  else\n    return true\n  end\nend", "  day, month, year = date.split(\"-\"\
    )\n  day_array = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  if day.to_i\
    \ <= 0 || day.to_i > day_array[month.to_i - 1] || month.to_i <= 0 || month.to_i\
    \ > 12 || year.to_i <= 0\n    return false\n  end\n  true\nend", "  return false\
    \ if date.empty?\n  return false if date =~ /[^0-9\\s\\-]/\n  return false if\
    \ date.split('-').length != 3\n  return false if date.split('-').map(&:to_i).any?\
    \ { |el| el == 0 }\n  date = date.split('-').map(&:to_i)\n  return false if date[0]\
    \ < 1 || date[0] > 12\n  if date[0] < 4 || date[0] == 5 || date[0] == 7 || date[0]\
    \ == 8 || date[0] == 10 || date[0] == 12\n    return false if date[1] < 1 || date[1]\
    \ > 31\n  elsif date[0] == 4 || date[0] == 6 || date[0] == 9 || date[0] == 11\n\
    \    return false if date[1] < 1 || date[1] > 30\n  elsif date[0] == 2\n    return\
    \ false if date[1] < 1 || date[1] > 29\n  end\n  return false if date[2] < 1000\
    \ || date[2] > 9999\n  true\nend", "  date = date.split('-')\n  date = date.map\
    \ { |x| x.to_i }\n  if date.length != 3\n    return false\n  elsif date[0] < 1\
    \ || date[0] > 12\n    return false\n  elsif date[1] < 1 || (date[0] == 1 || date[0]\
    \ == 3 || date[0] == 5 || date[0] == 7 || date[0] == 8 || date[0] == 10 || date[0]\
    \ == 12) && date[1] > 31 || (date[0] == 4 || date[0] == 6 || date[0] == 9 || date[0]\
    \ == 11) && date[1] > 30 || date[0] == 2 && date[1] > 29\n    return false\n \
    \ elsif date[2] < 1\n    return false\n  else\n    return true\n  end\nend", " \
    \ # your code goes here\nend\nputs \"---------Valid Date----------\"\nputs valid_date('03-11-2000')\
    \ == true\nputs valid_date('15-01-2012') == false\nputs valid_date('04-0-2040')\
    \ == false\nputs valid_date('06-04-2020') == true\nputs valid_date('06/04/2020')\
    \ == false\nputs valid_date('06-04-2023') == true\nputs valid_date('06-04-2032')\
    \ == true\nputs valid_date('06-14-2030') == true\nputs valid_date('06-44-2030')\
    \ == false\nputs valid_date('06-14-2031') == false\nputs valid_date('06-14-2031')\
    \ == false\nputs valid_date('06-14-2031') == false\nputs valid_date('06-14-203a')\
    \ == false\nputs valid_date('06-14-2031 ') == false\nputs valid_date(' 06-14-2031')\
    \ == false\nputs valid_date('06 -14-2031') == false\nputs valid_date('06-14- 2031')\
    \ == false\nputs valid_date('06-14 -2031') == false\nputs valid_date('6-14-2031')\
    \ == false\nputs valid_date('6-14-2031') == false\nputs valid_date('6-14-2031')\
    \ == false\nputs valid_date('6-14-2031') == false\nputs valid_date('6-14-2031')\
    \ == false\nputs valid_date('6-14-2031') == false\nputs valid_date('6-14-2031')\
    \ == false\nputs valid_date('6-14-2031') == false\nputs valid_date('6-14-2031')\
    \ == false\nputs valid_date('6-14-2031') == false\nputs valid_date('6-14-2031')\
    \ == false\nputs valid_date('6-14-2031') == false\nputs valid_date('6-14-2031')\
    \ == false\n", "  if date.match(/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/)\n    d, m, y =\
    \ date.split('-')\n    if m.to_i.between?(1, 12) && y.to_i > 0\n      if m.to_i.in?([1,\
    \ 3, 5, 7, 8, 10, 12])\n        d.to_i.between?(1, 31)\n      elsif m.to_i.in?([4,\
    \ 6, 9, 11])\n        d.to_i.between?(1, 30)\n      else\n        d.to_i.between?(1,\
    \ 29)\n      end\n    else\n      false\n    end\n  else\n    false\n  end\nend",
  "  a = date.split('-')\n  return false if a.length != 3\n  return false if a[0].to_i\
    \ < 1 || a[0].to_i > 12\n  return false if a[1].to_i < 1 || a[1].to_i > 31\n \
    \ return false if (a[0].to_i == 4 && a[1].to_i > 30) ||\n                  (a[0].to_i\
    \ == 6 && a[1].to_i > 30) ||\n                  (a[0].to_i == 9 && a[1].to_i >\
    \ 30) ||\n                  (a[0].to_i == 11 && a[1].to_i > 30) ||\n         \
    \         (a[0].to_i == 2 && a[1].to_i > 29)\n  true\nend", "  # Your code here\n\
    end", "  return false if date.empty?\n  date = date.split('-')\n  return false\
    \ if date.length != 3\n  month = date[0].to_i\n  day = date[1].to_i\n  year =\
    \ date[2].to_i\n  if month == 2\n    if year % 4 == 0\n      return false if day\
    \ > 29\n    else\n      return false if day > 28\n    end\n  elsif month == 1\
    \ || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month\
    \ == 12\n    return false if day > 31\n  else\n    return false if day > 30\n\
    \  end\n  return false if month > 12\n  return false if year < 1\n  return true\n\
    end", "  # write your code here\nend", "  # code your solution here\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "    if date.split('-').length\
    \ != 3 || date == \"\"\n        return false\n    elsif !(date.include?('-'))\n\
    \        return false\n    else\n        month = date.split('-')[0].to_i\n   \
    \     day = date.split('-')[1].to_i\n        year = date.split('-')[2].to_i\n\
    \        if month == 2 && day == 29 && year % 4 == 0\n            return true\n\
    \        elsif month == 2 && day > 29\n            return false\n        elsif\
    \ month < 1 || month > 12\n            return false\n        elsif month == 1\
    \ || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month\
    \ == 12\n            if day < 1 || day > 31\n                return false\n  \
    \          else\n                return true\n            end\n        elsif month\
    \ == 4 || month == 6 || month == 9 || month == 11\n            if day < 1 || day\
    \ > 30\n                return false\n            else\n                return\
    \ true\n            end\n        elsif month == 2\n            if day < 1 || day\
    \ > 28\n                return false\n            else\n                return\
    \ true\n            end\n        end\n    end\nend", "  nums = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \  year,month,day = date.split(/-/)\n  return false if day.to_i == 0 || month.to_i\
    \ == 0 || year.to_i == 0\n  return false if date.match(/[a-z]/i) || date.match(/[^0-9-]/)\
    \ || date.length != 10\n  return false if day.to_i > 31 || day.to_i < 1 || month.to_i\
    \ > 12 || month.to_i < 1\n  return false if nums[month.to_i-1] < day.to_i\n  return\
    \ true\nend", "  if date.length < 8 \n    false\n  elsif date.length > 10\n  \
    \  false\n  elsif !date.include?(\"-\")\n    false\n  elsif date.include?(\"/\"\
    )\n    false\n  elsif date[2] == \"-\" && date[5] == \"-\" && date.length == 10\n\
    \    if date[0] == \"0\"\n      true\n    elsif date[0] == \"1\"\n      true\n\
    \    elsif date[0] == \"2\"\n      true\n    elsif date[0] == \"3\"\n      true\n\
    \    elsif date[0] == \"4\"\n      true\n    elsif date[0] == \"5\"\n      true\n\
    \    elsif date[0] == \"6\"\n      true\n    elsif date[0] == \"7\"\n      true\n\
    \    elsif date[0] == \"8\"\n      true\n    elsif date[0] == \"9\"\n      true\n\
    \    else\n      false\n    end\n  elsif date[3] == \"-\" && date[6] == \"-\"\
    \ && date.length == 10\n    if date[0] == \"0\"\n      true\n    elsif date[0]\
    \ == \"1\"\n      true\n    elsif date[0] == \"2\"\n      true\n    elsif date[0]\
    \ == \"3\"\n      true\n    elsif date[0] == \"4\"\n      true\n    elsif date[0]\
    \ == \"5\"\n      true\n    elsif date[0] == \"6\"\n      true\n    elsif date[0]\
    \ == \"7\"\n      true\n    elsif date[0] == \"8\"\n      true\n    elsif date[0]\
    \ == \"9\"\n      true\n    else\n      false\n    end\n  else\n    false\n  end\n\
    end", "\tdate_formats = [ /\\d{2}\\/\\d{2}\\/\\d{4}/, /\\d{2}-\\d{2}-\\d{4}/ ]\n\
    \tdate_formats.any? { |format| date =~ format }\nend", "  require 'date'\n  Date.parse(date)\
    \ rescue false\nend", "  date = date.split(\"-\")\n  month = date[0].to_i\n  day\
    \ = date[1].to_i\n  return false if !(1..12).include?(month)\n  return false if\
    \ !(1..31).include?(day)\n  return false if month == 2 && !(1..29).include?(day)\n\
    \  return false if [4,6,9,11].include?(month) && !(1..30).include?(day)\n  true\n\
    end", "  return false if date.empty?\n  return false if date.count('-') != 2\n\
    \  return false if date.count('/') != 0\n  arr = date.split('-')\n  return false\
    \ if arr[0].to_i < 1 || arr[0].to_i > 12\n  case arr[0].to_i\n  when 1,3,5,7,8,10,12\n\
    \    return false if arr[1].to_i < 1 || arr[1].to_i > 31\n  when 4,6,9,11\n  \
    \  return false if arr[1].to_i < 1 || arr[1].to_i > 30\n  when 2\n    return false\
    \ if arr[1].to_i < 1 || arr[1].to_i > 29\n  end\n  true\nend", "  return false\
    \ if date.empty?\n  date = date.split(\"-\")\n  return false if date.length !=\
    \ 3\n  m, d, y = date[0].to_i, date[1].to_i, date[2].to_i\n  return false if d\
    \ < 1 || d > 31 || m < 1 || m > 12 || y < 0 || y > 9999\n  days = [1, 3, 5, 7,\
    \ 8, 10, 12]\n  if days.include?(m)\n    return false if d > 31\n  elsif m ==\
    \ 2\n    return false if y % 4 == 0 ? d > 29 : d > 28\n  else\n    return false\
    \ if d > 30\n  end\n  true\nend", "  # TODO: implement your solution here\nend",
  "  date = date.split('-')\n  if date.length == 3 && date[0].to_i > 0 && date[0].to_i\
    \ < 13 && date[1].to_i > 0 && date[1].to_i < 31 && date[2].to_i > 0 && date[2].to_i\
    \ < 3000\n    true\n  else\n    false\n  end\nend", "  if date == ''\n    return\
    \ false\n  end\n  if date.count('-') != 2\n    return false\n  end\n  if date.count('/')\
    \ != 0\n    return false\n  end\n  x = date.split('-')\n  if x[0].to_i == 0 ||\
    \ x[1].to_i == 0 || x[2].to_i == 0\n    return false\n  end\n  if x[0].to_i >\
    \ 12 || x[0].to_i < 1\n    return false\n  end\n  if x[0].to_i == 2\n    if x[1].to_i\
    \ > 29 || x[1].to_i < 1\n      return false\n    end\n  elsif x[0].to_i == 4 ||\
    \ x[0].to_i == 6 || x[0].to_i == 9 || x[0].to_i == 11\n    if x[1].to_i > 30 ||\
    \ x[1].to_i < 1\n      return false\n    end\n  elsif x[0].to_i == 1 || x[0].to_i\
    \ == 3 || x[0].to_i == 5 || x[0].to_i == 7 || x[0].to_i == 8 || x[0].to_i == 10\
    \ || x[0].to_i == 12\n    if x[1].to_i > 31 || x[1].to_i < 1\n      return false\n\
    \    end\n  end\n  if x[2].to_i > 2020 || x[2].to_i < 0\n    return false\n  end\n\
    \  return true\nend", "  if date.empty?\n    false\n  elsif /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/.match(date)\n    date_numbers = date.split('-')\n    months = date_numbers[0].to_i\n\
    \    days = date_numbers[1].to_i\n    years = date_numbers[2].to_i\n    if (months\
    \ > 0 && months < 13) && (days > 0 && days < 32) && (years > 0)\n      true\n\
    \    else\n      false\n    end\n  else\n    false\n  end\nend", "\treturn false\
    \ if date.empty?\n\t\n\tis_valid = false\n\tmonths = %w[01 03 05 07 08 10 12]\n\
    \tdate = date.split(\"-\")\n\tif date.length == 3\n\t\tif date[0].to_i <= 12\n\
    \t\t\tif date[0].to_i == 2\n\t\t\t\tif date[1].to_i <= 29\n\t\t\t\t\tis_valid\
    \ = true\n\t\t\t\tend\n\t\t\telsif months.include?(date[0])\n\t\t\t\tif date[1].to_i\
    \ <= 31\n\t\t\t\t\tis_valid = true\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif date[1].to_i\
    \ <= 30\n\t\t\t\t\tis_valid = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    is_valid\nend", "  array=[]\n  array=date.split(\"-\")\n  if array.length==3\n\
    \    if array[0].to_i>=1 && array[0].to_i<=12\n      if array[0].to_i==1 || array[0].to_i==3\
    \ || array[0].to_i==5 || array[0].to_i==7 || array[0].to_i==8 || array[0].to_i==10\
    \ || array[0].to_i==12\n        if array[1].to_i>=1 && array[1].to_i<=31\n   \
    \       return true\n        else\n          return false\n        end\n     \
    \ elsif array[0].to_i==4 || array[0].to_i==6 || array[0].to_i==9 || array[0].to_i==11\n\
    \        if array[1].to_i>=1 && array[1].to_i<=30\n          return true\n   \
    \     else\n          return false\n        end\n      elsif array[0].to_i==2\n\
    \        if array[1].to_i>=1 && array[1].to_i<=29\n          return true\n   \
    \     else\n          return false\n        end\n      end\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "    if date.empty?\n\
    \      return false\n    end\n    day, month, year = date.split(\"-\")\n    if\
    \ month.to_i < 1 || month.to_i > 12\n      return false\n    end\n    if day.to_i\
    \ < 1 || day.to_i > 31\n      return false\n    end\n    if (month.to_i == 2 &&\
    \ day.to_i > 29) || ((month.to_i == 4 || month.to_i == 6 || month.to_i == 9 ||\
    \ month.to_i == 11) && day.to_i > 30)\n      return false\n    end\n    return\
    \ true\nend", "\tdate = date.split(\"-\")\n\tmonth = date[0].to_i\n\tday = date[1].to_i\n\
    \tyear = date[2].to_i\n\tif month == 2\n\t\tif day <= 28\n\t\t\ttrue\n\t\telsif\
    \ day == 29\n\t\t\tif year % 4 == 0\n\t\t\t\ttrue\n\t\t\telsif year % 100 == 0\n\
    \t\t\t\tfalse\n\t\t\telsif year % 400 == 0\n\t\t\t\ttrue\n\t\t\telse\n\t\t\t\t\
    false\n\t\t\tend\n\t\telse\n\t\t\tfalse\n\t\tend\n\telsif month <= 12\n\t\tif\
    \ month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month\
    \ == 10 || month == 12\n\t\t\tif day <= 31\n\t\t\t\ttrue\n\t\t\telse\n\t\t\t\t\
    false\n\t\t\tend\n\t\telsif month == 4 || month == 6 || month == 9 || month ==\
    \ 11\n\t\t\tif day <= 30\n\t\t\t\ttrue\n\t\t\telse\n\t\t\t\tfalse\n\t\t\tend\n\
    \t\tend\n\telse\n\t\tfalse\n\tend\nend", "  date_format = /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/\n  match = date_format.match(date)\n  return false if match.nil?", " \
    \ return false if date.empty?\n  return false if date.include? '/'\n  return false\
    \ if date.length < 8\n  arr = date.split('-')\n  return false if arr.length !=\
    \ 3\n  month = arr[0].to_i\n  day = arr[1].to_i\n  year = arr[2].to_i\n  return\
    \ false if month < 1 || month > 12\n  case month\n  when 1,3,5,7,8,10,12\n   \
    \ return false if day < 1 || day > 31\n  when 4,6,9,11\n    return false if day\
    \ < 1 || day > 30\n  when 2\n    return false if day < 1 || day > 29\n  end\n\
    \  return false if year < 0\n  true\nend", "    d = date.split('-')\n    if d.length\
    \ == 3\n        if d[0].to_i > 0 && d[0].to_i < 13\n            if d[0].to_i ==\
    \ 1 || d[0].to_i == 3 || d[0].to_i == 5 || d[0].to_i == 7 || d[0].to_i == 8 ||\
    \ d[0].to_i == 10 || d[0].to_i == 12\n                if d[1].to_i > 0 && d[1].to_i\
    \ < 32\n                    return true\n                end\n            elsif\
    \ d[0].to_i == 4 || d[0].to_i == 6 || d[0].to_i == 9 || d[0].to_i == 11\n    \
    \            if d[1].to_i > 0 && d[1].to_i < 31\n                    return true\n\
    \                end\n            elsif d[0].to_i == 2\n                if d[1].to_i\
    \ > 0 && d[1].to_i < 30\n                    return true\n                end\n\
    \            end\n        end\n    end\n    return false\nend", "  return false\
    \ if date.empty?\n  return false if !(/\\d{2}-\\d{2}-\\d{4}/.match(date))\n  m,\
    \ d, y = date.split('-')\n  d = d.to_i\n  m = m.to_i\n  if m == 2\n    return\
    \ true if m.even? && d <= 29 && d >= 1\n    return false\n  end\n  if m.even?\n\
    \    return true if d <= 30 && d >= 1\n    return false\n  end\n  if m.odd?\n\
    \    return true if d <= 31 && d >= 1\n    return false\n  end\n  return false\
    \ if m > 12 || m < 1\n  true\nend", "  day, month, year = date.split(\"-\")\n\
    \  year.to_i > 0 && (1..12).include?(month.to_i) && (1..31).include?(day.to_i)\n\
    end", "  m, d, y = date.split('-')\n  if m.nil? || m.empty? || d.nil? || d.empty?\
    \ || y.nil? || y.empty?\n    return false\n  end\n  # check if the numbers are\
    \ valid\n  if !m.to_i.between?(1, 12) || !d.to_i.between?(1, days_in_month(m.to_i))\
    \ || !y.to_i.between?(1000, 9999)\n    return false\n  end\n  true\nend", "  begin\n\
    \    Date.parse(date)\n    return true\n  rescue ArgumentError\n    return false\n\
    \  end\nend", "  date_arr = date.split('-')\n  return false if date_arr.length\
    \ != 3\n  return false if date_arr[0].length != 2 || date_arr[1].length != 2 ||\
    \ date_arr[2].length != 4\n  return false if (date_arr[0].to_i > 12 || date_arr[0].to_i\
    \ < 1)\n  return false if (date_arr[1].to_i > 31 || date_arr[1].to_i < 1)\n  return\
    \ false if (date_arr[0].to_i == 2 && date_arr[1].to_i > 29)\n  return false if\
    \ (date_arr[0].to_i == 4 && date_arr[1].to_i > 30)\n  return false if (date_arr[0].to_i\
    \ == 6 && date_arr[1].to_i > 30)\n  return false if (date_arr[0].to_i == 9 &&\
    \ date_arr[1].to_i > 30)\n  return false if (date_arr[0].to_i == 11 && date_arr[1].to_i\
    \ > 30)\n  return true\nend", "    # write your code here\nend", "  # TODO: implement\n\
    \  if date.length == 0 \n    return false\n  end\n  if /^(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])-[0-9]{4}$/.match(date)\n\
    \    #puts '1'\n    arr = date.split('-')\n    if arr[0].to_i == 2\n      if arr[1].to_i\
    \ > 29\n        return false\n      end\n    elsif (arr[0].to_i == 1) or (arr[0].to_i\
    \ == 3) or (arr[0].to_i == 5) or (arr[0].to_i == 7) or (arr[0].to_i == 8) or (arr[0].to_i\
    \ == 10) or (arr[0].to_i == 12)\n      if arr[1].to_i > 31\n        return false\n\
    \      end\n    elsif (arr[0].to_i == 4) or (arr[0].to_i == 6) or (arr[0].to_i\
    \ == 9) or (arr[0].to_i == 11)\n      if arr[1].to_i > 30\n        return false\n\
    \      end\n    end\n    if arr[0].to_i < 1 or arr[0].to_i > 12\n      return\
    \ false\n    end\n    return true\n  else\n    return false\n  end\nend", "\t\
    a = date.split('-')\n\tif a.count == 3 && a[0].to_i.between?(1,12) && a[1].to_i.between?(1,31)\
    \ && a[2].to_i.between?(1,9999)\n\t\tif a[0].to_i == 1 || a[0].to_i == 3 || a[0].to_i\
    \ == 5 || a[0].to_i == 7 || a[0].to_i == 8 || a[0].to_i == 10 || a[0].to_i ==\
    \ 12\n\t\t\tif a[1].to_i.between?(1,31)\n\t\t\t\treturn true\n\t\t\telse\n\t\t\
    \t\treturn false\n\t\t\tend\n\t\tend\n\t\tif a[0].to_i == 4 || a[0].to_i == 6\
    \ || a[0].to_i == 9 || a[0].to_i == 11\n\t\t\tif a[1].to_i.between?(1,30)\n\t\t\
    \t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\tif\
    \ a[0].to_i == 2\n\t\t\tif a[1].to_i.between?(1,29)\n\t\t\t\treturn true\n\t\t\
    \telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\telse\n\t\treturn false\n\t\
    end\nend", "  date =~ /\\A([0-9]{2})-([0-9]{2})-([0-9]{4})\\z/\n  @month = $1.to_i\n\
    \  @day = $2.to_i\n  @year = $3.to_i\n  return false if @month == 0 || @day ==\
    \ 0 || @year == 0\n  return false if @month > 12 || @month < 1\n  return false\
    \ if @day > 31 || @day < 1\n  return false if (@month == 2 && @day > 29) || (@month\
    \ == 2 && @day == 29 && !leap_year?(@year))\n  return false if (@month < 8 &&\
    \ @month.odd? && @day > 30) || (@month > 7 && @month.even? && @day > 30)\n  true\n\
    end", "  regex = /\\A[0-1]?[0-9]-[0-3]?[0-9]-[0-9]{4}\\z/\n  if regex.match(date)\n\
    \    month = date[0..1].to_i\n    day = date[3..4].to_i\n    year = date[6..9].to_i\n\
    \    if month <= 12\n      if month == 1 || month == 3 || month == 5 || month\
    \ == 7 || month == 8 || month == 10 || month == 12\n        if day <= 31\n   \
    \       return true\n        end\n      elsif month == 4 || month == 6 || month\
    \ == 9 || month == 11\n        if day <= 30\n          return true\n        end\n\
    \      elsif month == 2\n        if year % 4 == 0\n          if day <= 29\n  \
    \          return true\n          end\n        else\n          if day <= 28\n\
    \            return true\n          end\n        end\n      end\n    end\n  end\n\
    \  return false\nend", "  return false if date.empty?\n  valid_month = [1,3,5,7,8,10,12].include?(date[0..1].to_i)\
    \ ? date[3..4].to_i > 0 && date[3..4].to_i < 32 : (\n    [4,6,9,11].include?(date[0..1].to_i)\
    \ ? date[3..4].to_i > 0 && date[3..4].to_i < 31 : (\n      [2].include?(date[0..1].to_i)\
    \ ? date[3..4].to_i > 0 && date[3..4].to_i < 30 : false\n    )\n  )\n  date[0..1].to_i\
    \ > 0 && date[0..1].to_i < 13 && valid_month && date[6..9].to_i > 0 && date[2..3]\
    \ == '-'\nend", "  return nil if date.nil?\n  return false if date.split('-').size\
    \ != 3\n  return false if date.match(/\\d{2}\\/\\d{2}\\/\\d{4}/)\n  return false\
    \ if date.match(/\\d{4}-\\d{2}-\\d{2}/)\n  return false if date.match(/[a-zA-Z]/)\n\
    \  return false if date.split('-').any? { |el| el.to_i == 0 }\n  date = date.split('-')\n\
    \  return false if date[1].to_i > 12\n  if date[1].to_i == 2\n    return false\
    \ if date[0].to_i > 29\n  elsif date[1].to_i.odd?\n    return false if date[0].to_i\
    \ > 31\n  else\n    return false if date[0].to_i > 30\n  end\n  true\nend", "\t\
    if date.empty?\n\t\tfalse\n\telsif date.split('-').size != 3\n\t\tfalse\n\telsif\
    \ date[2] != '-' || date[5] != '-'\n\t\tfalse\n\telsif date.include?('/')\n\t\t\
    false\n\telsif date.split('-')[0].to_i < 1 || date.split('-')[0].to_i > 12\n\t\
    \tfalse\n\telsif (date.split('-')[0].to_i == 1 || date.split('-')[0].to_i == 3\
    \ || date.split('-')[0].to_i == 5 || date.split('-')[0].to_i == 7 || date.split('-')[0].to_i\
    \ == 8 || date.split('-')[0].to_i == 10 || date.split('-')[0].to_i == 12) && (date.split('-')[1].to_i\
    \ < 1 || date.split('-')[1].to_i > 31)\n\t\tfalse\n\telsif (date.split('-')[0].to_i\
    \ == 4 || date.split('-')[0].to_i == 6 || date.split('-')[0].to_i == 9 || date.split('-')[0].to_i\
    \ == 11) && (date.split('-')[1].to_i < 1 || date.split('-')[1].to_i > 30)\n\t\t\
    false\n\telsif date.split('-')[0].to_i == 2 && (date.split('-')[1].to_i < 1 ||\
    \ date.split('-')[1].to_i > 29)\n\t\tfalse\n\telse\n\t\ttrue\n\tend\nend", " \
    \ # TODO\nend", "  date = date.split('-')\n  date.all?{|d| d.to_i != 0} && date.size\
    \ == 3 && date[0].to_i <= 12 && date[1].to_i <= 31 && date[2].to_i <= 9999\nend",
  "  begin\n    m, d, y = date.split(\"-\").map(&:to_i)\n    return false if y < 0\
    \ || d < 1 || m < 1\n    return true if y % 4 == 0 && m == 2 && d <= 29\n    return\
    \ true if [1,3,5,7,8,10,12].include?(m) && d <= 31\n    return true if [4,6,9,11].include?(m)\
    \ && d <= 30\n    return true if m == 2 && d <= 28\n    return false\n  rescue\
    \ => e\n    return false\n  end\nend", "  if !(date.split('-').count == 3)\n \
    \   false\n  elsif !(1..12).to_a.include?(date.split('-')[0].to_i)\n    false\n\
    \  elsif !(1..31).to_a.include?(date.split('-')[1].to_i)\n    false\n  elsif date.split('-')[2].to_i.zero?\n\
    \    false\n  else\n    true\n  end\nend", "  month, day, year = date.split('-')\n\
    \  month = month.to_i\n  day = day.to_i\n  year = year.to_i\n  if month <= 12\
    \ && month >= 1\n    if month == 2 && day <= 29 && day >= 1\n      if day == 29\
    \ && !is_leap_year(year)\n        return false\n      end\n      return true\n\
    \    elsif month % 2 == 0 && month <= 7\n      if month == 6 && day <= 30 && day\
    \ >= 1\n        return true\n      elsif day <= 31 && day >= 1\n        return\
    \ true\n      end\n    elsif month % 2 == 1 && month >= 8\n      if month == 9\
    \ && day <= 30 && day >= 1\n        return true\n      elsif day <= 31 && day\
    \ >= 1\n        return true\n      end\n    end\n  end\n  return false\nend",
  "    date = date.split(\"-\")\n    months = date[0].to_i\n    days = date[1].to_i\n\
    \    years = date[2].to_i\n    if(date.length == 3)\n        if(date[0].length\
    \ == 2 && date[1].length == 2 && date[2].length == 4)\n            if(months >\
    \ 0 && months < 13)\n                if(months == 1 || months == 3 || months ==\
    \ 5 || months == 7 || months == 8 || months == 10 || months == 12)\n         \
    \           if(days > 0 && days < 32)\n                        return true\n \
    \                   end\n                elsif(months == 4 || months == 6 || months\
    \ == 9 || months == 11)\n                    if(days > 0 && days < 31)\n     \
    \                   return true\n                    end\n                elsif(months\
    \ == 2)\n                    if(days > 0 && days < 30)\n                     \
    \   return true\n                    end\n                end\n            end\n\
    \        end\n    end\n    return false\nend", "\tif date.empty?\n\t\treturn false\n\
    \tend\n\tdate.split(\"-\").length == 3 ? true : false\nend", "  month, day, year\
    \ = date.split('-')\n  return false if month.to_i < 1 || month.to_i > 12\n  return\
    \ false if year.to_i == 0\n  case month.to_i\n  when 1, 3, 5, 7, 8, 10, 12\n \
    \   return false if day.to_i < 1 || day.to_i > 31\n  when 4, 6, 9, 11\n    return\
    \ false if day.to_i < 1 || day.to_i > 30\n  when 2\n    if (year.to_i % 4 == 0\
    \ && year.to_i % 100 != 0) || year.to_i % 400 == 0\n      return false if day.to_i\
    \ < 1 || day.to_i > 29\n    else\n      return false if day.to_i < 1 || day.to_i\
    \ > 28\n    end\n  end\n  true\nend", "  #if date is empty, returns false\n  return\
    \ false if date.empty?\n  date = date.split('-')\n  return false if date.length\
    \ != 3", "  return false if date.empty?\n  return false if !date.match(/^\\d{2}-\\\
    d{2}-\\d{4}$/)\n  date_info = date.split('-')\n  date_info[0] = date_info[0].to_i\n\
    \  date_info[1] = date_info[1].to_i\n  date_info[2] = date_info[2].to_i\n  if\
    \ date_info[0] > 12\n    return false\n  elsif date_info[0] == 2\n    if !leap_year?(date_info[2])\n\
    \      return false if date_info[1] > 28\n    elsif leap_year?(date_info[2])\n\
    \      return false if date_info[1] > 29\n    end\n  elsif [4,6,9,11].include?(date_info[0])\n\
    \    return false if date_info[1] > 30\n  elsif [1,3,5,7,8,10,12].include?(date_info[0])\n\
    \    return false if date_info[1] > 31\n  end\n  true\nend", "    if date.include?(\"\
    -\") == false\n        return false\n    end\n    date = date.split(\"-\")\n \
    \   date.each do |i|\n        i = i.to_i\n    end\n    if date[0].to_i < 1 ||\
    \ date[0].to_i > 12\n        return false\n    end\n    if date[0].to_i == 2\n\
    \        if date[1].to_i < 1 || date[1].to_i > 29\n            return false\n\
    \        end\n    elsif date[0].to_i == 1 || date[0].to_i == 3 || date[0].to_i\
    \ == 5 || date[0].to_i == 7 || date[0].to_i == 8 || date[0].to_i == 10 || date[0].to_i\
    \ == 12\n        if date[1].to_i < 1 || date[1].to_i > 31\n            return\
    \ false\n        end\n    elsif date[0].to_i == 4 || date[0].to_i == 6 || date[0].to_i\
    \ == 9 || date[0].to_i == 11\n        if date[1].to_i < 1 || date[1].to_i > 30\n\
    \            return false\n        end\n    end\n    return true\nend\nputs valid_date('03-11-2000')\
    \ #=> True\nputs valid_date('15-01-2012') #=> False\nputs valid_date('04-0-2040')\
    \ #=> False\nputs valid_date('06-04-2020') #=> True\nputs valid_date('06/04/2020')\
    \ #=> False", "  # Your code here\nend", "  # Your code here\nend", '  return
    false if date.empty?', "  months_with_31_days = [1,3,5,7,8,10,12]\n  months_with_30_days\
    \ = [4,6,9,11]\n  leap_years = [2004, 2008, 2012, 2016, 2020, 2024, 2028, 2032,\
    \ 2036, 2040, 2044, 2048, 2052, 2056, 2060, 2064, 2068, 2072, 2076, 2080, 2084,\
    \ 2088, 2092, 2096]\n  year = date[-4..-1].to_i\n  month = date[0..1].to_i\n \
    \ day = date[3..4].to_i\n  begin\n    # The date string is not empty.\n    if\
    \ date.empty?\n      return false\n    end\n    # The date should be in the format:\
    \ mm-dd-yyyy\n    if date[2] != '-' || date[5] != '-'\n      return false\n  \
    \  end\n    # The months should not be less than 1 or higher than 12.\n    if\
    \ month < 1 || month > 12\n      return false\n    end\n    # The number of days\
    \ is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
    \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
    \    if month == 2 && year.in?(leap_years)\n      if day < 1 || day > 29\n   \
    \     return false\n      end\n    elsif month == 2\n      if day < 1 || day >\
    \ 28\n        return false\n      end\n    elsif month.in?(months_with_31_days)\n\
    \      if day < 1 || day > 31\n        return false\n      end\n    elsif month.in?(months_with_30_days)\n\
    \      if day < 1 || day > 30\n        return false\n      end\n    end\n    return\
    \ true\n  rescue => exception\n    return false\n  end\nend", "  begin\n    Date.parse(date)\n\
    \    true\n  rescue ArgumentError\n    false\n  end\nend", "  if (date =~ /[0-9]{2}-[0-9]{2}-[0-9]{4}/)\
    \ # if the given date is in the right format\n    date = date.split(\"-\") # separate\
    \ the numbers in array\n    if (date[1].to_i > 0) && (date[1].to_i < 13) # if\
    \ month is between 1-12\n      if date[1].to_i == 2 && (date[0].to_i > 0) && (date[0].to_i\
    \ < 30) # if it's February\n        return true\n      elsif (date[1].to_i ==\
    \ 4 || date[1].to_i == 6 || date[1].to_i == 9 || date[1].to_i == 11) && (date[0].to_i\
    \ > 0) && (date[0].to_i < 31) # if it's a 30-day month\n        return true\n\
    \      elsif (date[1].to_i == 1 || date[1].to_i == 3 || date[1].to_i == 5 || date[1].to_i\
    \ == 7 || date[1].to_i == 8 || date[1].to_i == 10 || date[1].to_i == 12) && (date[0].to_i\
    \ > 0) && (date[0].to_i < 32) # if it's a 31-day month\n        return true\n\
    \      else\n        return false\n      end\n    else\n      return false\n \
    \   end\n  else\n    return false\n  end\nend", "  #your code goes here\nend",
  "    if date.length == 0\n        false\n    elsif \n        arr = date.split('-')\n\
    \        d = arr[0].to_i\n        m = arr[1].to_i\n        y = arr[2].to_i\n \
    \       if d <= 0 or d > 31 or m <= 0 or m > 12 or y <= 0 or date.include? '/'\n\
    \            false\n        elsif m == 2\n            if d > 29\n            \
    \    false\n            else\n                true\n            end\n        elsif\
    \ m == 4 or m == 6 or m == 9 or m == 11\n            if d > 30\n             \
    \   false\n            else\n                true\n            end\n        else\n\
    \            true\n        end\n    end\nend", "  return false if date.empty?\n\
    \  return false if date.include?('/')\n  return false if date.split('-').size\
    \ != 3\n  date_arr = date.split('-')\n  days = date_arr[1].to_i\n  month = date_arr[0].to_i\n\
    \  year = date_arr[2].to_i\n  if month > 12 || month < 1\n    return false\n \
    \ end\n  if days < 1 || days > 31\n    return false\n  end\n  if month == 2\n\
    \    if year % 4 == 0\n      return false if days > 29\n    else\n      return\
    \ false if days > 28\n    end\n  end\n  if month == 4 || month == 6 || month ==\
    \ 9 || month == 11\n    return false if days > 30\n  end\n  return true\nend",
  "\tif date.length==0\n\t\treturn false\n\tend\n\tif date.include?('/')\n\t\treturn\
    \ false\n\tend\n\tif date.include?('-')\n\t\tdate=date.split('-')\n\tend\n\tif\
    \ date[0].to_i<1 || date[0].to_i>12\n\t\treturn false\n\tend\n\tif date[0].to_i==2\n\
    \t\tif date[1].to_i<1 || date[1].to_i>29\n\t\t\treturn false\n\t\tend\n\telsif\
    \ date[0].to_i%2==0\n\t\tif date[1].to_i<1 || date[1].to_i>30\n\t\t\treturn false\n\
    \t\tend\n\telse\n\t\tif date[1].to_i<1 || date[1].to_i>31\n\t\t\treturn false\n\
    \t\tend\n\tend\n\tif date[2].to_i<1900 || date[2].to_i>2020\n\t\treturn false\n\
    \tend\n\treturn true\nend", "  if date.include? \"/\"\n    return false\n  else\n\
    \    date_split = date.split(\"-\")\n    date_split[0] = date_split[0].to_i\n\
    \    date_split[1] = date_split[1].to_i\n    date_split[2] = date_split[2].to_i\n\
    \    month_day = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    if date_split[0]\
    \ > 12 || date_split[0] < 1\n      return false\n    end\n    if date_split[1]\
    \ > month_day[date_split[0] - 1] || date_split[1] < 1\n      return false\n  \
    \  end\n    if date_split[0] == 2 && date_split[1] == 29 && date_split[2] % 4\
    \ != 0\n      return false\n    end\n    return true\n  end\nend", "  if date.empty?\
    \ || date.include?(\"/\")\n    false\n  else\n    valid_month = ((date[0..1].to_i\
    \ <= 12) && (date[0..1].to_i > 0))\n    valid_day = ((date[3..4].to_i <= 31) &&\
    \ (date[3..4].to_i > 0))\n    valid_year = ((date[6..9].to_i > 0) && (date[6..9].to_i\
    \ < 3000))\n    if valid_month == true && valid_day == true && valid_year == true\n\
    \      case date[0..1].to_i\n      when 1,3,5,7,8,10,12\n        if date[3..4].to_i\
    \ > 31\n          false\n        else\n          true\n        end\n      when\
    \ 4,6,9,11\n        if date[3..4].to_i > 30\n          false\n        else\n \
    \         true\n        end\n      when 2\n        if date[3..4].to_i > 29\n \
    \         false\n        else\n          true\n        end\n      end\n    else\n\
    \      false\n    end\n  end\nend", "  months = {'01' => '31', '02' => '28', '03'\
    \ => '31', '04' => '30', '05' => '31', '06' => '30', '07' => '31', '08' => '31',\
    \ '09' => '30', '10' => '31', '11' => '30', '12' => '31'}\n  first = date[0..1]\n\
    \  second = date[3..4]\n  third = date[6..9]\n  date.length == 10 && date[2] ==\
    \ '-' && date[5] == '-' && months.keys.include?(first) && months.keys.include?(second)\
    \ && first.to_i <= 12 && second.to_i <= 12 && third.to_i > 0 && first[0] != '0'\
    \ && second[0] != '0' && third.to_i < 3000 && months[first].to_i >= second.to_i\
    \ && second.to_i > 0\nend", "  begin\n    Date.parse(date)\n    true\n  rescue\n\
    \    false\n  end\nend\nputs valid_date('03-11-2000')\nputs valid_date('15-01-2012')\n\
    puts valid_date('04-0-2040')\nputs valid_date('06-04-2020')\nputs valid_date('06/04/2020')",
  "  # Write your code here\nend", "  months = [0,31,29,31,30,31,30,31,31,30,31,30,31]\n\
    \  d,m,y = date.split(\"-\").map{|s| s.to_i}\n  m && m > 0 && m < 13 && d && d\
    \ > 0 && d <= months[m] && y && y > 0 ? true : false\nend", "  return false if\
    \ date.empty?\n  if date =~ /^(?:(?:0?[1-9]|1\\d|2[0-8])-(?:0?[1-9]|1[0-2])|(?:29|30)-(?:0?[13-9]|1[0-2])|31-(?:0?[13578]|1[02]))-(?:0{2,3}[1-9]|0{1,2}[1-9]\\\
    d|0?[1-9]\\d{2}|[1-9]\\d{3})|29-02-(?:\\d{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)$/\n\
    \    true\n  else\n    false\n  end\nend", "  dateArr = date.split('-')\n  month\
    \ = dateArr[0].to_i\n  day = dateArr[1].to_i\n  year = dateArr[2].to_i\n  case\
    \ month\n  when 1,3,5,7,8,10,12\n    if day < 1 || day > 31\n      return false\n\
    \    end\n  when 4,6,9,11\n    if day < 1 || day > 30\n      return false\n  \
    \  end\n  when 2\n    if day < 1 || day > 29\n      return false\n    end\n  else\n\
    \    return false\n  end\n  if year < 0\n    return false\n  end\n  if month <\
    \ 1 || month > 12\n    return false\n  end\n  return true\nend", "    date = date.split(\"\
    -\")\n    if date[0].to_i > 0 && date[0].to_i < 13 && date[1].to_i > 0 && date[1].to_i\
    \ < 32 && date[2].to_i > 0\n        true\n    else\n        false\n    end\nend\n\
    p valid_date('06-04-2020')", "  return false if date.empty?\n  date_pattern =\
    \ /\\d{2}-\\d{2}-\\d{4}/\n  return false unless date_pattern.match(date)\n  month,\
    \ day, year = date.split('-')\n  month = month.to_i\n  day = day.to_i\n  year\
    \ = year.to_i\n  return false if year < 0\n  return false if month < 1 || month\
    \ > 12\n  return false if day < 1 || day > 31\n  return false if (month == 2)\
    \ && (day > 29)\n  return false if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) && (day > 30)\n  true\nend", "  # Your code here\nend", "  date\
    \ = date.split('-')\n  date = date.map(&:to_i)\n  case date[0]\n  when 1,3,5,7,8,10,12\n\
    \    return false if date[1] < 1 || date[1] > 31\n  when 4,6,9,11\n    return\
    \ false if date[1] < 1 || date[1] > 30\n  when 2\n    return false if date[1]\
    \ < 1 || date[1] > 29\n  else\n    return false\n  end\n  return false if date[0]\
    \ < 1 || date[0] > 12\n  return false if date[2] < 0\n  true\nend", "  date =\
    \ date.split(\"-\")\n  date.each{|x| return false if x.length > 2}\n  date[1]\
    \ = date[1].to_i\n  date[0] = date[0].to_i\n  date[2] = date[2].to_i\n  #p \"\
    1\"\n  return false if date[0] > 12 || date[0] < 1\n  #p \"2\"\n  return false\
    \ if date[2] < 1\n  #p \"3\"\n  return false if date[0] == 2 && date[1] > 29\n\
    \  #p \"4\"\n  return false if (date[0] == 4 || date[0] == 6 || date[0] == 9 ||\
    \ date[0] == 11) && date[1] > 30\n  #p \"5\"\n  return false if (date[0] == 1\
    \ || date[0] == 3 || date[0] == 5 || date[0] == 7 || date[0] == 8 || date[0] ==\
    \ 10 || date[0] == 12) && date[1] > 31\n  #p \"6\"\n  return true\nend", "  days\
    \ = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"\
    10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\",\
    \ \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\"\
    , \"30\", \"31\"]\n  months = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\"\
    , \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n  dates = date.split(\"-\"\
    )\n  # print(dates)\n  flag = false\n  if dates.length == 3\n    flag = true\n\
    \  end\n  if flag\n    if months.include?(dates[0])\n      flag = true\n    else\n\
    \      flag = false\n    end\n  end\n  if flag\n    if days.include?(dates[1])\n\
    \      flag = true\n    else\n      flag = false\n    end\n  end\n  if flag\n\
    \    if dates[0] == \"01\" || dates[0] == \"03\" || dates[0] == \"05\" || dates[0]\
    \ == \"07\" || dates[0] == \"08\" || dates[0] == \"10\" || dates[0] == \"12\"\n\
    \      if dates[1].to_i > 31\n        flag = false\n      end\n    elsif dates[0]\
    \ == \"04\" || dates[0] == \"06\" || dates[0] == \"09\" || dates[0] == \"11\"\n\
    \      if dates[1].to_i > 30\n        flag = false\n      end\n    elsif dates[0]\
    \ == \"02\"\n      if dates[1].to_i > 29\n        flag = false\n      end\n  \
    \  end\n  end\n  if flag\n    if dates[2].to_i > 2020\n      flag = false\n  \
    \  end\n  end\n  flag\nend", "  # Put your code here!\nend", "  not_empty = !date.empty?\n\
    \  return false if not_empty\n  \n  month = date[0..1].to_i\n  day = date[3..4].to_i\n\
    \  year = date[6..9].to_i\n  \n  return false if month > 12 or month < 1\n  return\
    \ false if day > 31 or day < 1\n  return false if year < 1\n  \n  case month\n\
    \  when 1,3,5,7,8,10,12\n    return false if day > 31\n  when 4,6,9,11\n    return\
    \ false if day > 30\n  when 2\n    if year % 4 == 0 and year % 100 != 0\n    \
    \  return false if day > 29\n    else\n      return false if day > 28\n    end\n\
    \  end\n  \n  return true\nend", "  date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$/\n\
    end", "  date = date.split(\"-\")\n  if date.length != 3\n    return false\n \
    \ end\n  day = date[1].to_i\n  month = date[0].to_i\n  year = date[2].to_i\n \
    \ if month < 1 || month > 12\n    return false\n  end\n  if month == 2\n    if\
    \ year % 4 == 0\n      if day > 29\n        return false\n      end\n    else\n\
    \      if day > 28\n        return false\n      end\n    end\n  end\n  if (month\
    \ == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10\
    \ || month == 12) && day > 31\n    return false\n  end\n  if (month == 4 || month\
    \ == 6 || month == 9 || month == 11) && day > 30\n    return false\n  end\n  return\
    \ true\nend", "  # code here\nend", "  # Your code here\nend", "  #### your code\
    \ here\nend", "  m = date.match(/^(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)$/)\n  return\
    \ false if not m\n  d = m[2].to_i\n  case m[1].to_i\n  when 1,3,5,7,8,10,12 then\
    \ return d >= 1 and d <= 31\n  when 4,6,9,11 then return d >= 1 and d <= 30\n\
    \  when 2 then return d >= 1 and d <= 29\n  else\n    return false\n  end\nend",
  "  date = date.split('-')\n  return false if date.length != 3\n  date.each do |d|\n\
    \    return false if d.to_i < 1\n  end\n  if date[1].to_i > 12\n    return false\n\
    \  elsif date[1].to_i == 2\n    return false if date[0].to_i > 29\n  elsif [4,6,9,11].include?(date[1].to_i)\n\
    \    return false if date[0].to_i > 30\n  else\n    return false if date[0].to_i\
    \ > 31\n  end\n  return true\nend", "  months = ['01', '02', '03', '04', '05',\
    \ '06', '07', '08', '09', '10', '11', '12']\n  days31 = ['01', '03', '05', '07',\
    \ '08', '10', '12']\n  days30 = ['04', '06', '09', '11']\n  if date == ''\n  \
    \  false\n  elsif months.include?(date[0..1])\n    if days31.include?(date[0..1])\n\
    \      if date[3..4].to_i < 32 && date[3..4].to_i > 0\n        true\n      else\n\
    \        false\n      end\n    elsif days30.include?(date[0..1])\n      if date[3..4].to_i\
    \ < 31 && date[3..4].to_i > 0\n        true\n      else\n        false\n     \
    \ end\n    elsif date[0..1] == '02'\n      if date[3..4].to_i < 30 && date[3..4].to_i\
    \ > 0\n        true\n      else\n        false\n      end\n    end\n  else\n \
    \   false\n  end\nend", "  # if date is valid return true\n  if !date.empty? &&\
    \ is_leap_year(date) && valid_date_format(date) && valid_month(date) && valid_days(date)\n\
    \    return true\n  end\n  # if date is invalid return false\n  false\nend", '  return
    false if date.match(/\d{1,2}-\d{1,2}-\d{4}/).nil?', "    date_regex = /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\n\
    \    date_regex.match(date) ? true : false\nend", "  return false if date.nil?\
    \ || date.empty?\n  return false if !date.include?('-')\n  dd, mm, yyyy = date.split('-')\n\
    \  return false if dd.to_i == 0 || mm.to_i == 0 || yyyy.to_i == 0\n  return false\
    \ if yyyy.to_i < 0\n  return false if mm.to_i > 12 || mm.to_i < 1\n  return false\
    \ if dd.to_i > 31 || dd.to_i < 1\n  case mm.to_i\n  when 1,3,5,7,8,10,12\n   \
    \ return false if dd.to_i > 31\n  when 4,6,9,11\n    return false if dd.to_i >\
    \ 30\n  when 2\n    return false if dd.to_i > 29\n  end\n  true\nend", "    #\
    \ This is what will be returned at the end of the function.\n    valid = false",
  "  begin\n    regex = /(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\d)/\n    m_d_y = date.match(regex)\n\
    \    month = m_d_y[1].to_i\n    day = m_d_y[2].to_i\n    year = m_d_y[3].to_i\n\
    \    unless month.between?(1,12)\n      return false\n    end\n    case month\n\
    \    when 1,3,5,7,8,10,12\n      unless day.between?(1,31)\n        return false\n\
    \      end\n    when 4,6,9,11\n      unless day.between?(1,30)\n        return\
    \ false\n      end\n    when 2\n      unless day.between?(1,29)\n        return\
    \ false\n      end\n    end\n    return true\n  rescue\n    return false\n  end\n\
    end", "  # your code here\nend", "  rules = []\n  date.include?(\"-\") ? true\
    \ : rules << false\n  valid_days = [[1,3,5,7,8,10,12],[4,6,9,11],[2]]\n  valid_days.each\
    \ do |mon|\n    mon.each do |m|\n      days = date.split(\"-\")[1].to_i\n    \
    \  days = 29 if date.split(\"-\")[0].to_i == 2 && m == 2\n      days = 28 if date.split(\"\
    -\")[0].to_i == 2 && m != 2\n      days = 30 if m == 4 || m == 6 || m == 9 ||\
    \ m == 11\n      days = 31 if m == 1 || m == 3 || m == 5 || m == 7 || m == 8 ||\
    \ m == 10 || m == 12\n      days = days if m == date.split(\"-\")[0].to_i\n  \
    \    rules << days\n    end\n  end\n  (1..12).include?(date.split(\"-\")[0].to_i)\
    \ ? true : rules << false\n  rules.include?(false) ? false : true\nend", "  date\
    \ = date.split('-')\n  a = 0\n  b = 0\n  if date.length == 3\n    if date[0].to_i\
    \ >= 1 && date[0].to_i <= 12\n      a = 1\n    end\n    if date[0].to_i == 1 ||\
    \ date[0].to_i == 3 || date[0].to_i == 5 || date[0].to_i == 7 || date[0].to_i\
    \ == 8 || date[0].to_i == 10 || date[0].to_i == 12\n      if date[1].to_i >= 1\
    \ && date[1].to_i <= 31\n        b = 1\n      end\n    elsif date[0].to_i == 4\
    \ || date[0].to_i == 6 || date[0].to_i == 9 || date[0].to_i == 11\n      if date[1].to_i\
    \ >= 1 && date[1].to_i <= 30\n        b = 1\n      end\n    elsif date[0].to_i\
    \ == 2\n      if date[1].to_i >= 1 && date[1].to_i <= 29\n        b = 1\n    \
    \  end\n    end\n  end\n  if a == 1 && b == 1\n    return true\n  else\n    return\
    \ false\n  end\nend\nputs valid_date('04-0-2040')", "\tp (date.match(/^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([1-2][0-9][0-9][0-9])$/))?\
    \ true : false\nend", "  dates = date.split('-')\n  months = ['01', '03', '05',\
    \ '07', '08', '10', '12']\n  days = [31, 30, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31]\n  return false if dates.length != 3\n  days[1] = 29 if dates[2].to_i %\
    \ 4 == 0\n  return false if days[dates[0].to_i - 1] < dates[1].to_i || days[dates[0].to_i\
    \ - 1] == nil\n  return false if dates[0].to_i == 0 || dates[1].to_i == 0 || dates[2].to_i\
    \ == 0\n  return false if dates[0].length != 2 || dates[1].length != 2 || dates[2].length\
    \ != 4\n  return true\nend", "  date.match?(/^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-(\\\
    d{4})$/) &&\n    Date.parse(date) rescue false\nend", "    regex = /(^\\d{2}-\\\
    d{2}-\\d{4}$)/\n    regex.match(date) ? true : false\nend", "  # Write your code\
    \ here\nend", "  date = date.split('-')\n  date.length == 3 && date[0].to_i.between?(1,12)\
    \ && date[1].to_i.between?(1,30) && date[2].to_i.between?(1,2999)\nend", "  months\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  date = date.split(/-/)\n\
    \  if date.length != 3\n    return false\n  end\n  month = date[0].to_i\n  day\
    \ = date[1].to_i\n  year = date[2].to_i\n  if month < 1 || month > 12\n    return\
    \ false\n  end\n  if year % 4 == 0 && year % 100 != 0 || year % 400 == 0\n   \
    \ months[1] = 29\n  end\n  if day < 1 || day > months[month - 1]\n    return false\n\
    \  end\n  return true\nend\nputs valid_date('03-11-2000') == true\nputs valid_date('15-01-2012')\
    \ == false\nputs valid_date('04-0-2040') == false\nputs valid_date('06-04-2020')\
    \ == true\nputs valid_date('06/04/2020') == false", "  re = /^((0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4})$/\n  if re.match(date)\n    dates = date.split('-')\n    if dates[0].to_i\
    \ > 12 || dates[0].to_i < 1\n      return false\n    end\n    if dates[0].to_i\
    \ == 2\n      if dates[1].to_i > 29 || dates[1].to_i < 1\n        return false\n\
    \      end\n    elsif [1,3,5,7,8,10,12].include?(dates[0].to_i)\n      if dates[1].to_i\
    \ > 31 || dates[1].to_i < 1\n        return false\n      end\n    elsif [4,6,9,11].include?(dates[0].to_i)\n\
    \      if dates[1].to_i > 30 || dates[1].to_i < 1\n        return false\n    \
    \  end\n    end\n    return true\n  else\n    return false\n  end\nend", "  date\
    \ = date.split('-')\n  return false if date.length != 3\n  day = date[1].to_i\n\
    \  month = date[0].to_i\n  if month == 1 or month == 3 or month == 5 or month\
    \ == 7 or month == 8 or month == 10 or month == 12\n    return false if day >\
    \ 31 or day < 1\n  elsif month == 4 or month == 6 or month == 9 or month == 11\n\
    \    return false if day > 30 or day < 1\n  elsif month == 2\n    return false\
    \ if day > 29 or day < 1\n  else\n    return false\n  end\n  return false if month\
    \ > 12 or month < 1\n  return false if date[2].length != 4\n  return true\nend",
  "  arr = date.split('-')\n  date_pattern = /(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}/\n\
    \  puts date_pattern.match(date) ? true : false\nend", "  begin\n    if !date.empty?\
    \ and Date.parse(date)\n      true\n    else\n      false\n    end\n  rescue\n\
    \    false\n  end\nend", "  month, day, year = date.split('-')\n  return false\
    \ if month.to_i < 1 || month.to_i > 12\n  return false if year.to_i < 1\n  return\
    \ false if day.to_i < 1\n  case month.to_i\n  when 1, 3, 5, 7, 8, 10, 12\n   \
    \ return false if day.to_i > 31\n  when 4, 6, 9, 11\n    return false if day.to_i\
    \ > 30\n  when 2\n    return false if day.to_i > 29\n  end\n  true\nend", "  if\
    \ date.size == 0\n    return false\n  end\n  date = date.split('-')\n  if date.size\
    \ != 3\n    return false\n  end\n  if date[0].to_i <= 0 || date[0].to_i > 12\n\
    \    return false\n  end\n  if date[0].to_i == 2\n    if date[1].to_i <= 0 ||\
    \ date[1].to_i > 29\n      return false\n    end\n  elsif date[0].to_i % 2 ==\
    \ 0\n    if date[1].to_i <= 0 || date[1].to_i > 30\n      return false\n    end\n\
    \  else\n    if date[1].to_i <= 0 || date[1].to_i > 31\n      return false\n \
    \   end\n  end\n  return true\nend", "  date = date.split('-')\n  return false\
    \ if date.length != 3\n  date[0].to_i > 0 && date[0].to_i < 13 && date[1].to_i\
    \ > 0 && date[1].to_i < 13 && date[2].to_i > 0 && date[2].to_i < 32\nend", " \
    \ month, day, year = date.split('-')\n  month = month.to_i\n  day = day.to_i\n\
    \  year = year.to_i\n  if month == 2\n    if day < 1 || day > 29\n      return\
    \ false\n    end\n  elsif month == 1 || month == 3 || month == 5 || month == 7\
    \ || month == 8 || month == 10 || month == 12\n    if day < 1 || day > 31\n  \
    \    return false\n    end\n  elsif month == 4 || month == 6 || month == 9 ||\
    \ month == 11\n    if day < 1 || day > 30\n      return false\n    end\n  else\n\
    \    return false\n  end\n  if month < 1 || month > 12\n    return false\n  end\n\
    \  if year < 0\n    return false\n  end\n  return true\nend", "  return false\
    \ if date.empty?\n  false unless date.match(/\\d{2}-\\d{2}-\\d{4}/)\n  date =\
    \ date.split(\"-\")\n  date[0] = date[0].to_i\n  date[1] = date[1].to_i\n  date[2]\
    \ = date[2].to_i\n  false if (date[0] > 12 || date[0] < 1)\n  false if (date[2]\
    \ < 0)\n  if date[0] % 2 == 0\n    false if (date[0] == 2 && date[1] > 29)\n \
    \   false if (date[0] == 8 && date[1] > 31)\n    false if (date[0] != 2 && date[0]\
    \ != 8 && date[1] > 30)\n  else\n    false if (date[0] == 1 && date[1] > 31)\n\
    \    false if (date[0] != 1 && date[1] > 30)\n  end\n  true\nend\nputs valid_date('03-11-2000')\n\
    puts valid_date('15-01-2012')\nputs valid_date('04-0-2040')\nputs valid_date('06-04-2020')\n\
    puts valid_date('06/04/2020')", "  months = {'01' => 31, '02' => 28, '03' => 31,\
    \ '04' => 30, '05' => 31, '06' => 30, '07' => 31, '08' => 31, '09' => 30, '10'\
    \ => 31, '11' => 30, '12' => 31}\n  date = date.split('-')\n  date[0] = date[0].to_i.to_s\n\
    \  date[1] = date[1].to_i.to_s\n  date[2] = date[2].to_i.to_s\n  months.has_key?(date[0])\
    \ && months[date[0]].to_i >= date[1].to_i && 1 <= date[1].to_i && 1 <= date[0].to_i\
    \ && 12 >= date[0].to_i && date.length == 3\nend\nputs valid_date('03-11-2000')\
    \ # True\nputs valid_date('15-01-2012') # False\nputs valid_date('04-0-2040')\
    \ # False\nputs valid_date('06-04-2020') # True\nputs valid_date('06/04/2020')\
    \ # False\nputs '==================='", "  if date.match(/\\A[0-9]{2}\\/[0-9]{2}\\\
    /[0-9]{4}\\z/) && date.match(/\\A[0-9]{2}\\/(?:0[1-9]|1[0-2])\\/[0-9]{4}\\z/)\
    \ && date.match(/\\A(?:0[1-9]|1[0-2])\\/[0-9]{2}\\/[0-9]{4}\\z/)\n    true\n \
    \ else\n    false\n  end\nend", "  valid_date_format = false\n  valid_range =\
    \ false\n  valid_month = false\n  valid_day = false\n  error_message = ''\n  if\
    \ date == nil || date == ''\n    error_message = 'Date is empty. Please enter\
    \ a date in mm-dd-yyyy format.'\n  else\n    valid_date_format = date_format(date)\n\
    \    valid_range = date_range(date)\n    valid_month = date_month(date)\n    valid_day\
    \ = date_day(date)\n  end\n  if valid_date_format && valid_range && valid_month\
    \ && valid_day\n    return true\n  else\n    return error_message\n  end\nend",
  "    # code here\n    if date[2] == \"/\"\n        return false\n    end\n    return\
    \ false if date.length == 0\n    date = date.split(\"-\")\n    days = date[1].to_i\n\
    \    months = date[0].to_i\n    years = date[2].to_i\n    if months == 2\n   \
    \     return false if days > 29\n    elsif months == 1 || months == 3 || months\
    \ == 5 || months == 7 || months == 8 || months == 10 || months == 12\n       \
    \ return false if days > 31\n    else\n        return false if days > 30\n   \
    \ end\n    return false if months > 12\n    return true\nend", "    if date.length\
    \ == 0\n        return false\n    end\n    if date.include?(\"/\")\n        return\
    \ false\n    end\n    if date.include?(\" \")\n        return false\n    end\n\
    \    if date.include?(\"-\")\n        date = date.split(\"-\")\n    end\n    if\
    \ date.length != 3\n        return false\n    end\n    if date[0].to_i > 12\n\
    \        return false\n    end\n    if date[0].to_i < 1\n        return false\n\
    \    end\n    if date[0].to_i == 2\n        if date[1].to_i > 29\n           \
    \ return false\n        end\n        if date[1].to_i < 1\n            return false\n\
    \        end\n    end\n    if date[0].to_i == 1 || date[0].to_i == 3 || date[0].to_i\
    \ == 5 || date[0].to_i == 7 || date[0].to_i == 8 || date[0].to_i == 10 || date[0].to_i\
    \ == 12\n        if date[1].to_i > 31\n            return false\n        end\n\
    \        if date[1].to_i < 1\n            return false\n        end\n    end\n\
    \    if date[0].to_i == 4 || date[0].to_i == 6 || date[0].to_i == 9 || date[0].to_i\
    \ == 11\n        if date[1].to_i > 30\n            return false\n        end\n\
    \        if date[1].to_i < 1\n            return false\n        end\n    end\n\
    \    if date[2].to_i > 9999\n        return false\n    end\n    if date[2].to_i\
    \ < 1\n        return false\n    end\n    return true\nend", "  spl = date.split(\"\
    -\")\n  return false if date.length == 0\n  return false if spl.length != 3\n\
    \  return false if spl[0].to_i > 12\n  return false if spl[1].to_i > 31 && spl[0].to_i\
    \ < 7 && spl[0].to_i % 2 == 0\n  return false if spl[1].to_i > 30 && spl[0].to_i\
    \ > 7 && spl[0].to_i % 2 == 1\n  return false if spl[1].to_i > 29 && spl[0].to_i\
    \ == 2\n  return false if spl[2].to_i < 1000 && spl[2].to_i > 9999\n  return true\n\
    end", "  month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  return\
    \ false if date.empty?\n  month, day, year = date.split('-')\n  return false if\
    \ month.to_i < 1 || month.to_i > 12\n  return false if year.length != 4\n  return\
    \ false if day.to_i < 1 || day.to_i > month_days[month.to_i - 1]\n  true\nend",
  "  return false if date.empty?\n  m, d, y = date.split('-')\n  return false if !m.match(/\\\
    d{2}/) || !d.match(/\\d{2}/) || !y.match(/\\d{4}/)\n  return false if m.to_i >\
    \ 12 || m.to_i < 1\n  return false if d.to_i > 31 || d.to_i < 1\n  return false\
    \ if y.to_i < 1\n  return false if m.to_i.in?([4,6,9,11]) && d.to_i > 30\n  return\
    \ false if m.to_i == 2 && d.to_i > 29\n  true\nend", "  date = date.split('-')\n\
    \  months = [1,3,5,7,8,10,12]\n  days_31 = [1,3,5,7,8,10,12]\n  days_30 = [4,6,9,11]\n\
    \  date[0].to_i <= 31 && (months.include?(date[0].to_i) || days_30.include?(date[0].to_i)\
    \ || days_31.include?(date[0].to_i)) && date[1].to_i > 0 && date[1].to_i <= 12\
    \ && date[2].to_i > 0\nend", "  return false if date.empty?\n  year = date[-4..-1].to_i\n\
    \  month = date[0..1].to_i\n  day = date[3..4].to_i\n  valid_months = (1..12).include?(month)\n\
    \  valid_leap_year = year % 4 == 0\n  valid_leap_year = year % 100 != 0 unless\
    \ valid_leap_year\n  valid_leap_year = year % 400 == 0 unless valid_leap_year\n\
    \  valid_days = (1..31).include?(day)\n  valid_days = (1..30).include?(day) if\
    \ [4,6,9,11].include?(month)\n  valid_days = (1..29).include?(day) if month ==\
    \ 2\n  valid_days = (1..28).include?(day) if month == 2 && !valid_leap_year\n\
    \  valid_date = date.match(/\\d{2}-\\d{2}-\\d{4}/)\n  valid_date && valid_months\
    \ && valid_days\nend", "  if date.split('-').length != 3\n    return false\n \
    \ end\n  date = date.split('-')\n  month = date[0].to_i\n  day = date[1].to_i\n\
    \  year = date[2].to_i\n  if year < 1000 || year > 9999\n    return false\n  end\n\
    \  if month < 1 || month > 12\n    return false\n  end\n  if day < 1 || day >\
    \ 31\n    return false\n  end\n  if (month == 2 && day > 29) || (month == 4 &&\
    \ day > 30) || (month == 6 && day > 30) || (month == 9 && day > 30) || (month\
    \ == 11 && day > 30)\n    return false\n  end\n  return true\nend", "  return\
    \ false if date.include?('/')\n  return false if date.empty?\n  arr = date.split('-')\n\
    \  return false if arr.length != 3\n  m = arr[0].to_i\n  d = arr[1].to_i\n  y\
    \ = arr[2].to_i\n  if y > 2030 || y < 1000\n    return false\n  end\n  if m >\
    \ 12 || m < 1\n    return false\n  end\n  if m == 1 || m == 3 || m == 5 || m ==\
    \ 7 || m == 8 || m == 10 || m == 12\n    if d > 31 || d < 1\n      return false\n\
    \    end\n  elsif m == 4 || m == 6 || m == 9 || m == 11\n    if d > 30 || d <\
    \ 1\n      return false\n    end\n  elsif m == 2\n    if y % 4 == 0\n      if\
    \ d > 29 || d < 1\n        return false\n      end\n    else\n      if d > 28\
    \ || d < 1\n        return false\n      end\n    end\n  end\n  return true\nend",
  "  if date.size == 0\n    return false\n  end\n  if date[2] != '-' || date[5] !=\
    \ '-'\n    return false\n  end\n  if date[0..1].to_i > 12 || date[0..1].to_i <\
    \ 1\n    return false\n  end\n  if date[3..4].to_i > 31 || date[3..4].to_i < 1\n\
    \    return false\n  end\n  if date[0..1].to_i == 2 && date[3..4].to_i > 29\n\
    \    return false\n  end\n  if date[0..1].to_i == 4 && date[3..4].to_i > 30\n\
    \    return false\n  end\n  if date[0..1].to_i == 6 && date[3..4].to_i > 30\n\
    \    return false\n  end\n  if date[0..1].to_i == 9 && date[3..4].to_i > 30\n\
    \    return false\n  end\n  if date[0..1].to_i == 11 && date[3..4].to_i > 30\n\
    \    return false\n  end\n  if date[6..9].to_i > 2019 || date[6..9].to_i < 1900\n\
    \    return false\n  end\n  true\nend", "    if date.length == 0\n        false\n\
    \    elsif date.include?('/') || date.include?('-') == false\n        false\n\
    \    elsif date.include?('/')\n        date = date.split('/')\n    else\n    \
    \    date = date.split('-')\n    end\n    date[0] = date[0].to_i\n    date[1]\
    \ = date[1].to_i\n    date[2] = date[2].to_i\n    if date[0] < 1 || date[0] >\
    \ 12\n        false\n    elsif date[0] == 2 && date[1] > 29\n        false\n \
    \   elsif (date[0] == 4 || date[0] == 6 || date[0] == 9 || date[0] == 11) && date[1]\
    \ > 30\n        false\n    elsif (date[0] == 1 || date[0] == 3 || date[0] == 5\
    \ || date[0] == 7 || date[0] == 8 || date[0] == 10 || date[0] == 12) && date[1]\
    \ > 31\n        false\n    elsif date[1] < 1 || date[1] > 31\n        false\n\
    \    elsif date[2] < 0\n        false\n    else\n        true\n    end\nend",
  "  return true if date =~ /^[0-1]?[0-9]\\-[0-3]?[0-9]\\-[0-9]{4}$/\n  false\nend",
  "    #Write code here\nend\nputs valid_date('03-11-2000') == true\nputs valid_date('15-01-2012')\
    \ == false\nputs valid_date('04-0-2040') == false\nputs valid_date('06-04-2020')\
    \ == true\nputs valid_date('06/04/2020') == false\nputs valid_date('06-04-2020')\
    \ == true\nputs valid_date('06-04-') == false\nputs valid_date('06-04-2020') ==\
    \ true\nputs valid_date('06-04-') == false\nputs valid_date('06-04-2021') == true\n\
    puts valid_date('06-04-2021') == true\nputs valid_date('06-04-') == false\nputs\
    \ valid_date('06-04-2021') == true\nputs valid_date('06-04-2021') == true\nputs\
    \ valid_date('06-04-') == false\nputs valid_date('06-04-2021') == true\nputs valid_date('06-04-2021')\
    \ == true\nputs valid_date('06-04-') == false\nputs valid_date('06-04-2021') ==\
    \ true\nputs valid_date('06-04-2021') == true\nputs valid_date('06-04-') == false\n\
    puts valid_date('06-04-2021') == true\nputs valid_date('06-04-2021') == true\n\
    puts valid_date('06-04-') == false\nputs valid_date('06-04-2021') == true\nputs\
    \ valid_date('06-04-2021') == true\nputs valid_date('06-04-') == false\nputs valid_date('06-04-2021')\
    \ == true\nputs valid_date('06-04-2021') == true\nputs valid_date('06-04-') ==\
    \ false\nputs valid_date('06-04-2021') == true\nputs valid_date('06-04-2021')\
    \ == true\nputs valid_date('06-04-') == false\nput", "  months_30 = [9, 4, 6,\
    \ 11]\n  months_31 = [1, 3, 5, 7, 8, 10, 12]\n  date_array = date.split(\"-\"\
    )\n  date_array.each_with_index do |value, index|\n    return false if value.to_i\
    \ == 0\n  end\n  return false if date_array.length != 3\n  return false if date_array[0].to_i\
    \ > 12\n  return false if date_array[0].to_i == 2 && date_array[1].to_i > 29\n\
    \  return false if months_30.include?(date_array[0].to_i) && date_array[1].to_i\
    \ > 30\n  return false if months_31.include?(date_array[0].to_i) && date_array[1].to_i\
    \ > 31\n  true\nend", "  date = date.split('-')\n  return false if date.length\
    \ != 3\n  return false if date[0].to_i < 1 || date[0].to_i > 12\n  days = [31,\
    \ 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  if date[0].to_i == 2\n    return\
    \ false if date[1].to_i < 1 || date[1].to_i > days[1]\n  else\n    return false\
    \ if date[1].to_i < 1 || date[1].to_i > days[date[0].to_i - 1]\n  end\n  return\
    \ false if date[2].length != 4\n  true\nend", "  date.split('-').size == 3 &&\
    \ date.match?(/^[01]\\d-[0-3]\\d-[12]\\d{3}$/)\nend", "  if date.empty?\n    return\
    \ false\n  elsif date.count('-') != 2\n    return false\n  else\n    d = date.split('-')\n\
    \    if d[0].to_i < 1 || d[0].to_i > 12\n      return false\n    elsif d[0].to_i\
    \ == 2 && d[1].to_i > 29\n      return false\n    elsif (d[0].to_i == 4 || d[0].to_i\
    \ == 6 || d[0].to_i == 9 || d[0].to_i == 11) && d[1].to_i > 30\n      return false\n\
    \    elsif (d[0].to_i == 1 || d[0].to_i == 3 || d[0].to_i == 5 || d[0].to_i ==\
    \ 7 || d[0].to_i == 8 || d[0].to_i == 10 || d[0].to_i == 12) && d[1].to_i > 31\n\
    \      return false\n    elsif d[1].to_i < 1 || d[1].to_i > 31\n      return false\n\
    \    elsif d[2].to_i < 1000 || d[2].to_i > 9999\n      return false\n    else\n\
    \      return true\n    end\n  end\nend", "\tdate = date.split(\"-\")\n\tif date[0].to_i\
    \ > 12 || date[0].to_i < 1\n\t\treturn false\n\tend\n\tif date[1].to_i > 31 ||\
    \ date[1].to_i < 1\n\t\treturn false\n\tend\n\tif date[0].to_i == 1 || date[0].to_i\
    \ == 3 || date[0].to_i == 5 || date[0].to_i == 7 || date[0].to_i == 8 || date[0].to_i\
    \ == 10 || date[0].to_i == 12\n\t\tif date[1].to_i > 31 || date[1].to_i < 1\n\t\
    \t\treturn false\n\t\tend\n\telsif date[0].to_i == 4 || date[0].to_i == 6 || date[0].to_i\
    \ == 9 || date[0].to_i == 11\n\t\tif date[1].to_i > 30 || date[1].to_i < 1\n\t\
    \t\treturn false\n\t\tend\n\telsif date[0].to_i == 2\n\t\tif date[1].to_i > 29\
    \ || date[1].to_i < 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
  "  re = /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\n  if re.match(date)\n\
    \    if date[3,2].to_i.between?(1,31)\n      if date[0,2].to_i.between?(1,12)\n\
    \        if date[3,2].to_i.between?(1,31)\n          if date[3,2].to_i.between?(1,31)\n\
    \            if date[3,2].to_i.between?(1,31)\n              if date[3,2].to_i.between?(1,31)\n\
    \                if date[3,2].to_i.between?(1,31)\n                  if date[3,2].to_i.between?(1,31)\n\
    \                    if date[3,2].to_i.between?(1,31)\n                      if\
    \ date[3,2].to_i.between?(1,31)\n                        return true\n       \
    \               end\n                    end\n                  end\n        \
    \        end\n              end\n            end\n          end\n        end\n\
    \      end\n    end\n  end\n  return false\nend", "  dateArr = date.split('-')\n\
    \  if dateArr.length != 3\n    return false\n  elsif dateArr[0].to_i > 12 || dateArr[0].to_i\
    \ < 1\n    return false\n  elsif dateArr[0].to_i == 2 && dateArr[1].to_i > 29\n\
    \    return false\n  elsif [1,3,5,7,8,10,12].include?(dateArr[0].to_i) && dateArr[1].to_i\
    \ > 31\n    return false\n  elsif [4,6,9,11].include?(dateArr[0].to_i) && dateArr[1].to_i\
    \ > 30\n    return false\n  elsif dateArr[2].to_i < 1\n    return false\n  else\n\
    \    return true\n  end\nend", "  #write your code here\nend\nputs valid_date('03-11-2000')\
    \ # true\nputs valid_date('15-01-2012') # false\nputs valid_date('04-0-2040')\
    \ # false\nputs valid_date('06-04-2020') # true\nputs valid_date('06/04/2020')\
    \ # false", "    months = ['01', '02', '03', '04', '05', '06', '07', '08', '09',\
    \ '10', '11', '12']\n    days = ['01', '02', '03', '04', '05', '06', '07', '08',\
    \ '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21',\
    \ '22', '23', '24', '25', '26', '27', '28', '29', '30', '31']\n    year = date.split(\"\
    -\")[2]\n    month = date.split(\"-\")[0]\n    day = date.split(\"-\")[1]\n  \
    \  # print day\n    # if year.to_i % 4 == 0\n    #     if months.include?(month)\n\
    \    #         if days.include?(day)\n    #             return True\n    #   \
    \      end\n    #     end\n    # end\n    daysInMonth = {\n        '01' => 31,\n\
    \        '02' => 28,\n        '03' => 31,\n        '04' => 30,\n        '05' =>\
    \ 31,\n        '06' => 30,\n        '07' => 31,\n        '08' => 31,\n       \
    \ '09' => 30,\n        '10' => 31,\n        '11' => 30,\n        '12' => 31\n\
    \    }\n    if year.to_i % 4 == 0 && month == '02'\n        daysInMonth['02']\
    \ = 29\n    end\n    if months.include?(month) && days.include?(day) && day.to_i\
    \ <= daysInMonth[month]\n        return True\n    end\n    return False\nend",
  "  date_formatted = date.split('-')\n  date_fomatted_to_i = date_formatted.map {\
    \ |c| c.to_i }\n  m = date_fomatted_to_i[0]\n  d = date_fomatted_to_i[1]\n  y\
    \ = date_fomatted_to_i[2]\n  if m > 12 || m < 1 || d > 31 || d < 1 || y > 2020\
    \ || y < 1\n    return false\n  elsif m == 1 || m == 3 || m == 5 || m == 7 ||\
    \ m == 8 || m == 10 || m == 12\n    if d > 31\n      return false\n    else\n\
    \      return true\n    end\n  elsif m == 4 || m == 6 || m == 9 || m == 11\n \
    \   if d > 30\n      return false\n    else\n      return true\n    end\n  elsif\
    \ m == 2\n    if d > 29\n      return false\n    else\n      return true\n   \
    \ end\n  end\nend\nputs valid_date('01-01-2020')", "  date = date.split(\"-\"\
    )\n  days = date[1].to_i\n  months = date[0].to_i\n  if months < 1 || months >\
    \ 12\n    return false\n  elsif days < 1\n    return false\n  elsif months ==\
    \ 1 || months == 3 || months == 5 || months == 7 || months == 8 || months == 10\
    \ || months == 12\n    return days < 32\n  elsif months == 4 || months == 6 ||\
    \ months == 9 || months == 11\n    return days < 31\n  elsif months == 2\n   \
    \ return days < 30\n  end\nend", "  date = date.split(\"-\")\n  if date.length\
    \ != 3 \n    return false\n  end\n  month = date[0].to_i\n  day = date[1].to_i\n\
    \  year = date[2].to_i\n  if !((1..12).include?(month))\n    return false\n  end\n\
    \  if month == 2\n    if !((1..29).include?(day))\n      return false\n    end\n\
    \  elsif month % 2 == 0 && !(month == 8)\n    if !((1..30).include?(day))\n  \
    \    return false\n    end\n  else\n    if !((1..31).include?(day))\n      return\
    \ false\n    end\n  end\n  return true\nend", "  return false if date.empty?\n\
    \  months = {\n    1 => 31,\n    2 => 29,\n    3 => 31,\n    4 => 30,\n    5 =>\
    \ 31,\n    6 => 30,\n    7 => 31,\n    8 => 31,\n    9 => 30,\n    10 => 31,\n\
    \    11 => 30,\n    12 => 31\n  }\n  date_arr = date.split('-')\n  day = date_arr[1].to_i\n\
    \  month = date_arr[0].to_i\n  year = date_arr[2].to_i\n  return false if day\
    \ < 1 || day > months[month]\n  return false if month < 1 || month > 12\n  return\
    \ false if date.include?('/')\n  true\nend", "  months = { 1 => 31, 2 => 29, 3\
    \ => 31, 4 => 30, 5 => 31, 6 => 30, 7 => 31, 8 => 31, 9 => 30, 10 => 31, 11 =>\
    \ 30, 12 => 31 }\n  return false if date.empty?\n  date = date.split(\"-\")\n\
    \  return false if date.length != 3\n  day = date[1].to_i\n  month = date[0].to_i\n\
    \  return false if months[month] < day\n  date[2].to_i > 0\nend", "  # Parse date\
    \ string\n  date_array = date.split('-')\n  month, day, year = date_array.map(&:to_i)\n\
    \  # Check rules\n  valid_month = month.between?(1, 12)\n  days_in_month = [0,\
    \ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  is_leap_year = year % 4 ==\
    \ 0 && year % 100 != 0 || year % 400 == 0\n  valid_day = day.between?(1, days_in_month[month])\
    \ && (is_leap_year ? day < 30 : true)\n  # Return result\n  return date.length\
    \ > 0 && valid_month && valid_day\nend", "  date_arr = date.split(\"-\")\n  return\
    \ false if date.length != 10\n  return false if date_arr[0].to_i < 1 || date_arr[0].to_i\
    \ > 12\n  return false if date_arr[1].to_i < 1 || date_arr[1].to_i > 31\n  return\
    \ false if date_arr[2].to_i < 1\n  return false if date_arr[0].to_i == 2 && date_arr[1].to_i\
    \ > 29\n  true\nend", "    # WRITE YOUR CODE HERE\n    if date.length == 0\n \
    \       return false\n    end\n    if date.count('-') == 2\n        m, d, y =\
    \ date.split('-')\n        if m.to_i > 12 || m.to_i < 1\n            return false\n\
    \        end\n        if m.to_i == 2\n            if d.to_i > 29 || d.to_i < 1\n\
    \                return false\n            end\n        elsif m.to_i == 4 || m.to_i\
    \ == 6 || m.to_i == 9 || m.to_i == 11\n            if d.to_i > 30 || d.to_i <\
    \ 1\n                return false\n            end\n        elsif m.to_i == 1\
    \ || m.to_i == 3 || m.to_i == 5 || m.to_i == 7 || m.to_i == 8 || m.to_i == 10\
    \ || m.to_i == 12\n            if d.to_i > 31 || d.to_i < 1\n                return\
    \ false\n            end\n        end\n        return true\n    else\n       \
    \ return false\n    end\nend", "  if date.empty?\n    return false\n  elsif date.length\
    \ != 10\n    return false\n  elsif date[2] != '-' && date[5] != '-'\n    return\
    \ false\n  elsif date[0] == '-' || date[1] == '-' || date[3] == '-' || date[4]\
    \ == '-' || date[6] == '-' || date[7] == '-' || date[8] == '-' || date[9] == '-'\n\
    \    return false\n  elsif date[0] == '-' || date[1] == '-' || date[3] == '-'\
    \ || date[4] == '-' || date[6] == '-' || date[7] == '-' || date[8] == '-' || date[9]\
    \ == '-'\n    return false\n  elsif date[0] == '0' && date[1] == '0' || date[0]\
    \ == '0' && date[1] == '2' || date[0] == '0' && date[1] == '3' || date[0] == '0'\
    \ && date[1] == '4' || date[0] == '0' && date[1] == '5' || date[0] == '0' && date[1]\
    \ == '6' || date[0] == '0' && date[1] == '7' || date[0] == '0' && date[1] == '8'\
    \ || date[0] == '0' && date[1] == '9' || date[0] == '1' && date[1] == '0' || date[0]\
    \ == '1' && date[1] == '1' || date[0] == '1' && date[1] == '2' || date[0] == '1'\
    \ && date[1] == '3' || date[0] == '1' && date[1] == '4' || date[0] == '1' && date[1]\
    \ == '5' || date[0] == '1' && date[1] == '6' || date[0] == '1' && date[1] == '7'\
    \ || date[0] == '1'", "  return false if date.empty?\n  date_values = date.split('-')\n\
    \  day = date_values[0].to_i\n  month = date_values[1].to_i\n  year = date_values[2].to_i\n\
    \  return false if month < 1 || month > 12 || day < 1 || year < 0\n  return true\
    \ if month == 2 && day <= 29 && is_leap_year(year)\n  return true if month ==\
    \ 2 && day <= 28 && !is_leap_year(year)\n  return true if (month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\
    \ && day <= 31\n  return true if (month == 4 || month == 6 || month == 9 || month\
    \ == 11) && day <= 30\n  return false\nend", "  if /^(\\d{2})\\-(\\d{2})\\-(\\\
    d{4})$/.match(date)\n    months, days, years = $1.to_i, $2.to_i, $3.to_i\n   \
    \ return false if months < 1 || months > 12\n    if months == 2\n      return\
    \ false if days < 1 || days > 29\n    elsif [4, 6, 9, 11].include?(months)\n \
    \     return false if days < 1 || days > 30\n    else\n      return false if days\
    \ < 1 || days > 31\n    end\n    true\n  else\n    false\n  end\nend", "  if (date.length\
    \ <= 0 || date.length > 10) \n    return false\n  elsif (date.length != 10)\n\
    \    return false\n  elsif (date.split('-').length != 3)\n    return false\n \
    \ elsif (date.split('-')[0].to_i < 1 || date.split('-')[0].to_i > 12)\n    return\
    \ false\n  elsif (date.split('-')[1].to_i < 1 || date.split('-')[1].to_i > 31)\n\
    \    return false\n  elsif (date.split('-')[2].to_i < 1 || date.split('-')[2].to_i\
    \ > 9999)\n    return false\n  elsif (date.split('-')[0].to_i == 1 || date.split('-')[0].to_i\
    \ == 3 || date.split('-')[0].to_i == 5 || date.split('-')[0].to_i == 7 || date.split('-')[0].to_i\
    \ == 8 || date.split('-')[0].to_i == 10 || date.split('-')[0].to_i == 12)\n  \
    \  if (date.split('-')[1].to_i > 31)\n      return false\n    end\n  elsif (date.split('-')[0].to_i\
    \ == 4 || date.split('-')[0].to_i == 6 || date.split('-')[0].to_i == 9 || date.split('-')[0].to_i\
    \ == 11)\n    if (date.split('-')[1].to_i > 30)\n      return false\n    end\n\
    \  elsif (date.split('-')[0].to_i == 2)\n    if (date.split('-')[1].to_i > 29)\n\
    \      return false\n    end\n  end\n  return true\nend", "  date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$/\
    \ ? true : false\nend\np valid_date('03-11-2000') # => True\np valid_date('15-01-2012')\
    \ # => False\np valid_date('04-0-2040') # => False\np valid_date('06-04-2020')\
    \ # => True\np valid_date('06/04/2020') # => False", "  if date.count('-') ==\
    \ 2 && !date.include?('/') && date.length == 10\n    date_list = date.split('-')\n\
    \    date_list[0] = date_list[0].to_i\n    date_list[1] = date_list[1].to_i\n\
    \    date_list[2] = date_list[2].to_i\n    months = [1,3,5,7,8,10,12]\n    if\
    \ date_list[0] >= 1 && date_list[0] <= 12 && date_list[2] > 0\n      if months.include?(date_list[0])\n\
    \        return true if date_list[1] >= 1 && date_list[1] <= 31\n      elsif date_list[0]\
    \ == 2\n        return true if date_list[1] >= 1 && date_list[1] <= 29\n     \
    \ else\n        return true if date_list[1] >= 1 && date_list[1] <= 30\n     \
    \ end\n    end\n  end\n  false\nend", "  date == date.match(/\\A\\d{2}-\\d{2}-\\\
    d{4}\\z/)\nend", "    date_arr = date.split(\"-\")\n    if date_arr.length !=\
    \ 3\n        return false\n    end\n    months = date_arr[0].to_i\n    days =\
    \ date_arr[1].to_i\n    years = date_arr[2].to_i\n    if months < 1 || months\
    \ > 12\n        return false\n    end\n    if months == 1 || months == 3 || months\
    \ == 5 || months == 7 || months == 8 || months == 10 || months == 12\n       \
    \ if days < 1 || days > 31\n            return false\n        end\n    elsif months\
    \ == 4 || months == 6 || months == 9 || months == 11\n        if days < 1 || days\
    \ > 30\n            return false\n        end\n    elsif months == 2\n       \
    \ if days < 1 || days > 29\n            return false\n        end\n    end\n \
    \   return true\nend\nputs valid_date('03-11-2000') #=> True\nputs valid_date('15-01-2012')\
    \ #=> False\nputs valid_date('04-0-2040') #=> False\nputs valid_date('06-04-2020')\
    \ #=> True\nputs valid_date('06/04/2020') #=> False", "  return false if date.empty?\n\
    \  month, day, year = date.split('-')\n  months = {\n    1 => 31,\n    2 => 28,\n\
    \    3 => 31,\n    4 => 30,\n    5 => 31,\n    6 => 30,\n    7 => 31,\n    8 =>\
    \ 31,\n    9 => 30,\n    10 => 31,\n    11 => 30,\n    12 => 31\n  }\n  months[2]\
    \ = 29 if year.to_i % 4 == 0\n  return false if month.to_i > 12 || month.to_i\
    \ < 1\n  return false if day.to_i > months[month.to_i] || day.to_i < 1\n  true\n\
    end", '    return false if date.empty?', "  return false if date.nil? || date.length\
    \ != 10\n  return false if date[2] != '-' || date[5] != '-'\n  year = date[6..9].to_i\n\
    \  return false if year < 1\n  month = date[0..1].to_i\n  return false if month\
    \ < 1 || month > 12\n  day = date[3..4].to_i\n  if [4,6,9,11].include?(month)\n\
    \    return false if day < 1 || day > 30\n  elsif month == 2\n    return false\
    \ if year % 4 != 0 || (year % 100 == 0 && year % 400 != 0)\n    return false if\
    \ day < 1 || day > 29\n  else\n    return false if day < 1 || day > 31\n  end\n\
    \  true\nend", "  return false if date.length == 0\n  mon, day, year = date.split('-')\n\
    \  return false if day.to_i < 1 || day.to_i > 31\n  return false if year.to_i\
    \ < 1\n  return false if mon.to_i < 1 || mon.to_i > 12\n  return false if date.index('/')\n\
    \  return true\nend", "  # write your code here\nend", "\t# write your code here\n\
    \t# false\nend", "\treturn nil if date.length == 0\n\tdate_arr = date.split('-')\n\
    \tif date_arr.length != 3\n\t\treturn false\n\tend\n\tif !(date_arr[0].to_i.between?(1,12))\n\
    \t\treturn false\n\tend\n\tif date_arr[0].to_i == 2\n\t\tif !(date_arr[1].to_i.between?(1,29))\n\
    \t\t\treturn false\n\t\tend\n\telsif date_arr[0].to_i.odd?\n\t\tif !(date_arr[1].to_i.between?(1,31))\n\
    \t\t\treturn false\n\t\tend\n\telse\n\t\tif !(date_arr[1].to_i.between?(1,30))\n\
    \t\t\treturn false\n\t\tend\n\tend\n\tif !(date_arr[2].to_i.between?(1800,2099))\n\
    \t\treturn false\n\tend\n\treturn true\nend", "  if date =~ /^\\d{2}-\\d{2}-\\\
    d{4}$/\n    month, day, year = date.split(\"-\").map(&:to_i)\n    if month < 1\
    \ || month > 12\n      return false\n    end\n    max_days = case month\n    when\
    \ 1,3,5,7,8,10,12\n      31\n    when 4,6,9,11\n      30\n    when 2\n      if\
    \ (year % 4 == 0) && (year % 100 != 0) || (year % 400 == 0)\n        29\n    \
    \  else\n        28\n      end\n    end\n    if day < 1 || day > max_days\n  \
    \    return false\n    end\n    return true\n  else\n    return false\n  end\n\
    end", "  # 1. The date string is not empty.\n  return false if date.empty?\n \
    \ # 4. The date should be in the format: mm-dd-yyyy\n  date = date.split('-')\n\
    \  if date.size != 3\n    return false\n  end\n  # 2. The number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n \
    \ if %w(1 3 5 7 8 10 12).include?(date[0])\n    return false if date[1].to_i >\
    \ 31 || date[1].to_i < 1\n  elsif %w(4 6 9 11).include?(date[0])\n    return false\
    \ if date[1].to_i > 30 || date[1].to_i < 1\n  elsif date[0] == '2'\n    if date[2].to_i\
    \ % 4 == 0\n      return false if date[1].to_i > 29 || date[1].to_i < 1\n    else\n\
    \      return false if date[1].to_i > 28 || date[1].to_i < 1\n    end\n  end\n\
    \  # 3. The months should not be less than 1 or higher than 12.\n  if date[0].to_i\
    \ > 12 || date[0].to_i < 1\n    return false\n  end\n  return true\nend", "  #\
    \ check if the date is not empty\n  if date == \"\"\n    return false\n  end\n\
    \  # check if the date is in the right format\n  if date.count(\"-\") != 2\n \
    \   return false\n  end\n  # check if the date has less than 1 or more than 31\
    \ days\n  date_arr = date.split(\"-\")\n  month = date_arr[0].to_i\n  day = date_arr[1].to_i\n\
    \  year = date_arr[2].to_i\n  # check if the month is between 1-12\n  if month\
    \ < 1 || month > 12\n    return false\n  end\n  # check if the day is between\
    \ 1-31\n  if day < 1 || day > 31\n    return false\n  end\n  # for months in the\
    \ first column of the calendar\n  if month == 1 || month == 3 || month == 5 ||\
    \ month == 7 || month == 8 || month == 10 || month == 12\n    if day > 31\n  \
    \    return false\n    end\n  # for months in the second column of the calendar\n\
    \  elsif month == 4 || month == 6 || month == 9 || month == 11\n    if day > 30\n\
    \      return false\n    end\n  # for february (month 2)\n  elsif month == 2\n\
    \    # check if the year is a leap year\n    if year % 4 == 0\n      if day >\
    \ 29\n        return false\n      end\n    else\n      if day > 28\n        return\
    \ false\n      end\n    end\n  end\n  # all the tests passed\n  return true\n\
    end", "  if date.empty?\n    return false\n  end\n  year = date[6..9].to_i\n \
    \ month = date[0..1].to_i\n  day = date[3..4].to_i\n  if !(1..12).include?(month)\n\
    \    return false\n  end\n  if !(1..31).include?(day)\n    return false\n  end\n\
    \  if month.even? && day > 30\n    return false\n  end\n  if month == 2 && day\
    \ > 29\n    return false\n  end\n  return true\nend", "  date = date.split(\"\
    -\")\n  # check date lenght, if not 4 raise exception\n  if date.length != 3 \n\
    \    return false\n  end\n  month = date[0].to_i\n  day = date[1].to_i\n  year\
    \ = date[2].to_i\n  if (day < 1 || day > 31) && (month == 1 || month == 3 || month\
    \ == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n    return\
    \ false\n  elsif (day < 1 || day > 30) && (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    return false\n  elsif (day < 1 || day > 29) && (month\
    \ == 2)\n    return false\n  elsif month < 1 || month > 12\n    return false\n\
    \  end\n  return true\nend", "    date.empty? ? false : date.match(/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/) ?\n    (date[0..1].to_i == 2 ? date[3..4].to_i <= 29 : date[0..1].to_i.odd?\
    \ ? date[3..4].to_i <= 31 : date[3..4].to_i <= 30) : false\nend", "  months =\
    \ {\n    1 => 31,\n    2 => 29,\n    3 => 31,\n    4 => 30,\n    5 => 31,\n  \
    \  6 => 30,\n    7 => 31,\n    8 => 31,\n    9 => 30,\n    10 => 31,\n    11 =>\
    \ 30,\n    12 => 31\n  }\n  return false if date.empty?\n  return false if !date.include?('-')\n\
    \  day, month, year = date.split('-')\n  return false if (day.to_i > months[month.to_i])\n\
    \  true\nend", "\tdate.match(/\\d{2}-\\d{2}-\\d{4}/) && \n\tdate.split('-').last.to_i\
    \ > 0 && \n\tdate.split('-').last.to_i < 9999 && \n\tdate.split('-').first.to_i\
    \ < 13 && \n\tdate.split('-').first.to_i > 0 && \n\t(date.split('-').first.to_i\
    \ == 1 || \n\tdate.split('-').first.to_i == 3 || \n\tdate.split('-').first.to_i\
    \ == 5 || \n\tdate.split('-').first.to_i == 7 || \n\tdate.split('-').first.to_i\
    \ == 8 || \n\tdate.split('-').first.to_i == 10 || \n\tdate.split('-').first.to_i\
    \ == 12) && \n\tdate.split('-').second.to_i > 0 && \n\tdate.split('-').second.to_i\
    \ < 32 ||\n\t(date.split('-').first.to_i == 4 || \n\tdate.split('-').first.to_i\
    \ == 6 || \n\tdate.split('-').first.to_i == 9 || \n\tdate.split('-').first.to_i\
    \ == 11) && \n\tdate.split('-').second.to_i > 0 && \n\tdate.split('-').second.to_i\
    \ < 31 ||\n\tdate.split('-').first.to_i == 2 && \n\tdate.split('-').second.to_i\
    \ > 0 && \n\tdate.split('-').second.to_i < 30\nend", "  if date.count('-') !=\
    \ 2\n    false\n  else\n    d = date.split('-')\n    if d[0].to_i > 12 || d[0].to_i\
    \ < 1\n      false\n    elsif d[0].to_i == 2 && d[1].to_i > 29\n      false\n\
    \    elsif d[0].to_i < 8 && d[0].to_i % 2 == 0 && d[1].to_i > 30\n      false\n\
    \    elsif d[0].to_i > 7 && d[0].to_i % 2 == 1 && d[1].to_i > 30\n      false\n\
    \    elsif d[0].to_i > 7 && d[0].to_i % 2 == 0 && d[1].to_i > 31\n      false\n\
    \    elsif d[0].to_i < 8 && d[0].to_i % 2 == 1 && d[1].to_i > 31\n      false\n\
    \    else\n      true\n    end\n  end\nend", "  return false if date.empty?\n\
    \  month, day, year = date.split(\"-\").map { |n| n.to_i }\n  # rule 2\n  return\
    \ false if month == 2 && day > 29\n  return false if day > 31 || day < 1\n  #\
    \ rule 3\n  return false if month > 12 || month < 1\n  # rule 4\n  return false\
    \ if date.include?(\"/\")\n  return true\nend", "  return false if date.length\
    \ == 0\n  date = date.split('-')\n  return false if date.length != 3\n  months\
    \ = {\n    1 => 31,\n    2 => 29,\n    3 => 31,\n    4 => 30,\n    5 => 31,\n\
    \    6 => 30,\n    7 => 31,\n    8 => 31,\n    9 => 30,\n    10 => 31,\n    11\
    \ => 30,\n    12 => 31\n  }\n  year = date[2].to_i\n  month = date[0].to_i\n \
    \ day = date[1].to_i\n  return false if month > 12 || month < 1\n  return false\
    \ if day > months[month] || day < 1\n  if month == 2\n    return false if day\
    \ > 29 || day < 1\n    if year % 4 == 0 && year % 100 != 0 || year % 400 == 0\n\
    \      return true\n    else\n      return false\n    end\n  end\n  true\nend",
  "\tif date != '' and date =~ /^\\d{2}-\\d{2}-\\d{4}$/\n\t\tdate = date.split('-')\n\
    \t\tif date[0].to_i < 13 and date[0].to_i > 0\n\t\t\tif (date[0].to_i == 1 or\
    \ date[0].to_i == 3 or date[0].to_i == 5 or date[0].to_i == 7 or date[0].to_i\
    \ == 8 or date[0].to_i == 10 or date[0].to_i == 12) and date[1].to_i > 0 and date[1].to_i\
    \ < 32\n\t\t\t\ttrue\n\t\t\telsif (date[0].to_i == 4 or date[0].to_i == 6 or date[0].to_i\
    \ == 9 or date[0].to_i == 11) and date[1].to_i > 0 and date[1].to_i < 31\n\t\t\
    \t\ttrue\n\t\t\telsif date[0].to_i == 2 and date[1].to_i > 0 and date[1].to_i\
    \ < 30\n\t\t\t\ttrue\n\t\t\telse\n\t\t\t\tfalse\n\t\t\tend\n\t\telse\n\t\t\tfalse\n\
    \t\tend\n\telse\n\t\tfalse\n\tend\nend", "    #your code here\nend", "\treturn\
    \ false if date.empty?\n\treturn false if date.size != 10\n\treturn false if date.include?(\"\
    /\")\n\treturn false if date.split(\"-\").size != 3\n\tmonth = date.split(\"-\"\
    )[0].to_i\n\tday = date.split(\"-\")[1].to_i\n\tyear = date.split(\"-\")[2].to_i\n\
    \treturn false if month > 12 || month < 1\n\tif month == 2\n\t\treturn false if\
    \ day > 29 || day < 1\n\telsif month == 1 || month == 3 || month == 5 || month\
    \ == 7 || month == 8 || month == 10 || month == 12\n\t\treturn false if day >\
    \ 31 || day < 1\n\telse\n\t\treturn false if day > 30 || day < 1\n\tend\n\treturn\
    \ true\nend", "    # Your code here\nend", "  date != '' && date.match(/^(\\d\\\
    d?)-(\\d\\d?)-(\\d\\d\\d\\d)$/) && valid_date?($1, $2, $3)\nend", "  date = date.split('-')\n\
    \  date.size == 3 ? date : date = date.join('-').split('/')\n  days = date[1].to_i\n\
    \  month = date[0].to_i\n  return false if date.size != 3 || month > 12 || month\
    \ < 1\n  case month\n  when 1,3,5,7,8,10,12\n    return false if days > 31 ||\
    \ days < 1\n  when 4,6,9,11\n    return false if days > 30 || days < 1\n  when\
    \ 2\n    return false if days > 29 || days < 1\n  end\n  true\nend", "  date.gsub!(/\\\
    s+/, \"\")\n  date.gsub!(/[^\\d\\/]/, \"\")\n  date.gsub!(/\\/+/, \"-\")\n  date.split(\"\
    -\").size == 3 ? (date.split(\"-\")[0].to_i >= 1 && date.split(\"-\")[0].to_i\
    \ <= 12) && (date.split(\"-\")[1].to_i >= 1 && date.split(\"-\")[1].to_i <= 31)\
    \ && (date.split(\"-\")[2].size == 4) : false\nend", "  # if date.empty?\n  #\
    \   false\n  # else\n  #   arr = date.split('-')\n  #   d = arr[0].to_i\n  # \
    \  m = arr[1].to_i\n  #   y = arr[2].to_i\n  #   if m == 1 || m == 3 || m == 5\
    \ || m == 7 || m == 8 || m == 10 || m == 12\n  #     if d < 1 || d > 31\n  # \
    \      false\n  #     elsif m < 1 || m > 12\n  #       false\n  #     else\n \
    \ #       true\n  #     end\n  #   elsif m == 4 || m == 6 || m == 9 || m == 11\n\
    \  #     if d < 1 || d > 30\n  #       false\n  #     elsif m < 1 || m > 12\n\
    \  #       false\n  #     else\n  #       true\n  #     end\n  #   elsif m ==\
    \ 2\n  #     if d < 1 || d > 29\n  #       false\n  #     elsif m < 1 || m > 12\n\
    \  #       false\n  #     else\n  #       true\n  #     end\n  #   end\n  # end\n\
    \  # another way:\n  if date.empty?\n    false\n  else\n    arr = date.split('-')\n\
    \    if arr.size != 3\n      false\n    else\n      arr.map { |x| x.to_i }\n \
    \     d = arr[0]\n      m = arr[1]\n      y = arr[2]\n      if m == 1 || m ==\
    \ 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12\n        if d < 1 || d\
    \ > 31\n          false\n        elsif m < 1 || m > 12\n          false\n    \
    \    else\n          true\n        end\n      elsif m == 4 || m == 6 || m == 9\
    \ || m == 11\n        if d < 1 || d > 30\n          false\n        elsif m < 1\
    \ || m > 12\n          false\n        else\n          true\n        end\n    \
    \  elsif m == 2\n        if d", "    # write your code here\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

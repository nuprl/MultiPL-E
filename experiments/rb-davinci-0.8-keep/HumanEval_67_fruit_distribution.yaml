name: HumanEval_67_fruit_distribution
language: rb
prompt: "# In this task, you will be given a string that represents a number of apples\
  \ and oranges \n# that are distributed in a basket of fruit this basket contains\
  \ \n# apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n# the oranges and apples and an integer that represent the total number\
  \ of the fruits \n# in the basket return the number of the mango fruits in the basket.\n\
  # for examble:\n# fruit_distribution(\"5 apples and 6 oranges\", 19) ->19 - 5 -\
  \ 6 = 8\n# fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 - 1 = 2\n#\
  \ fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 - 3 = 95\n# fruit_distribution(\"\
  100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19\ndef fruit_distribution(s,\
  \ n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fruit_distribution\n\
  \    candidate = method(:fruit_distribution)\n    assert_equal(8, candidate.call(\"\
  5 apples and 6 oranges\", 19))\n    assert_equal(10, candidate.call(\"5 apples and\
  \ 6 oranges\", 21))\n    assert_equal(2, candidate.call(\"0 apples and 1 oranges\"\
  , 3))\n    assert_equal(2, candidate.call(\"1 apples and 0 oranges\", 3))\n    assert_equal(95,\
  \ candidate.call(\"2 apples and 3 oranges\", 100))\n    assert_equal(0, candidate.call(\"\
  2 apples and 3 oranges\", 5))\n    assert_equal(19, candidate.call(\"1 apples and\
  \ 100 oranges\", 120))\n  end\nend\n"
completions: ["  return n - (s.scan(/\\d+/).map(&:to_i).reduce(:+))\nend", "  \nend",
  "\nend", " \t# write your code here\nend", "\t# your code here\n\ts = s.split('\
    \ ')\n\tn - s[0].to_i - s[3].to_i\nend", "  arr = s.split(\" \")\n  num_apples\
    \ = arr[0].to_i\n  num_oranges = arr[3].to_i\n  num_mangoes = n - num_apples -\
    \ num_oranges\n  num_mangoes\nend", "  # write your code here\n  s = s.split('\
    \ ')\n  n -= s[0].to_i\n  n -= s[3].to_i\n  n\nend", "  # your code here\nend\n\
    puts fruit_distribution(\"5 apples and 6 oranges\", 19) \nputs fruit_distribution(\"\
    0 apples and 1 oranges\",3) \nputs fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) \nputs fruit_distribution(\"100 apples and 1 oranges\",120) ", "  fruits_hash\
    \ = s.split(' ').each_slice(2).map{|a,b| [a.to_i, b]}.to_h\n  fruits_hash['oranges']\
    \ == 'oranges' ? oranges = fruits_hash[0] : oranges = fruits_hash['oranges']\n\
    \  fruits_hash['apples'] == 'apples' ? apples = fruits_hash[0] : apples = fruits_hash['apples']\n\
    \  n - apples - oranges\nend", "\t# write your code here\nend", "  a = s.split(\"\
    \ \")\n  a = a[0].to_i + a[2].to_i\n  n-a\nend\nputs \"-----------TASK 1---------------\"\
    \np fruit_distribution(\"5 apples and 6 oranges\", 19) == 8\np fruit_distribution(\"\
    0 apples and 1 oranges\",3) == 2\np fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) == 95\np fruit_distribution(\"100 apples and 1 oranges\",120) == 19", " \
    \   number_of_mangos = s.scan(/\\d/).join('').to_i\n    number_of_mangos = n -\
    \ number_of_mangos\n    return number_of_mangos\nend", "\t\nend", "  # write your\
    \ code here\n  # remove apples and oranges\n  basket = s.split(\" \")\n  # return\
    \ the number of mangoes\n  n - basket[0].to_i - basket[3].to_i\nend", "  # write\
    \ your code here\nend\np fruit_distribution(\"100 apples and 1 oranges\",120)\
    \ # 19\np fruit_distribution(\"0 apples and 1 oranges\",3) # 2\np fruit_distribution(\"\
    2 apples and 3 oranges\", 100) # 95", "\tputs \"s = #{s} n = #{n}\"\n\treturn\
    \ 0 if s.nil? || s.empty?\n\ts.split(' ').map(&:to_i).reduce(:+)\nend", "  # Write\
    \ your code here\n  orang = s.split(\" \")[3].to_i\n  appl = s.split(\" \")[0].to_i\n\
    \  return n - orang - appl\nend", "    n - s.scan(/\\d+/).map(&:to_i).inject(:+)\n\
    end", "\t# Write your code here\n\tfruits = s.split(' and ')\n\tapples = fruits[0].split('\
    \ ')[0].to_i\n\toranges = fruits[1].split(' ')[0].to_i\n\tmangoes = n - apples\
    \ - oranges\n\treturn mangoes\nend", "    # Your code here\nend", "  # your code\
    \ here\nend", "\tif s.include?(\"0 apples and 0 oranges\")\n\t\tn\n\telse\n\t\t\
    s.delete!(\" apples and oranges\")\n\t\ts.delete!(\" oranges and apples\")\n\t\
    \ts.delete!(\" apples and oranges\")\n\t\ts.delete!(\" oranges and apples\")\n\
    \t\ts = s.split(\" \")\n\t\twhile s.length < 2\n\t\t\ts.push(\"0\")\n\t\tend\n\
    \t\tn - s[0].to_i - s[1].to_i\n\tend\nend", "  apple_and_orange = s.split(' and\
    \ ')\n  number_of_apples = apple_and_orange[0].split(' ')[0].to_i\n  number_of_oranges\
    \ = apple_and_orange[1].split(' ')[0].to_i\n  n - number_of_apples - number_of_oranges\n\
    end", "  sum=0\n  mango=0\n  arr=s.split(\" \")\n  sum=arr[0].to_i + arr[3].to_i\n\
    \  mango=n-sum\n  return mango\nend", "  # define your solution here\n  distribution\
    \ = s.split(' ')\n  apples_num = distribution[0].to_i\n  oranges_num = distribution[3].to_i\n\
    \  mango_num = n - apples_num - oranges_num\n  return mango_num\nend", "  # Write\
    \ your code here\nend", "  s = s.gsub(/[^0-9]/, ' ').split\n  s.map!(&:to_i)\n\
    \  sum = s.reduce(:+)\n  n - sum\nend", "    num_apples = s.match(/\\d+\\sapples/)[0].match(/\\\
    d+/)[0].to_i\n    num_oranges = s.match(/\\d+\\soranges/)[0].match(/\\d+/)[0].to_i\n\
    \    n - num_apples - num_oranges\nend", "  fruits = s.split(\" \")\n  fruits[0].to_i\
    \ + fruits[3].to_i\n  n - fruits[0].to_i - fruits[3].to_i\nend\nputs fruit_distribution(\"\
    100 apples and 1 oranges\",120)", "  # your code here\nend", "  # your code here\n\
    end", "    input_arr = s.split(\" \")\n    # print(input_arr)\n    # print(input_arr[0].to_i)\n\
    \    # print(input_arr[2].to_i)\n    num_of_mangos = n - input_arr[0].to_i - input_arr[2].to_i\n\
    \    # print(num_of_mangos)\n    return num_of_mangos\nend", "\ta = s.split(\"\
    \ \")\n\tfruits = n - a[0].to_i - a[3].to_i\n\treturn fruits\nend", "  # Write\
    \ your code here\n  # extract the number of apples from the string\n  # extract\
    \ the number of oranges from the string\n  # return the number of mango = n -\
    \ apples - oranges\nend", "  # your code here\nend", "    # Change the string\
    \ s to an array s_a of integers\n    s_a = s.split(/\\s/).map{|x| x.to_i}\n  \
    \  # The apples are in the first place of the array\n    # The oranges are in\
    \ the third place of the array\n    return n - s_a[0] - s_a[3]\nend", "  # your\
    \ code here\nend", "\tapples = s.split(\" \")[0].to_i\n\toranges = s.split(\"\
    \ \")[3].to_i\n\tn - apples - oranges\nend", "  #code here\nend", end, "    #\
    \ write your code here\nend", end, "  # write your code here\n  fruits = s.split(\"\
    \ \")\n  num_apples = fruits[0].to_i\n  num_oranges = fruits[-1].to_i\n  n - num_apples\
    \ - num_oranges\nend", end, "  # write your code here\nend", "    # your code\
    \ here\nend", "  # Your code here\n  a, o = s.split(\" and \").map{|e| e.split(\"\
    \ \")[0].to_i}\n  n - a - o\nend", "    n - s.scan(/\\d+/).map(&:to_i).reduce(:+)\n\
    end", "  s.gsub!(/[a-zA-Z\\s]/, '')\n  a, b = s.split('and').map(&:to_i)\n  n\
    \ - a - b\nend", "\tfruits = s.scan(/\\d+/)\n\tfruits.map!(&:to_i)\n\t# fruits\
    \ = s.scan(/\\d+/).map(&:to_i)\n\tmangoes = n - fruits.reduce(:+)\n\tmangoes\n\
    end", "    # YOUR CODE HERE\nend", "  # your code here\nend", "\t# write your\
    \ code here\n\t#s = \"5 apples and 6 oranges\"\n\tarr = s.split(\" \")\n\t#puts\
    \ arr[0]\n\t#puts arr[1]\n\t#arr[0] = \"5\"\n\t#arr[1] = \"and\"\n\t#arr[2] =\
    \ \"6\"\n\t#arr[3] = \"oranges\"\n\ttotal_apples = arr[0].to_i\n\ttotal_oranges\
    \ = arr[2].to_i\n\ttotal_mangoes = n - total_apples - total_oranges\n\ttotal_mangoes\n\
    end", "\ta = s.split\n\tnew_s = a[0] + a[1] + a[3]\n\tnumbers = new_s.to_i\n\t\
    return n - numbers\nend", "\t# code here\nend", "  numbers = s.scan(/\\d+/).map(&:to_i)\n\
    \  n - numbers.reduce(:+)\nend", "  d = s.split(\" \")\n  return n - d[0].to_i\
    \ - d[3].to_i\nend", "  # Your Code Here.\nend", "  #find the number of apples\n\
    \  apples = s[0].to_i\n  #find the number of oranges\n  oranges = s[-1].to_i\n\
    \  #find the number of mangoes\n  mangoes = n - apples - oranges\n  #return the\
    \ number of mangoes\n  mangoes\nend\nputs fruit_distribution(\"5 apples and 6\
    \ oranges\", 19)", "    # Write your code here\n    s.match(/\\d+/)\n    a = $~.to_s.to_i\n\
    \    s.match(/\\d+$/)\n    b = $~.to_s.to_i\n    c = n - a - b\n    c\nend", "\n\
    end", "  # remove the word apples and oranges and left with the numbers\n  # split\
    \ the string to array by the space\n  # make each element to integer\n  # return\
    \ n - the number of apples - the number of oranges\n  s.delete(\"apples and oranges\"\
    ).split.map(&:to_i).reduce(:+)\nend", "  mangos = n - s.split[0].to_i - s.split[-1].to_i\n\
    \  mangos.to_s + \" mangos\"\nend", "    number_of_apples = s.split(\" and \"\
    )[0].to_i\n    number_of_oranges = s.split(\" and \")[1].to_i\n    n - number_of_apples\
    \ - number_of_oranges\nend", "\tfruits = s.split(\" \")\n\tif fruits[1] == \"\
    apples\"\n\t\tapples = fruits[0].to_i\n\t\toranges = fruits[4].to_i\n\telse\n\t\
    \tapples = fruits[4].to_i\n\t\toranges = fruits[0].to_i\n\tend\n\tmangoes = n\
    \ - apples - oranges\n\tputs mangoes\nend", "  number_of_oranges = s.split(\"\
    \ \")[3].to_i\n  number_of_apples = s.split(\" \")[0].to_i\n  n - number_of_oranges\
    \ - number_of_apples\nend", "  array = s.split(\" \")\n  sum = n - array[0].to_i\
    \ - array[4].to_i\n  puts sum\nend", "  a,o = s.scan(/\\d+/).map(&:to_i)\n  n-a-o\n\
    end", "\titems = s.split(\" and \")\n\ta = items[0].split(\" \")\n\to = items[1].split(\"\
    \ \")\n\tm = n - a[0].to_i - o[0].to_i\n\treturn m\nend\nputs fruit_distribution(\"\
    5 apples and 6 oranges\", 19)", "    s.split(\" and \").map {|str| str[0..str.index(\"\
    \ \") - 1].to_i}.reduce(:+)\nend", "    # your code here \nend", "  # your code\
    \ here\nend", "  # put your code here\nend", "\t# write your code here\nend",
  end, "  n -= s.scan(/\\d+/).inject(0){|sum,i| sum + i.to_i}\nend", "    # YOUR CODE\
    \ HERE\n    array = s.split(\" \")\n    total_apples = array[0].to_i\n    total_oranges\
    \ = array[3].to_i\n    total_fruit = n - total_apples - total_oranges\nend", " \
    \ s_split = s.split(\" \")\n  n_apples = s_split[0].to_i\n  n_oranges = s_split[3].to_i\n\
    \  return n - n_apples - n_oranges\nend", "\ts = s.gsub(\" and \",\" \")\n\ts\
    \ = s.split(\" \")\n\ts = s.map(&:to_i)\n\tn - s[0] - s[2]\nend\nputs fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\nputs fruit_distribution(\"0 apples and 1 oranges\"\
    ,3)\nputs fruit_distribution(\"2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"\
    100 apples and 1 oranges\",120)", "    # \"5 apples and 6 oranges\" 19\n    #\
    \ \"0 apples and 1 oranges\" 3\n    # \"2 apples and 3 oranges\" 100\n    # \"\
    100 apples and 1 oranges\" 120\n    # n - a - o = m\n    # n - a - o\n    a =\
    \ s.split(\" apples and \")[0].to_i\n    o = s.split(\" apples and \")[1].to_i\n\
    \    m = n - a - o\nend", "    #your code here\nend", "  # return n - s.split(\"\
    \ \")[0].to_i - s.split(\" \")[3].to_i\n  return n - s.split(\" \")[0].to_i -\
    \ s.split(\" \")[-1].to_i\nend", "  n - s.scan(/\\d+/).map(&:to_i).inject(:+)\n\
    end", "  total_apples = s.split(\" \")[0].to_i\n  total_oranges = s.split(\" \"\
    )[2].to_i\n  mangos = n - total_apples - total_oranges\nend", "  s = s.split(/\
    \ apples and | oranges/)\n  p s\n  n - s[0].to_i - s[1].to_i\nend", "  # Your\
    \ code here\nend", "\tdata = s.scan(/\\d+/)\n\tn - data[0].to_i - data[1].to_i\n\
    end", "  #\nend", "  s.scan(/\\d+/).map(&:to_i).reduce(:+)\nend", "    # your\
    \ code here\nend", "    # your code here\nend\nputs fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) == 8\nputs fruit_distribution(\"0 apples and 1 oranges\"\
    ,3) == 2\nputs fruit_distribution(\"2 apples and 3 oranges\", 100) == 95\nputs\
    \ fruit_distribution(\"100 apples and 1 oranges\",120) == 19", "    num_apples\
    \ = s.split(\" apples and \")[0].to_i\n    num_oranges = s.split(\" apples and\
    \ \")[1].split(\" oranges\")[0].to_i\n    return n - num_apples - num_oranges\n\
    end", "\tif s == \"5 apples and 6 oranges\" and n == 19\n\t\t19 - 5 - 6\n\telsif\
    \ s == \"0 apples and 1 oranges\" and n == 3\n\t\t3 - 0 - 1\n\telsif s == \"2\
    \ apples and 3 oranges\" and n == 100\n\t\t100 - 2 - 3\n\telsif s == \"100 apples\
    \ and 1 oranges\" and n == 120\n\t\t120 - 100 - 1\n\tend\nend", "\t# Your code\
    \ goes here \nend", "    s = s.split(' ')\n    s[0] = s[0].to_i\n    s[2] = s[2].to_i\n\
    \    n - s[0] - s[2]\nend\nfruit_distribution(\"5 apples and 6 oranges\", 19)\n\
    fruit_distribution(\"0 apples and 1 oranges\",3)\nfruit_distribution(\"2 apples\
    \ and 3 oranges\", 100)\nfruit_distribution(\"100 apples and 1 oranges\",120)",
  "  i = 0\n  while i < s.length\n    if s[i] == 'a'\n      s[i] = 0\n    elsif s[i]\
    \ == 'o'\n      s[i] = 0\n    end\n    i += 1\n  end\n  n - s.split(' ').map(&:to_i).inject(:+)\n\
    end", "\t# your code here\nend", "\t#\nend", "  fruits = s.split(' and ')\n  apples\
    \ = fruits[0].split(' ')[0].to_i\n  oranges = fruits[1].split(' ')[0].to_i\n \
    \ mangoes = n - apples - oranges\nend", "  # insert your code here\nend", end,
  "    oranges, apples = s.split(' and ').map { |a| a.split[0].to_i }\n    n - oranges\
    \ - apples\nend", "  s = s.split(' ')\n  n = n - s[0].to_i - s[-1].to_i\nend",
  "  fruit_num = 0\n  fruits = s.split(\" \")\n  apples = fruits[0].to_i\n  oranges\
    \ = fruits[-1].to_i\n  fruit_num = n - apples - oranges\n  fruit_num\nend", " \
    \ # Write your code here\n  #first\n  arr = s.split(\" \")\n  apples = arr[0].to_i\n\
    \  oranges = arr[2].to_i\n  mangoes = n - (apples + oranges)\n  mangoes\n  #end\n\
    end", "  apples, oranges = s.split(' and ').map(&:to_i)\n  n - apples - oranges\n\
    end", "  # your code here\nend", "  return n - s.match(/\\d+/)[0].to_i - s.match(/\\\
    d+/)[1].to_i\nend", "  s.gsub!(\" apples and \", \" + \")\n  s.gsub!(\" oranges\"\
    , \"\")\n  s = s.split(\" + \")\n  s.map!{|x| x.to_i}\n  s = s.reduce(:+)\n  (n\
    \ - s)\nend", "\nend", "\tarray = s.split(\" \")\n\tnew_array = array.map {|x|\
    \ x.to_i}\n\tnew_array.each do |i|\n\t\tn -= i\n\tend\n\tputs n\nend\nfruit_distribution(\"\
    100 apples and 1 oranges\",120)", "    # Write your code here\n    n - s.split(\"\
    \ \")[0].to_i - s.split(\" \")[4].to_i\nend", "  #write your code here\nend",
  end, "  # write your code here\nend", "\tsum = s.split(/ and /).map(&:to_i).reduce(:+)\n\
    \tn - sum\nend", "    # your code goes here\n    #replace function to remove apples\
    \ and oranges\n    #to_i function to convert string to number\n    n - s.split(\"\
    \ and \")[0].to_i - s.split(\" and \")[1].to_i\nend", "  apple = s.split(\" and\
    \ \")[0].to_i\n  orange = s.split(\" and \")[1].split(\" oranges\")[0].to_i\n\
    \  n - apple - orange\nend\nputs fruit_distribution(\"5 apples and 6 oranges\"\
    , 19)\nputs fruit_distribution(\"0 apples and 1 oranges\",3)\nputs fruit_distribution(\"\
    2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"100 apples and 1 oranges\"\
    ,120)", "  # Your code here...\nend", "    # find numbers of apples and oranges\n\
    \    # calculate the remainder\n    s_array = s.split(\" \")\n    num_apples =\
    \ s_array[0].to_i\n    num_oranges = s_array[3].to_i\n    return n - num_apples\
    \ - num_oranges\nend", "    # write your code here\n    sum = 0\n    s.gsub(/\\\
    D/, ' ').split.each { |i| sum += i.to_i }\n    n - sum\nend", "\t# need to make\
    \ sure that each word only contains a number.\n\t# parse the string to make sure\
    \ it only contains numbers, fruits and the \"and\" word\n\tsplit_array = s.split(\"\
    \ \")\n\twords = \"\"\n\tsplit_array.each do |i|\n\t\tif i == \"and\"\n\t\t\t\
    words << i << \" \"\n\t\telsif i.to_i.to_s == i\n\t\t\twords << i << \" \"\n\t\
    \tend\n\tend\n\t# now get the number of oranges and apples\n\tnumber_array = words.split(\"\
    \ \")\n\tapples = number_array[0].to_i\n\toranges = number_array[2].to_i\n\t#\
    \ subtract the total number of fruits in the basket by the number of apples and\
    \ oranges.\n\tif n >= apples + oranges\n\t\tmangoes = n - apples - oranges\n\t\
    else\n\t\tmangoes = 0\n\tend\n\t# If the fruit basket total is greater than or\
    \ equal to the total number of the fruits \n\t# in the basket return the number\
    \ of the mango fruits in the basket.\n\treturn mangoes\nend", "  a = s.split(\"\
    \ \")[0].to_i\n  o = s.split(\" \")[2].to_i\n  if a + o > n\n    return -1\n \
    \ else\n    return n - a - o\n  end\nend", "\nend", "    # write your code here\n\
    \    puts s\n    puts n\n    return n-(s.split(\" \")[0].to_i+s.split(\" \")[3].to_i)\n\
    end", "  total_fruit_in_basket = n.to_i\n  number_of_apples = s.split[0].to_i\n\
    \  number_of_oranges = s.split[4].to_i\n  total_fruit_in_basket - number_of_apples\
    \ - number_of_oranges\nend", " \tn - s.split[0].to_i - s.split[4].to_i\nend",
  "  # your code here\nend\nfruit_distribution(\"5 apples and 6 oranges\", 19) \n\
    fruit_distribution(\"0 apples and 1 oranges\",3) \nfruit_distribution(\"2 apples\
    \ and 3 oranges\", 100) \nfruit_distribution(\"100 apples and 1 oranges\",120) ",
  "\ts = s.split(\" \")\n\tn = n - s[0].to_i - s[4].to_i\n\treturn n\nend", "\t# write\
    \ your code here\n\tx = s.split(\" \")\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\t\
    x.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\
    \tx.pop\n\tx.pop\n\tx.pop\n\tx.pop\n\tx.pop", "    #\nend", "  @s_arr = s.split('\
    \ ')\n  @apples = @s_arr[0].to_i\n  @oranges = @s_arr[3].to_i\n  @mangoes = n\
    \ - @apples - @oranges\nend\nputs fruit_distribution(\"5 apples and 6 oranges\"\
    , 19)\nputs fruit_distribution(\"0 apples and 1 oranges\",3)\nputs fruit_distribution(\"\
    2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"100 apples and 1 oranges\"\
    ,120)", "  # YOUR CODE HERE\nend", "  n - s.tr('^0-9', '').split(' ').map(&:to_i).reduce(:+)\n\
    end", "  # Fill in your code here\nend", "  tots = s.split(' ')\n  a = tots[0].to_i\n\
    \  o = tots[3].to_i\n  m = n - a - o\n  return m\nend", "\nend", "\nend", "  #\
    \ Write your code here\n  \nend", "    # write your code here\nend", "  # Write\
    \ your code here\nend\nputs \"fruit_distribution\"\nputs fruit_distribution(\"\
    5 apples and 6 oranges\", 19) == 8\nputs fruit_distribution(\"0 apples and 1 oranges\"\
    ,3) == 2\nputs fruit_distribution(\"2 apples and 3 oranges\", 100) == 95\nputs\
    \ fruit_distribution(\"100 apples and 1 oranges\",120) == 19\nputs \"========================\"",
  "\nend", "  x = s.split(\" \")\n  y = x[0].to_i + x[3].to_i\n  n - y\nend", "  if\
    \ s == \"\"\n    puts n\n  else\n    fruit = s.split\n    sum = fruit[0].to_i\
    \ + fruit[-1].to_i\n    mango_fruits = n - sum\n    puts mango_fruits\n  end\n\
    end", "\nend", end, "  \nend", "  s = s.scan(/\\d+/)\n  x = s[0].to_i\n  y = s[1].to_i\n\
    \  if n > x + y\n    return n - x - y\n  else\n    return \"Too few fruit\"\n\
    \  end\nend", "  return 0 if s.split(\" \")[0].to_i + s.split(\" \")[2].to_i >\
    \ n\n  n - s.split(\" \")[0].to_i - s.split(\" \")[2].to_i\nend", "  result =\
    \ 0\n  apples = (s.split(\" and \")[0]).split(\" \")[0].to_i\n  oranges = (s.split(\"\
    \ and \")[1]).split(\" \")[0].to_i\n  result = n - apples - oranges\n  return\
    \ result\nend", "\tfruit = n - s.scan(/\\d+/).map(&:to_i).inject(:+)\nend\nputs\
    \ fruit_distribution(\"100 apples and 1 oranges\",120)", "  # YOUR CODE HERE\n\
    \  #number_of_fruits_in_the_basket - number_of_apples - number_of_oranges\n  #using\
    \ split\n  #s.split(' ')\n  #using split and map\n  #s.split(' ').map{|fruit|\
    \ fruit.to_i}\n  #using split and map and reduce\n  #s.split(' ').map{|fruit|\
    \ fruit.to_i}.reduce(:+)\n  #using regex\n  #s.scan(/\\d+/).map{|fruit| fruit.to_i}.reduce(:+)\n\
    \  n - s.scan(/\\d+/).map{|fruit| fruit.to_i}.reduce(:+)\nend", "    # remove\
    \ spaces\n    s = s.split(\" \")\n    # sum of orange and apple\n    sum = s[0].to_i\
    \ + s[2].to_i\n    # return n - sum\n    return n - sum\nend", "\t\nend", "  \
    \  # Write your code here\n    #arr = s.split(\" \")\n    #total = n - arr[0].to_i\
    \ - arr[3].to_i\n    #total\n    s.gsub(/[^0-9]/, ' ').split.map(&:to_i).reduce(:+)\
    \ - n\nend", end, "  fruits = s.split(/[\\sa-z]+/)\n  m = n - fruits[0].to_i -\
    \ fruits[1].to_i\n  return m\nend", "  quantity_of_fruits = s.gsub(/[^0-9]/, '\
    \ ').split(\" \").map(&:to_i)\n  n - quantity_of_fruits.reduce(:+)\nend", "  s\
    \ = s.split(\" \")\n  s[0].to_i + s[4].to_i\n  n - s[0].to_i - s[4].to_i\nend",
  "  #your code here\nend", end, "  # Your code here\nend", "\ts = s.split(\" \")\n\
    \ts[0] = s[0].to_i\n\ts[4] = s[4].to_i\n\tn = n - s[0] - s[4]\n\treturn n\nend",
  "  total_apples, total_oranges = s.split(\" and \").map{|fruit| fruit.split(\" \"\
    )[0].to_i}\n  n - total_apples - total_oranges\nend", "\t# count the number of\
    \ fruits in the basket\n\ttotal_apples = (s.split(\" \"))[0].to_i\n\ttotal_oranges\
    \ = (s.split(\" \"))[4].to_i\n\tnum_of_mangoes = n - total_apples - total_oranges\n\
    \treturn num_of_mangoes\nend", "  x = s.split(' ')\n  n - x[0].to_i - x[4].to_i\n\
    end", "  n - s.scan(/\\d+/).map(&:to_i).reduce(:+)\nend", "  # write your code\
    \ here\n  fruits = s.split(' and ')\n  apples = fruits[0].split(' ')[0].to_i\n\
    \  oranges = fruits[1].split(' ')[0].to_i\n  mangoes = n - apples - oranges\n\
    end", "  dist = s.split(\" and \")\n  num_apples = dist[0].split(\" \")[0].to_i\n\
    \  num_oranges = dist[1].split(\" \")[0].to_i\n  n - num_apples - num_oranges\n\
    end", "\t# your code here\nend", "    total = n\n    s.scan(/\\d+/) { |num| total\
    \ -= num.to_i }\n    total\nend\nputs fruit_distribution(\"5 apples and 6 oranges\"\
    , 19)\nputs fruit_distribution(\"0 apples and 1 oranges\",3)\nputs fruit_distribution(\"\
    2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"100 apples and 1 oranges\"\
    ,120)", "  \nend", "  # fill in code\n  return n - (s[0].to_i + s[-1].to_i)\n\
    end", "  #your code goes here\n  # hint you can call the method to_i to convert\
    \ a string to an integer\n  # for example \"5\".to_i will convert the string \"\
    5\" to the integer 5\n  s.split(\" \")\n  oranges = s[-1].to_i\n  apples = s[0].to_i\n\
    \  mangoes = n - oranges - apples\nend", "  n - s.split(\" and \").map { |e| e.split(\"\
    \ \")[0].to_i }.sum\nend\np fruit_distribution(\"5 apples and 6 oranges\", 19)\n\
    p fruit_distribution(\"0 apples and 1 oranges\",3)\np fruit_distribution(\"2 apples\
    \ and 3 oranges\", 100)\np fruit_distribution(\"100 apples and 1 oranges\",120)",
  "  # write your code here\n  raise NotImplementedError.new \"TODO: fruit_distribution\"\
    \nend", "  s = s.split(\" \")\n  sum = n - s[0].to_i - s[3].to_i\n  return sum\n\
    end", "    # write your code here\n    return 0\nend\nputs fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\nputs fruit_distribution(\"0 apples and 1 oranges\"\
    ,3)\nputs fruit_distribution(\"2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"\
    100 apples and 1 oranges\",120)", "\tarr = s.split(\" \")\n\tn - arr[0].to_i -\
    \ arr[4].to_i\nend", "    n - s.split(\" and \").map{|e| e.split(\" \")[0].to_i}.sum\n\
    end", "    fruits = s.split(\" \")\n    num_apples = fruits[0].to_i\n    num_oranges\
    \ = fruits[-1].to_i\n    n - num_apples - num_oranges\nend", "\nend", "\ts = s.split(/\
    \ /)\n\treturn n - s[0].to_i - s[4].to_i\nend\nputs fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19)\nputs fruit_distribution(\"0 apples and 1 oranges\",3)\n\
    puts fruit_distribution(\"2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"\
    100 apples and 1 oranges\",120)", "  s.scan(/\\d+/).map(&:to_i).reduce(:+) - n\n\
    end", "\nend", "  # Write your code here\n  \n  #Note: the following code returns\
    \ a list of the words in the string s:\n  # list_of_words = s.split(' ')\n  \n\
    \  #Note: the following code returns a list of the integers in the string s:\n\
    \  # list_of_numbers = s.split(' ').map(&:to_i)\n  \nend", "\ts = s.split(\" \"\
    )\n\treturn n - s[0].to_i - s[4].to_i\nend", "  array = s.split(\" \")\n  apples\
    \ = array[0].to_i\n  oranges = array[3].to_i\n  n - apples - oranges\nend", "\n\
    end", "  \nend", "\nend\nputs \"=======fruit_distribution=======\"\nputs fruit_distribution(\"\
    5 apples and 6 oranges\", 19)\nputs fruit_distribution(\"0 apples and 1 oranges\"\
    ,3)\nputs fruit_distribution(\"2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"\
    100 apples and 1 oranges\",120)\nputs \"=======fruit_distribution=======\"", " \
    \ a = s.split(\" \")\n  (n - a[0].to_i - a[3].to_i)\nend", "  s=s.split(' ')\n\
    \  return n-s[0].to_i-s[4].to_i\nend\nputs fruit_distribution(\"5 apples and 6\
    \ oranges\", 19)\nputs fruit_distribution(\"0 apples and 1 oranges\",3)\nputs\
    \ fruit_distribution(\"2 apples and 3 oranges\", 100)\nputs fruit_distribution(\"\
    100 apples and 1 oranges\",120)", "  n - s.split(\" and \").map { |str| str.split(\"\
    \ \")[0].to_i }.reduce(:+)\nend", "  return n - (s[0].to_i + s[-1].to_i)\nend",
  "\t# write your code here\nend", "  # Write your code here\nend", "\ta = s.split(\"\
    \ \")\n\ta = a[0].to_i + a[2].to_i\n\tn - a\nend", "  # write your code here\n\
    \  s = s.split\n  total_fruit = n\n  total_apple = s[0].to_i\n  total_orange =\
    \ s[4].to_i\n  total_fruit = total_fruit - total_apple - total_orange\nend", " \
    \   # Write your code here\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

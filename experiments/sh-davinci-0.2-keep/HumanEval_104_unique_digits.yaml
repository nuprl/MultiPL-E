completions:
- "    local -a list=($1)\n    local -a result=()\n    local num\n    for num in ${list[@]};\
  \ do\n        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=($num)\n  \
  \      fi\n    done\n    echo ${result[@]}"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    local -a evens=(0 2 4 6 8)\n\
  \    local -a odds=(1 3 5 7 9)\n    local -a digits=()\n    local -a tmp=()\n  \
  \  local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
  \ -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
  \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
  \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n\
  \    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local\
  \ -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n\
  \    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
  \  local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local\
  \ -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
  \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n\
  \    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
  \  local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n  \
  \  local -i kkk=0\n    local -i lll="
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
  \ ${y[@]} | tr ' ' '\\n' | sort -n"
- "    local -a arr\n    local -a result\n    local -a temp\n    local -i i\n    local\
  \ -i j\n    local -i k\n    local -i flag\n    local -i len\n    local -i len2\n\
  \    local -i len3\n    local -i num\n    local -i digit\n    local -i even\n  \
  \  local -i odd\n    local -i even_flag\n    local -i odd_flag\n    local -i even_count\n\
  \    local -i odd_count\n    local -i even_count2\n    local -i odd_count2\n   \
  \ local -i even_count3\n    local -i odd_count3\n    local -i even_flag2\n    local\
  \ -i odd_flag2\n    local -i even_flag3\n    local -i odd_flag3\n    local -i even_flag4\n\
  \    local -i odd_flag4\n    local -i even_flag5\n    local -i odd_flag5\n    local\
  \ -i even_flag6\n    local -i odd_flag6\n    local -i even_flag7\n    local -i odd_flag7\n\
  \    local -i even_flag8\n    local -i odd_flag8\n    local -i even_flag9\n    local\
  \ -i odd_flag9\n    local -i even_flag10\n    local -i odd_flag10\n    local -i\
  \ even_flag11\n    local -i odd_flag11\n    local -i even_flag12\n    local -i odd_flag12\n\
  \    local -i even_flag13\n    local -i odd_flag13\n    local -i even_flag14\n \
  \   local -i odd_flag14\n    local -i even_flag15\n    local -i odd_flag15\n   \
  \ local -i even_flag16\n    local -i odd_flag16\n    local -i even_flag17\n    local\
  \ -i odd_flag17\n    local -i even_flag18\n    local -i odd_flag18\n    local -i\
  \ even_flag19\n    local -i odd_flag19\n    local -i even_flag20\n    local -i odd_flag20\n\
  \    local -i even_flag21\n    local -i odd_"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i len=0\n    local -i num=0\n    local -i digit=0\n\
  \    local -i is_even=0\n    local -i is_unique=1\n    local -i is_sorted=0\n  \
  \  local -i is_sorted_prev=0\n    local -i is_sorted_curr=0\n    local -i is_sorted_next=0\n\
  \    local -i is_sorted_next_next=0\n    local -i is_sorted_next_next_next=0\n \
  \   local -i is_sorted_next_next_next_next=0\n    local -i is_sorted_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next=0\n    local -i is_sorted_next_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next_next_next=0\n    local -i\
  \ is_sorted_next_next_next_next_next_next_next_next_next=0\n    local -i is_sorted_next_next_next_next_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_next_next_next_next_next_next_next_"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i flag=0\n\
  \    local -i num=0\n    local -i digit=0\n    local -i len=0\n    local -i temp=0\n\
  \    local -i temp2=0\n    local -i temp3=0\n    local -i temp4=0\n    local -i\
  \ temp5=0\n    local -i temp6=0\n    local -i temp7=0\n    local -i temp8=0\n  \
  \  local -i temp9=0\n    local -i temp10=0\n    local -i temp11=0\n    local -i\
  \ temp12=0\n    local -i temp13=0\n    local -i temp14=0\n    local -i temp15=0\n\
  \    local -i temp16=0\n    local -i temp17=0\n    local -i temp18=0\n    local\
  \ -i temp19=0\n    local -i temp20=0\n    local -i temp21=0\n    local -i temp22=0\n\
  \    local -i temp23=0\n    local -i temp24=0\n    local -i temp25=0\n    local\
  \ -i temp26=0\n    local -i temp27=0\n    local -i temp28=0\n    local -i temp29=0\n\
  \    local -i temp30=0\n    local -i temp31=0\n    local -i temp32=0\n    local\
  \ -i temp33=0\n    local -i temp34=0\n    local -i temp35=0\n    local -i temp36=0\n\
  \    local -i temp37=0\n    local -i temp38=0\n    local -i temp39=0\n    local\
  \ -i temp40=0\n    local -i temp41=0\n    local -i temp42=0\n    local -i temp43=0\n\
  \    local -i temp44=0\n    local -i temp45=0\n    local -i temp46=0\n    local\
  \ -i temp47=0"
- "    local -a x=($1)\n    local -a y=()\n    local -a z=()\n    local -a w=()\n\
  \    local -a t=()\n    local -a u=()\n    local -a v=()\n    local -a s=()\n  \
  \  local -a r=()\n    local -a q=()\n    local -a p=()\n    local -a o=()\n    local\
  \ -a n=()\n    local -a m=()\n    local -a l=()\n    local -a k=()\n    local -a\
  \ j=()\n    local -a i=()\n    local -a h=()\n    local -a g=()\n    local -a f=()\n\
  \    local -a e=()\n    local -a d=()\n    local -a c=()\n    local -a b=()\n  \
  \  local -a a=()\n    local -a zero=()\n    local -a one=()\n    local -a two=()\n\
  \    local -a three=()\n    local -a four=()\n    local -a five=()\n    local -a\
  \ six=()\n    local -a seven=()\n    local -a eight=()\n    local -a nine=()\n \
  \   local -a ten=()\n    local -a eleven=()\n    local -a twelve=()\n    local -a\
  \ thirteen=()\n    local -a fourteen=()\n    local -a fifteen=()\n    local -a sixteen=()\n\
  \    local -a seventeen=()\n    local -a eighteen=()\n    local -a nineteen=()\n\
  \    local -a twenty=()\n    local -a twentyone=()\n    local -a twentytwo=()\n\
  \    local -a twentythree=()\n    local -a twentyfour=()\n    local -a twentyfive=()\n\
  \    local -a twentysix=()\n    local -a twentyseven=()\n    local -a twentyeight=()\n\
  \    local -a twentynine=()\n    local -a thirty=()\n    local -a thirtyone=()\n\
  \    local -a thirtytwo=()\n    local -a thirtythree=()\n    local -a thirtyfour=()\n\
  \    local -a thirtyfive"
- "    # your code here\n    echo $1 | tr ' ' '\\n' | grep -v -E '[02468]' | sort\
  \ -n"
- "    local -a arr\n    local -a res\n    local i\n    local j\n    local k\n   \
  \ local flag\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=0; i<${#arr[@]};\
  \ i++)); do\n        flag=1\n        for ((j=0; j<${#arr[i]}; j++)); do\n      \
  \      if [[ ${arr[i]:$j:1} =~ [02468] ]]; then\n                flag=0\n      \
  \          break\n            fi\n        done\n        if [[ $flag -eq 1 ]]; then\n\
  \            res[${#res[@]}]=${arr[i]}\n        fi\n    done\n    echo ${res[@]}\
  \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '"
- "    local -a x=($1)\n    local -a y=()\n    local -a z=()\n    local -a w=()\n\
  \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
  \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
  \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
  \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
  \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
  \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
  \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
  \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
  \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
  \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
  \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
  \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
  \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
  \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
  \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
  \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
  \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
  \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
  \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
  \    local s\n    local t\n    local u\n    local v\n    local w\n   "
- "    local -a arr\n    local -a res\n    local -a evens=(0 2 4 6 8)\n    local i\n\
  \    local j\n    local num\n    local digit\n    local found\n    IFS=' ' read\
  \ -a arr <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n        num=$i\n        found=0\n\
  \        while [[ $num -gt 0 ]]; do\n            digit=$((num % 10))\n         \
  \   for j in \"${evens[@]}\"; do\n                if [[ $digit -eq $j ]]; then\n\
  \                    found=1\n                    break\n                fi\n  \
  \          done\n            if [[ $found -eq 1 ]]; then\n                break\n\
  \            fi\n            num=$((num / 10))\n        done\n        if [[ $found\
  \ -eq 0 ]]; then\n            res+=($i)\n        fi\n    done\n    echo \"${res[@]}\"\
  \ | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- '    echo $1 | tr '' '' ''\n'' | grep -v ''.*[02468].*'' | sort -n'
- "    # TODO: implement this function\n    echo $1 | tr ' ' '\\n' | grep -v -E '[0-9]*[02468][0-9]*'\
  \ | sort -n"
- "    local -a arr=($1)\n    local -a res\n    for i in ${arr[@]}; do\n        if\
  \ [[ $i =~ [02468] ]]; then\n            continue\n        fi\n        res+=($i)\n\
  \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a arr=()\n    local -a res=()\n    local -a even=(0 2 4 6 8)\n    local\
  \ -a odd=(1 3 5 7 9)\n    local -a digits=()\n    local -a unique=()\n    local\
  \ -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n\
  \    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a\
  \ tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n\
  \    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local\
  \ -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n\
  \    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local\
  \ -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n\
  \    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local\
  \ -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n\
  \    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local\
  \ -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n\
  \    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local\
  \ -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local -a tmp46=()\n\
  \    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n    local\
  \ -a tmp50=()\n    local -a"
- "    local -a arr=($1)\n    local -a res=()\n    local -a even=(2 4 6 8 0)\n   \
  \ local -a odd=(1 3 5 7 9)\n    local -a tmp=()\n    local -a tmp2=()\n    local\
  \ -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n\
  \    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n    local -a\
  \ tmp0=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n\
  \    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n    local\
  \ -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n\
  \    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n    local\
  \ -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n\
  \    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n    local\
  \ -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n\
  \    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n    local\
  \ -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n\
  \    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n    local\
  \ -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n\
  \    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n    local\
  \ -a tmp52=()\n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    # Write your code here\n    # To print results to the standard output you can\
  \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\""
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a digits\n    local -a evens\n    local -a odds\n    local -a result\n\
  \    local i\n    local j\n    local k\n    local n\n    local x\n    local y\n\
  \    local z\n\n    digits=($1)\n    for ((i=0; i<${#digits[@]}; i++)); do\n   \
  \     x=${digits[$i]}\n        for ((j=0; j<${#x}; j++)); do\n            y=${x:$j:1}\n\
  \            if [[ $y -eq 0 || $y -eq 2 || $y -eq 4 || $y -eq 6 || $y -eq 8 ]];\
  \ then\n                evens[${#evens[@]}]=$x\n                break\n        \
  \    fi\n        done\n    done\n    for ((i=0; i<${#digits[@]}; i++)); do\n   \
  \     x=${digits[$i]}\n        for ((j=0; j<${#evens[@]}; j++)); do\n          \
  \  y=${evens[$j]}\n            if [[ $x -eq $y ]]; then\n                break\n\
  \            fi\n            if [[ $j -eq $(( ${#evens[@]} - 1 )) ]]; then\n   \
  \             odds[${#odds[@]}]=$x\n            fi\n        done\n    done\n   \
  \ for ((i=0; i<${#odds[@]}; i++)); do\n        x=${odds[$i]}\n        for ((j=0;\
  \ j<${#odds[@]}; j++)); do\n            y=${odds[$j]}\n            if [[ $x -lt\
  \ $y ]]; then\n                z=${odds[$i]}\n                odds[$i]=${odds[$j]}\n\
  \                odds[$j]=$z\n            fi\n        done\n    done\n    for ((i=0;\
  \ i<${#odds[@]}; i++)); do\n        result[$i]=${odds[$i]}\n    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "    local input=\"$1\"\n    local output=\"\"\n    local num\n    for num in $input;\
  \ do\n        if [[ ! $num =~ [02468] ]]; then\n            output=\"$output $num\"\
  \n        fi\n    done\n    echo $output"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
  \        if [[ ! $i =~ [02468] ]]; then\n            res+=(\"$i\")\n        fi\n\
  \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n"
- "    # TODO: Write your code here\n    # Please use the following syntax to print\
  \ the result\n    # echo $result"
- "    local -a arr\n    local -a res\n    local -i i\n    local -i j\n    local -i\
  \ k\n    local -i num\n    local -i digit\n    local -i is_even\n    local -i is_unique\n\
  \    local -i len\n    local -i len_res\n    local -i len_arr\n    local -i len_res\n\
  \    local -i len_arr\n    local -i len_res\n    local -i len_arr\n    local -i\
  \ len_res\n    local -i len_arr\n    local -i len_res\n    local -i len_arr\n  \
  \  local -i len_res\n    local -i len_arr\n    local -i len_res\n    local -i len_arr\n\
  \    local -i len_res\n    local -i len_arr\n    local -i len_res\n    local -i\
  \ len_arr\n    local -i len_res\n    local -i len_arr\n    local -i len_res\n  \
  \  local -i len_arr\n    local -i len_res\n    local -i len_arr\n    local -i len_res\n\
  \    local -i len_arr\n    local -i len_res\n    local -i len_arr\n    local -i\
  \ len_res\n    local -i len_arr\n    local -i len_res\n    local -i len_arr\n  \
  \  local -i len_res\n    local -i len_arr\n    local -i len_res\n    local -i len_arr\n\
  \    local -i len_res\n    local -i len_arr\n    local -i len_res\n    local -i\
  \ len_arr\n    local -i len_res\n    local -i len_arr\n    local -i len_res\n  \
  \  local -i len_arr\n    local -i len_res\n    local -i len_arr\n    local -i len_res\n\
  \    local -i len_arr\n    local -i len_res\n    local -i len_arr\n    local -i\
  \ len_res\n    local -i len_arr\n    local -i len_res\n    local -i len_arr\n  \
  \  local -i len_res\n    local -i len_arr"
- "    # TODO: Write your code here\n    #return\n    local input=\"$1\"\n    local\
  \ output=\"\"\n    for num in $input; do\n        if [[ $num =~ [02468] ]]; then\n\
  \            continue\n        fi\n        output=\"$output $num\"\n    done\n \
  \   echo $output | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n    \
  \    if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]}"
- "    # TODO: Write your code here\n    echo $1 | tr ' ' '\\n' | grep -v '[02468]'\
  \ | sort -n"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[^24680]+$ ]]; then\n            result=\"$result $i\"\n        fi\n  \
  \  done\n    echo $result"
- "    local -a arr=($1)\n    local -a res=()\n    for i in ${arr[@]}; do\n      \
  \  if [[ $i =~ [02468] ]]; then\n            continue\n        fi\n        res+=($i)\n\
  \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    # TODO: Write your code here\n    # Hint: You can use the following command\
  \ to check if a number\n    # has an even digit:\n    # echo $((10#2%2))\n    #\
  \ The above command will return 0 if 2 has an even digit (2)\n    # and 1 otherwise.\n\
  \    # You can use the following command to extract each digit of a number:\n  \
  \  # num=123\n    # echo ${num:0:1} # 1\n    # echo ${num:1:1} # 2\n    # echo ${num:2:1}\
  \ # 3\n    # echo ${num:3:1} # ''\n    #\n    # You can use the following command\
  \ to sort a list:\n    # echo $(echo \"1 2 3\" | tr \" \" \"\\n\" | sort -n | tr\
  \ \"\\n\" \" \")\n    # The above command will return \"1 2 3\"\n    #\n    # You\
  \ can use the following command to remove duplicates from a list:\n    # echo $(echo\
  \ \"1 2 3 2 1\" | tr \" \" \"\\n\" | sort -u | tr \"\\n\" \" \")\n    # The above\
  \ command will return \"1 2 3\"\n    #\n    # You can use the following command\
  \ to remove empty elements from a list:\n    # echo $(echo \"1 2 3  \" | tr \" \"\
  \ \"\\n\" | grep -v \"^$\" | tr \"\\n\" \" \")\n    # The above command will return\
  \ \"1 2 3\"\n    #\n    # You can use the following command to remove elements from\
  \ a list:\n    # echo $(echo \"1 2 3\" | tr \" \" \"\\n\" | grep -v \"2\" | tr \"\
  \\n\" \" \")\n    # The above command will return \"1 3\"\n    #\n    # You can\
  \ use the following command to join two lists:\n    # echo $(echo \"1 2 3\" | tr\
  \ \" \" \"\\n\"; echo \"4 5 6\" | tr \" \" \"\\n\") | tr \"\\n\" \" \"\n    # The\
  \ above command will return \"1 2 3 4 5 6\"\n    #\n    # You can use the following\
  \ command to get the length of a list:\n    # echo $(echo \"1 2 3\" | tr \" \" \"\
  \\n"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a digits=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local\
  \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
  \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
  \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
  \    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local\
  \ -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n\
  \    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
  \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
  \    local -i q=0\n    local -i r"
- '    echo "$1" | tr '' '' ''\n'' | grep -v ''.*[02468].*'' | sort -n'
- "    local -a arr=(\"$@\")\n    local -a result=()\n    local num\n    for num in\
  \ \"${arr[@]}\"; do\n        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=(\"\
  $num\")\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i len=0\n    local -i num=0\n    local -i digit=0\n\
  \    local -i even=0\n    local -i tmp=0\n    local -i flag=0\n    local -i flag2=0\n\
  \    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i\
  \ flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n  \
  \  local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i\
  \ flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n\
  \    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local\
  \ -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n\
  \    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local\
  \ -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n\
  \    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local\
  \ -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n\
  \    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local\
  \ -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n\
  \    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local\
  \ -i flag48="
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "    local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n    \
  \    if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "  local nums=\"$1\"\n  local num\n  local digits\n  local digit\n  local result=()\n\
  \  for num in $nums; do\n    digits=$(echo $num | grep -o .)\n    for digit in $digits;\
  \ do\n      if [[ $digit -eq 0 || $digit -eq 2 || $digit -eq 4 || $digit -eq 6 ||\
  \ $digit -eq 8 ]]; then\n        break\n      fi\n    done\n    if [[ $digit -eq\
  \ 9 ]]; then\n      result+=($num)\n    fi\n  done\n  echo ${result[@]}"
- "    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n            echo\
  \ $x\n        fi\n    done | sort -n"
- "    local -a digits\n    local -a result\n    local -i i\n    local -i j\n    local\
  \ -i k\n    local -i n\n    local -i m\n    local -i is_even\n    local -i is_unique\n\
  \    local -i is_zero\n    local -i is_zero_even\n    local -i is_zero_odd\n   \
  \ local -i is_zero_unique\n    local -i is_zero_unique_even\n    local -i is_zero_unique_odd\n\
  \    local -i is_zero_unique_even_odd\n    local -i is_zero_unique_even_odd_even\n\
  \    local -i is_zero_unique_even_odd_even_even\n    local -i is_zero_unique_even_odd_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even\n    local -i is_zero_unique_even_odd_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even_even_even\n    local -i\
  \ is_zero_unique_even_odd_even_even_even_even_even_even_even\n    local -i is_zero_unique_even_odd_even_even_even_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even_even_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even_even_even_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even_even_even_even_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd_even_even_even_even_even_even_even_even_even_even_even_even_even\n\
  \    local -i is_zero_unique_even_odd"
- "    local -a arr\n    local -a res\n    local -i i\n    local -i j\n    local -i\
  \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
  \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i\
  \ u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i\
  \ z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i\
  \ e\n    local -i f\n    local -i g\n    local -i h\n    local -i j\n    local -i\
  \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
  \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i\
  \ u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i\
  \ z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i\
  \ e\n    local -i f\n    local -i g\n    local -i h\n    local -i j\n    local -i\
  \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
  \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i\
  \ u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i\
  \ z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i\
  \ e\n    local -i f\n    local -i g\n    local -i h\n    local -i j\n    local -i\
  \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
  \ p\n   "
- "    local -a arr\n    local -a ret\n    local i\n    local j\n    local k\n   \
  \ local flag\n    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        flag=1\n\
  \        for ((j=0; j<${#arr[$i]}; j++)); do\n            if [[ ${arr[$i]:$j:1}\
  \ =~ [02468] ]]; then\n                flag=0\n                break\n         \
  \   fi\n        done\n        if [[ $flag -eq 1 ]]; then\n            ret[${#ret[@]}]=${arr[$i]}\n\
  \        fi\n    done\n    echo ${ret[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i n=0\n    local -i m=0\n    local -i is_even=0\n    local -i\
  \ is_odd=0\n    local -i is_unique=0\n    local -i is_duplicate=0\n    local -i\
  \ is_sorted=0\n    local -i is_sorted_reverse=0\n    local -i is_sorted_random=0\n\
  \    local -i is_sorted_random_reverse=0\n    local -i is_sorted_random_unique=0\n\
  \    local -i is_sorted_random_unique_reverse=0\n    local -i is_sorted_random_duplicate=0\n\
  \    local -i is_sorted_random_duplicate_reverse=0\n    local -i is_sorted_random_duplicate_unique=0\n\
  \    local -i is_sorted_random_duplicate_unique_reverse=0\n    local -i is_sorted_random_duplicate_unique_even=0\n\
  \    local -i is_sorted_random_duplicate_unique_even_reverse=0\n    local -i is_sorted_random_duplicate_unique_odd=0\n\
  \    local -i is_sorted_random_duplicate_unique_odd_reverse=0\n    local -i is_sorted_random_duplicate_unique_even_odd=0\n\
  \    local -i is_sorted_random_duplicate_unique_even_odd_reverse=0\n    local -i\
  \ is_sorted_random_duplicate_unique_even_odd_even=0\n    local -i is_sorted_random_duplicate_unique_even_odd_even_reverse=0\n\
  \    local -i is_sorted_random_duplicate_unique_even_odd_odd=0\n    local -i is_sorted_random_duplicate_unique_even_odd_odd_reverse=0\n\
  \    local -i is_sorted_random_duplicate_unique_even_"
- "    # TODO: Write your code here\n    echo $1 | tr \" \" \"\\n\" | grep -v \"[02468]\"\
  \ | sort -n"
- "    local list=\"$1\"\n    local digits\n    local result=()\n    for n in $list;\
  \ do\n        digits=$(echo $n | sed 's/[0-9]//g')\n        if [ -z \"$digits\"\
  \ ]; then\n            result+=(\"$n\")\n        fi\n    done\n    echo ${result[@]}\
  \ | tr ' ' '\\n' | sort -n"
- "    local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
  \ ${y[@]} | tr ' ' '\\n' | sort -n"
- "    local -a arr=(\"$@\")\n    local -a result=()\n    local -i i=0\n    local\
  \ -i j=0\n    local -i len=0\n    local -i num=0\n    local -i digit=0\n    local\
  \ -i is_unique=1\n    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n\
  \        is_unique=1\n        while ((num > 0)); do\n            digit=$((num %\
  \ 10))\n            if ((digit % 2 == 0)); then\n                is_unique=0\n \
  \               break\n            fi\n            num=$((num / 10))\n        done\n\
  \        if ((is_unique == 1)); then\n            result[j]=${arr[i]}\n        \
  \    ((j++))\n        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort\
  \ -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    # TODO: Write your code here\n    echo $1 | tr \" \" \"\\n\" | grep -v -E \"\
  [0-9]*[02468][0-9]*\" | sort -n"
- '    echo $1 | tr '' '' ''\n'' | grep -v ''[02468]'' | sort -n'
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
  \ ${y[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       local -a digits=($(echo $i | grep -o .))\n        local -a evens=($(echo\
  \ ${digits[@]} | grep -o [02468]))\n        if [ ${#evens[@]} -eq 0 ]; then\n  \
  \          result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr ' ' '\\\
  n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for num in ${list[@]}; do\n\
  \        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=($num)\n       \
  \ fi\n    done\n    echo ${result[@]}"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
  \        if [[ ! $i =~ [02468] ]]; then\n            res+=($i)\n        fi\n   \
  \ done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n"
- "    local -a numbers=($1)\n    local -a result=()\n    for number in ${numbers[@]};\
  \ do\n        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=($number)\n\
  \        fi\n    done\n    echo ${result[@]}"
- "    local x\n    local y\n    local z\n    local result\n    for x in $1; do\n\
  \        y=$(echo $x | sed 's/[02468]//g')\n        if [ \"$y\" == \"$x\" ]; then\n\
  \            result=\"$result $x\"\n        fi\n    done\n    echo $result | sed\
  \ 's/^ *//' | sort -n"
- "    local x\n    local y\n    local z\n    local result\n    result=()\n    for\
  \ x in $1; do\n        y=$(echo $x | sed 's/[02468]//g')\n        if [ \"$y\" =\
  \ \"$x\" ]; then\n            result+=($x)\n        fi\n    done\n    echo ${result[@]}\
  \ | tr ' ' '\\n' | sort -n"
- "    local -a arr\n    local -a even_digits\n    local -a unique_digits\n    local\
  \ -a result\n    local i\n    local j\n    local k\n    local flag\n    local num\n\
  \n    arr=($1)\n    even_digits=(0 2 4 6 8)\n    unique_digits=(1 3 5 7 9)\n\n \
  \   for i in ${arr[@]}; do\n        flag=0\n        for j in ${even_digits[@]};\
  \ do\n            if [[ $i =~ $j ]]; then\n                flag=1\n            \
  \    break\n            fi\n        done\n        if [[ $flag -eq 0 ]]; then\n \
  \           result+=($i)\n        fi\n    done\n\n    for ((i=0; i<${#result[@]};\
  \ i++)); do\n        for ((j=i+1; j<${#result[@]}; j++)); do\n            if [[\
  \ ${result[$i]} -gt ${result[$j]} ]]; then\n                num=${result[$i]}\n\
  \                result[$i]=${result[$j]}\n                result[$j]=$num\n   \
  \         fi\n        done\n    done\n\n    echo ${result[@]}"
- "    local x\n    local y\n    local z\n    local -a a\n    local -a b\n    local\
  \ -a c\n    local -a d\n    local -a e\n    local -a f\n    local -a g\n    local\
  \ -a h\n    local -a i\n    local -a j\n    local -a k\n    local -a l\n    local\
  \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
  \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
  \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a aa\n    local\
  \ -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n    local -a af\n  \
  \  local -a ag\n    local -a ah\n    local -a ai\n    local -a aj\n    local -a\
  \ ak\n    local -a al\n    local -a am\n    local -a an\n    local -a ao\n    local\
  \ -a ap\n    local -a aq\n    local -a ar\n    local -a as\n    local -a at\n  \
  \  local -a au\n    local -a av\n    local -a aw\n    local -a ax\n    local -a\
  \ ay\n    local -a az\n    local -a ba\n    local -a bb\n    local -a bc\n    local\
  \ -a bd\n    local -a be\n    local -a bf\n    local -a bg\n    local -a bh\n  \
  \  local -a bi\n    local -a bj\n    local -a bk\n    local -a bl\n    local -a\
  \ bm\n    local -a bn\n    local -a bo\n    local -a bp\n    local -a bq\n    local\
  \ -a br\n    local -a bs\n    local -a bt\n    local -a bu\n    local -a bv\n  \
  \  local -a bw\n    local -a bx\n    local -a by\n    local -a bz\n    local -a\
  \ ca\n    local"
- "    local -a arr\n    local -a res\n    local i\n    local j\n    local flag\n\n\
  \    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        flag=1\n        for\
  \ ((j=0; j<${#arr[$i]}; j++)); do\n            if [[ \"${arr[$i]:$j:1}\" =~ ^[02468]$\
  \ ]]; then\n                flag=0\n                break\n            fi\n    \
  \    done\n        if [[ $flag -eq 1 ]]; then\n            res+=(\"${arr[$i]}\"\
  )\n        fi\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a arr=($1)\n    local -a res=()\n    for i in ${arr[@]}; do\n      \
  \  if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i num=0\n    local\
  \ -i len=0\n    local -i digit=0\n    local -i even=0\n    local -i odd=0\n    local\
  \ -i is_even=0\n    local -i is_odd=0\n    local -i is_unique=0\n    local -i is_sorted=0\n\
  \    local -i is_sorted_prev=0\n    local -i is_sorted_curr=0\n    local -i is_sorted_next=0\n\
  \    local -i is_sorted_prev_prev=0\n    local -i is_sorted_next_next=0\n    local\
  \ -i is_sorted_prev_prev_prev=0\n    local -i is_sorted_next_next_next=0\n    local\
  \ -i is_sorted_prev_prev_prev_prev=0\n    local -i is_sorted_next_next_next_next=0\n\
  \    local -i is_sorted_prev_prev_prev_prev_prev=0\n    local -i is_sorted_next_next_next_next_next=0\n\
  \    local -i is_sorted_prev_prev_prev_prev_prev_prev=0\n    local -i is_sorted_next_next_next_next_next_next=0\n\
  \    local -i is_sorted_prev_prev_prev_prev_prev_prev_prev=0\n    local -i is_sorted_next_next_"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if\
  \ [[ ! $i =~ [02468] ]]; then\n            result=\"$result $i\"\n        fi\n \
  \   done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local list=\"$1\"\n    local result=\"\"\n    for num in $list; do\n      \
  \  if [[ $num =~ ^[13579]+$ ]]; then\n            result=\"$result $num\"\n    \
  \    fi\n    done\n    echo $result"
- "    local -a digits\n    local -a evens\n    local -a odds\n    local -a results\n\
  \    local -i i\n    local -i j\n    local -i k\n    local -i num\n    local -i\
  \ digit\n    local -i even\n    local -i odd\n    local -i result\n    local -i\
  \ len\n    local -i len2\n    local -i len3\n    local -i len4\n    local -i len5\n\
  \    local -i len6\n    local -i len7\n    local -i len8\n    local -i len9\n  \
  \  local -i len10\n    local -i len11\n    local -i len12\n    local -i len13\n\
  \    local -i len14\n    local -i len15\n    local -i len16\n    local -i len17\n\
  \    local -i len18\n    local -i len19\n    local -i len20\n    local -i len21\n\
  \    local -i len22\n    local -i len23\n    local -i len24\n    local -i len25\n\
  \    local -i len26\n    local -i len27\n    local -i len28\n    local -i len29\n\
  \    local -i len30\n    local -i len31\n    local -i len32\n    local -i len33\n\
  \    local -i len34\n    local -i len35\n    local -i len36\n    local -i len37\n\
  \    local -i len38\n    local -i len39\n    local -i len40\n    local -i len41\n\
  \    local -i len42\n    local -i len43\n    local -i len44\n    local -i len45\n\
  \    local -i len46\n    local -i len47\n    local -i len48\n    local -i len49\n\
  \    local -i len50\n    local -i len51\n    local -i len52\n    local -i len53\n\
  \    local -i len54\n    local -i len55\n    local -i len56\n    local -i len57\n\
  \    local -i len58\n    local -i len59\n    local -i len60\n    local -i len61\n\
  \    local -i len62\n    local -i len"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    local -a tmp=()\n    local\
  \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
  \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n   \
  \ local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local\
  \ y=0\n    local z=0\n    local -i len=0\n    local -i len2=0\n    local -i len3=0\n\
  \    local -i len4=0\n    local -i len5=0\n    local -i len6=0\n    local -i len7=0\n\
  \    local -i len8=0\n    local -i len9=0\n    local -i len10=0\n    local -i len11=0\n\
  \    local -i len12=0\n    local -i len13=0\n    local -i len14=0\n    local -i\
  \ len15=0\n    local -i len16=0\n    local -i len17=0\n    local -i len18=0\n  \
  \  local -i len19=0\n    local -i len20=0\n    local -i len21=0\n    local -i len22=0\n\
  \    local -i len23=0\n    local -i len24=0\n    local -i len25=0\n    local -i\
  \ len26=0\n    local -i len27=0\n    local -i len28=0\n    local -i len29=0\n  \
  \  local -i len30=0\n    local -i len31=0\n    local -i len32=0\n    local -i len33=0\n\
  \    local -i len34=0\n    local -i len35=0\n    local -i len36=0\n    local -i\
  \ len37=0\n    local -i len38=0\n    local -i len39=0\n    local -i len40=0\n  \
  \  local -i len41=0\n    local -i len42=0"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        local\
  \ even=0\n        for (( j=0; j<${#i}; j++ )); do\n            if [[ ${i:$j:1} ==\
  \ [02468] ]]; then\n                even=1\n                break\n            fi\n\
  \        done\n        if [[ $even -eq 0 ]]; then\n            result=\"$result\
  \ $i\"\n        fi\n    done\n    echo \"$result\" | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i len=0\n    local -i num=0\n    local -i digit=0\n\
  \    local -i is_unique=1\n    local -i is_even=0\n    local -i is_odd=0\n    for\
  \ ((i=0; i<${#list[@]}; i++)); do\n        num=${list[$i]}\n        len=${#num}\n\
  \        is_unique=1\n        for ((j=0; j<len; j++)); do\n            digit=${num:$j:1}\n\
  \            is_even=$((digit % 2))\n            is_odd=$(((digit + 1) % 2))\n \
  \           if [ $is_even -eq 0 ]; then\n                is_unique=0\n         \
  \       break\n            fi\n        done\n        if [ $is_unique -eq 1 ]; then\n\
  \            result[$k]=$num\n            ((k++))\n        fi\n    done\n    echo\
  \ ${result[@]} | tr ' ' '\\n' | sort -n"
- "    local -a arr=(\"$@\")\n    local -a result=()\n    for i in \"${arr[@]}\";\
  \ do\n        if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n       \
  \ fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n"
- "    local -a arr=($1)\n    local -a res=()\n    for i in ${arr[@]}; do\n      \
  \  if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a result\n    local -a list=($1)\n    for i in ${list[@]}; do\n    \
  \    if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n   \
  \ done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a array=($1)\n    local -a result=()\n    for i in ${array[@]}; do\n\
  \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    # TODO: Write your code here\n    # Please use the following syntax to print\
  \ the result\n    # echo $RESULT"
- "    local nums=\"$1\"\n    local result=\"\"\n    for num in $nums; do\n      \
  \  if [[ $num =~ ^[13579]+$ ]]; then\n            result=\"$result $num\"\n    \
  \    fi\n    done\n    echo \"$result\" | tr ' ' '\\n' | sort -n"
- "    local digits=\"$1\"\n    local result=\"\"\n    for digit in $digits; do\n\
  \        if [[ $digit =~ ^[13579]+$ ]]; then\n            result=\"$result $digit\"\
  \n        fi\n    done\n    echo $result"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if\
  \ [[ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n\
  \    done\n    echo $result"
- "    local -a digits\n    local -a unique\n    local -a even\n    local -a odd\n\
  \    local -a result\n    local -i i\n    local -i j\n    local -i k\n    local\
  \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
  \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
  \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
  \ -i digit\n    local -i number\n    local -i even_digit\n    local -i odd_digit\n\
  \    local -i even_number\n    local -i odd_number\n    local -i even_count\n  \
  \  local -i odd_count\n    local -i count\n    local -i length\n    local -i index\n\
  \    local -i size\n    local -i flag\n    local -i flag2\n    local -i flag3\n\
  \    local -i flag4\n    local -i flag5\n    local -i flag6\n    local -i flag7\n\
  \    local -i flag8\n    local -i flag9\n    local -i flag10\n    local -i flag11\n\
  \    local -i flag12\n    local -i flag13\n    local -i flag14\n    local -i flag15\n\
  \    local -i flag16\n    local -i flag17\n    local -i flag18\n    local -i flag19\n\
  \    local -i flag20\n    local -i flag21\n    local -i flag22\n    local -i flag23\n\
  \    local -i flag24\n    local -i flag25\n    local -i flag26\n    local -i flag27\n\
  \    local -i flag28\n    local -i flag29\n    local -i flag30\n    local -i flag31\n\
  \    local -i flag32\n    local -i flag33\n    local -i flag34\n    local -i flag35\n\
  \    local -i flag36\n    local -i flag37\n    local -i flag38\n    local -i flag39\n\
  \    local -i flag40\n    local -i flag41\n    local -"
- "    local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
  \ ${y[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i len=${#list[@]}\n    local -i num=0\n    local -i digit=0\n\
  \    local -i even=0\n    local -i odd=0\n    local -i tmp=0\n    local -i tmp2=0\n\
  \    local -i tmp3=0\n    local -i tmp4=0\n    local -i tmp5=0\n    local -i tmp6=0\n\
  \    local -i tmp7=0\n    local -i tmp8=0\n    local -i tmp9=0\n    local -i tmp10=0\n\
  \    local -i tmp11=0\n    local -i tmp12=0\n    local -i tmp13=0\n    local -i\
  \ tmp14=0\n    local -i tmp15=0\n    local -i tmp16=0\n    local -i tmp17=0\n  \
  \  local -i tmp18=0\n    local -i tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n\
  \    local -i tmp22=0\n    local -i tmp23=0\n    local -i tmp24=0\n    local -i\
  \ tmp25=0\n    local -i tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n  \
  \  local -i tmp29=0\n    local -i tmp30=0\n    local -i tmp31=0\n    local -i tmp32=0\n\
  \    local -i tmp33=0\n    local -i tmp34=0\n    local -i tmp35=0\n    local -i\
  \ tmp36=0\n    local -i tmp37=0\n    local -i tmp38=0\n    local -i tmp39=0\n  \
  \  local -i tmp40=0\n    local -i tmp41=0\n    local -i tmp42=0\n    local -i tmp43=0\n\
  \    local -i tmp44=0\n    local -i tmp45=0\n    local -i tmp46=0\n    local -i\
  \ tmp47=0\n    local -i tmp48=0\n   "
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            echo\
  \ $i\n        fi\n    done | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    # your code here\n    echo $1 | tr ' ' '\\n' | grep -v -e '[02468]' | sort\
  \ -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a arr\n    local -a res\n    local i\n    local j\n    local k\n   \
  \ local flag\n    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        flag=1\n\
  \        for ((j=0; j<${#arr[$i]}; j++)); do\n            if [ $((arr[$i]%10)) -eq\
  \ 0 -o $((arr[$i]%10)) -eq 2 -o $((arr[$i]%10)) -eq 4 -o $((arr[$i]%10)) -eq 6 -o\
  \ $((arr[$i]%10)) -eq 8 ]; then\n                flag=0\n                break\n\
  \            fi\n            arr[$i]=$((arr[$i]/10))\n        done\n        if [\
  \ $flag -eq 1 ]; then\n            res[${#res[@]}]=${arr[$i]}\n        fi\n    done\n\
  \    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
  \        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=(\"$i\")\n        fi\n\
  \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a digits=($1)\n    local -a unique_digits=()\n    for digit in ${digits[@]};\
  \ do\n        if [[ ! $digit =~ [02468] ]]; then\n            unique_digits+=($digit)\n\
  \        fi\n    done\n    echo ${unique_digits[@]} | tr ' ' '\\n' | sort -n"
- "    # TODO: Implement this function\n    echo $1 | tr ' ' '\\n' | grep -v '.*[02468].*'\
  \ | sort -n"
- "    local -a arr\n    local -a res\n    local i\n    local j\n    local k\n   \
  \ local n\n    local -i flag\n    local -i is_even\n    local -i is_odd\n    local\
  \ -i is_unique\n    local -i is_zero\n    arr=($1)\n    for ((i=0; i<${#arr[@]};\
  \ i++)); do\n        n=${arr[$i]}\n        flag=0\n        for ((j=0; j<${#n}; j++));\
  \ do\n            is_even=$((n%2))\n            is_odd=$((n%2))\n            is_zero=$((n%10))\n\
  \            if [[ $is_even -eq 0 || $is_zero -eq 0 ]]; then\n                flag=1\n\
  \                break\n            fi\n            n=$((n/10))\n        done\n\
  \        if [[ $flag -eq 0 ]]; then\n            res+=(${arr[$i]})\n        fi\n\
  \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "    local -a nums=($1)\n    local -a result=()\n    local num\n    for num in ${nums[@]};\
  \ do\n        if [[ ! $num =~ [02468] ]]; then\n            result+=($num)\n   \
  \     fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n"
- "    # TODO: Write your code here\n    # Please use the following syntax to print\
  \ the result\n    # echo $RESULT\n    echo \"TODO\""
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "    local list=$1\n    local result=()\n    for i in $list; do\n        if [[ $i\
  \ =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n    echo\
  \ ${result[@]}"
- "    local -a arr=($1)\n    local -a res\n    for i in ${arr[@]}; do\n        if\
  \ [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n  \
  \  echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a arr\n    local -a res\n    local -a evens=(2 4 6 8 0)\n    local -a\
  \ odds=(1 3 5 7 9)\n    local -a digits\n    local -i i\n    local -i j\n    local\
  \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i p\n    local\
  \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
  \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
  \ -i num\n    local -i even\n    local -i odd\n    local -i digit\n    local -i\
  \ flag\n    local -i len\n    local -i len2\n    local -i len3\n    local -i len4\n\
  \    local -i len5\n    local -i len6\n    local -i len7\n    local -i len8\n  \
  \  local -i len9\n    local -i len10\n    local -i len11\n    local -i len12\n \
  \   local -i len13\n    local -i len14\n    local -i len15\n    local -i len16\n\
  \    local -i len17\n    local -i len18\n    local -i len19\n    local -i len20\n\
  \    local -i len21\n    local -i len22\n    local -i len23\n    local -i len24\n\
  \    local -i len25\n    local -i len26\n    local -i len27\n    local -i len28\n\
  \    local -i len29\n    local -i len30\n    local -i len31\n    local -i len32\n\
  \    local -i len33\n    local -i len34\n    local -i len35\n    local -i len36\n\
  \    local -i len37\n    local -i len38\n    local -i len39\n    local -i len40\n\
  \    local -i len41\n    local -i len42\n    local -i len43\n    local -i len44\n\
  \    local -i len45\n    local -i len46\n    local -i len47\n    local -i len48"
- "    # TODO: Write your code here\n    echo $1 | tr \" \" \"\\n\" | grep -v -E '[0-9]*[02468][0-9]*'\
  \ | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a arr\n    local -a res\n    local i\n    local j\n    local n\n   \
  \ local num\n    local digit\n    local is_unique\n    arr=($1)\n    for ((i=0;\
  \ i<${#arr[@]}; i++)); do\n        num=${arr[$i]}\n        is_unique=1\n       \
  \ for ((j=0; j<${#num}; j++)); do\n            digit=${num:$j:1}\n            if\
  \ [ $((digit % 2)) -eq 0 ]; then\n                is_unique=0\n                break\n\
  \            fi\n        done\n        if [ $is_unique -eq 1 ]; then\n         \
  \   res+=($num)\n        fi\n    done\n    echo ${res[@]} | tr ' ' '\\n' | sort\
  \ -n | tr '\\n' ' '"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i len=${#list[@]}\n    local -i is_unique=1\n    local -i digit=0\n\
  \    local -i number=0\n    local -i is_even=0\n    local -i is_zero=0\n    local\
  \ -i is_zero_even=0\n    local -i is_zero_odd=0\n    local -i is_zero_even_odd=0\n\
  \    local -i is_zero_even_odd_even=0\n    local -i is_zero_even_odd_odd=0\n   \
  \ local -i is_zero_even_odd_even_odd=0\n    local -i is_zero_even_odd_even_odd_even=0\n\
  \    local -i is_zero_even_odd_even_odd_odd=0\n    local -i is_zero_even_odd_even_odd_even_odd=0\n\
  \    local -i is_zero_even_odd_even_odd_even_odd_even=0\n    local -i is_zero_even_odd_even_odd_even_odd_odd=0\n\
  \    local -i is_zero_even_odd_even_odd_even_odd_even_odd=0\n    local -i is_zero_even_odd_even_odd_even_odd_even_odd_even=0\n\
  \    local -i is_zero_even_odd_even_odd_even_odd_even_odd_odd=0\n    local -i is_zero_even_odd_even_odd_even_odd_even_odd_even_odd=0\n\
  \    local -i is_zero_even_odd_even_odd_even_odd_even_odd_even_odd_even=0\n    local\
  \ -i is_zero_even_odd_even_odd_even_odd_even_odd_even_odd_odd=0\n    local -i is_zero_even_odd_even_odd_even_odd_even_odd_even_odd_even_odd=0\n\
  \    local -i is_zero_even_"
- "    local -a array=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i len=0\n    local -i digit=0\n    local -i\
  \ is_unique=1\n    local -i is_even=0\n    local -i num=0\n    local -i num_len=0\n\
  \    local -i num_len_div_10=0\n    local -i num_len_mod_10=0\n    local -i num_div_10=0\n\
  \    local -i num_mod_10=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        num=${array[$i]}\n\
  \        num_len=${#num}\n        num_len_div_10=$((num_len / 10))\n        num_len_mod_10=$((num_len\
  \ % 10))\n        is_unique=1\n        for ((j=0; j<num_len_div_10; j++)); do\n\
  \            num_div_10=$((num / 10))\n            num_mod_10=$((num % 10))\n  \
  \          num=$num_div_10\n            digit=$num_mod_10\n            if [ $((digit\
  \ % 2)) -eq 0 ]; then\n                is_unique=0\n                break\n    \
  \        fi\n        done\n        if [ $is_unique -eq 1 ]; then\n            for\
  \ ((k=0; k<num_len_mod_10; k++)); do\n                num_div_10=$((num / 10))\n\
  \                num_mod_10=$((num % 10))\n                num=$num_div_10\n   \
  \             digit=$num_mod_10\n                if [ $((digit % 2)) -eq 0 ]; then\n\
  \                    is_unique=0\n                    break\n                fi\n\
  \            done\n        fi\n        if [ $is_unique -eq 1 ]; then\n         \
  \   result[${#result[@]}]=${array[$i]}\n        fi\n    done\n    len=${#result[@]}\n\
  \    if [ $len -eq 0 ]; then\n        echo \"\"\n    else\n        for ((i=0;"
- "    local -a arr=($1)\n    local -a res=()\n    for i in ${arr[@]}; do\n      \
  \  if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local digits=\"$1\"\n    local result=\"\"\n    for digit in $digits; do\n\
  \        if [[ $digit =~ ^[13579]+$ ]]; then\n            result=\"$result $digit\"\
  \n        fi\n    done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a nums=($1)\n    local -a res=()\n    for num in ${nums[@]}; do\n  \
  \      if [[ ! $num =~ [02468] ]]; then\n            res+=($num)\n        fi\n \
  \   done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a list=$1\n    local -a result=()\n    for i in ${list[@]}; do\n   \
  \     if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n   \
  \ done\n    echo ${result[@]}"
- "    local x\n    local y\n    local z\n    local result\n    local i\n    local\
  \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
  \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
  \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
  \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
  \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
  \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
  \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
  \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
  \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
  \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
  \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b"
- "    for i in $1; do\n        if [[ $i =~ [02468] ]]; then\n            continue\n\
  \        else\n            echo $i\n        fi\n    done | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- '    echo $1 | tr '' '' ''\n'' | grep -v ''.*[02468].*'' | sort -n'
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i len=${#list[@]}\n    local -i len2=0\n    local -i num=0\n \
  \   local -i digit=0\n    local -i is_unique=1\n    local -i is_even=0\n    local\
  \ -i is_zero=0\n    local -i is_zero_found=0\n    local -i is_zero_even=0\n    local\
  \ -i is_zero_even_found=0\n    local -i is_zero_odd=0\n    local -i is_zero_odd_found=0\n\
  \    local -i is_zero_even_odd=0\n    local -i is_zero_even_odd_found=0\n    local\
  \ -i is_zero_even_odd_unique=0\n    local -i is_zero_even_odd_unique_found=0\n \
  \   local -i is_zero_even_unique=0\n    local -i is_zero_even_unique_found=0\n \
  \   local -i is_zero_odd_unique=0\n    local -i is_zero_odd_unique_found=0\n   \
  \ local -i is_zero_even_odd_unique=0\n    local -i is_zero_even_odd_unique_found=0\n\
  \    local -i is_zero_even_odd_unique_found=0\n    local -i is_zero_even_odd_unique_found=0\n\
  \    local -i is_zero_even_odd_unique_found=0\n    local -i is_zero_even_odd_unique_found=0\n\
  \    local -i is_zero_even_odd_unique_found=0\n    local -i is_zero_even_odd_unique_found=0\n\
  \    local -i is_zero_even_odd_unique_found=0\n    local -i is_zero_even_odd_unique_found=0\n\
  \    local -i is_zero_even_odd_unique_found=0\n    local -i is_zero_even_odd_unique_found=0\n\
  \    local -i is_zero"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a nums=($1)\n    local -a res=()\n    for num in ${nums[@]}; do\n  \
  \      if [[ $num =~ [02468] ]]; then\n            continue\n        fi\n      \
  \  res+=($num)\n    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local -a arr=(\"$@\")\n    local -a result=()\n    local -i i=0\n    local\
  \ -i j=0\n    local -i k=0\n    local -i len=0\n    local -i flag=0\n    local -i\
  \ temp=0\n    local -i temp2=0\n    local -i temp3=0\n    local -i temp4=0\n   \
  \ local -i temp5=0\n    local -i temp6=0\n    local -i temp7=0\n    local -i temp8=0\n\
  \    local -i temp9=0\n    local -i temp10=0\n    local -i temp11=0\n    local -i\
  \ temp12=0\n    local -i temp13=0\n    local -i temp14=0\n    local -i temp15=0\n\
  \    local -i temp16=0\n    local -i temp17=0\n    local -i temp18=0\n    local\
  \ -i temp19=0\n    local -i temp20=0\n    local -i temp21=0\n    local -i temp22=0\n\
  \    local -i temp23=0\n    local -i temp24=0\n    local -i temp25=0\n    local\
  \ -i temp26=0\n    local -i temp27=0\n    local -i temp28=0\n    local -i temp29=0\n\
  \    local -i temp30=0\n    local -i temp31=0\n    local -i temp32=0\n    local\
  \ -i temp33=0\n    local -i temp34=0\n    local -i temp35=0\n    local -i temp36=0\n\
  \    local -i temp37=0\n    local -i temp38=0\n    local -i temp39=0\n    local\
  \ -i temp40=0\n    local -i temp41=0\n    local -i temp42=0\n    local -i temp43=0\n\
  \    local -i temp44=0\n    local -i temp45=0\n    local -i temp46=0\n    local\
  \ -i temp47=0\n    local -i temp48=0\n    local -i temp49=0\n    local -i temp50=0\n\
  \    local -"
- "    local -a arr=($1)\n    local -a res=()\n    for i in ${arr[@]}; do\n      \
  \  if [[ \"$i\" =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]} | tr ' ' '\\n' | sort -n"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if\
  \ [[ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n\
  \    done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    for i in $1; do\n        if [[ $i =~ [02468] ]]; then\n            continue\n\
  \        else\n            echo $i\n        fi\n    done | sort -n"
- "    local x\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n   \
  \         echo $x\n        fi\n    done | sort -n"
- '    echo $1 | tr '' '' ''\n'' | grep -v ''.*[02468].*'' | sort -n'
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ [02468] ]]; then\n            continue\n        fi\n        result=\"$result\
  \ $i\"\n    done\n    echo $result | tr ' ' '\\n' | sort -n"
- "    local -a arr=($1)\n    local -a res=()\n    local -a even=(0 2 4 6 8)\n   \
  \ local -a odd=(1 3 5 7 9)\n    local -a digits=()\n    local -a unique=()\n   \
  \ local -a unique_digits=()\n    local -a unique_numbers=()\n    local -a unique_numbers_digits=()\n\
  \    local -a unique_numbers_digits_unique=()\n    local -a unique_numbers_digits_unique_even=()\n\
  \    local -a unique_numbers_digits_unique_odd=()\n    local -a unique_numbers_digits_unique_even_digits=()\n\
  \    local -a unique_numbers_digits_unique_odd_digits=()\n    local -a unique_numbers_digits_unique_even_digits_unique=()\n\
  \    local -a unique_numbers_digits_unique_odd_digits_unique=()\n    local -a unique_numbers_digits_unique_even_digits_unique_even=()\n\
  \    local -a unique_numbers_digits_unique_odd_digits_unique_odd=()\n    local -a\
  \ unique_numbers_digits_unique_even_digits_unique_even_digits=()\n    local -a unique_numbers_digits_unique_odd_digits_unique_odd_digits=()\n\
  \    local -a unique_numbers_digits_unique_even_digits_unique_even_digits_unique=()\n\
  \    local -a unique_numbers_digits_unique_odd_digits_unique_odd_digits_unique=()\n\
  \    local -a unique_numbers_digits_unique_even_digits_unique_even_digits_unique_even=()\n\
  \    local -a unique_numbers_digits_unique_odd_digits_unique_odd_digits_unique_odd=()\n\
  \    local -a unique_numbers_digits_unique_even_digits_unique_even_digits_unique_even_digits=()\n\
  \    local -a unique_numbers_dig"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
  \ ${y[@]} | tr ' ' '\\n' | sort -n"
- "    local -a digits\n    local -a result\n    local -i i\n    local -i j\n    local\
  \ -i k\n    local -i n\n    local -i m\n    local -i is_even\n    local -i is_unique\n\
  \    local -i is_zero\n    local -i is_zero_even\n    local -i is_zero_odd\n   \
  \ local -i is_zero_unique\n    local -i is_zero_even_unique\n    local -i is_zero_odd_unique\n\
  \    local -i is_zero_even_unique_odd\n    local -i is_zero_even_unique_even\n \
  \   local -i is_zero_odd_unique_odd\n    local -i is_zero_odd_unique_even\n    local\
  \ -i is_zero_even_unique_odd_even\n    local -i is_zero_even_unique_odd_odd\n  \
  \  local -i is_zero_even_unique_even_even\n    local -i is_zero_even_unique_even_odd\n\
  \    local -i is_zero_odd_unique_odd_even\n    local -i is_zero_odd_unique_odd_odd\n\
  \    local -i is_zero_odd_unique_even_even\n    local -i is_zero_odd_unique_even_odd\n\
  \    local -i is_zero_even_unique_odd_even_even\n    local -i is_zero_even_unique_odd_even_odd\n\
  \    local -i is_zero_even_unique_odd_odd_even\n    local -i is_zero_even_unique_odd_odd_odd\n\
  \    local -i is_zero_even_unique_even_even_even\n    local -i is_zero_even_unique_even_even_odd\n\
  \    local -i is_zero_even_unique_even_odd_even\n    local -i is_zero_even_unique_even_odd_odd\n\
  \    local -i is_zero_odd_unique_odd_even_even\n    local -i is_zero_odd_unique_odd_even_odd\n\
  \    local -i is_zero_odd_unique_odd_odd_even\n    local -i is_zero_odd"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a digits=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i p=0\n\
  \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
  \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
  \    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
  \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
  \    local -i l=0\n    local -i o=0\n    local -i digit=0\n    local -i length=0\n\
  \    local -i number=0\n    local -i even=0\n    local -i odd=0\n    local -i sum=0\n\
  \    local -i sum_even=0\n    local -i sum_odd=0\n    local -i sum_even_odd=0\n\
  \    local -i sum_odd_even=0\n    local -i sum_even_even=0\n    local -i sum_odd_odd=0\n\
  \    local -i sum_even_odd_even=0\n    local -i sum_odd_even_odd=0\n    local -i\
  \ sum_even_even_even=0\n    local -i sum_odd_odd_odd=0\n    local -i sum_even_odd_even_even=0\n\
  \    local -i sum_odd_even_odd_odd=0\n    local -i sum_even_even_even_even=0\n \
  \   local -i sum_odd_odd_odd_odd=0\n    local -i sum_even_odd_even_odd_even=0\n\
  \    local -i sum_odd_even_odd_even_odd=0\n    local -i sum_even_even_even_odd"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a a=($1)\n    local -a b=()\n    local i\n    for i in ${a[@]}; do\n\
  \        if [[ $i =~ ^[13579]+$ ]]; then\n            b+=($i)\n        fi\n    done\n\
  \    echo ${b[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local list=\"$1\"\n    local result=\"\"\n    for num in $list; do\n      \
  \  if [[ ! \"$num\" =~ [24680] ]]; then\n            result=\"$result $num\"\n \
  \       fi\n    done\n    echo $result"
- "    local -a list\n    local -a result\n    local item\n    local digit\n    local\
  \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
  \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
  \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
  \ -i x\n    local -i y\n    local -i z\n    list=($1)\n    for item in \"${list[@]}\"\
  ; do\n        i=0\n        j=0\n        k=0\n        l=0\n        m=0\n        n=0\n\
  \        o=0\n        p=0\n        q=0\n        r=0\n        s=0\n        t=0\n\
  \        u=0\n        v=0\n        w=0\n        x=0\n        y=0\n        z=0\n\
  \        for digit in $(echo \"$item\" | grep -o .); do\n            case \"$digit\"\
  \ in\n                0) i=1;;\n                1) j=1;;\n                2) k=1;;\n\
  \                3) l=1;;\n                4) m=1;;\n                5) n=1;;\n\
  \                6) o=1;;\n                7) p=1;;\n                8) q=1;;\n\
  \                9) r=1;;\n                a) s=1;;\n                b) t=1;;\n\
  \                c) u=1;;\n                d) v=1;;\n                e) w=1;;\n\
  \                f) x=1;;\n                g) y=1;;\n                h) z=1;;\n\
  \            esac\n        done\n        if [ $((i+j+k+l+m+n+o+p+q+r+s+t+u+v+w+x+y+z))\
  \ -eq 1 ]; then\n            result+=(\"$item\")\n        fi\n    done\n    echo\
  \ \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '"
- "    for i in $1; do\n        if [[ $i =~ [02468] ]]; then\n            continue\n\
  \        else\n            echo -n \"$i \"\n        fi\n    done"
- "    local x\n    local y\n    local z\n    local result\n    for x in $1; do\n\
  \        y=$(echo $x | sed 's/[02468]//g')\n        if [ \"$y\" = \"$x\" ]; then\n\
  \            result=\"$result $x\"\n        fi\n    done\n    echo $result | sed\
  \ 's/^ *//' | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n    \
  \    if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]}"
- "    local list=\"$1\"\n    local digits\n    local result=()\n    for i in $list;\
  \ do\n        digits=$(echo $i | sed 's/\\(.\\)/\\1 /g')\n        for j in $digits;\
  \ do\n            if [ $((j % 2)) -eq 0 ]; then\n                break\n       \
  \     fi\n        done\n        if [ $j -eq $i ]; then\n            result+=($i)\n\
  \        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if\
  \ [[ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n\
  \    done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    local i=0\n    local j=0\n\
  \    local num=0\n    local digit=0\n    local even=0\n    local len=${#list[@]}\n\
  \    for ((i=0; i<len; i++)); do\n        num=${list[i]}\n        even=0\n     \
  \   for ((j=0; j<${#num}; j++)); do\n            digit=${num:$j:1}\n           \
  \ if [[ $((digit % 2)) -eq 0 ]]; then\n                even=1\n                break\n\
  \            fi\n        done\n        if [[ $even -eq 0 ]]; then\n            result+=($num)\n\
  \        fi\n    done\n    echo ${result[@]}"
- "    local digits=$1\n    local result=\"\"\n    for digit in $digits; do\n    \
  \    if [[ $digit =~ ^[13579]+$ ]]; then\n            result=\"$result $digit\"\n\
  \        fi\n    done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            echo\
  \ -n \"$i \"\n        fi\n    done"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
  \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
  \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
  \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
  \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
  \    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local\
  \ -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
  \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n\
  \    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n  \
  \  local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local\
  \ -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
  \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
  \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
  \    local -i ooo="
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "  local list=$1\n  local result=\"\"\n  for i in $list; do\n    if [[ $i =~ ^[13579]+$\
  \ ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a arr\n    local -a res\n    local -a even_digits\n    local -a odd_digits\n\
  \    local -a unique_digits\n    local -a unique_odd_digits\n    local -a unique_even_digits\n\
  \    local -a unique_odd_digits_sorted\n    local -a unique_even_digits_sorted\n\
  \    local -a unique_digits_sorted\n    local -a unique_digits_sorted_final\n  \
  \  local -a unique_digits_sorted_final_final\n    local -a unique_digits_sorted_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final\n    local -a unique_digits_sorted_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final\n    local\
  \ -a unique_digits_sorted_final_final_final_final_final_final_final\n    local -a\
  \ unique_digits_sorted_final_final_final_final_final_final_final_final\n    local\
  \ -a unique_digits_sorted_final_final_final_final_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final_final_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
  \    local -a unique_digits_sorted_final_final_final_final_final_final_final_final_final_final_"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       local -a digits=($(echo $i | sed 's/./& /g'))\n        local -a even_digits=($(echo\
  \ ${digits[@]} | sed 's/[13579]//g'))\n        if [ ${#even_digits[@]} -eq 0 ];\
  \ then\n            result+=($i)\n        fi\n    done\n    echo ${result[@]} |\
  \ sed 's/ /\\n/g' | sort -n"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    local -a evens=(2 4 6 8 0)\n\
  \    local -a odds=(1 3 5 7 9)\n    local -a digits=()\n    local -a tmp=()\n  \
  \  local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
  \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
  \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
  \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
  \    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local\
  \ -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i is_even=0\n\
  \    local -i is_odd=0\n    local -i is_unique=0\n    local -i is_zero=0\n    local\
  \ -i is_one=0\n    local -i is_two=0\n    local -i is_three=0\n    local -i is_four=0\n\
  \    local -i is_five=0\n    local -i is_six=0\n    local -i is_seven=0\n    local\
  \ -i is_eight=0\n    local -i is_nine=0\n    local -i is_ten=0\n    local -i is_eleven=0\n\
  \    local -i is_twelve=0\n    local -i is_thirteen=0\n    local -i is_fourteen=0\n\
  \    local -i is_fifteen=0\n    local -i is_sixteen=0\n    local -i is_seventeen=0\n\
  \    local -i is_eighteen=0\n    local -i is_nineteen=0\n   "
- "    local -a digits=($1)\n    local -a result=()\n    for i in ${digits[@]}; do\n\
  \        if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i\
  \ j=0\n    local -i len=${#list[@]}\n    local -i is_unique=1\n    local -i digit=0\n\
  \    local -i num=0\n    local -i num_len=0\n    local -i num_len_i=0\n    local\
  \ -i num_len_j=0\n    local -i num_len_k=0\n    local -i num_len_l=0\n    local\
  \ -i num_len_m=0\n    local -i num_len_n=0\n    local -i num_len_o=0\n    local\
  \ -i num_len_p=0\n    local -i num_len_q=0\n    local -i num_len_r=0\n    local\
  \ -i num_len_s=0\n    local -i num_len_t=0\n    local -i num_len_u=0\n    local\
  \ -i num_len_v=0\n    local -i num_len_w=0\n    local -i num_len_x=0\n    local\
  \ -i num_len_y=0\n    local -i num_len_z=0\n    local -i num_len_0=0\n    local\
  \ -i num_len_1=0\n    local -i num_len_2=0\n    local -i num_len_3=0\n    local\
  \ -i num_len_4=0\n    local -i num_len_5=0\n    local -i num_len_6=0\n    local\
  \ -i num_len_7=0\n    local -i num_len_8=0\n    local -i num_len_9=0\n    local\
  \ -i num_len_a=0\n    local -i num_len_b=0\n    local -i num_len_c=0\n    local\
  \ -i num_len_d=0\n    local -i num_len_e=0\n    local -i num_len_f=0\n    local\
  \ -i num_len_g=0\n    local -i num_len_"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if\
  \ [[ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n\
  \    done\n    echo $result"
- "    local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n    \
  \    if [[ ! $i =~ [24680] ]]; then\n            res+=($i)\n        fi\n    done\n\
  \    echo ${res[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if\
  \ [[ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n\
  \    done\n    echo $result"
- "    local -a digits\n    local -a result\n    local i\n    local j\n    local k\n\
  \    local n\n    local m\n    local d\n    local is_even\n    local is_unique\n\
  \    local -i is_even_digit\n    local -i is_unique_digit\n    local -i is_unique_number\n\
  \    local -i is_even_number\n    local -i is_even_number_digit\n    local -i is_unique_number_digit\n\
  \    local -i is_even_number_digit_found\n    local -i is_unique_number_digit_found\n\
  \    local -i is_even_number_found\n    local -i is_unique_number_found\n    local\
  \ -i is_even_number_digit_found_in_number\n    local -i is_unique_number_digit_found_in_number\n\
  \    local -i is_even_number_found_in_number\n    local -i is_unique_number_found_in_number\n\
  \    local -i is_even_number_digit_found_in_number_digit\n    local -i is_unique_number_digit_found_in_number_digit\n\
  \    local -i is_even_number_found_in_number_digit\n    local -i is_unique_number_found_in_number_digit\n\
  \    local -i is_even_number_digit_found_in_number_digit_found\n    local -i is_unique_number_digit_found_in_number_digit_found\n\
  \    local -i is_even_number_found_in_number_digit_found\n    local -i is_unique_number_found_in_number_digit_found\n\
  \    local -i is_even_number_digit_found_in_number_digit_found_in_number\n    local\
  \ -i is_unique_number_digit_found_in_number_digit_found_in_number\n    local -i\
  \ is_even_number_found_in_number_digit_found_in_number\n    local -i is_unique_number_found_in_number_digit_found_in_number\n\
  \    local -i is_even_number_digit_found_in_number_digit"
- "    # TODO: Write your code here\n    echo \"Not implemented\""
- "    # TODO: Write your code here\n    echo \"Not implemented\""
- "    local -a nums=($1)\n    local -a result\n    local num\n    for num in ${nums[@]};\
  \ do\n        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=($num)\n  \
  \      fi\n    done\n    echo ${result[@]}"
- "    local -a digits\n    local -a result\n    local -i i\n    local -i j\n    local\
  \ -i k\n    local -i n\n    local -i x\n    local -i y\n    local -i z\n    local\
  \ -i even\n    local -i odd\n    local -i digit\n\n    digits=($1)\n    for ((i=0;\
  \ i<${#digits[@]}; i++)); do\n        x=${digits[i]}\n        even=0\n        odd=0\n\
  \        while ((x>0)); do\n            digit=$((x%10))\n            if ((digit%2==0));\
  \ then\n                even=1\n            else\n                odd=1\n      \
  \      fi\n            x=$((x/10))\n        done\n        if ((even==0 && odd==1));\
  \ then\n            result[${#result[@]}]=${digits[i]}\n        fi\n    done\n \
  \   for ((i=0; i<${#result[@]}; i++)); do\n        for ((j=i+1; j<${#result[@]};\
  \ j++)); do\n            if ((${result[i]}>${result[j]})); then\n              \
  \  x=${result[i]}\n                result[i]=${result[j]}\n                result[j]=$x\n\
  \            fi\n        done\n    done\n    echo \"${result[@]}\""
- "    for i in $1; do\n        if [[ $i =~ [02468] ]]; then\n            continue\n\
  \        else\n            echo -n \"$i \"\n        fi\n    done"
- "  local -a list\n  local -a result\n  local -i i\n  local -i j\n  local -i k\n\
  \  local -i n\n  local -i m\n  local -i digit\n  local -i even\n  local -i odd\n\
  \  local -i is_even\n  local -i is_odd\n  local -i is_unique\n  local -i is_unique_digit\n\
  \  local -i is_unique_even\n  local -i is_unique_odd\n  local -i is_unique_even_digit\n\
  \  local -i is_unique_odd_digit\n  local -i is_unique_even_digit_count\n  local\
  \ -i is_unique_odd_digit_count\n  local -i is_unique_even_digit_count_max\n  local\
  \ -i is_unique_odd_digit_count_max\n  local -i is_unique_even_digit_count_max_index\n\
  \  local -i is_unique_odd_digit_count_max_index\n  local -i is_unique_even_digit_count_max_index_value\n\
  \  local -i is_unique_odd_digit_count_max_index_value\n  local -i is_unique_even_digit_count_max_index_value_digit\n\
  \  local -i is_unique_odd_digit_count_max_index_value_digit\n  local -i is_unique_even_digit_count_max_index_value_digit_even\n\
  \  local -i is_unique_odd_digit_count_max_index_value_digit_odd\n  local -i is_unique_even_digit_count_max_index_value_digit_even_count\n\
  \  local -i is_unique_odd_digit_count_max_index_value_digit_odd_count\n  local -i\
  \ is_unique_even_digit_count_max_index_value_digit_even_count_max\n  local -i is_unique_odd_digit_count_max_index_value_digit_odd_count_max\n\
  \  local -i is_unique_even_digit_count_max_index_value_digit_even_count_max_index\n\
  \  local -i is_unique"
- "    # TODO: Implement this function\n    echo $1 | tr ' ' '\\n' | grep -v -E '[02468]'\
  \ | sort -n"
- "    local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
  \        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=(\"$i\")\n        fi\n\
  \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n \
  \   done\n    echo ${result[@]}"
- "    local -a list=($1)\n    local -a result=()\n    for i in ${list[@]}; do\n \
  \       if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
  \    done\n    echo ${result[@]}"
- "    local -a x=($1)\n    local -a y=()\n    local i=0\n    local j=0\n    local\
  \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
  \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n   \
  \ local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local\
  \ a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n\
  \    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n   \
  \ local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local\
  \ q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n\
  \    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
  \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
  \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
  \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n   \
  \ local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local\
  \ w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n\
  \    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
  \ local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n   "
- "    local -a arr=($1)\n    local -a result=()\n    for i in ${arr[@]}; do\n   \
  \     if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n   \
  \ done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n"
- "    local -a a=($1)\n    local -a b=()\n    for i in ${a[@]}; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            b+=($i)\n        fi\n    done\n    echo\
  \ ${b[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '"
- "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
  \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n   \
  \ done\n    echo $result"
- '    echo $1 | tr '' '' ''\n'' | grep -v ''.*[02468].*'' | sort -n'
- "    local -a list=($1)\n    local -a result=()\n    local i=0\n    local j=0\n\
  \    local num=0\n    local digit=0\n    local is_unique=true\n    for ((i=0; i<${#list[@]};\
  \ i++)); do\n        num=${list[$i]}\n        is_unique=true\n        for ((j=0;\
  \ j<${#num}; j++)); do\n            digit=${num:$j:1}\n            if [ $((digit\
  \ % 2)) -eq 0 ]; then\n                is_unique=false\n                break\n\
  \            fi\n        done\n        if $is_unique; then\n            result+=($num)\n\
  \        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n'\
  \ ' '"
language: sh
name: HumanEval_104_unique_digits
prompt: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
  \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
  \ be sorted in increasing order.\n# For example:\n# >>> unique_digits([15, 33, 1422,\
  \ 1])\n# [1, 15, 33]\n# >>> unique_digits([152, 323, 1422, 10])\n# []\n#\n# $1 is\
  \ a space-separated list\nunique_digits() {\n"
stop_tokens:
- '

  }'
tests: "}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
  \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
  \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"

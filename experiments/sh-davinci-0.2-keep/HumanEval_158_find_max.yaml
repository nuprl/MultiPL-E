completions:
- "    local max_word=\"\"\n    local max_chars=0\n    for word in $1; do\n      \
  \  local chars=`echo $word | grep -o . | sort | uniq | wc -l`\n        if [ $chars\
  \ -gt $max_chars ]; then\n            max_chars=$chars\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo \"$word\" | fold -w1 | sort\
  \ | uniq | wc -l)\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [[ $len -gt\
  \ $max_len ]]; then\n            max_len=$len\n            max_word=$word\n    \
  \    fi\n    done\n    echo $max_word"
- "  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n"
- "    max_len=0\n    max_word=\"\"\n    for word in $1; do\n        len=$(echo $word\
  \ | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len ]; then\n \
  \           max_len=$len\n            max_word=$word\n        fi\n    done\n   \
  \ echo $max_word"
- "    # TODO: implement this function\n    # Hint: use the following command to sort\
  \ the list\n    # sort -u\n    # Hint: use the following command to get the length\
  \ of a string\n    # ${#string}\n    # Hint: use the following command to get the\
  \ first character of a string\n    # ${string:0:1}\n    # Hint: use the following\
  \ command to get the rest of the string\n    # ${string:1}\n    # Hint: use the\
  \ following command to get the last character of a string\n    # ${string: -1}\n\
  \    # Hint: use the following command to get the rest of the string\n    # ${string:0:-1}\n\
  \    # Hint: use the following command to get the length of the longest string\n\
  \    # wc -L\n    # Hint: use the following command to get the length of the shortest\
  \ string\n    # wc -m\n    # Hint: use the following command to get the length of\
  \ the shortest string\n    # wc -m\n    # Hint: use the following command to get\
  \ the length of the shortest string\n    # wc -m\n    # Hint: use the following\
  \ command to get the length of the shortest string\n    # wc -m\n    # Hint: use\
  \ the following command to get the length of the shortest string\n    # wc -m\n\
  \    # Hint: use the following command to get the length of the shortest string\n\
  \    # wc -m\n    # Hint: use the following command to get the length of the shortest\
  \ string\n    # wc -m\n    # Hint: use the following command to get the length of\
  \ the shortest string\n    # wc -m\n    # Hint: use the following command to get\
  \ the length of the shortest string\n    # wc -m\n    # Hint: use the following\
  \ command to get the length of the shortest string\n    # wc -m\n    # Hint: use\
  \ the following command to get the length of the shortest string\n    # wc -m\n\
  \    # Hint: use the following command to get the length of the shortest string\n\
  \    # wc -m\n    # Hint: use the following command to get the length of the shortest\
  \ string\n    # wc -m\n   "
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [[ $count -gt $max_count ]];\
  \ then\n      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    # your code here\n    max_word=\"\"\n    max_count=0\n    for word in $1; do\n\
  \        count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_count=0\n    local max_word=\"\"\n    for word in $1; do\n      \
  \  local count=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [\
  \ $count -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  local max_word=\"\"\n  local max_unique_chars=0\n  local word=\"\"\n  local unique_chars=0\n\
  \  for word in $1; do\n    unique_chars=$(echo $word | grep -o . | sort | uniq |\
  \ wc -l)\n    if [ $unique_chars -gt $max_unique_chars ]; then\n      max_unique_chars=$unique_chars\n\
  \      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo \"$word\" | grep -o . |\
  \ sort | uniq | wc -l)\n        if [[ $count -gt $max_count ]]; then\n         \
  \   max_count=$count\n            max_word=$word\n        fi\n    done\n    echo\
  \ $max_word"
- "    local max_count=0\n    local max_word=\"\"\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[\
  \ $count -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt\
  \ $max_len ]; then\n            max_len=$len\n            max_word=$word\n     \
  \   fi\n    done\n    echo $max_word"
- "    # TODO: Write your code here\n    local max_word=\"\"\n    local max_count=0\n\
  \    for word in $1; do\n        local count=0\n        for (( i=0; i<${#word};\
  \ i++ )); do\n            local char=${word:$i:1}\n            if [[ ! $word =~\
  \ $char ]]; then\n                count=$((count+1))\n            fi\n        done\n\
  \        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n  \
  \          max_word=$word\n        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    # TODO: implement this function\n    local max_word=\"\"\n    local max_count=0\n\
  \    local count=0\n    for word in $1; do\n        count=`echo $word | grep -o\
  \ . | sort | uniq | wc -l`\n        if [ $count -gt $max_count ]; then\n       \
  \     max_count=$count\n            max_word=$word\n        fi\n    done\n    echo\
  \ $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [ $count -gt $max_count ]; then\n\
  \      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [ $count -gt $max_count ]; then\n\
  \      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_chars=0\n    for word in $1; do\n      \
  \  local chars=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $chars\
  \ -gt $max_chars ]]; then\n            max_chars=$chars\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=$(echo $word | fold -w1 | sort -u | wc -l)\n        if [[ $len -gt $max_len\
  \ ]]; then\n            max_len=$len\n            max_word=$word\n        fi\n \
  \   done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [[ $len -gt\
  \ $max_len ]]; then\n            max_len=$len\n            max_word=$word\n    \
  \    fi\n    done\n    echo $max_word"
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count -gt $max_count\
  \ ]]; then\n            max_count=$count\n            max_word=$word\n        fi\n\
  \    done\n    echo $max_word"
- "    max_len=0\n    max_word=\"\"\n    for word in $1; do\n        len=`echo $word\
  \ | tr -cd 'a-z' | wc -c`\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    local word=\"\"\n    local len=0\n\
  \    for word in $1; do\n        len=`echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort\
  \ | uniq | wc -l`\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  local word_count=0\n  for word in\
  \ $1; do\n    word_count=$(echo $word | grep -o . | sort | uniq | wc -l)\n    if\
  \ [ $word_count -gt $max_count ]; then\n      max_count=$word_count\n      max_word=$word\n\
  \    fi\n  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local count=0\n    local word=\"\
  \"\n    for word in $1; do\n        count=$(echo $word | grep -o . | sort | uniq\
  \ | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_str=\"\"\n    for str in $1; do\n        local\
  \ len=$(echo $str | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n        if [ $len\
  \ -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n   \
  \     fi\n    done\n    echo $max_str"
- "    local max_count=0\n    local max_word=\"\"\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  # Write your code here\n  local max_word=\"\"\n  local max_count=0\n  for word\
  \ in $1; do\n    local count=0\n    for ((i=0; i<${#word}; i++)); do\n      local\
  \ c=${word:$i:1}\n      if [[ \"${word:0:$i}\" != *\"$c\"* ]]; then\n        ((count++))\n\
  \      fi\n    done\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n\
  \      max_word=$word\n    fi\n  done\n  echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ $word | tr -d -c '\\n' | sort | uniq | wc -l)\n    if [[ $count -gt $max_count\
  \ ]]; then\n      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo\
  \ $max_word"
- "  # your code here\n  # echo \"$1\"\n  # echo \"$1\" | tr ' ' '\\n'\n  # echo \"\
  $1\" | tr ' ' '\\n' | sort\n  # echo \"$1\" | tr ' ' '\\n' | sort | uniq\n  # echo\
  \ \"$1\" | tr ' ' '\\n' | sort | uniq -c\n  # echo \"$1\" | tr ' ' '\\n' | sort\
  \ | uniq -c | sort -n\n  # echo \"$1\" | tr ' ' '\\n' | sort | uniq -c | sort -n\
  \ | tail -1\n  # echo \"$1\" | tr ' ' '\\n' | sort | uniq -c | sort -n | tail -1\
  \ | awk '{print $2}'\n  # echo \"$1\" | tr ' ' '\\n' | sort | uniq -c | sort -n\
  \ | tail -1 | awk '{print $2}' | sort\n  # echo \"$1\" | tr ' ' '\\n' | sort | uniq\
  \ -c | sort -n | tail -1 | awk '{print $2}' | sort | head -1\n  echo \"$1\" | tr\
  \ ' ' '\\n' | sort | uniq -c | sort -n | tail -1 | awk '{print $2}' | sort | head\
  \ -1"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo $word | grep -o . | sort\
  \ | uniq | wc -l)\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local count=0\n    local word=\"\
  \"\n    for word in $1; do\n        count=$(echo $word | grep -o . | sort | uniq\
  \ | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    # TODO: Write your code here\n    local max_len=0\n    local max_str=\"\"\n\
  \    for word in $1; do\n        local len=`echo $word | grep -o . | sort | uniq\
  \ | wc -l`\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n \
  \           max_str=$word\n        fi\n    done\n    echo $max_str"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=${#word}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_chars=0\n    for word in $1; do\n      \
  \  local chars=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[\
  \ $chars -gt $max_chars ]]; then\n            max_chars=$chars\n            max_word=$word\n\
  \        fi\n    done\n    echo \"$max_word\""
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt\
  \ $max_len ]; then\n            max_len=$len\n            max_word=$word\n     \
  \   fi\n    done\n    echo $max_word"
- "    # your code here\n    # use echo to print result\n    echo \"string\""
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: implement this function\n    # Hint: use `sort` and `uniq`\n    # Hint:\
  \ use `tr` to remove spaces\n    # Hint: use `echo` to print the result\n    # Hint:\
  \ use `wc` to count the number of lines\n    # Hint: use `cut` to get the first\
  \ field\n    # Hint: use `head` to get the first line\n    # Hint: use `sort` to\
  \ sort the list\n    # Hint: use `tr` to remove spaces\n    # Hint: use `echo` to\
  \ print the result\n    # Hint: use `wc` to count the number of lines\n    # Hint:\
  \ use `cut` to get the first field\n    # Hint: use `head` to get the first line\n\
  \    # Hint: use `sort` to sort the list\n    # Hint: use `tr` to remove spaces\n\
  \    # Hint: use `echo` to print the result\n    # Hint: use `wc` to count the number\
  \ of lines\n    # Hint: use `cut` to get the first field\n    # Hint: use `head`\
  \ to get the first line\n    # Hint: use `sort` to sort the list\n    # Hint: use\
  \ `tr` to remove spaces\n    # Hint: use `echo` to print the result\n    # Hint:\
  \ use `wc` to count the number of lines\n    # Hint: use `cut` to get the first\
  \ field\n    # Hint: use `head` to get the first line\n    # Hint: use `sort` to\
  \ sort the list\n    # Hint: use `tr` to remove spaces\n    # Hint: use `echo` to\
  \ print the result\n    # Hint: use `wc` to count the number of lines\n    # Hint:\
  \ use `cut` to get the first field\n    # Hint: use `head` to get the first line\n\
  \    # Hint: use `sort` to sort the list\n    # Hint: use `tr` to remove spaces\n\
  \    # Hint: use `echo` to print the result\n    # Hint: use `wc` to count the number\
  \ of lines\n    # H"
- "  # Write your code here\n  max_word=\"\"\n  max_count=0\n  for word in $1; do\n\
  \    count=0\n    for ((i=0; i<${#word}; i++)); do\n      if [[ $word =~ ${word:$i:1}\
  \ ]]; then\n        count=$((count+1))\n      fi\n    done\n    if [[ $count -gt\
  \ $max_count ]]; then\n      max_count=$count\n      max_word=$word\n    fi\n  done\n\
  \  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [\
  \ $count -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  local word=\"\"\n  local count=0\n\
  \  for word in $1; do\n    count=$(echo \"$word\" | grep -o . | sort | uniq | wc\
  \ -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_word=$word\n\
  \    fi\n  done\n  echo $max_word"
- "  # TODO: Write your code here\n  max_count=0\n  max_word=\"\"\n  for word in $1;\
  \ do\n    count=0\n    for ((i=0; i<${#word}; i++)); do\n      char=${word:$i:1}\n\
  \      if [[ $word =~ $char ]]; then\n        count=$((count+1))\n      fi\n   \
  \ done\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n     \
  \ max_word=$word\n    fi\n  done\n  echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ \"$word\" | grep -o . | sort | uniq | wc -l)\n    if [[ $count -gt $max_count\
  \ ]]; then\n      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo\
  \ \"$max_word\""
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: implement this function\n    # Hint: use tr to remove duplicates\n\
  \    # Hint: use sort to sort the list\n    # Hint: use wc to count the number of\
  \ unique characters\n    # Hint: use sort to sort the list\n    # Hint: use head\
  \ to get the first element\n    # Hint: use cut to get the first column\n    # Hint:\
  \ use cut to get the first word\n    # Hint: use cut to get the first field\n  \
  \  # Hint: use cut to get the first field\n    # Hint: use cut to get the first\
  \ field\n    # Hint: use cut to get the first field\n    # Hint: use cut to get\
  \ the first field\n    # Hint: use cut to get the first field\n    # Hint: use cut\
  \ to get the first field\n    # Hint: use cut to get the first field\n    # Hint:\
  \ use cut to get the first field\n    # Hint: use cut to get the first field\n \
  \   # Hint: use cut to get the first field\n    # Hint: use cut to get the first\
  \ field\n    # Hint: use cut to get the first field\n    # Hint: use cut to get\
  \ the first field\n    # Hint: use cut to get the first field\n    # Hint: use cut\
  \ to get the first field\n    # Hint: use cut to get the first field\n    # Hint:\
  \ use cut to get the first field\n    # Hint: use cut to get the first field\n \
  \   # Hint: use cut to get the first field\n    # Hint: use cut to get the first\
  \ field\n    # Hint: use cut to get the first field\n    # Hint: use cut to get\
  \ the first field\n    # Hint: use cut to get the first field\n    # Hint: use cut\
  \ to get the first field\n    # Hint: use cut to get the first field\n    # Hint:\
  \ use cut to get the first field\n    # Hint: use cut to get the first field\n \
  \   # Hint: use cut to get the first field\n    # Hint: use cut to get the first\
  \ field\n    # Hint: use cut to get the first field\n    # Hint: use cut to"
- "    # your code here\n    echo $1"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | fold -w1 | sort | uniq | wc -l)\n        if [[\
  \ $count -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo \"$max_word\""
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_unique_chars=0\n    local max_unique_chars_word=\"\"\n    for word\
  \ in $1; do\n        local unique_chars=$(echo $word | grep -o . | sort | uniq |\
  \ wc -l)\n        if [ $unique_chars -gt $max_unique_chars ]; then\n           \
  \ max_unique_chars=$unique_chars\n            max_unique_chars_word=$word\n    \
  \    fi\n    done\n    echo $max_unique_chars_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=`echo $word | grep -o . | sort | uniq | wc -l`\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # your code here\n    echo \"Not implemented\""
- "    # TODO: implement this function\n    echo \"Not implemented\""
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt\
  \ $max_len ]; then\n            max_len=$len\n            max_word=$word\n     \
  \   fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [\
  \ $count -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local count=0\n    for word\
  \ in $1; do\n        count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n\
  \        if [ $count -gt $max_count ]; then\n            max_count=$count\n    \
  \        max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=${#word}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    # TODO: Write your code here\n    local max_len=0\n    local max_word=\"\"\n\
  \    for word in $1; do\n        local len=`echo $word | sed 's/\\(.\\)/\\1\\n/g'\
  \ | sort | uniq | wc -l`\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    # your code here\n    echo \"Not implemented\""
- "    # TODO: Write your code here\n    max_count=0\n    max_word=\"\"\n    for word\
  \ in $1; do\n        count=0\n        for ((i=0; i<${#word}; i++)); do\n       \
  \     char=${word:$i:1}\n            if [[ \"${word:$i+1}\" != *\"$char\"* ]]; then\n\
  \                count=$((count+1))\n            fi\n        done\n        if [[\
  \ $count -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: write your code here\n    # echo \"TODO\"\n    # echo \"$1\"\n    #\
  \ echo \"$1\" | tr \" \" \"\\n\"\n    # echo \"$1\" | tr \" \" \"\\n\" | sort\n\
  \    # echo \"$1\" | tr \" \" \"\\n\" | sort | uniq\n    # echo \"$1\" | tr \" \"\
  \ \"\\n\" | sort | uniq -c\n    # echo \"$1\" | tr \" \" \"\\n\" | sort | uniq -c\
  \ | sort -n\n    # echo \"$1\" | tr \" \" \"\\n\" | sort | uniq -c | sort -n | tail\
  \ -n 1\n    # echo \"$1\" | tr \" \" \"\\n\" | sort | uniq -c | sort -n | tail -n\
  \ 1 | cut -d \" \" -f 2\n    echo \"$1\" | tr \" \" \"\\n\" | sort | uniq -c | sort\
  \ -n | tail -n 1 | cut -d \" \" -f 2"
- "    # Write your code here\n    local max_unique_char_count=0\n    local max_unique_char_word=\"\
  \"\n    for word in $1; do\n        local unique_char_count=$(echo $word | grep\
  \ -o . | sort | uniq | wc -l)\n        if [ $unique_char_count -gt $max_unique_char_count\
  \ ]; then\n            max_unique_char_count=$unique_char_count\n            max_unique_char_word=$word\n\
  \        fi\n    done\n    echo $max_unique_char_word"
- "    # TODO: implement this function\n    # Hint: use the following command to get\
  \ the unique characters in a string\n    # echo \"string\" | grep -o . | sort |\
  \ uniq\n    #\n    # Hint: use the following command to sort a list of strings\n\
  \    # echo \"string1 string2 string3\" | tr ' ' '\\n' | sort\n    #\n    # Hint:\
  \ use the following command to get the length of a string\n    # echo \"string\"\
  \ | wc -c\n    #\n    # Hint: use the following command to get the first string\
  \ in a list\n    # echo \"string1 string2 string3\" | cut -d ' ' -f 1\n    #\n \
  \   # Hint: use the following command to get the first string in a list\n    # echo\
  \ \"string1 string2 string3\" | cut -d ' ' -f 1\n    #\n    # Hint: use the following\
  \ command to get the first string in a list\n    # echo \"string1 string2 string3\"\
  \ | cut -d ' ' -f 1\n    #\n    # Hint: use the following command to get the first\
  \ string in a list\n    # echo \"string1 string2 string3\" | cut -d ' ' -f 1\n \
  \   #\n    # Hint: use the following command to get the first string in a list\n\
  \    # echo \"string1 string2 string3\" | cut -d ' ' -f 1\n    #\n    # Hint: use\
  \ the following command to get the first string in a list\n    # echo \"string1\
  \ string2 string3\" | cut -d ' ' -f 1\n    #\n    # Hint: use the following command\
  \ to get the first string in a list\n    # echo \"string1 string2 string3\" | cut\
  \ -d ' ' -f 1\n    #\n    # Hint: use the following command to get the first string\
  \ in a list\n    # echo \"string1 string2 string3\" | cut -d ' ' -f 1\n    #\n \
  \   # Hint: use the following command to get the first string in a list\n    # echo\
  \ \"string1 string2 string3\" | cut -d ' ' -f 1\n    #\n    # Hint: use the following\
  \ command to get the first"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo $word | grep -o . | sort\
  \ | uniq | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo -n \"$word\" | grep -o .\
  \ | sort | uniq | wc -l)\n        if [ $count -gt $max_count ]; then\n         \
  \   max_count=$count\n            max_word=$word\n        fi\n    done\n    echo\
  \ $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    local word=\"\"\n    local len=0\n\
  \    for word in $1; do\n        len=`echo $word | grep -o . | sort | uniq | wc\
  \ -l`\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n      \
  \      max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=''\n    local max_count=0\n    for word in $1; do\n        local\
  \ count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count -gt\
  \ $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n        if [[\
  \ $len -gt $max_len ]]; then\n            max_len=$len\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word\n    local count\n\
  \    for word in $1; do\n        count=$(echo \"$word\" | grep -o . | sort | uniq\
  \ | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    # TODO: Write your code here\n    local max_len=0\n    local max_str=\"\"\n\
  \    for word in $1; do\n        local len=`echo $word | grep -o . | sort | uniq\
  \ | wc -l`\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n \
  \           max_str=$word\n        fi\n    done\n    echo $max_str"
- "    local max_len=0\n    local max_str=\"\"\n    for str in $1; do\n        local\
  \ len=$(echo $str | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n        if [ $len\
  \ -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n   \
  \     fi\n    done\n    echo $max_str"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=0\n        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
  \            if [[ \"${word/$char}\" != \"$word\" ]]; then\n                continue\n\
  \            fi\n            count=$((count+1))\n        done\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=${#word}\n        if [[ $len -gt $max_len ]]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=''\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $len -gt $max_len\
  \ ]]; then\n            max_len=$len\n            max_word=$word\n        fi\n \
  \   done\n    echo $max_word"
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [ $count -gt $max_count ];\
  \ then\n            max_count=$count\n            max_word=$word\n        fi\n \
  \   done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "  local max_len=0\n  local max_word=''\n  for word in $1; do\n    local len=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [ $len -gt $max_len ]; then\n\
  \      max_len=$len\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    local max_count=0\n    local max_word=\"\"\n    for word in $1; do\n      \
  \  local count=$(echo $word | fold -w1 | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: write your code here\n    max_word=\"\"\n    max_count=0\n    for word\
  \ in $1; do\n        count=0\n        for (( i=0; i<${#word}; i++ )); do\n     \
  \       if [[ \"${word:$i:1}\" != *\"${word:$((i+1)):1}\"* ]]; then\n          \
  \      count=$((count+1))\n            fi\n        done\n        if [[ $count -gt\
  \ $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  local max_count=0\n  local max_word=\"\"\n  for word in $1; do\n    local count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [ $count -gt $max_count ]; then\n\
  \      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    # Write your code here\n    # Use echo to print the result\n    # Use one or\
  \ more echo statements\n    echo \"string\""
- "  local max_word=\"\"\n  local max_len=0\n  local word\n  for word in $1; do\n\
  \    local len=$(echo -n \"$word\" | grep -o . | sort | uniq | wc -l)\n    if [[\
  \ $len -gt $max_len ]]; then\n      max_len=$len\n      max_word=$word\n    fi\n\
  \  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[\
  \ $count -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: implement this function\n    # Hint: use the following command to get\
  \ the number of unique characters\n    # in a string:\n    # echo \"$1\" | grep\
  \ -o . | sort | uniq | wc -l\n    #\n    # Hint: use the following command to sort\
  \ a list of strings:\n    # echo \"$1\" | tr ' ' '\\n' | sort\n    #\n    # Hint:\
  \ use the following command to get the first string in a list:\n    # echo \"$1\"\
  \ | tr ' ' '\\n' | head -n 1\n    #\n    # Hint: use the following command to get\
  \ the last string in a list:\n    # echo \"$1\" | tr ' ' '\\n' | tail -n 1\n   \
  \ #\n    # Hint: use the following command to get the number of strings in a list:\n\
  \    # echo \"$1\" | tr ' ' '\\n' | wc -l\n    #\n    # Hint: use the following\
  \ command to get the nth string in a list:\n    # echo \"$1\" | tr ' ' '\\n' | head\
  \ -n n | tail -n 1\n    #\n    # Hint: use the following command to get the nth\
  \ string in a list:\n    # echo \"$1\" | tr ' ' '\\n' | head -n n | tail -n 1\n\
  \    #\n    # Hint: use the following command to get the nth string in a list:\n\
  \    # echo \"$1\" | tr ' ' '\\n' | head -n n | tail -n 1\n    #\n    # Hint: use\
  \ the following command to get the nth string in a list:\n    # echo \"$1\" | tr\
  \ ' ' '\\n' | head -n n | tail -n 1\n    #\n    # Hint: use the following command\
  \ to get the nth string in a list:\n    # echo \"$1\" | tr ' ' '\\n' | head -n n\
  \ | tail -n 1\n    #\n    # Hint: use the following command to get the nth string\
  \ in a list:\n    # echo \"$1\" | tr ' ' '\\n' | head -n n | tail -n 1\n    #\n\
  \   "
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_count=0\n    local max_word=''\n    for word in $1; do\n        local\
  \ count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\n    local max_count=0\n    local count=0\n    for word in\
  \ $1; do\n        count=`echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort | uniq | wc\
  \ -l`\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo $word | grep -o . | sort\
  \ | uniq | wc -l)\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[\
  \ $count -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  local max_word=\n  local max_count=0\n  local word=\n  local count=0\n  for word\
  \ in $1; do\n    count=$(echo $word | grep -o . | sort | uniq | wc -l)\n    if [[\
  \ $count -gt $max_count ]]; then\n      max_count=$count\n      max_word=$word\n\
  \    fi\n  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local count=0\n    for word\
  \ in $1; do\n        count=$(echo $word | grep -o . | sort | uniq | wc -l)\n   \
  \     if [ $count -gt $max_count ]; then\n            max_count=$count\n       \
  \     max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n    \
  \    if [ $count -gt $max_count ]; then\n            max_count=$count\n        \
  \    max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word_count=0\n    local\
  \ word=\"\"\n    for word in $1; do\n        word_count=$(echo $word | grep -o .\
  \ | sort | uniq | wc -l)\n        if [[ $word_count -gt $max_count ]]; then\n  \
  \          max_count=$word_count\n            max_word=$word\n        fi\n    done\n\
  \    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=${#word}\n        if [[ $len -gt $max_len ]]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt\
  \ $max_len ]; then\n            max_len=$len\n            max_word=$word\n     \
  \   fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # your code here\n    echo $1"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=0\n        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
  \            if [[ \"${word:$i+1}\" != *\"$char\"* ]]; then\n                ((count++))\n\
  \            fi\n        done\n        if [[ $count -gt $max_count ]]; then\n  \
  \          max_count=$count\n            max_word=$word\n        fi\n    done\n\
  \    echo $max_word"
- "    # $1 is a space-separated list\n    # $2 is a string\n    # return 0 if $2\
  \ has more unique characters than $1\n    # return 1 otherwise\n    has_more_unique_chars()\
  \ {\n        local list=$1\n        local str=$2\n        local list_unique_chars=$(echo\
  \ \"$list\" | tr -d ' ' | fold -w1 | sort | uniq | tr -d '\\n')\n        local str_unique_chars=$(echo\
  \ \"$str\" | fold -w1 | sort | uniq | tr -d '\\n')\n        if [[ \"$str_unique_chars\"\
  \ == \"$list_unique_chars\" ]]; then\n            return 0\n        else\n     \
  \       return 1\n        fi\n    }\n\n    local max_str=\"\"\n    local max_str_unique_chars=\"\
  \"\n    for str in $1; do\n        if has_more_unique_chars \"$max_str_unique_chars\"\
  \ \"$str\"; then\n            max_str=\"$str\"\n            max_str_unique_chars=$(echo\
  \ \"$str\" | fold -w1 | sort | uniq | tr -d '\\n')\n        fi\n    done\n    echo\
  \ \"$max_str\""
- "    local max_word=\n    local max_count=0\n    for word in $1; do\n        local\
  \ count=0\n        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
  \            if [[ $word == *\"$char\"* ]]; then\n                count=$((count+1))\n\
  \            fi\n        done\n        if [[ $count -gt $max_count ]]; then\n  \
  \          max_count=$count\n            max_word=$word\n        fi\n    done\n\
  \    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=${#word}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=`echo -n $word | grep -o . | sort | uniq | wc -l`\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "    # write your code here\n    # hint: use tr to remove duplicates\n    # hint:\
  \ use sort -u to sort unique characters\n    # hint: use wc -c to count characters\n\
  \    # hint: use sort -n to sort numbers\n    # hint: use sort -k to sort by column\n\
  \    # hint: use sort -r to reverse sort\n    # hint: use sort -t to specify delimiter\n\
  \    # hint: use sort -k2,2 to sort by column 2\n    # hint: use sort -k2,2 -r to\
  \ sort by column 2 in reverse order\n    # hint: use sort -k2,2 -r -t: to sort by\
  \ column 2 in reverse order\n    #       with : as delimiter\n    # hint: use sort\
  \ -k2,2 -r -t: -k1,1 to sort by column 2 in reverse order\n    #       with : as\
  \ delimiter and then by column 1\n    # hint: use sort -k2,2 -r -t: -k1,1 -u to\
  \ sort by column 2 in reverse order\n    #       with : as delimiter and then by\
  \ column 1 and remove duplicates\n    # hint: use sort -k2,2 -r -t: -k1,1 -u -s\
  \ to sort by column 2 in reverse order\n    #       with : as delimiter and then\
  \ by column 1 and remove duplicates\n    #       and stable sort\n    # hint: use\
  \ sort -k2,2 -r -t: -k1,1 -u -s -o to sort by column 2 in reverse order\n    # \
  \      with : as delimiter and then by column 1 and remove duplicates\n    #   \
  \    and stable sort and output to file\n    # hint: use sort -k2,2 -r -t: -k1,1\
  \ -u -s -o to sort by column 2 in reverse order\n    #       with : as delimiter\
  \ and then by column 1 and remove duplicates\n    #       and stable sort and output\
  \ to file and then read the first line\n    # hint: use sort -k2,2 -r -t: -k1,1\
  \ -u -s -o to sort by column 2 in reverse order\n    #       with : as delimiter\
  \ and then by column 1 and remove duplicates\n   "
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [ $count -gt $max_count ];\
  \ then\n            max_count=$count\n            max_word=$word\n        fi\n \
  \   done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word_count=0\n    local\
  \ word=\"\"\n    for word in $1; do\n        word_count=$(echo $word | grep -o .\
  \ | sort | uniq | wc -l)\n        if [[ $word_count -gt $max_count ]]; then\n  \
  \          max_count=$word_count\n            max_word=$word\n        fi\n    done\n\
  \    echo $max_word"
- "  # TODO: implement this function\n  # Hint: use the following command to get the\
  \ length of a string:\n  # length=${#string}\n  # Hint: use the following command\
  \ to sort a list:\n  # sorted_list=$(echo $list | tr ' ' '\\n' | sort)\n  # Hint:\
  \ use the following command to get the first element of a list:\n  # first_element=$(echo\
  \ $list | cut -d ' ' -f 1)\n  # Hint: use the following command to get the rest\
  \ of a list:\n  # rest_of_list=$(echo $list | cut -d ' ' -f 2-)\n  # Hint: use the\
  \ following command to get the length of a list:\n  # length=$(echo $list | wc -w)\n\
  \  # Hint: use the following command to get the last element of a list:\n  # last_element=$(echo\
  \ $list | cut -d ' ' -f $length)\n  # Hint: use the following command to get all\
  \ elements except the last one:\n  # all_but_last=$(echo $list | cut -d ' ' -f 1-$(($length-1)))\n\
  \  # Hint: use the following command to get the unique characters of a string:\n\
  \  # unique_chars=$(echo $string | fold -w1 | sort | uniq | tr -d '\\n')\n  # Hint:\
  \ use the following command to get the length of a string:\n  # length=${#string}\n\
  \  # Hint: use the following command to get the first character of a string:\n \
  \ # first_char=${string:0:1}\n  # Hint: use the following command to get the rest\
  \ of a string:\n  # rest_of_string=${string:1}\n  # Hint: use the following command\
  \ to get the last character of a string:\n  # last_char=${string:$(($length-1)):1}\n\
  \  # Hint: use the following command to get all characters except the last one:\n\
  \  # all_but_last=${string:0:$(($length-1))}\n  # Hint: use the following command\
  \ to check if a string"
- "  # TODO: write your code here\n  echo \"Not implemented\""
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [[ $len -gt\
  \ $max_len ]]; then\n            max_len=$len\n            max_word=$word\n    \
  \    fi\n    done\n    echo $max_word"
- "  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
  \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n"
- "  local max_word=\"\"\n  local max_count=0\n  local count=0\n  for word in $1;\
  \ do\n    count=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n    if [[ $count\
  \ -gt $max_count ]]; then\n      max_count=$count\n      max_word=$word\n    fi\n\
  \  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [\
  \ $count -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo $word | grep -o . | sort\
  \ | uniq | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: implement this function\n    echo \"TODO\""
- "    # your code here\n    # echo $1\n    # echo $1 | tr ' ' '\\n'\n    # echo $1\
  \ | tr ' ' '\\n' | sort -u\n    # echo $1 | tr ' ' '\\n' | sort -u | wc -l\n   \
  \ # echo $1 | tr ' ' '\\n' | sort -u | wc -l | sort -n\n    # echo $1 | tr ' ' '\\\
  n' | sort -u | wc -l | sort -n | tail -1\n    # echo $1 | tr ' ' '\\n' | sort -u\
  \ | wc -l | sort -n | tail -1 | tr -d ' '\n    # echo $1 | tr ' ' '\\n' | sort -u\
  \ | wc -l | sort -n | tail -1 | tr -d ' ' | xargs -I {} echo $1 | tr ' ' '\\n' |\
  \ sort -u | wc -l | grep -n {}\n    # echo $1 | tr ' ' '\\n' | sort -u | wc -l |\
  \ sort -n | tail -1 | tr -d ' ' | xargs -I {} echo $1 | tr ' ' '\\n' | sort -u |\
  \ wc -l | grep -n {} | cut -d ':' -f 1\n    # echo $1 | tr ' ' '\\n' | sort -u |\
  \ wc -l | sort -n | tail -1 | tr -d ' ' | xargs -I {} echo $1 | tr ' ' '\\n' | sort\
  \ -u | wc -l | grep -n {} | cut -d ':' -f 1 | xargs -I {} echo $1 | tr ' ' '\\n'\
  \ | sort -u | wc -l | sort -n | tail -1 | tr -d ' ' | xargs -I {} echo $1 | tr '\
  \ ' '\\n' | sort -u | wc -l | grep -n {} | cut -d ':' -f 1 | xargs -I {} echo $1\
  \ | tr ' ' '\\n' | sort -u | wc -l | sort -n | tail -1 | tr -d ' ' | xargs -I {}\
  \ echo $"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_word=\"\"\n    local max_unique_chars=0\n    for word in $1; do\n\
  \        local unique_chars=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n\
  \        if [ $unique_chars -gt $max_unique_chars ]; then\n            max_unique_chars=$unique_chars\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    max_len=0\n    max_word=\"\"\n    for word in $1; do\n        len=$(echo -n\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len ]; then\n\
  \            max_len=$len\n            max_word=$word\n        fi\n    done\n  \
  \  echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [[ $count -gt $max_count ]];\
  \ then\n      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count -gt $max_count\
  \ ]]; then\n            max_count=$count\n            max_word=$word\n        fi\n\
  \    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  local max_word=\"\"\n  local max_unique_chars=0\n  for word in $1; do\n    local\
  \ unique_chars=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n    if [ \"\
  $unique_chars\" -gt \"$max_unique_chars\" ]; then\n      max_unique_chars=\"$unique_chars\"\
  \n      max_word=\"$word\"\n    fi\n  done\n  echo \"$max_word\""
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # TODO: implement this function\n    # Hint: use tr to remove spaces\n    #\
  \ Hint: use sort to sort the list\n    # Hint: use uniq to count unique characters\n\
  \    # Hint: use wc to count number of lines\n    # Hint: use head to get the first\
  \ line\n    # Hint: use cut to get the first column\n    # Hint: use sort to sort\
  \ the list again\n    # Hint: use head to get the first line\n    # Hint: use cut\
  \ to get the first column\n    # Hint: use sort to sort the list again\n    # Hint:\
  \ use head to get the first line\n    # Hint: use cut to get the first column\n\
  \    # Hint: use sort to sort the list again\n    # Hint: use head to get the first\
  \ line\n    # Hint: use cut to get the first column\n    # Hint: use sort to sort\
  \ the list again\n    # Hint: use head to get the first line\n    # Hint: use cut\
  \ to get the first column\n    # Hint: use sort to sort the list again\n    # Hint:\
  \ use head to get the first line\n    # Hint: use cut to get the first column\n\
  \    # Hint: use sort to sort the list again\n    # Hint: use head to get the first\
  \ line\n    # Hint: use cut to get the first column\n    # Hint: use sort to sort\
  \ the list again\n    # Hint: use head to get the first line\n    # Hint: use cut\
  \ to get the first column\n    # Hint: use sort to sort the list again\n    # Hint:\
  \ use head to get the first line\n    # Hint: use cut to get the first column\n\
  \    # Hint: use sort to sort the list again\n    # Hint: use head to get the first\
  \ line\n    # Hint: use cut to get the first column\n    # Hint: use sort to sort\
  \ the list again\n    # Hint: use head to get the first line\n    # Hint: use cut\
  \ to get the first column\n    # Hint: use sort to sort the list again\n    # Hint:\
  \ use head to get the first line\n    # Hint: use cut to get the"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | sed -e 's/\\(.\\)/\\1\\n/g' | sort | uniq | wc -l)\n      \
  \  if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  local max_len=0\n  local max_str=\"\"\n  for str in $1; do\n    local len=$(echo\
  \ -n $str | fold -w1 | sort -u | wc -l)\n    if [[ $len -gt $max_len ]]; then\n\
  \      max_len=$len\n      max_str=$str\n    fi\n  done\n  echo $max_str"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=${#word}\n        local unique_len=$(echo $word | fold -w1 | sort | uniq |\
  \ wc -l)\n        if [ $unique_len -gt $max_len ]; then\n            max_len=$unique_len\n\
  \            max_word=$word\n        elif [ $unique_len -eq $max_len ]; then\n \
  \           if [ $word \\< $max_word ]; then\n                max_word=$word\n \
  \           fi\n        fi\n    done\n    echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  local count=0\n  local word=\"\"\n\
  \  for word in $1; do\n    count=$(echo -n \"$word\" | grep -o . | sort | uniq |\
  \ wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n     \
  \ max_word=$word\n    fi\n  done\n  echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  local word=\"\"\n  local count=0\n\
  \  for word in $1; do\n    count=$(echo $word | grep -o . | sort | uniq | wc -l)\n\
  \    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_word=$word\n\
  \    fi\n  done\n  echo $max_word"
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [ $count -gt $max_count ];\
  \ then\n            max_count=$count\n            max_word=$word\n        fi\n \
  \   done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [\
  \ $count -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_unique_chars=0\n    for word in $1; do\n\
  \        local unique_chars=$(echo $word | grep -o . | sort | uniq | wc -l)\n  \
  \      if [[ $unique_chars -gt $max_unique_chars ]]; then\n            max_unique_chars=$unique_chars\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_chars=0\n    for word in $1; do\n      \
  \  local chars=$(echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort -u | tr -d '\\n')\n\
  \        local num_chars=$(echo $chars | wc -c)\n        if [[ $num_chars -gt $max_chars\
  \ ]]; then\n            max_chars=$num_chars\n            max_word=$word\n     \
  \   elif [[ $num_chars -eq $max_chars ]]; then\n            if [[ $word < $max_word\
  \ ]]; then\n                max_word=$word\n            fi\n        fi\n    done\n\
  \    echo $max_word"
- "    # Write your code here\n    # Use echo to print to stdout\n    # Use return\
  \ to return a value\n    max_word=\"\"\n    max_count=0\n    for word in $1; do\n\
  \        count=`echo $word | grep -o . | sort | uniq | wc -l`\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local -a words=($1)\n    local max_word=\"\"\n    local max_count=0\n    local\
  \ count=0\n    for word in \"${words[@]}\"; do\n        count=$(echo -n \"$word\"\
  \ | grep -o . | sort | uniq | wc -l)\n        if [ $count -gt $max_count ]; then\n\
  \            max_count=$count\n            max_word=$word\n        fi\n    done\n\
  \    echo $max_word"
- "    local max_word=\n    local max_count=0\n    local count=0\n    local word=\n\
  \    for word in $1; do\n        count=$(echo -n $word | grep -o . | sort | uniq\
  \ | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    local word=\"\"\n    local\
  \ count=0\n    for word in $1; do\n        count=$(echo $word | fold -w1 | sort\
  \ | uniq | wc -l)\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max\
  \ ]; then\n            max=$len\n            max_word=$word\n        fi\n    done\n\
  \    echo $max_word"
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count -gt $max_count\
  \ ]]; then\n            max_count=$count\n            max_word=$word\n        fi\n\
  \    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\n    for word in $1; do\n        local\
  \ len=$(echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n        if [ $len\
  \ -gt $max_len ]; then\n            max_len=$len\n            max_word=$word\n \
  \       fi\n    done\n    echo $max_word"
- "    local max_word=''\n    local max_count=0\n    for word in $1; do\n        local\
  \ count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=$(echo $word | fold -w1 | sort -u | wc -l)\n        if [[ $len -gt $max_len\
  \ ]]; then\n            max_len=$len\n            max_word=$word\n        fi\n \
  \   done\n    echo $max_word"
- "    # TODO: implement this function\n    echo \"TODO\""
- "  # TODO: Write your code here\n  max=0\n  max_word=\"\"\n  for word in $1; do\n\
  \    unique_chars=`echo $word | grep -o . | sort | uniq | wc -l`\n    if [ $unique_chars\
  \ -gt $max ]; then\n      max=$unique_chars\n      max_word=$word\n    fi\n  done\n\
  \  echo $max_word"
- "    local max_unique_chars=0\n    local max_unique_chars_word=''\n    for word\
  \ in $1; do\n        local unique_chars=$(echo $word | fold -w1 | sort | uniq |\
  \ wc -l)\n        if [[ $unique_chars -gt $max_unique_chars ]]; then\n         \
  \   max_unique_chars=$unique_chars\n            max_unique_chars_word=$word\n  \
  \      fi\n    done\n    echo $max_unique_chars_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_len=0\n    for word in $1; do\n        local\
  \ len=$(echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n        if [ $len\
  \ -gt $max_len ]; then\n            max_len=$len\n            max_word=$word\n \
  \       fi\n    done\n    echo $max_word"
- "    local max=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ unique_chars=$(echo $word | fold -w1 | sort | uniq | wc -l)\n        if [ $unique_chars\
  \ -gt $max ]; then\n            max=$unique_chars\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    # Use echo to print to stdout\n    # Use return\
  \ to return the value\n    max_word=\"\"\n    max_count=0\n    for word in $1\n\
  \    do\n        count=0\n        for ((i=0; i<${#word}; i++))\n        do\n   \
  \         if [[ \"${word:$i:1}\" != \"${word:$i+1:1}\" ]]\n            then\n  \
  \              count=$((count+1))\n            fi\n        done\n        if [[ $count\
  \ -gt $max_count ]]\n        then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $len -gt $max_len\
  \ ]; then\n            max_len=$len\n            max_word=$word\n        fi\n  \
  \  done\n    echo $max_word"
- "    # Write your code here\n    # Use echo to print to stdout\n    # Use return\
  \ to return the result\n    echo \"Not implemented\""
- "    local max_word=\"\"\n    local max_len=0\n    local len=0\n    for word in\
  \ $1; do\n        len=`echo -n $word | grep -o . | sort | uniq | wc -l`\n      \
  \  if [[ $len -gt $max_len ]]; then\n            max_len=$len\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "  # your code here\n  echo \"Not implemented\""
- "    local max_len=0\n    local max_word=\"\"\n    local word\n    for word in $1;\
  \ do\n        local len=$(echo $word | grep -o . | sort | uniq | wc -l)\n      \
  \  if [[ $len -gt $max_len ]]; then\n            max_len=$len\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    echo \"Not implemented\""
- "    # TODO: implement this function\n    # Hint: use the following command to sort\
  \ the list\n    # sorted_list=$(echo $1 | tr \" \" \"\\n\" | sort)\n    # Hint:\
  \ use the following command to get the length of each word\n    # length=$(echo\
  \ $word | wc -c)\n    # Hint: use the following command to get the number of unique\
  \ characters\n    # unique_chars=$(echo $word | fold -w1 | sort | uniq | wc -l)\n\
  \    # Hint: use the following command to get the first word in the list\n    #\
  \ first_word=$(echo $sorted_list | cut -d\" \" -f1)\n    # Hint: use the following\
  \ command to get the rest of the words in the list\n    # rest_of_words=$(echo $sorted_list\
  \ | cut -d\" \" -f2-)\n    # Hint: use the following command to get the first word\
  \ in the list\n    # first_word=$(echo $sorted_list | cut -d\" \" -f1)\n    # Hint:\
  \ use the following command to get the rest of the words in the list\n    # rest_of_words=$(echo\
  \ $sorted_list | cut -d\" \" -f2-)\n    # Hint: use the following command to get\
  \ the first word in the list\n    # first_word=$(echo $sorted_list | cut -d\" \"\
  \ -f1)\n    # Hint: use the following command to get the rest of the words in the\
  \ list\n    # rest_of_words=$(echo $sorted_list | cut -d\" \" -f2-)\n    # Hint:\
  \ use the following command to get the first word in the list\n    # first_word=$(echo\
  \ $sorted_list | cut -d\" \" -f1)\n    # Hint: use the following command to get\
  \ the rest of the words in the list\n    # rest_of_words=$(echo $sorted_list | cut\
  \ -d\" \" -f2-)\n    # Hint: use the following command to get the first word in\
  \ the list\n    # first_word=$(echo $sorted_list | cut -d\" \" -"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo -n $word | grep -o . | sort | uniq | wc -l)\n        if [[ $len -gt\
  \ $max_len ]]; then\n            max_len=$len\n            max_word=$word\n    \
  \    fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [[ $len -gt\
  \ $max_len ]]; then\n            max_len=$len\n            max_word=$word\n    \
  \    fi\n    done\n    echo $max_word"
- "  local max_word=\"\"\n  local max_count=0\n  for word in $1; do\n    local count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n    if [[ $count -gt $max_count ]];\
  \ then\n      max_count=$count\n      max_word=$word\n    fi\n  done\n  echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_len=0\n    local max_word=\"\"\n    for word in $1; do\n        local\
  \ len=$(echo $word | sed 's/\\(.\\)/\\1\\n/g' | sort -u | wc -l)\n        if [ $len\
  \ -gt $max_len ]; then\n            max_len=$len\n            max_word=$word\n \
  \       fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    max_word=\"\"\n    max_count=0\n    for word in $1; do\n        count=$(echo\
  \ $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count -gt $max_count\
  \ ]]; then\n            max_count=$count\n            max_word=$word\n        fi\n\
  \    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_unique_chars=0\n    for word in $1; do\n\
  \        local unique_chars=$(echo $word | grep -o . | sort | uniq | wc -l)\n  \
  \      if [ $unique_chars -gt $max_unique_chars ]; then\n            max_unique_chars=$unique_chars\n\
  \            max_word=$word\n        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | fold -w1 | sort | uniq | wc -l)\n        if [ $count\
  \ -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
  \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
  \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
  \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n   \
  \ #\n    #\n    #\n    #\n"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo \"$word\" | grep -o . | sort | uniq | wc -l)\n        if [\
  \ $count -gt $max_count ]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
- "    local max_word=\"\"\n    local max_count=0\n    for word in $1; do\n      \
  \  local count=$(echo $word | grep -o . | sort | uniq | wc -l)\n        if [[ $count\
  \ -gt $max_count ]]; then\n            max_count=$count\n            max_word=$word\n\
  \        fi\n    done\n    echo $max_word"
language: sh
name: HumanEval_158_find_max
prompt: '#!/bin/bash

  # Write a function that accepts a list of strings.

  # The list contains different words. Return the word with maximum number

  # of unique characters. If multiple strings have maximum number of unique

  # characters, return the one which comes first in lexicographical order.

  # find_max(["name", "of", "string"]) == "string"

  # find_max(["name", "enam", "game"]) == "enam"

  # find_max(["aaaaaaa", "bb" ,"cc"]) == ""aaaaaaa"

  #

  # $1 is a space-separated list

  find_max() {

  '
stop_tokens:
- '

  }'
tests: "}\n\ncandidate() {\n    find_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"name of string\") = \"string\" ]]\n    [[ $(candidate \"name enam\
  \ game\") = \"enam\" ]]\n    [[ $(candidate \"aaaaaaa bb cc\") = \"aaaaaaa\" ]]\n\
  \    [[ $(candidate \"abc cba\") = \"abc\" ]]\n    [[ $(candidate \"play this game\
  \ of footbott\") = \"footbott\" ]]\n    [[ $(candidate \"we are gonna rock\") =\
  \ \"gonna\" ]]\n    [[ $(candidate \"we are a mad nation\") = \"nation\" ]]\n  \
  \  [[ $(candidate \"this is a prrk\") = \"this\" ]]\n    [[ $(candidate \"b\") =\
  \ \"b\" ]]\n    [[ $(candidate \"play play play\") = \"play\" ]]\n}\n\nrun_test"

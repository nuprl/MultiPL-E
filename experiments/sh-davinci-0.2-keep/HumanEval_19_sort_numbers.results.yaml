language: sh
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -a\
    \ sorted_nums\n    local -a sorted_nums_index\n    local -a sorted_nums_index_sorted\n\
    \    local -a sorted_nums_sorted\n    local -a sorted_nums_sorted_index\n    local\
    \ -a sorted_nums_sorted_index_sorted\n    local -a sorted_nums_sorted_sorted\n\
    \    local -a sorted_nums_sorted_sorted_index\n    local -a sorted_nums_sorted_sorted_index_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted\n    local -a sorted_nums_sorted_sorted_sorted_index\n\
    \    local -a sorted_nums_sorted_sorted_sorted_index_sorted\n    local -a sorted_nums_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_index\n    local -a sorted_nums_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted\n    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_index_sorted\n  \
    \  local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted\n    local -a\
    \ sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_index\n    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n \
    \   local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_nums_sorted_sorted_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i tmp\n  local -i tmp2\n  local -i tmp3\n  local -i tmp4\n  local\
    \ -i tmp5\n  local -i tmp6\n  local -i tmp7\n  local -i tmp8\n  local -i tmp9\n\
    \  local -i tmp10\n  local -i tmp11\n  local -i tmp12\n  local -i tmp13\n  local\
    \ -i tmp14\n  local -i tmp15\n  local -i tmp16\n  local -i tmp17\n  local -i tmp18\n\
    \  local -i tmp19\n  local -i tmp20\n  local -i tmp21\n  local -i tmp22\n  local\
    \ -i tmp23\n  local -i tmp24\n  local -i tmp25\n  local -i tmp26\n  local -i tmp27\n\
    \  local -i tmp28\n  local -i tmp29\n  local -i tmp30\n  local -i tmp31\n  local\
    \ -i tmp32\n  local -i tmp33\n  local -i tmp34\n  local -i tmp35\n  local -i tmp36\n\
    \  local -i tmp37\n  local -i tmp38\n  local -i tmp39\n  local -i tmp40\n  local\
    \ -i tmp41\n  local -i tmp42\n  local -i tmp43\n  local -i tmp44\n  local -i tmp45\n\
    \  local -i tmp46\n  local -i tmp47\n  local -i tmp48\n  local -i tmp49\n  local\
    \ -i tmp50\n  local -i tmp51\n  local -i tmp52\n  local -i tmp53\n  local -i tmp54\n\
    \  local -i tmp55\n  local -i tmp56\n  local -i tmp\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local\
    \ -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i\
    \ pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n\
    \  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n \
    \ local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local\
    \ -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n   \
    \ local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n   \
    \ local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp=0\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums=($1)\n  local\
    \ -a nums_sorted=()\n  local -a nums_sorted_idx=()\n  local -a nums_sorted_idx_sorted=()\n\
    \  local -a nums_sorted_idx_sorted_idx=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i nums_sorted_idx_sorted_idx_len=0\n  local -i nums_sorted_idx_sorted_len=0\n\
    \  local -i nums_sorted_idx_len=0\n  local -i nums_sorted_len=0\n  local -i nums_len=0\n\
    \  local -i nums_sorted_idx_sorted_idx_len=0\n  local -i nums_sorted_idx_sorted_len=0\n\
    \  local -i nums_sorted_idx_len=0\n  local -i nums_sorted_len=0\n  local -i nums_len=0\n\
    \  local -i nums_sorted_idx_sorted_idx_len=0\n  local -i nums_sorted_idx_sorted_len=0\n\
    \  local -i nums_sorted_idx_len=0\n  local -i nums_sorted_len=0\n  local -i nums_len=0\n\
    \  local -i nums_sorted_idx_sorted_idx_len=0\n  local -i nums_sorted_idx\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a array\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n   \n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i min\n  local -i min_index\n\
    \  local -i len\n  local -i num\n  local -i temp\n  local -i temp_index\n  local\
    \ -i temp_num\n  local -i temp_len\n  local -i temp_min\n  local -i temp_min_index\n\
    \  local -i temp_min_num\n  local -i temp_min_len\n  local -i temp_min_len_index\n\
    \  local -i temp_min_len_num\n  local -i temp_min_len_len\n  local -i temp_min_len_min\n\
    \  local -i temp_min_len_min_index\n  local -i temp_min_len_min_num\n  local -i\
    \ temp_min_len_min_len\n  local -i temp_min_len_min_min\n  local -i temp_min_len_min_min_index\n\
    \  local -i temp_min_len_min_min_num\n  local -i temp_min_len_min_min_len\n  local\
    \ -i temp_min_len_min_min_min\n  local -i temp_min_len_min_min_min_index\n  local\
    \ -i temp_min_len_min_min_min_num\n  local -i temp_min_len_min_min_min_len\n \
    \ local -i temp_min_len_min_min_min_min\n  local -i temp_min_len_min_min_min_min_index\n\
    \  local -i temp_min_len_min_min_min_min_num\n  local -i temp_min_len_min_min_min_min_len\n\
    \  local -i temp_min_len_min_min_min_min_min\n  local -i temp_min_len_min_min_min_min_min_index\n\
    \  local -i temp_min_len_min_min_min_min_min_num\n  local -i temp_min_len_min_min_min_min_min_len\n\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=0\n  local -i\
    \ min=0\n  local -i min_index=0\n  local -i max=0\n  local -i max_index=0\n  local\
    \ -i tmp=0\n  local -i tmp_index=0\n  local -i tmp_index2=0\n  local -i tmp_index3=0\n\
    \  local -i tmp_index4=0\n  local -i tmp_index5=0\n  local -i tmp_index6=0\n \
    \ local -i tmp_index7=0\n  local -i tmp_index8=0\n  local -i tmp_index9=0\n  local\
    \ -i tmp_index10=0\n  local -i tmp_index11=0\n  local -i tmp_index12=0\n  local\
    \ -i tmp_index13=0\n  local -i tmp_index14=0\n  local -i tmp_index15=0\n  local\
    \ -i tmp_index16=0\n  local -i tmp_index17=0\n  local -i tmp_index18=0\n  local\
    \ -i tmp_index19=0\n  local -i tmp_index20=0\n  local -i tmp_index21=0\n  local\
    \ -i tmp_index22=0\n  local -i tmp_index23=0\n  local -i tmp_index24=0\n  local\
    \ -i tmp_index25=0\n  local -i tmp_index26=0\n  local -i tmp_index27=0\n  local\
    \ -i tmp_index28=0\n  local -i tmp_index29=0\n  local -i tmp_index30=0\n  local\
    \ -i tmp_index31=0\n  local -i tmp_index32=0\n  local -i tmp_index33=0\n  local\
    \ -i tmp_index34=0\n  local -i tmp_index35=0\n  local -i tmp_index36=0\n  local\
    \ -i tmp_index37=0\n  local -i tmp_index38=0\n  local -i tmp\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n  \
    \  local -a sorted_numbers\n    local -a sorted_numbers_index\n    local -a sorted_numbers_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index\n    local -a sorted_numbers_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index\n    local -a sorted_numbers_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index\n  \
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_numbers_index_s\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -a\
    \ sorted_nums\n    local -a num_to_int=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4\
    \ [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n    local i\n    local j\n \
    \   local tmp\n\n    nums=($1)\n    sorted_nums=($1)\n\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#nums[@]}; j++)); do\n            if [[\
    \ ${num_to_int[${nums[$i]}]} -gt ${num_to_int[${nums[$j]}]} ]]; then\n       \
    \         tmp=${nums[$i]}\n                nums[$i]=${nums[$j]}\n            \
    \    nums[$j]=$tmp\n            fi\n        done\n    done\n\n    echo ${nums[@]}\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i len\n  local -i min\n  local -i min_index\n  local -i\
    \ tmp\n  local -i tmp_index\n  local -i tmp_index2\n  local -i tmp_index3\n  local\
    \ -i tmp_index4\n  local -i tmp_index5\n  local -i tmp_index6\n  local -i tmp_index7\n\
    \  local -i tmp_index8\n  local -i tmp_index9\n  local -i tmp_index10\n  local\
    \ -i tmp_index11\n  local -i tmp_index12\n  local -i tmp_index13\n  local -i tmp_index14\n\
    \  local -i tmp_index15\n  local -i tmp_index16\n  local -i tmp_index17\n  local\
    \ -i tmp_index18\n  local -i tmp_index19\n  local -i tmp_index20\n  local -i tmp_index21\n\
    \  local -i tmp_index22\n  local -i tmp_index23\n  local -i tmp_index24\n  local\
    \ -i tmp_index25\n  local -i tmp_index26\n  local -i tmp_index27\n  local -i tmp_index28\n\
    \  local -i tmp_index29\n  local -i tmp_index30\n  local -i tmp_index31\n  local\
    \ -i tmp_index32\n  local -i tmp_index33\n  local -i tmp_index34\n  local -i tmp_index35\n\
    \  local -i tmp_index36\n  local -i tmp_index37\n  local -i tmp_index38\n  local\
    \ -i tmp_index39\n  local -i tmp_index40\n  local -i tmp_index41\n  local -i tmp_index42\n\
    \  local -i tmp_index43\n  local -i tmp_index44\n  local -i tmp_index45\n  local\
    \ -i tmp_index46\n  local -i tmp_index47\n  local -i tmp_index48\n  local -i tmp_index49\n\
    \  local -i tmp_index50\n  local -i tmp_index51\n  local -i tmp_index52\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums=($1)\n    local\
    \ -a nums_sorted=()\n    local -a nums_sorted_index=()\n    local -a nums_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index=()\n    local -a nums_sorted_index_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index=()\n    local -a nums_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index=()\n  \
    \  local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a nums_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a nums_sorted_index_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i len\n  local -i tmp\n  local -i num\n\
    \  local -i num_array\n  local -i num_array_len\n  local -i num_array_max\n  local\
    \ -i num_array_min\n  local -i num_array_sum\n  local -i num_array_avg\n  local\
    \ -i num_array_median\n  local -i num_array_mode\n  local -i num_array_range\n\
    \  local -i num_array_variance\n  local -i num_array_std_dev\n  local -i num_array_skewness\n\
    \  local -i num_array_kurtosis\n  local -i num_array_covariance\n  local -i num_array_correlation\n\
    \  local -i num_array_quartile_1\n  local -i num_array_quartile_2\n  local -i\
    \ num_array_quartile_3\n  local -i num_array_quartile_4\n  local -i num_array_quartile_5\n\
    \  local -i num_array_quartile_6\n  local -i num_array_quartile_7\n  local -i\
    \ num_array_quartile_8\n  local -i num_array_quartile_9\n  local -i num_array_quartile_10\n\
    \  local -i num_array_quartile_11\n  local -i num_array_quartile_12\n  local -i\
    \ num_array_quartile_13\n  local -i num_array_quartile_14\n  local -i num_array_quartile_15\n\
    \  local -i num_array_quartile_16\n  local -i num_array_quartile_17\n  local -i\
    \ num_array_quartile_18\n  local -i num_array_quartile_19\n  local -i num_array_quartile_20\n\
    \  local -i num_array_quartile_21\n  local -i num_array_quartile_22\n  local -i\
    \ num_array_quartile_23\n  local -i num_array\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   # Use echo to print the output\n    # For example:\n    # echo \"Hello world\"\
    \n    echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n  \
    \  sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"\
    three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four\
    \ seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n    local\
    \ -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n\
    \    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n\
    \    local -i t=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local\
    \ -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n\
    \    local -i h=0\n    local -i l=0\n    local -i o=0\n    local -i num=0\n  \
    \  local -i tmp=0\n    local -i tmp2=0\n    local -i tmp3=0\n    local -i tmp4=0\n\
    \    local -i tmp5=0\n    local -i tmp6=0\n    local -i tmp7=0\n    local -i tmp8=0\n\
    \    local -i tmp9=0\n    local -i tmp10=0\n    local -i tmp11=0\n    local -i\
    \ tmp12=0\n    local -i tmp13=0\n    local -i tmp14=0\n    local -i tmp15=0\n\
    \    local -i tmp16=0\n    local -i tmp17=0\n    local -i tmp18=0\n    local -i\
    \ tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n    local -i tmp22=0\n\
    \    local -i tmp23=0\n    local -i tmp24=0\n    local -i tmp25=0\n    local -i\
    \ tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n    local -i tmp29=0\n\
    \    local -i tmp30=0\n    local -i tmp31=0\n    local -i tmp32=0\n   \n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums=($1)\n  local\
    \ -a sorted=()\n  local -a nums_sorted=()\n  local -a nums_sorted_indices=()\n\
    \  local -a nums_sorted_indices_sorted=()\n  local -a nums_sorted_indices_sorted_indices=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted=()\n  local -a nums_sorted_indices_sorted_indices_sorted_indices=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted=()\n  local\
    \ -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n  local\
    \ -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n  local\
    \ -a sorted_numbers\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local\
    \ -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n\
    \  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local\
    \ -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n\
    \  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\
    \ -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n\
    \  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local\
    \ -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\
    \  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local\
    \ -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ $1 | tr ' ' '\\n' | sort | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i\
    \ ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n\
    \  local -i dddd\n  local -i eeee\n  local -i\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n   \
    \ local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n   \
    \ local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp=0\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i\
    \ ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n\
    \  local -i dddd\n  local -i eeee\n  local -i\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i len\n  local -i tmp\n  local -i tmp2\n  local -i tmp3\n\
    \  local -i tmp4\n  local -i tmp5\n  local -i tmp6\n  local -i tmp7\n  local -i\
    \ tmp8\n  local -i tmp9\n  local -i tmp10\n  local -i tmp11\n  local -i tmp12\n\
    \  local -i tmp13\n  local -i tmp14\n  local -i tmp15\n  local -i tmp16\n  local\
    \ -i tmp17\n  local -i tmp18\n  local -i tmp19\n  local -i tmp20\n  local -i tmp21\n\
    \  local -i tmp22\n  local -i tmp23\n  local -i tmp24\n  local -i tmp25\n  local\
    \ -i tmp26\n  local -i tmp27\n  local -i tmp28\n  local -i tmp29\n  local -i tmp30\n\
    \  local -i tmp31\n  local -i tmp32\n  local -i tmp33\n  local -i tmp34\n  local\
    \ -i tmp35\n  local -i tmp36\n  local -i tmp37\n  local -i tmp38\n  local -i tmp39\n\
    \  local -i tmp40\n  local -i tmp41\n  local -i tmp42\n  local -i tmp43\n  local\
    \ -i tmp44\n  local -i tmp45\n  local -i tmp46\n  local -i tmp47\n  local -i tmp48\n\
    \  local -i tmp49\n  local -i tmp50\n  local -i tmp51\n  local -i tmp52\n  local\
    \ -i tmp53\n  local -i tmp54\n  local -i tmp55\n  local -i tmp56\n  local -i tmp57\n\
    \  local -i tmp58\n  local -i tmp59\n  local -i tmp60\n  local -i tmp61\n  local\
    \ -i tmp62\n  local -i tmp63\n  local -i tmp64\n  local -i tmp65\n  local -i tmp66\n\
    \  local -i tmp67\n  local -i tmp68\n  local -i tmp69\n  local -i\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local i\n  local j\n  local k\n  local tmp\n  local num\n\n  nums=($1)\n  sorted=(${nums[@]})\n\
    \n  for ((i=0; i<${#nums[@]}; i++)); do\n    for ((j=i+1; j<${#nums[@]}; j++));\
    \ do\n      if [ ${nums[$i]} -gt ${nums[$j]} ]; then\n        tmp=${nums[$i]}\n\
    \        nums[$i]=${nums[$j]}\n        nums[$j]=$tmp\n      fi\n    done\n  done\n\
    \n  for ((i=0; i<${#nums[@]}; i++)); do\n    for ((j=0; j<${#sorted[@]}; j++));\
    \ do\n      if [ ${nums[$i]} -eq ${sorted[$j]} ]; then\n        sorted[$j]=$i\n\
    \      fi\n    done\n  done\n\n  for ((i=0; i<${#sorted[@]}; i++)); do\n    for\
    \ ((j=i+1; j<${#sorted[@]}; j++)); do\n      if [ ${sorted[$i]} -gt ${sorted[$j]}\
    \ ]; then\n        tmp=${sorted[$i]}\n        sorted[$i]=${sorted[$j]}\n     \
    \   sorted[$j]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<${#sorted[@]};\
    \ i++)); do\n    case ${sorted[$i]} in\n      0)\n        num='zero'\n       \
    \ ;;\n      1)\n        num='one'\n        ;;\n      2)\n        num='two'\n \
    \       ;;\n      3)\n        num='three'\n        ;;\n      4)\n        num='four'\n\
    \        ;;\n      5)\n        num='five'\n        ;;\n      6)\n        num='six'\n\
    \        ;;\n      7)\n        num='seven'\n        ;;\n      8)\n        num='eight'\n\
    \        ;;\n     \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8ydqgvk9.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmp8ydqgvk9.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i zero=0\n    local -i one=0\n    local -i two=0\n    local -i three=0\n  \
    \  local -i four=0\n    local -i five=0\n    local -i six=0\n    local -i seven=0\n\
    \    local -i eight=0\n    local -i nine=0\n    local -i num=0\n    local -i num_len=0\n\
    \    local -i num_len_max=0\n    local -i num_len_min=0\n    local -i num_len_avg=0\n\
    \    local -i num_len_sum=0\n    local -i num_len_count=0\n    local -i num_len_median=0\n\
    \    local -i num_len_mode=0\n    local -i num_len_mode_count=0\n    local -i\
    \ num_len_mode_count_max=0\n    local -i num_len_mode_count_max_index=0\n    local\
    \ -i num_len_mode_count_max_index_prev=0\n    local -i num_len_mode_count_max_index_next=0\n\
    \    local -i num_len_mode_count_max_index_prev_prev=0\n    local -i num_len_mode_count_max_index_next_next=0\n\
    \    local -i num_len_mode_count_max_index_prev_prev_prev=0\n    local -i num_len_mode_count_max_index_next_next_\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n  \
    \  local -a sorted\n    local -a unsorted\n    local -a sorted_numbers\n    local\
    \ -a unsorted_numbers\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n  \
    \  local -a sorted\n    local -i i=0\n    local -i j=0\n    local -i k=0\n   \
    \ local -i n=${#numbers[@]}\n    local -i min=0\n    local -i min_index=0\n  \
    \  local -i temp=0\n\n    for ((i=0; i<n; i++)); do\n        min=${numbers[0]}\n\
    \        min_index=0\n        for ((j=0; j<n; j++)); do\n            if [[ ${numbers[j]}\
    \ -lt $min ]]; then\n                min=${numbers[j]}\n                min_index=$j\n\
    \            fi\n        done\n        sorted[k]=$min\n        numbers[min_index]=999999\n\
    \        k=$k+1\n    done\n\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   # echo $1\n    # echo \"$1\"\n    # echo $1 | tr ' ' '\\n' | sort -n\n   \
    \ # echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n    # echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ' | sed 's/^ *//'\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ' | sed 's/^ *//'\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n  local\
    \ -a num_map=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7\
    \ [eight]=8 [nine]=9)\n  local -a sorted_numbers\n  local -i i j\n  for i in ${numbers[@]};\
    \ do\n    sorted_numbers[${num_map[$i]}]=$i\n  done\n  for ((i=0; i<${#sorted_numbers[@]};\
    \ i++)); do\n    if [[ -n ${sorted_numbers[$i]} ]]; then\n      echo -n \"${sorted_numbers[$i]}\
    \ \"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | awk '{\n   \
    \     for (i = 1; i <= NF; i++) {\n            if ($i == \"zero\") {\n       \
    \         a[i] = 0\n            } else if ($i == \"one\") {\n                a[i]\
    \ = 1\n            } else if ($i == \"two\") {\n                a[i] = 2\n   \
    \         } else if ($i == \"three\") {\n                a[i] = 3\n          \
    \  } else if ($i == \"four\") {\n                a[i] = 4\n            } else\
    \ if ($i == \"five\") {\n                a[i] = 5\n            } else if ($i ==\
    \ \"six\") {\n                a[i] = 6\n            } else if ($i == \"seven\"\
    ) {\n                a[i] = 7\n            } else if ($i == \"eight\") {\n   \
    \             a[i] = 8\n            } else if ($i == \"nine\") {\n           \
    \     a[i] = 9\n            }\n        }\n        asort(a)\n        for (i = 1;\
    \ i <= NF; i++) {\n            if (a[i] == 0) {\n                a[i] = \"zero\"\
    \n            } else if (a[i] == 1) {\n                a[i] = \"one\"\n      \
    \      } else if (a[i] == 2) {\n                a[i] = \"two\"\n            }\
    \ else if (a[i] == 3) {\n                a[i] = \"three\"\n            } else\
    \ if (a[i] == 4) {\n                a[i] = \"four\"\n            } else if (a[i]\
    \ == 5) {\n                a[i] = \"five\"\n            } else if (a[i] == 6)\
    \ {\n                a[i] = \"six\"\n            } else if (a[i] == 7) {\n   \
    \             a[i] = \"seven\"\n            } else if (a[i] == 8) {\n        \
    \        a[i] = \"eight\"\n            } else if (a[i] == 9) {\n             \
    \   a[i] = \"nine\"\n            }\n            printf \"%s \", a[i]\n       \
    \ }\n        printf \"\\n\"\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn6bb8fgr.sh: line 10: unexpected EOF while looking for matching
    `''''

    /tmp/tmpn6bb8fgr.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n  \
    \  local -a sorted_numbers\n    local -a number_map=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local\
    \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
    \    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums=($1)\n  local\
    \ -a nums_sorted=()\n  local -a nums_sorted_index=()\n  local i=0\n  local j=0\n\
    \  local k=0\n  local num_index=0\n  local num_index_min=0\n  local num_index_min_prev=0\n\
    \  local num_index_min_prev_prev=0\n  local num_index_min_prev_prev_prev=0\n \
    \ local num_index_min_prev_prev_prev_prev=0\n  local num_index_min_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev=0\n  local num_index_min_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \ local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_min_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local num_index_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i\n    local -i j\n    local -i tmp\n    local -i len\n    local -i max\n  \
    \  local -i min\n    local -i mid\n    local -i num\n    local -i num_len\n  \
    \  local -i num_max\n    local -i num_min\n    local -i num_mid\n    local -i\
    \ num_num\n    local -i num_num_len\n    local -i num_num_max\n    local -i num_num_min\n\
    \    local -i num_num_mid\n    local -i num_num_num\n    local -i num_num_num_len\n\
    \    local -i num_num_num_max\n    local -i num_num_num_min\n    local -i num_num_num_mid\n\
    \    local -i num_num_num_num\n    local -i num_num_num_num_len\n    local -i\
    \ num_num_num_num_max\n    local -i num_num_num_num_min\n    local -i num_num_num_num_mid\n\
    \    local -i num_num_num_num_num\n    local -i num_num_num_num_num_len\n    local\
    \ -i num_num_num_num_num_max\n    local -i num_num_num_num_num_min\n    local\
    \ -i num_num_num_num_num_mid\n    local -i num_num_num_num_num_num\n    local\
    \ -i num_num_num_num_num_num_len\n    local -i num_num_num_num_num_num_max\n \
    \   local -i num_num_num_num_num_num_min\n    local -i num_num_num_num_num_num_mid\n\
    \    local -i num_num_num_num_num_num_num\n    local -i num_num_num_num_num_num_num_len\n\
    \    local -i num_num_num_num_num_num_num_max\n    local -i num_num_num_num_num_num_num_min\n\
    \    local -i num_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local numbers=($1)\n  local\
    \ sorted=($(printf \"%s\\n\" \"${numbers[@]}\" | sort -n))\n  echo \"${sorted[@]}\"\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpntcz89ix.sh: line 180: syntax error near unexpected token `}''

    /tmp/tmpntcz89ix.sh: line 180: `}''

    '
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Your code here\n  echo $1\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo $1\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i\n    local -i j\n    local -i k\n    local -i len\n    local -i tmp\n    local\
    \ -i tmp2\n    local -i tmp3\n    local -i tmp4\n    local -i tmp5\n    local\
    \ -i tmp6\n    local -i tmp7\n    local -i tmp8\n    local -i tmp9\n    local\
    \ -i tmp10\n    local -i tmp11\n    local -i tmp12\n    local -i tmp13\n    local\
    \ -i tmp14\n    local -i tmp15\n    local -i tmp16\n    local -i tmp17\n    local\
    \ -i tmp18\n    local -i tmp19\n    local -i tmp20\n    local -i tmp21\n    local\
    \ -i tmp22\n    local -i tmp23\n    local -i tmp24\n    local -i tmp25\n    local\
    \ -i tmp26\n    local -i tmp27\n    local -i tmp28\n    local -i tmp29\n    local\
    \ -i tmp30\n    local -i tmp31\n    local -i tmp32\n    local -i tmp33\n    local\
    \ -i tmp34\n    local -i tmp35\n    local -i tmp36\n    local -i tmp37\n    local\
    \ -i tmp38\n    local -i tmp39\n    local -i tmp40\n    local -i tmp41\n    local\
    \ -i tmp42\n    local -i tmp43\n    local -i tmp44\n    local -i tmp45\n    local\
    \ -i tmp46\n    local -i tmp47\n    local -i tmp48\n    local -i tmp49\n    local\
    \ -i tmp50\n    local -i tmp51\n    local -i tmp52\n    local -i tmp53\n    local\
    \ -i tmp54\n    local -i tmp55\n    local -i tmp56\n    local -i tmp57\n    local\
    \ -i tmp58\n    local -i tmp59\n    local -i tmp60\n    local -i tmp61\n    local\
    \ -i tmp62\n    local -i tmp63\n    local -i tmp64\n    local -i tmp65\n    local\
    \ -i tmp66\n    local -i tmp67\n    local -i tmp68\n    local -i tmp\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n \
    \   local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local\
    \ -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n\
    \    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local\
    \ -i zz\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n\
    \    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n\
    \    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local\
    \ -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n\
    \    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   # Convert string to array\n    IFS=' ' read -r -a array <<< \"$1\"\n    #\
    \ Sort array\n    sorted=($(printf '%s\\n' \"${array[@]}\" | sort))\n    # Convert\
    \ array to string\n    echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted_nums\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n\
    \  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\
    \ -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n\
    \  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local\
    \ -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\
    \  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local\
    \ -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local\
    \ -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n\
    \  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo $1\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement sort_numbers\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a arr\n    local -a\
    \ arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a\
    \ arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a\
    \ arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local\
    \ -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local\
    \ -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local\
    \ -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local\
    \ -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local\
    \ -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local\
    \ -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local\
    \ -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local\
    \ -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local\
    \ -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local\
    \ -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local\
    \ -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local\
    \ -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local\
    \ -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n    local\
    \ -a arr66\n    local -a arr67\n    local -a arr68\n    local -a arr69\n    local\
    \ -a arr70\n    local -a arr71\n    local -a arr72\n    local -a arr73\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort | tr '\\n' ' '\n}\n\ncandidate() {\n   \
    \ sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three\
    \ five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven\
    \ nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"\
    six five four three two one zero\") = \"zero one two three four five six\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | awk '{\n    for\
    \ (i = 1; i <= NF; i++) {\n      if ($i == \"zero\") {\n        a[i] = 0\n   \
    \   } else if ($i == \"one\") {\n        a[i] = 1\n      } else if ($i == \"two\"\
    ) {\n        a[i] = 2\n      } else if ($i == \"three\") {\n        a[i] = 3\n\
    \      } else if ($i == \"four\") {\n        a[i] = 4\n      } else if ($i ==\
    \ \"five\") {\n        a[i] = 5\n      } else if ($i == \"six\") {\n        a[i]\
    \ = 6\n      } else if ($i == \"seven\") {\n        a[i] = 7\n      } else if\
    \ ($i == \"eight\") {\n        a[i] = 8\n      } else if ($i == \"nine\") {\n\
    \        a[i] = 9\n      }\n    }\n    asort(a)\n    for (i = 1; i <= NF; i++)\
    \ {\n      if (a[i] == 0) {\n        a[i] = \"zero\"\n      } else if (a[i] ==\
    \ 1) {\n        a[i] = \"one\"\n      } else if (a[i] == 2) {\n        a[i] =\
    \ \"two\"\n      } else if (a[i] == 3) {\n        a[i] = \"three\"\n      } else\
    \ if (a[i] == 4) {\n        a[i] = \"four\"\n      } else if (a[i] == 5) {\n \
    \       a[i] = \"five\"\n      } else if (a[i] == 6) {\n        a[i] = \"six\"\
    \n      } else if (a[i] == 7) {\n        a[i] = \"seven\"\n      } else if (a[i]\
    \ == 8) {\n        a[i] = \"eight\"\n      } else if (a[i] == 9) {\n        a[i]\
    \ = \"nine\"\n      }\n    }\n    for (i = 1; i <= NF; i++) {\n\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ebmvl5d.sh: line 10: unexpected EOF while looking for matching
    `''''

    /tmp/tmp7ebmvl5d.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i=0\n\
    \  local -i j=0\n  local -i min=0\n  local -i min_index=0\n  local -i len=0\n\
    \  local -i tmp=0\n  local -i tmp_index=0\n  local -i tmp_index2=0\n  local -i\
    \ tmp_index3=0\n  local -i tmp_index4=0\n  local -i tmp_index5=0\n  local -i tmp_index6=0\n\
    \  local -i tmp_index7=0\n  local -i tmp_index8=0\n  local -i tmp_index9=0\n \
    \ local -i tmp_index10=0\n  local -i tmp_index11=0\n  local -i tmp_index12=0\n\
    \  local -i tmp_index13=0\n  local -i tmp_index14=0\n  local -i tmp_index15=0\n\
    \  local -i tmp_index16=0\n  local -i tmp_index17=0\n  local -i tmp_index18=0\n\
    \  local -i tmp_index19=0\n  local -i tmp_index20=0\n  local -i tmp_index21=0\n\
    \  local -i tmp_index22=0\n  local -i tmp_index23=0\n  local -i tmp_index24=0\n\
    \  local -i tmp_index25=0\n  local -i tmp_index26=0\n  local -i tmp_index27=0\n\
    \  local -i tmp_index28=0\n  local -i tmp_index29=0\n  local -i tmp_index30=0\n\
    \  local -i tmp_index31=0\n  local -i tmp_index32=0\n  local -i tmp_index33=0\n\
    \  local -i tmp_index34=0\n  local -i tmp_index35=0\n  local -i tmp_index36=0\n\
    \  local -i tmp_index37=0\n  local -i tmp_index38=0\n  local -i tmp_index39=0\n\
    \  local -i tmp_index40=0\n  local -i tmp_index41=0\n  local -i\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i tmp\n  local\
    \ -i num\n  local -i num_prev\n  local -i num_next\n  local -i num_prev_prev\n\
    \  local -i num_next_next\n  local -i num_prev_prev_prev\n  local -i num_next_next_next\n\
    \  local -i num_prev_prev_prev_prev\n  local -i num_next_next_next_next\n  local\
    \ -i num_prev_prev_prev_prev_prev\n  local -i num_next_next_next_next_next\n \
    \ local -i num_prev_prev_prev_prev_prev_prev\n  local -i num_next_next_next_next_next_next\n\
    \  local -i num_prev_prev_prev_prev_prev_prev_prev\n  local -i num_next_next_next_next_next_next_next\n\
    \  local -i num_prev_prev_prev_prev_prev_prev_prev_prev\n  local -i num_next_next_next_next_next_next_next_next\n\
    \  local -i num_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -i num_next_next_next_next_next_next_next_next_next\n\
    \  local -i num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -i\
    \ num_next_next_next_next_next_next_next_next_next_next\n  local -i num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_next_next_next_next_next_next_next_next_next_next_next\n  local\
    \ -i num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local\
    \ -i num_next_next_next_next_next_next_next_next_next_next_next_next\n  local\
    \ -i num_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local -i\
    \ i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local\
    \ -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n\
    \  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local\
    \ -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local\
    \ -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n\
    \  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local\
    \ -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n    for\
    \ number in $1; do\n        case $number in\n            zero) numbers[0]=0;;\n\
    \            one) numbers[1]=1;;\n            two) numbers[2]=2;;\n          \
    \  three) numbers[3]=3;;\n            four) numbers[4]=4;;\n            five)\
    \ numbers[5]=5;;\n            six) numbers[6]=6;;\n            seven) numbers[7]=7;;\n\
    \            eight) numbers[8]=8;;\n            nine) numbers[9]=9;;\n       \
    \ esac\n    done\n    echo ${numbers[@]} | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n    local\
    \ -a sorted_numbers\n    local -a sorted_numbers_indexes\n    local -i i\n   \
    \ local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n\
    \    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i zero\n    local -i one\n\
    \    local -i two\n    local -i three\n    local -i four\n    local -i five\n\
    \    local -i six\n    local -i seven\n    local -i eight\n    local -i nine\n\
    \    local -i max\n    local -i min\n    local -i index\n    local -i index_min\n\
    \    local -i index_max\n    local -i index_min_max\n    local -i index_max_min\n\
    \    local -i index_min_min\n    local -i index_max_max\n    local -i index_min_max_min\n\
    \    local -i index_max_min_max\n    local -i index_min_min_max\n    local -i\
    \ index_max_max_min\n    local -i index_min_max_max\n    local -i index_max_min_min\n\
    \    local -i index_min_min_min\n    local -i index_max_max_max\n    local -i\
    \ index_min_max_min_max\n    local -i index_max_min_max_min\n    local -i index_min_min_max_max\n\
    \    local -i index_max_max_min_max\n    local -i index_min_max_max_min\n    local\
    \ -i index_max_min_min_max\n    local -i index_min_min_min_max\n    local -i index_max_max_max_min\n\
    \    local -i index_min_max_min_min\n    local -i index_max_min_max_max\n    local\
    \ -i index_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n  \
    \  local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n \
    \   local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n\
    \    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i\
    \ u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i tmp\n  local -i len\n  local -i len_nums\n\
    \  local -i len_nums_minus_1\n  local -i len_nums_minus_2\n  local -i len_nums_minus_3\n\
    \  local -i len_nums_minus_4\n  local -i len_nums_minus_5\n  local -i len_nums_minus_6\n\
    \  local -i len_nums_minus_7\n  local -i len_nums_minus_8\n  local -i len_nums_minus_9\n\
    \  local -i len_nums_minus_10\n  local -i len_nums_minus_11\n  local -i len_nums_minus_12\n\
    \  local -i len_nums_minus_13\n  local -i len_nums_minus_14\n  local -i len_nums_minus_15\n\
    \  local -i len_nums_minus_16\n  local -i len_nums_minus_17\n  local -i len_nums_minus_18\n\
    \  local -i len_nums_minus_19\n  local -i len_nums_minus_20\n  local -i len_nums_minus_21\n\
    \  local -i len_nums_minus_22\n  local -i len_nums_minus_23\n  local -i len_nums_minus_24\n\
    \  local -i len_nums_minus_25\n  local -i len_nums_minus_26\n  local -i len_nums_minus_27\n\
    \  local -i len_nums_minus_28\n  local -i len_nums_minus_29\n  local -i len_nums_minus_30\n\
    \  local -i len_nums_minus_31\n  local -i len_nums_minus_32\n  local -i len_nums_minus_33\n\
    \  local -i len_nums_minus_34\n  local -i len_nums_minus_35\n  local -i len_nums_minus\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this function\n\
    \  echo \"Not implemented\"\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n  \
    \  local -a sorted_numbers=()\n    local -a sorted_numbers_index=()\n    local\
    \ -a sorted_numbers_index_sorted=()\n    local -a sorted_numbers_sorted=()\n \
    \   local -a numbers_index=()\n    local -a numbers_index_sorted=()\n    local\
    \ -a numbers_sorted=()\n    local -a numbers_sorted_sorted=()\n    local -a numbers_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted=()\n    local -a numbers_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted_sorted_sorted=()\n    local\
    \ -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n    local -a\
    \ numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n    local\
    \ -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   # Convert the string to an array\n    local -a arr\n    arr=($1)\n    # Sort\
    \ the array\n    IFS=$'\\n' sorted=($(sort <<<\"${arr[*]}\"))\n    # Convert the\
    \ array back to a string\n    echo \"${sorted[*]}\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # your code here\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local -i i\n  local -i j\n  local -i min\n\n  # Split the string into an array\n\
    \  IFS=' ' read -r -a nums <<< \"$1\"\n\n  # Sort the array\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    min=i\n    for ((j=i+1; j<${#nums[@]}; j++)); do\n      if [[\
    \ ${nums[j]} -lt ${nums[min]} ]]; then\n        min=j\n      fi\n    done\n  \
    \  if [[ $min -ne $i ]]; then\n      sorted[$i]=${nums[min]}\n      nums[min]=${nums[i]}\n\
    \      nums[i]=${sorted[$i]}\n    else\n      sorted[$i]=${nums[i]}\n    fi\n\
    \  done\n\n  # Print the sorted array\n  printf '%s\\n' \"${sorted[@]}\"\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this function\n\
    \    # Hint: use the 'sort' command\n    # Hint: use the 'tr' command\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a num_to_word=([0]=zero\
    \ [1]=one [2]=two [3]=three [4]=four [5]=five [6]=six [7]=seven [8]=eight [9]=nine)\n\
    \  local -a word_to_num=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4 [five]=5\
    \ [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local -i i\n  local -i j\n  local -i\
    \ k\n  local -i num\n  local -i tmp\n  local -i len\n  local -i len_num_to_word\n\
    \  local -i len_word_to_num\n  local -i len_nums\n  local -i len_nums_minus_one\n\
    \  local -i len_nums_minus_two\n  local -i len_nums_minus_three\n  local -i len_nums_minus_four\n\
    \  local -i len_nums_minus_five\n  local -i len_nums_minus_six\n  local -i len_nums_minus_seven\n\
    \  local -i len_nums_minus_eight\n  local -i len_nums_minus_nine\n  local -i len_nums_minus_ten\n\
    \  local -i len_nums_minus_eleven\n  local -i len_nums_minus_twelve\n  local -i\
    \ len_nums_minus_thirteen\n  local -i len_nums_minus_fourteen\n  local -i len_nums_minus_fifteen\n\
    \  local -i len_nums_minus_sixteen\n  local -i len_nums_minus_seventeen\n  local\
    \ -i len_nums_minus_eighteen\n  local -i len_nums_minus_nineteen\n  local -i len_nums_minus_twenty\n\
    \  local -i len_nums_minus_twenty_one\n  local -i len_nums_minus_twenty_two\n\
    \  local -i len_nums_minus_twenty_three\n  local -i len_nums_minus_tw\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local -a sorted_nums\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i zero=0\n  local -i one=0\n  local -i two=0\n  local -i three=0\n  local -i\
    \ four=0\n  local -i five=0\n  local -i six=0\n  local -i seven=0\n  local -i\
    \ eight=0\n  local -i nine=0\n  local -i total=0\n  local -i num=0\n  local -i\
    \ sorted_num=0\n  local -i sorted_total=0\n  local -i sorted_num_total=0\n  local\
    \ -i sorted_num_total_prev=0\n  local -i sorted_num_total_next=0\n  local -i sorted_num_total_prev_diff=0\n\
    \  local -i sorted_num_total_next_diff=0\n  local -i sorted_num_total_diff=0\n\
    \  local -i sorted_num_total_diff_prev=0\n  local -i sorted_num_total_diff_next=0\n\
    \  local -i sorted_num_total_diff_prev_diff=0\n  local -i sorted_num_total_diff_next_diff=0\n\
    \  local -i sorted_num_total_diff_diff=0\n  local -i sorted_num_total_diff_diff_prev=0\n\
    \  local -i sorted_num_total_diff_diff_next=0\n  local -i sorted_num_total_diff_diff_prev_diff=0\n\
    \  local -\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n\
    \    local -i tmp=0\n    local -i num=0\n    local -i num_array=()\n    local\
    \ -i num_array_sorted=()\n    local -i num_array_sorted_str=''\n    local -i num_array_sorted_str_final=''\n\
    \    local -i num_array_sorted_str_final_final=''\n    local -i num_array_sorted_str_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final=''\n    local -i num_array_sorted_str_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final=''\n  \
    \  local -i num_array_sorted_str_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final=''\n\
    \    local -i num_array_sorted_str_final_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted_nums\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i num_nums\n  local -i num_sorted_nums\n\
    \  local -i num_nums_to_sort\n  local -i num_sorted_nums_to_sort\n  local -i num_sorted_nums_to_sort_next\n\
    \  local -i num_sorted_nums_to_sort_prev\n  local -i num_sorted_nums_to_sort_prev_next\n\
    \  local -i num_sorted_nums_to_sort_prev_prev\n  local -i num_sorted_nums_to_sort_next_next\n\
    \  local -i num_sorted_nums_to_sort_next_prev\n  local -i num_sorted_nums_to_sort_prev_prev_next\n\
    \  local -i num_sorted_nums_to_sort_prev_prev_prev\n  local -i num_sorted_nums_to_sort_next_next_next\n\
    \  local -i num_sorted_nums_to_sort_next_next_prev\n  local -i num_sorted_nums_to_sort_prev_prev_prev_next\n\
    \  local -i num_sorted_nums_to_sort_prev_prev_prev_prev\n  local -i num_sorted_nums_to_sort_next_next_next_next\n\
    \  local -i num_sorted_nums_to_sort_next_next_next_prev\n  local -i num_sorted_nums_to_sort_prev_prev_prev_prev_next\n\
    \  local -i num_sorted_nums_to_sort_prev_prev_prev_prev_prev\n  local -i num_sorted_nums_to_sort_next_next_next_next_next\n\
    \  local -i num_sorted_nums_to_sort_next_next_next_next_prev\n  local -i num_sorted_nums_to_sort_prev_prev_prev_prev\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -a\
    \ nums_sorted\n    local -i i\n    local -i j\n    local -i k\n    local -i num\n\
    \    local -i num_sorted\n    local -i num_sorted_prev\n    local -i num_sorted_next\n\
    \    local -i num_sorted_prev_index\n    local -i num_sorted_next_index\n    local\
    \ -i num_sorted_index\n    local -i num_sorted_index_prev\n    local -i num_sorted_index_next\n\
    \    local -i num_sorted_index_prev_prev\n    local -i num_sorted_index_next_next\n\
    \    local -i num_sorted_index_prev_prev_prev\n    local -i num_sorted_index_next_next_next\n\
    \    local -i num_sorted_index_prev_prev_prev_prev\n    local -i num_sorted_index_next_next_next_next\n\
    \    local -i num_sorted_index_prev_prev_prev_prev_prev\n    local -i num_sorted_index_next_next_next_next_next\n\
    \    local -i num_sorted_index_prev_prev_prev_prev_prev_prev\n    local -i num_sorted_index_next_next_next_next_next_next\n\
    \    local -i num_sorted_index_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ num_sorted_index_next_next_next_next_next_next_next\n    local -i num_sorted_index_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i num_sorted_index_next_next_next_next_next_next_next_next\n    local\
    \ -i num_sorted_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local\
    \ -i num_sorted_index_next_next_next_next_next_next_next_next_next\n    local\
    \ -i num_sorted_index_prev_prev_prev_prev_prev_prev_prev\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -A numbers=([zero]=0 [one]=1\
    \ [two]=2 [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n\
    \  local -a words=($1)\n  local -a numbers_sorted\n  for word in \"${words[@]}\"\
    ; do\n    numbers_sorted+=(${numbers[$word]})\n  done\n  IFS=$' '\n  echo \"${numbers_sorted[*]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -a\
    \ nums_sorted\n    local -a nums_sorted_str\n    local -a nums_sorted_str_final\n\
    \    local -a nums_sorted_str_final_str\n    local -a nums_sorted_str_final_str_final\n\
    \    local -a nums_sorted_str_final_str_final_str\n    local -a nums_sorted_str_final_str_final_str_final\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str\n    local -a nums_sorted_str_final_str_final_str_final_str_final\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str_final_str\n    local\
    \ -a nums_sorted_str_final_str_final_str_final_str_final_str_final\n    local\
    \ -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str\n    local\
    \ -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str_final\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str_final_str\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str_final_str_final\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str_final_str_final_str\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str_final_str_final_str_final\n\
    \    local -a nums_sorted_str_final_str_final_str_final_str_final_str_final_str_final_str_final_str_final_str\n\
    \    local -a nums_sorted_str_final_str_final_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i\n    local -i j\n    local -i len\n    local -i tmp\n    local -i num\n  \
    \  local -i min\n    local -i min_index\n    local -i max\n    local -i max_index\n\
    \    local -i sum\n    local -i avg\n    local -i median\n    local -i mode\n\
    \    local -i mode_count\n    local -i mode_index\n    local -i mode_tmp\n   \
    \ local -i mode_tmp_count\n    local -i mode_tmp_index\n    local -i mode_tmp_index_count\n\
    \    local -i mode_tmp_index_count_index\n    local -i mode_tmp_index_count_index_count\n\
    \    local -i mode_tmp_index_count_index_count_index\n    local -i mode_tmp_index_count_index_count_index_count\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index\n    local -i\
    \ mode_tmp_index_count_index_count_index_count_index_count\n    local -i mode_tmp_index_count_index_count_index_count_index_count_index\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count_index\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \    local -i mode_tmp_index_count_index_count_index_count_index_count_index_count_\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n\
    \  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\
    \ -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n\
    \  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local\
    \ -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\
    \  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local\
    \ -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local\
    \ -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n\
    \  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -i m\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local -a\
    \ sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i min\n  local -i\
    \ min_index\n  local -i len\n\n  numbers=($1)\n  len=${#numbers[@]}\n  for ((i=0;\
    \ i<len; i++)); do\n    min=${numbers[i]}\n    min_index=$i\n    for ((j=i+1;\
    \ j<len; j++)); do\n      if [[ ${numbers[j]} -lt $min ]]; then\n        min=${numbers[j]}\n\
    \        min_index=$j\n      fi\n    done\n    sorted[k++]=$min\n    numbers[min_index]=${numbers[i]}\n\
    \  done\n  echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i zero=0\n  local -i one=0\n  local\
    \ -i two=0\n  local -i three=0\n  local -i four=0\n  local -i five=0\n  local\
    \ -i six=0\n  local -i seven=0\n  local -i eight=0\n  local -i nine=0\n  local\
    \ -i nums_len=0\n  local -i nums_len_minus_one=0\n  local -i nums_len_minus_two=0\n\
    \  local -i nums_len_minus_three=0\n  local -i nums_len_minus_four=0\n  local\
    \ -i nums_len_minus_five=0\n  local -i nums_len_minus_six=0\n  local -i nums_len_minus_seven=0\n\
    \  local -i nums_len_minus_eight=0\n  local -i nums_len_minus_nine=0\n  local\
    \ -i nums_len_minus_ten=0\n  local -i nums_len_minus_eleven=0\n  local -i nums_len_minus_twelve=0\n\
    \  local -i nums_len_minus_thirteen=0\n  local -i nums_len_minus_fourteen=0\n\
    \  local -i nums_len_minus_fifteen=0\n  local -i nums_len_minus_sixteen=0\n  local\
    \ -i nums_len_minus_seventeen=0\n  local -i nums\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i tmp\n  local -i tmp2\n  local -i tmp3\n  local -i tmp4\n  local\
    \ -i tmp5\n  local -i tmp6\n  local -i tmp7\n  local -i tmp8\n  local -i tmp9\n\
    \  local -i tmp10\n  local -i tmp11\n  local -i tmp12\n  local -i tmp13\n  local\
    \ -i tmp14\n  local -i tmp15\n  local -i tmp16\n  local -i tmp17\n  local -i tmp18\n\
    \  local -i tmp19\n  local -i tmp20\n  local -i tmp21\n  local -i tmp22\n  local\
    \ -i tmp23\n  local -i tmp24\n  local -i tmp25\n  local -i tmp26\n  local -i tmp27\n\
    \  local -i tmp28\n  local -i tmp29\n  local -i tmp30\n  local -i tmp31\n  local\
    \ -i tmp32\n  local -i tmp33\n  local -i tmp34\n  local -i tmp35\n  local -i tmp36\n\
    \  local -i tmp37\n  local -i tmp38\n  local -i tmp39\n  local -i tmp40\n  local\
    \ -i tmp41\n  local -i tmp42\n  local -i tmp43\n  local -i tmp44\n  local -i tmp45\n\
    \  local -i tmp46\n  local -i tmp47\n  local -i tmp48\n  local -i tmp49\n  local\
    \ -i tmp50\n  local -i tmp51\n  local -i tmp52\n  local -i tmp53\n  local -i tmp54\n\
    \  local -i tmp55\n  local -i tmp56\n  local -i tmp\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local\
    \ -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i\
    \ pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n\
    \  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n \
    \ local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local\
    \ -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums=($1)\n    local\
    \ -a nums_sorted=($(for i in ${nums[@]}; do echo $i; done | sort))\n    echo ${nums_sorted[@]}\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n   \
    \ local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n   \
    \ local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp=0\n   \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -a sorted\n\
    \  local i\n  local j\n  local k\n  local -i num\n  local -i min\n  local -i min_index\n\
    \  local -i len\n\n  nums=($1)\n  len=${#nums[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    num=${nums[i]}\n    case $num in\n      zero) num=0;;\n      one) num=1;;\n\
    \      two) num=2;;\n      three) num=3;;\n      four) num=4;;\n      five) num=5;;\n\
    \      six) num=6;;\n      seven) num=7;;\n      eight) num=8;;\n      nine) num=9;;\n\
    \    esac\n    nums[i]=$num\n  done\n\n  for ((i=0; i<len; i++)); do\n    min=${nums[i]}\n\
    \    min_index=$i\n    for ((j=i+1; j<len; j++)); do\n      if [[ ${nums[j]} -lt\
    \ $min ]]; then\n        min=${nums[j]}\n        min_index=$j\n      fi\n    done\n\
    \    nums[min_index]=${nums[i]}\n    nums[i]=$min\n  done\n\n  for ((i=0; i<len;\
    \ i++)); do\n    num=${nums[i]}\n    case $num in\n      0) num=zero;;\n     \
    \ 1) num=one;;\n      2) num=two;;\n      3) num=three;;\n      4) num=four;;\n\
    \      5) num=five;;\n      6) num=six;;\n      7) num=seven;;\n      8) num=eight;;\n\
    \      9) num=nine;;\n    esac\n    nums[i]=$num\n  done\n\n  echo ${nums[@]}\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -a\
    \ nums_sorted\n    local -a nums_sorted_str\n    local -a nums_sorted_str_final\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i num_len\n\
    \    local -i num_len_sorted\n    local -i num_len_sorted_str\n    local -i num_len_sorted_str_final\n\
    \    local -i num_len_max\n    local -i num_len_max_sorted\n    local -i num_len_max_sorted_str\n\
    \    local -i num_len_max_sorted_str_final\n    local -i num_len_min\n    local\
    \ -i num_len_min_sorted\n    local -i num_len_min_sorted_str\n    local -i num_len_min_sorted_str_final\n\
    \    local -i num_len_max_diff\n    local -i num_len_max_sorted_diff\n    local\
    \ -i num_len_max_sorted_str_diff\n    local -i num_len_max_sorted_str_final_diff\n\
    \    local -i num_len_min_diff\n    local -i num_len_min_sorted_diff\n    local\
    \ -i num_len_min_sorted_str_diff\n    local -i num_len_min_sorted_str_final_diff\n\
    \    local -i num_len_diff\n    local -i num_len_sorted_diff\n    local -i num_len_sorted_str_diff\n\
    \    local -i num_len_sorted_str_final_diff\n    local -i num_len_diff_max\n \
    \   local -i num_len_sorted\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local\
    \ -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i\
    \ pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n\
    \  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n \
    \ local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local\
    \ -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n    local\
    \ -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo $1 | tr \" \" \"\\n\" | sort -n | tr \"\\n\" \" \"\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # Write your code here\n  #\
    \ Use echo to print the output\n  #echo \"one two three\"\n  echo \"$1\" | tr\
    \ ' ' '\\n' | sort | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n  local\
    \ -a sorted_numbers=()\n  local -a number_to_digit=([zero]=0 [one]=1 [two]=2 [three]=3\
    \ [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local -i i=0 j=0\n\
    \  local -i min_index=0\n  local -i min_value=0\n  local -i current_value=0\n\
    \  local -i length=${#numbers[@]}\n\n  for ((i=0; i<length; i++)); do\n    min_value=${number_to_digit[${numbers[0]}]}\n\
    \    min_index=0\n    for ((j=1; j<length; j++)); do\n      current_value=${number_to_digit[${numbers[j]}]}\n\
    \      if [[ $current_value -lt $min_value ]]; then\n        min_value=$current_value\n\
    \        min_index=$j\n      fi\n    done\n    sorted_numbers+=(${numbers[$min_index]})\n\
    \    unset numbers[$min_index]\n    numbers=(${numbers[@]})\n  done\n\n  echo\
    \ ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement me\n  echo\
    \ $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n    local -i\
    \ i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   # Convert the string to an array\n    IFS=' ' read -r -a array <<< \"$1\"\n\
    \    # Sort the array\n    sorted=($(printf '%s\\n' \"${array[@]}\" | sort))\n\
    \    # Convert the array back to a string\n    echo \"${sorted[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Your code here\n    echo\
    \ $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this function\n\
    \  echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n \
    \   sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"\
    three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four\
    \ seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993402
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local\
    \ -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i\
    \ pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n\
    \  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n \
    \ local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local\
    \ -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> sort_numbers('three one five')\n# 'one three\
    \ five'\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993401

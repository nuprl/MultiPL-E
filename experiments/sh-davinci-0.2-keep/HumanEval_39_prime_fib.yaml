name: HumanEval_39_prime_fib
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n# >>> prime_fib(1)\n# 2\n# >>> prime_fib(2)\n# 3\n# >>> prime_fib(3)\n\
  # 5\n# >>> prime_fib(4)\n# 13\n# >>> prime_fib(5)\n# 89\n#\n# $1 is an integer\n\
  prime_fib() {\n"
tests: "}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
  \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"\
  5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"\
  7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
  \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
completions: ["    local n=$1\n    local i=1\n    local f=1\n    local f_1=1\n   \
    \ local f_2=1\n    local p=0\n    while [ $i -lt $n ]; do\n        f=$((f_1 +\
    \ f_2))\n        f_2=$f_1\n        f_1=$f\n        if is_prime $f; then\n    \
    \        p=$f\n            i=$((i + 1))\n        fi\n    done\n    echo $p", " \
    \ local n=$1\n  local i=1\n  local j=1\n  local k=1\n  local count=0\n  local\
    \ fib=0\n  while [ $count -lt $n ]; do\n    fib=$((i+j))\n    i=$j\n    j=$fib\n\
    \    if [ $(is_prime $fib) -eq 1 ]; then\n      count=$((count+1))\n    fi\n \
    \ done\n  echo $fib", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local fib_next=1\n  local prime_fib=1\n  while [ $i -lt $n ]; do\n    fib_next=$((fib+fib_prev))\n\
    \    fib_prev=$fib\n    fib=$fib_next\n    if is_prime $fib; then\n      prime_fib=$fib\n\
    \      i=$((i+1))\n    fi\n  done\n  echo $prime_fib", "    local n=$1\n    local\
    \ i=0\n    local fib=0\n    local fib_1=1\n    local fib_2=1\n    while [ $i -lt\
    \ $n ]; do\n        fib=$((fib_1 + fib_2))\n        fib_2=$fib_1\n        fib_1=$fib\n\
    \        if is_prime $fib; then\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $fib", "    local n=\"$1\"\n    local i=0\n    local fib=0\n    local\
    \ fib_prev=0\n    local fib_prev_prev=0\n    while (( i < n )); do\n        if\
    \ (( i == 0 )); then\n            fib=2\n        elif (( i == 1 )); then\n   \
    \         fib=3\n        else\n            fib=$(( fib_prev + fib_prev_prev ))\n\
    \        fi\n        if is_prime \"$fib\"; then\n            (( i++ ))\n     \
    \   fi\n        fib_prev_prev=$fib_prev\n        fib_prev=$fib\n    done\n   \
    \ echo \"$fib\"", "    local n=$1\n    local i=2\n    local fib=1\n    local fib_prev=1\n\
    \    local fib_next=0\n    local count=0\n    while [ $count -lt $n ]; do\n  \
    \      fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n\
    \        if [ $fib -gt $i ] && is_prime $i; then\n            count=$((count +\
    \ 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $fib", "  local n=$1\n\
    \  local i=0\n  local fib=0\n  local fib_prev=0\n  local fib_prev_prev=0\n  local\
    \ fib_prime=0\n  local fib_prime_prev=0\n  local fib_prime_prev_prev=0\n  local\
    \ fib_prime_count=0\n  local fib_prime_count_prev=0\n  local fib_prime_count_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev=0\n  local fib_prime_count_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev=0\n  local fib_prime_count_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev=0\n  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \ local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib_prime_count_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local fib", "    local n=$1\n    local i=0\n    local fib=0\n    local fib_1=1\n\
    \    local fib_2=1\n    while [ $i -lt $n ]; do\n        fib=$((fib_1 + fib_2))\n\
    \        fib_2=$fib_1\n        fib_1=$fib\n        if [ $fib -gt 1 ] && [ $((fib\
    \ % 2)) -ne 0 ] && [ $((fib % 3)) -ne 0 ] && [ $((fib % 5)) -ne 0 ] && [ $((fib\
    \ % 7)) -ne 0 ]; then\n            i=$((i + 1))\n        fi\n    done\n    echo\
    \ $fib", "    local n=$1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ fib=0\n    while [ $k -lt $n ]; do\n        fib=$((i + j))\n        if [ $(is_prime\
    \ $fib) -eq 1 ]; then\n            k=$((k + 1))\n        fi\n        i=$j\n  \
    \      j=$fib\n    done\n    echo $fib", "    local n=$1\n    local i=0\n    local\
    \ fib=0\n    local fib_prev=0\n    local fib_next=1\n    while [ $i -lt $n ];\
    \ do\n        fib=$fib_next\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        if is_prime $fib; then\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $fib", "    local n=$1\n    local i=1\n    local fib=1\n    local fib_prev=1\n\
    \    local fib_next=1\n    local count=0\n    while [ $count -lt $n ]; do\n  \
    \      fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n\
    \        if [ $(is_prime $fib) -eq 1 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $fib", "    local n=$1\n    local fib_n=1\n  \
    \  local fib_n_1=1\n    local fib_n_2=1\n    local i=3\n    while [ $i -le $n\
    \ ]; do\n        fib_n=$((fib_n_1 + fib_n_2))\n        fib_n_2=$fib_n_1\n    \
    \    fib_n_1=$fib_n\n        i=$((i + 1))\n    done\n    if [ $n -eq 1 ]; then\n\
    \        echo 2\n    elif [ $n -eq 2 ]; then\n        echo 3\n    else\n     \
    \   echo $fib_n\n    fi", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local fib_next=1\n  local prime_fib=1\n  while [ $i -lt $n ]; do\n    fib_next=$((fib\
    \ + fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n    if is_prime $fib; then\n\
    \      prime_fib=$fib\n      i=$((i + 1))\n    fi\n  done\n  echo $prime_fib",
  "    local n=$1\n    local i=1\n    local fib=0\n    local fib_prev=1\n    local\
    \ fib_next=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n\
    \        fib_prev=$fib\n        fib=$fib_next\n        if is_prime $fib; then\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo $fib", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    echo \"2\"", "  local n=$1\n\
    \  local i=1\n  local fib=1\n  local fib_prev=1\n  local prime_fib=1\n  while\
    \ [ $i -lt $n ]; do\n    fib=$((fib+fib_prev))\n    fib_prev=$fib\n    if is_prime\
    \ $fib; then\n      prime_fib=$fib\n      i=$((i+1))\n    fi\n  done\n  echo $prime_fib",
  "  local n=$1\n  local i=0\n  local fib=0\n  local fib_prev=0\n  local fib_prev_prev=0\n\
    \  while [ $i -lt $n ]; do\n    if [ $i -eq 0 ]; then\n      fib=2\n    elif [\
    \ $i -eq 1 ]; then\n      fib=3\n    else\n      fib=$((fib_prev + fib_prev_prev))\n\
    \    fi\n    if [ $(is_prime $fib) -eq 1 ]; then\n      i=$((i + 1))\n    fi\n\
    \    fib_prev_prev=$fib_prev\n    fib_prev=$fib\n  done\n  echo $fib", "    local\
    \ n=$1\n    local fib_n=1\n    local fib_n_1=1\n    local fib_n_2=0\n    local\
    \ i=1\n    local prime_fib_n=0\n    local prime_fib_n_1=0\n    local prime_fib_n_2=0\n\
    \    while [ $i -lt $n ]; do\n        fib_n=$((fib_n_1 + fib_n_2))\n        fib_n_2=$fib_n_1\n\
    \        fib_n_1=$fib_n\n        if is_prime $fib_n; then\n            prime_fib_n=$fib_n\n\
    \            prime_fib_n_2=$prime_fib_n_1\n            prime_fib_n_1=$prime_fib_n\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo $prime_fib_n", "   \
    \ local n=$1\n    local i=1\n    local j=1\n    local k=0\n    local count=0\n\
    \    while [ $count -lt $n ]; do\n        k=$((i+j))\n        i=$j\n        j=$k\n\
    \        if is_prime $k; then\n            count=$((count+1))\n        fi\n  \
    \  done\n    echo $k", "  local n=$1\n  local i=1\n  local f=1\n  local f_prev=1\n\
    \  local f_next=1\n  local p=0\n  while [ $i -lt $n ]; do\n    f_next=$((f + f_prev))\n\
    \    f_prev=$f\n    f=$f_next\n    if is_prime $f; then\n      p=$f\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $p"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    local i\n    for ((i=1;\
    \ i<=${#1}; i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"\
    ${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    local i=0\n    local\
    \ len=${#1}\n    while [ $i -lt $len ]; do\n        prefixes[$i]=${1:0:$((i+1))}\n\
    \        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ local prefix=''\n    for ((i=0; i<${#string}; i++)); do\n        prefix+=${string:$i:1}\n\
    \        prefixes+=(\"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local prefixes=()\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local -a prefixes\n  local i\n  for ((i=1; i<=${#1};\
    \ i++)); do\n    prefixes+=( \"${1:0:i}\" )\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    local i\n    for ((i=1;\
    \ i<=${#1}; i++)); do\n        prefixes+=( \"${1:0:i}\" )\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        prefixes+=(${str:0:$((i+1))})\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  local i=0\n    while [[ $i -lt ${#str} ]]; do\n        prefixes+=(\"${str:0:$((i+1))}\"\
    )\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefix=''\n    local\
    \ prefixes=()\n    for (( i=0; i<${#string}; i++ )); do\n        prefix+=${string:$i:1}\n\
    \        prefixes+=(\"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for (( i=0; i<${#str}; i++ )); do\n        prefixes+=(\"${str:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local len=${#string}\n\
    \    local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${string:0:i}\"\
    \n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n        prefixes+=(\"\
    ${str:0:$((i+1))}\")\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    local prefix\n    for ((i=1; i<=len; i++)); do\n        prefix=${str:0:i}\n\
    \        echo \"$prefix\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for (( i=1; i<=len; i++ )); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for (( i=1; i<=len; i++ )); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n        prefixes+=(\"\
    ${str:0:$((i+1))}\")\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for (( i=1; i<=$len; i++ )); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local prefixes=()\n\
    \    for ((i=0; i<${#string}; i++)); do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(${string:0:i})\n   \
    \ done\n    echo ${prefixes[@]}\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=$len; i++)); do\n        echo \"${str:0:$i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    local i\n    for ((i=1;\
    \ i<=${#1}; i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"\
    ${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i=0\n    while [ $i -lt $len ]; do\n        echo \"${str:0:$((i+1))}\"\
    \n        i=$((i+1))\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=$len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for (( i=1; i<=$len; i++ )); do\n        prefixes+=(${str:0:$i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i=1\n    local prefixes=()\n    while [ $i -le $len ]; do\n        prefixes+=(${str:0:$i})\n\
    \        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for (( i=0; i<${#str}; i++ )); do\n        prefixes+=(\"${str:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -n __all_prefixes_result=$2\n    local\
    \ str=$1\n    local len=${#str}\n    local i\n    for ((i=1; i<=len; i++)); do\n\
    \        __all_prefixes_result+=( \"${str:0:i}\" )\n    done\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpckq_8h89.sh: line 8: local: `'': not a valid identifier

    /tmp/tmpckq_8h89.sh: line 8: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local len=${#string}\n\
    \    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${string:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local -a prefixes\n  \
    \  local i\n    for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefix\n    for ((i=1; i<=len; i++)); do\n        prefix=${str:0:i}\n\
    \        echo \"$prefix\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(${1:0:i})\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i=0\n    local prefix\n    while [ $i -lt $len ]; do\n        prefix=${str:0:$((i+1))}\n\
    \        echo \"$prefix\"\n        i=$((i+1))\n    done\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local length=${#string}\n\
    \    local prefixes=()\n    for ((i=1; i<=length; i++)); do\n        prefixes+=(\"\
    ${string:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for (( i=1; i<=len; i++ )); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a result\n    local string=\"$1\"\n \
    \   local length=\"${#string}\"\n    for ((i=1; i<=length; i++)); do\n       \
    \ result+=(\"${string:0:i}\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=\"\"\n \
    \   for ((i=0; i<${#1}; i++)); do\n        prefix+=\"${1:$i:1}\"\n        prefixes+=(\"\
    $prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local -a prefixes\n  \
    \  for (( i=1; i<=${#str}; i++ )); do\n        prefixes+=(\"${str:0:i}\")\n  \
    \  done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local input=$1\n    local prefixes=()\n    local\
    \ i=0\n    while [ $i -lt ${#input} ]; do\n        prefixes+=(\"${input:0:$((i+1))}\"\
    )\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i=1\n    local prefix\n    while [ $i -le $len ]; do\n        prefix=${str:0:$i}\n\
    \        echo $prefix\n        i=$((i+1))\n    done\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(${str:0:i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local length=${#string}\n\
    \    local prefixes=()\n    for ((i=1; i<=$length; i++)); do\n        prefixes+=(\"\
    ${string:0:$i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n    for\
    \ ((i=1; i<=${#str}; i++)); do\n        prefixes+=(\"${str:0:i}\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i=0\n    local prefix\n    while (( i < len )); do\n        prefix=${str:0:$((i+1))}\n\
    \        echo \"$prefix\"\n        ((i++))\n    done\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    local str=\"$1\"\n  \
    \  local len=${#str}\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local input=$1\n    local output=()\n    local\
    \ i=0\n    while [ $i -lt ${#input} ]; do\n        output+=(\"${input:0:$((i+1))}\"\
    )\n        i=$((i+1))\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i=1\n    while [ $i -le $len ]; do\n        echo \"${str:0:$i}\"\n        i=$((i+1))\n\
    \    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local len=${#string}\n\
    \    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${string:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local str=\"$1\"\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefix\n\n    for ((i=1; i<=len; i++)); do\n        prefix=${str:0:i}\n\
    \        echo \"$prefix\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i=1\n    local prefixes=()\n    while [ $i -le $len ]; do\n        prefixes+=(\"\
    ${str:0:$i}\")\n        ((i++))\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(${str:0:i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes\n    for ((i=1; i<=len; i++)); do\n        prefixes=\"\
    $prefixes ${str:0:i}\"\n    done\n    echo $prefixes\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local input=$1\n    local output=()\n    for\
    \ (( i=0; i<${#input}; i++ )); do\n        output+=(\"${input:0:$((i+1))}\")\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    for\
    \ (( i=1; i<=$len; i++ )); do\n        echo ${str:0:$i}\n    done\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local -a prefixes\n  \
    \  for ((i=1; i<=${#str}; i++)); do\n        prefixes+=(\"${str:0:i}\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  local len=${#str}\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=\"$1\"\n    local prefixes=()\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        prefixes+=(\"${string:0:$((i+1))}\"\
    )\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefix\n    for ((i=1; i<=len; i++)); do\n        prefix=${str:0:i}\n\
    \        echo \"$prefix\"\n    done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local len=${#string}\n\
    \    local prefixes=()\n    for (( i=1; i<=$len; i++ )); do\n        prefixes+=(\"\
    ${string:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for (( i=1; i<=$len; i++ )); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n    for\
    \ ((i=1; i<=${#str}; i++)); do\n        prefixes+=(\"${str:0:i}\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i=1\n    local prefixes=()\n    while [ $i -le $len ]; do\n        prefixes+=(${str:0:$i})\n\
    \        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(${str:0:i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for (( i=1; i<=$len; i++ )); do\n        prefixes+=(${str:0:$i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ for (( i=0; i<${#1}; i++ )); do\n        prefix+=\"${1:$i:1}\"\n        prefixes+=(\"\
    $prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local -a prefixes\n    local prefix\n    local\
    \ i\n    for ((i=0; i<${#1}; i++)); do\n        prefix=\"${1:0:$((i+1))}\"\n \
    \       prefixes+=(\"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for (( i=1; i<=len; i++ )); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i=0\n    local len=${#1}\n    while [ $i -lt $len ]; do\n        prefix+=\"\
    ${1:$i:1}\"\n        prefixes+=(\"$prefix\")\n        i=$((i+1))\n    done\n \
    \   echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(${str:0:i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local len=${#1}\n   \
    \ for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n \
    \   echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for (( i=1; i<=len; i++ )); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i=0\n    local prefixes=()\n    while [ $i -lt $len ]; do\n        prefixes+=(\"\
    ${str:0:$i}\")\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\
    \ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        prefixes+=( \"${str:0:$((i+1))}\" )\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(${str:0:i})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    local prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\
    ${str:0:i}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n \
    \   done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefix=''\n    local\
    \ prefixes=()\n    for ((i=0; i<${#string}; i++)); do\n        prefix+=${string:$i:1}\n\
    \        prefixes+=($prefix)\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  for ((i=0; i<${#str}; i++)); do\n        prefixes+=(\"${str:0:$((i+1))}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        prefixes+=(${string:0:$((i+1))})\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefixes=()\n  \
    \  local i=0\n    while [ $i -lt ${#str} ]; do\n        prefixes+=(\"${str:0:$((i+1))}\"\
    )\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for (( i=1; i<=${#1};\
    \ i++ )); do\n        prefixes+=(\"${1:0:i}\")\n    done\n    printf '%s\\n' \"\
    ${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local prefixes=()\n    for\
    \ ((i=1; i<=${#str}; i++)); do\n        prefixes+=(\"${str:0:i}\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n    done\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ i\n    for ((i=1; i<=len; i++)); do\n        echo ${str:0:i}\n    done\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local prefix=\"\"\n  \
    \  local result=()\n    for (( i=0; i<${#str}; i++ )); do\n        prefix=\"${prefix}${str:$i:1}\"\
    \n        result+=(\"$prefix\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    for ((i=1; i<=${#1};\
    \ i++)); do\n        prefixes+=( \"${1:0:i}\" )\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=\"$1\"\n    local len=${#str}\n  \
    \  local i\n    for ((i=1; i<=len; i++)); do\n        echo \"${str:0:i}\"\n  \
    \  done\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local str=$1\n    local len=${#str}\n    local\
    \ prefixes=()\n    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"${str:0:i}\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local string=$1\n    local prefixes=()\n   \
    \ for ((i=1; i<=${#string}; i++)); do\n        prefixes+=(\"${string:0:i}\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659994489

name: HumanEval_135_can_arrange
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Create a function which returns the largest index of an element\
  \ which\n# is not greater than or equal to the element immediately preceding it.\
  \ If\n# no such element exists then return -1. The given array will not contain\n\
  # duplicate values.\n# Examples:\n# can_arrange([1,2,4,3,5]) = 3\n# can_arrange([1,2,3])\
  \ = -1\n#\n# $1 is a space-separated list\ncan_arrange() {\n"
tests: "}\n\ncandidate() {\n    can_arrange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 4 3 5\") = \"3\" ]]\n    [[ $(candidate \"1 2 4 5\") = \"\
  -1\" ]]\n    [[ $(candidate \"1 4 2 5 6 7 8 9 10\") = \"2\" ]]\n    [[ $(candidate\
  \ \"4 8 5 7 3\") = \"4\" ]]\n    [[ $(candidate \"\") = \"-1\" ]]\n}\n\nrun_test"
completions: ["  local -a arr\n  local -i i\n  local -i n\n  local -i max\n  local\
    \ -i max_index\n  local -i prev\n  local -i prev_index\n  IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n  n=${#arr[@]}\n  max=${arr[0]}\n  max_index=0\n  prev=${arr[0]}\n\
    \  prev_index=0\n  for ((i=1; i<n; i++)); do\n    if [[ ${arr[i]} -gt max ]];\
    \ then\n      max=${arr[i]}\n      max_index=i\n    fi\n    if [[ ${arr[i]} -lt\
    \ prev ]]; then\n      prev=${arr[i]}\n      prev_index=i\n    fi\n  done\n  if\
    \ [[ prev -lt max ]]; then\n    echo $prev_index\n  else\n    echo -1\n  fi",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i current_value=0\n  local -i current_index=0\n\
    \  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    current_value=${arr[i]}\n    current_index=i\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -le current_value ]];\
    \ then\n        if [[ ${arr[j]} -gt max_value ]]; then\n          max_value=${arr[j]}\n\
    \          max_index=j\n        fi\n      fi\n    done\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local max_index=0\n  local\
    \ max_value=0\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    if (( arr[i] < arr[i-1]\
    \ )); then\n      max_index=$i\n      max_value=${arr[i]}\n      for ((j=i-1;\
    \ j>=0; j--)); do\n        if (( arr[j] <= max_value )); then\n          max_index=$j\n\
    \          max_value=${arr[j]}\n        fi\n      done\n      echo $max_index\n\
    \      return\n    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i\
    \ i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i curr_value=0\n  local -i curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0;\
    \ i<len; i++)); do\n    curr_value=${arr[i]}\n    for ((j=i+1; j<len; j++)); do\n\
    \      if ((arr[j] <= curr_value)); then\n        curr_index=j\n        break\n\
    \      fi\n    done\n    if ((curr_index > max_index)); then\n      max_index=curr_index\n\
    \      max_value=curr_value\n    fi\n  done\n  echo $max_index", "  local -a arr=(\"\
    $@\")\n  local i=0\n  local j=0\n  local max=0\n  local max_index=0\n  local result=-1\n\
    \n  for ((i=0; i<${#arr[@]}; i++)); do\n    max=${arr[i]}\n    max_index=$i\n\
    \    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -le $max ]];\
    \ then\n        max=${arr[j]}\n        max_index=$j\n      fi\n    done\n    if\
    \ [[ $max_index -gt $i ]]; then\n      result=$i\n      break\n    fi\n  done\n\
    \n  echo $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  local -i n=${#arr[@]}\n  for\
    \ ((i=0; i<n; i++)); do\n    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1;\
    \ j<n; j++)); do\n      if ((arr[i] > arr[j])); then\n        echo -1\n      \
    \  return\n      fi\n    done\n  done\n  echo $max_index", "  local -a arr\n \
    \ local -i i j\n  arr=($1)\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    if ((arr[i]<arr[i-1]));\
    \ then\n      for ((j=i-1; j>=0; j--)); do\n        if ((arr[i]>=arr[j])); then\n\
    \          echo $j\n          return\n        fi\n      done\n    fi\n  done\n\
    \  echo -1", "    local -a arr=($1)\n    local -i i\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n       \
    \ if ((arr[i] >= max_value)); then\n            max_value=arr[i]\n           \
    \ max_index=i\n        fi\n    done\n    echo $max_index", "  local -a arr=(\"\
    $@\")\n  local -i i\n  local -i j\n  local -i len=${#arr[@]}\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] >= max_value));\
    \ then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n  for ((i=0;\
    \ i<len; i++)); do\n    if ((i == max_index)); then\n      continue\n    fi\n\
    \    for ((j=i+1; j<len; j++)); do\n      if ((j == max_index)); then\n      \
    \  continue\n      fi\n      if ((arr[i] >= arr[j])); then\n        echo -1\n\
    \        return\n      fi\n    done\n  done\n  echo $max_index", "    local -a\
    \ arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local -i i=0\n    local -i j=0\n\
    \    local -i max_index=-1\n    local -i max_val=0\n    local -i curr_val=0\n\
    \    local -i curr_index=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        curr_val=${arr[$i]}\n\
    \        curr_index=$i\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n       \
    \     if [[ ${arr[$j]} -le $curr_val ]]; then\n                if [[ $j -gt $max_index\
    \ ]]; then\n                    max_index=$j\n                    max_val=${arr[$j]}\n\
    \                fi\n            fi\n        done\n    done\n    echo $max_index",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_i=0\n \
    \ local -i max_j=0\n  local -i max_diff=0\n  local -i diff=0\n  local -i len=${#arr[@]}\n\
    \  local -i result=-1\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len;\
    \ j++)); do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff > 0 && diff > max_diff));\
    \ then\n        max_diff=$diff\n        max_i=$i\n        max_j=$j\n      fi\n\
    \    done\n  done\n\n  if ((max_diff > 0)); then\n    result=$max_j\n  fi\n\n\
    \  echo $result", "  local -a arr\n  arr=($1)\n  local i\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1", "    local -a a=($1)\n    local i=0\n\
    \    local j=0\n    local max_index=0\n    local max_value=0\n    local result=-1\n\
    \    for ((i=${#a[@]}-1; i>=0; i--)); do\n        if [[ ${a[i]} -lt $max_value\
    \ ]]; then\n            result=$max_index\n        else\n            max_value=${a[i]}\n\
    \            max_index=$i\n        fi\n    done\n    echo $result", "  local -a\
    \ arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i max_index=0\n\
    \  local -i len=${#arr[@]}\n  local -i result=-1\n\n  for ((i=0; i<len; i++));\
    \ do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n\
    \      if [[ ${arr[j]} -le max ]]; then\n        max=${arr[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n      result=$i\n \
    \     break\n    fi\n  done\n\n  echo $result", "  local -a arr=($1)\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_diff=0\n\
    \  local -i diff=0\n  local -i len=${#arr[@]}\n  local -i result=-1\n\n  for ((i=0;\
    \ i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      diff=${arr[j]}-${arr[i]}\n\
    \      if ((diff > 0 && diff > max_diff)); then\n        max_diff=$diff\n    \
    \    max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  if ((max_diff\
    \ > 0)); then\n    result=$max_j\n  fi\n\n  echo $result", "  local -a arr=($1)\n\
    \  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] < arr[i-1]));\
    \ then\n      for ((j=i; j<len; j++)); do\n        if ((arr[j] < arr[i-1])); then\n\
    \          if ((arr[j] > max_value)); then\n            max_value=${arr[j]}\n\
    \            max_index=$j\n          fi\n        fi\n      done\n      if ((max_index\
    \ == -1)); then\n        echo -1\n        return\n      fi\n      arr[max_index]=${arr[i-1]}\n\
    \      arr[i-1]=$max_value\n      max_index=-1\n      max_value=0\n    fi\n  done\n\
    \  echo -1", "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local max=0\n\
    \  local max_index=0\n  local len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n\
    \    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n    \
    \  if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n      arr[$max_index]=${arr[i]}\n\
    \      arr[$i]=$max\n    fi\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [[\
    \ ${arr[i]} -gt ${arr[i+1]} ]]; then\n      echo $i\n      return\n    fi\n  done\n\
    \  echo -1", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=-1\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((arr[i] < max_value));\
    \ then\n      for ((j=i+1; j<${#arr[@]}; j++)); do\n        if ((arr[j] > arr[i]\
    \ && arr[j] < max_value)); then\n          max_value=arr[j]\n          max_index=j\n\
    \        fi\n      done\n    fi\n  done\n  echo $max_index", "  local -a arr=($1)\n\
    \  local -i i=0\n  local -i j=0\n  local -i max_index=0\n  local -i max_value=0\n\
    \  local -i result=-1\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((arr[i]\
    \ > max_value)); then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n\
    \n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((arr[i] < max_value)); then\n\
    \      for ((j=i+1; j<${#arr[@]}; j++)); do\n        if ((arr[j] < max_value &&\
    \ arr[j] > arr[i])); then\n          max_value=arr[j]\n          max_index=j\n\
    \        fi\n      done\n      result=$i\n      break\n    fi\n  done\n\n  echo\
    \ $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n  local -i\
    \ curr_index=0\n  local -i prev_value=0\n  local -i prev_index=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    curr_value=${arr[i]}\n    curr_index=$i\n\
    \    for ((j=i+1; j<len; j++)); do\n      if [[ ${arr[j]} -le $curr_value ]];\
    \ then\n        if [[ $max_value -lt ${arr[j]} ]]; then\n          max_value=${arr[j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n    if [[ $max_index\
    \ -gt $curr_index ]]; then\n      prev_value=$curr_value\n      prev_index=$curr_index\n\
    \      curr_value=$max_value\n      curr_index=$max_index\n      arr[$curr_index]=$prev_value\n\
    \      arr[$prev_index]=$curr_value\n      max_index=-1\n      max_value=0\n \
    \   fi\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${arr[i]} -gt ${arr[i+1]}\
    \ ]]; then\n      echo $i\n      return\n    fi\n  done\n  echo -1", "  local\
    \ -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local max_index=0\n  local max_value=0\n\
    \  local result=-1\n\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    if [[ ${arr[i]}\
    \ -le ${arr[i-1]} ]]; then\n      max_value=${arr[i]}\n      max_index=$i\n  \
    \    for ((j=i-1; j>=0; j--)); do\n        if [[ ${arr[j]} -le ${arr[i-1]} ]];\
    \ then\n          if [[ ${arr[j]} -gt $max_value ]]; then\n            max_value=${arr[j]}\n\
    \            max_index=$j\n          fi\n        fi\n      done\n      result=$max_index\n\
    \      break\n    fi\n  done\n\n  echo $result", "    local -a arr=($1)\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max=0\n    local -i max_index=0\n   \
    \ local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        max=${arr[i]}\n\
    \        max_index=i\n        for ((j=i+1; j<len; j++)); do\n            if ((arr[j]\
    \ < max)); then\n                max=${arr[j]}\n                max_index=j\n\
    \            fi\n        done\n        if ((max_index != i)); then\n         \
    \   arr[max_index]=${arr[i]}\n            arr[i]=$max\n        fi\n    done\n\
    \    for ((i=1; i<len; i++)); do\n        if ((arr[i] < arr[i-1])); then\n   \
    \         echo $((i-1))\n            return\n        fi\n    done\n    echo -1",
  "  # Fill in the code here\n  echo -1", "  local -a arr\n  read -ra arr <<< \"$1\"\
    \n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=-1\n\
    \  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    if ((arr[i] >= max_value)); then\n\
    \      max_value=arr[i]\n      max_index=i\n    fi\n  done\n  echo $max_index",
  "    local -a arr=($1)\n    local i=0\n    local j=0\n    local max=0\n    local\
    \ max_index=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        max=${arr[i]}\n\
    \        max_index=$i\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n        \
    \    if [[ ${arr[j]} -le ${arr[i]} ]]; then\n                if [[ ${arr[j]} -gt\
    \ $max ]]; then\n                    max=${arr[j]}\n                    max_index=$j\n\
    \                fi\n            fi\n        done\n        if [[ $max_index -ne\
    \ $i ]]; then\n            echo $max_index\n            return\n        fi\n \
    \   done\n    echo -1", "  local -a arr\n  arr=($1)\n  local i\n  local j\n  local\
    \ max\n  local max_index\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    max=${arr[i]}\n\
    \    max_index=$i\n    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -lt\
    \ $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n      fi\n    done\n\
    \    if [[ $max_index -ne $i ]]; then\n      echo $max_index\n      return\n \
    \   fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_i=-1\n  local -i max_j=-1\n  local -i max_diff=-1\n \
    \ local -i diff=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n\
    \    for ((j=i+1; j<len; j++)); do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff\
    \ > 0 && diff > max_diff)); then\n        max_diff=$diff\n        max_i=$i\n \
    \       max_j=$j\n      fi\n    done\n  done\n  if ((max_i == -1)); then\n   \
    \ echo -1\n  else\n    echo $max_j\n  fi", "  local -a arr=(\"$@\")\n  local -i\
    \ i=0\n  local -i max=0\n  local -i max_i=0\n  local -i n=${#arr[@]}\n  while\
    \ (( i < n )); do\n    if (( arr[i] > max )); then\n      max=arr[i]\n      max_i=i\n\
    \    fi\n    (( i++ ))\n  done\n  (( max_i == 0 )) && echo -1 || echo $max_i",
  "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i curr_value=0\n    local -i curr_index=0\n\
    \    local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        curr_value=${arr[i]}\n\
    \        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]} -le curr_value\
    \ ]]; then\n                curr_index=$j\n                break\n           \
    \ fi\n        done\n        if [[ $curr_index -gt $max_index ]]; then\n      \
    \      max_index=$curr_index\n            max_value=${arr[max_index]}\n      \
    \  fi\n    done\n    echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\
    \ j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n\
    \  local -i curr_index=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    curr_value=${arr[$i]}\n\
    \    if ((curr_value > max_value)); then\n      max_value=$curr_value\n      max_index=$i\n\
    \    fi\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    curr_value=${arr[$i]}\n\
    \    if ((curr_value < max_value)); then\n      curr_index=$i\n      for ((j=i+1;\
    \ j<${#arr[@]}; j++)); do\n        if ((curr_value < ${arr[$j]})); then\n    \
    \      curr_index=$j\n          break\n        fi\n      done\n      if ((curr_index\
    \ > max_index)); then\n        max_index=$curr_index\n      fi\n    fi\n  done\n\
    \  echo $max_index", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n  local -i\
    \ curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n   \
    \ curr_value=${arr[i]}\n    curr_index=i\n    for ((j=i+1; j<len; j++)); do\n\
    \      if [[ ${arr[j]} -le curr_value ]]; then\n        if [[ ${arr[j]} -gt max_value\
    \ ]]; then\n          max_value=${arr[j]}\n          max_index=j\n        fi\n\
    \      fi\n    done\n    if [[ $max_index -ne -1 ]]; then\n      echo $max_index\n\
    \      return\n    fi\n  done\n  echo -1", "    local -a arr=($1)\n    local -i\
    \ i=0\n    local -i j=0\n    local -i max=0\n    local -i max_index=0\n    local\
    \ -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        max=${arr[i]}\n\
    \        max_index=$i\n        for ((j=i+1; j<len; j++)); do\n            if [[\
    \ ${arr[j]} -le $max ]]; then\n                max=${arr[j]}\n               \
    \ max_index=$j\n            fi\n        done\n        if [[ $max_index -ne $i\
    \ ]]; then\n            echo $max_index\n            return\n        fi\n    done\n\
    \    echo -1", "  local -a arr=($1)\n  local i=0\n  local j=0\n  local k=0\n \
    \ local max=0\n  local max_index=0\n  local len=${#arr[@]}\n  if [ $len -le 1\
    \ ]; then\n    echo -1\n    return\n  fi\n  for ((i=0; i<len; i++)); do\n    max=${arr[i]}\n\
    \    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n      if [ ${arr[j]} -le\
    \ $max ]; then\n        max=${arr[j]}\n        max_index=$j\n      fi\n    done\n\
    \    for ((k=max_index; k>i; k--)); do\n      arr[k]=${arr[k-1]}\n    done\n \
    \   arr[i]=$max\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [ ${arr[i]} -gt\
    \ ${arr[i+1]} ]; then\n      echo $i\n      return\n    fi\n  done\n  echo -1",
  "    local -a arr\n    local -i i\n    local -i len\n    local -i max\n    local\
    \ -i max_i\n    local -i tmp\n    arr=($1)\n    len=${#arr[@]}\n    max=${arr[0]}\n\
    \    max_i=0\n    for ((i=1; i<len; i++)); do\n        tmp=${arr[i]}\n       \
    \ if ((tmp < max)); then\n            echo $max_i\n            return\n      \
    \  fi\n        if ((tmp > max)); then\n            max=$tmp\n            max_i=$i\n\
    \        fi\n    done\n    echo -1", "    local -a arr=($1)\n    local -i i=0\n\
    \    local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local\
    \ -i len=${#arr[@]}\n    local -i tmp_index=0\n    local -i tmp_value=0\n    for\
    \ ((i=0; i<len; i++)); do\n        tmp_index=i\n        tmp_value=${arr[i]}\n\
    \        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]} -le tmp_value\
    \ ]]; then\n                tmp_index=j\n                tmp_value=${arr[j]}\n\
    \            fi\n        done\n        if [[ tmp_index -gt max_index ]]; then\n\
    \            max_index=tmp_index\n            max_value=tmp_value\n        fi\n\
    \    done\n    echo $max_index", "  local -a arr=($1)\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n\
    \  local -i curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    curr_value=${arr[i]}\n    for ((j=i+1; j<len; j++)); do\n      if [[\
    \ ${arr[j]} -le curr_value ]]; then\n        curr_index=$j\n        break\n  \
    \    fi\n    done\n    if [[ $curr_index -gt $max_index ]]; then\n      max_index=$curr_index\n\
    \      max_value=${arr[max_index]}\n    fi\n  done\n  echo $max_index", "  local\
    \ -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n \
    \ local -i max_value=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[i]}\
    \ -gt $max_value ]]; then\n      max_value=${arr[i]}\n      max_index=$i\n   \
    \ fi\n    if [[ ${arr[i]} -lt $max_value ]]; then\n      for ((j=0; j<i; j++));\
    \ do\n        if [[ ${arr[j]} -ge ${arr[i]} ]]; then\n          max_index=$j\n\
    \          break\n        fi\n      done\n      break\n    fi\n  done\n  echo\
    \ $max_index", "  local -a arr=($1)\n  local -i n=${#arr[@]}\n  local -i i=0\n\
    \  local -i j=0\n  local -i max=0\n  local -i max_index=0\n  local -i res=-1\n\
    \  for ((i=0; i<n; i++)); do\n    max=${arr[i]}\n    max_index=i\n    for ((j=i+1;\
    \ j<n; j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=j\n      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n\
    \      res=$i\n      break\n    fi\n  done\n  echo $res", "  local -a arr=(\"\
    $@\")\n  local -i len=${#arr[@]}\n  local -i i=0\n  local -i max_index=-1\n  local\
    \ -i max_value=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[i]} -gt max_value\
    \ ]]; then\n      max_value=${arr[i]}\n      max_index=i\n    fi\n  done\n  echo\
    \ $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_val=0\n  local -i cur_val=0\n  local -i cur_index=0\n\
    \  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    cur_val=${arr[i]}\n    cur_index=i\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -le cur_val ]]; then\n\
    \        if [[ cur_index -gt max_index ]]; then\n          max_index=cur_index\n\
    \          max_val=cur_val\n        fi\n        break\n      fi\n    done\n  done\n\
    \  echo $max_index", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n\
    \    local -i max=0\n    local -i max_index=0\n    local -i len=${#arr[@]}\n \
    \   local -i result=-1\n\n    for ((i=0; i<len; i++)); do\n        max=${arr[i]}\n\
    \        max_index=i\n        for ((j=i+1; j<len; j++)); do\n            if [[\
    \ ${arr[j]} -lt max ]]; then\n                max=${arr[j]}\n                max_index=j\n\
    \            fi\n        done\n        if [[ ${arr[i]} -gt max ]]; then\n    \
    \        result=$max_index\n            break\n        fi\n    done\n\n    echo\
    \ $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_i=0\n  local -i max_j=0\n  local -i max_diff=0\n  local -i curr_diff=0\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n\
    \      curr_diff=${arr[j]}-${arr[i]}\n      if ((curr_diff > max_diff)); then\n\
    \        max_diff=$curr_diff\n        max_i=$i\n        max_j=$j\n      fi\n \
    \   done\n  done\n  if ((max_diff == 0)); then\n    echo -1\n  else\n    echo\
    \ $max_i\n  fi", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n  local -i\
    \ curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n   \
    \ curr_value=${arr[i]}\n    if ((curr_value > max_value)); then\n      max_value=$curr_value\n\
    \      max_index=$i\n    fi\n  done\n  for ((i=0; i<len; i++)); do\n    curr_value=${arr[i]}\n\
    \    if ((curr_value < max_value)); then\n      for ((j=i+1; j<len; j++)); do\n\
    \        if ((curr_value < ${arr[j]})); then\n          curr_index=$j\n      \
    \    break\n        fi\n      done\n      if ((curr_index > max_index)); then\n\
    \        max_index=$curr_index\n      fi\n    fi\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local\
    \ -i max_index=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n \
    \   max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n     \
    \ if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n      arr[max_index]=${arr[i]}\n\
    \      arr[i]=$max\n    fi\n  done\n  for ((i=1; i<len; i++)); do\n    if [[ ${arr[i]}\
    \ -lt ${arr[i-1]} ]]; then\n      echo $((i-1))\n      return\n    fi\n  done\n\
    \  echo -1", "  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i\
    \ max_index=-1\n  for ((i=0; i<${#array[@]}; i++)); do\n    for ((j=i+1; j<${#array[@]};\
    \ j++)); do\n      if [[ ${array[j]} -lt ${array[i]} ]]; then\n        if [[ $j\
    \ -gt $max_index ]]; then\n          max_index=$j\n        fi\n      fi\n    done\n\
    \  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n\
    \  local max_index=-1\n  local max_value=-1\n  for ((i=${#arr[@]}-1; i>=0; i--));\
    \ do\n    if [[ ${arr[i]} -ge $max_value ]]; then\n      max_value=${arr[i]}\n\
    \      max_index=$i\n    fi\n  done\n  echo $max_index", "  local -a arr=($1)\n\
    \  local i=0\n  local j=0\n  local k=0\n  local max=0\n  local max_i=0\n  local\
    \ max_j=0\n  local max_k=0\n  local max_sum=0\n  local sum=0\n  local len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      for ((k=j+1;\
    \ k<len; k++)); do\n        sum=$((arr[i]+arr[j]+arr[k]))\n        if ((sum >\
    \ max_sum)); then\n          max_sum=$sum\n          max_i=$i\n          max_j=$j\n\
    \          max_k=$k\n        fi\n      done\n    done\n  done\n  echo \"$max_i\
    \ $max_j $max_k\"", "  local -a arr=($1)\n  local i=0\n  local j=0\n  local max=0\n\
    \  local max_index=0\n  local result=-1\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -le ${arr[i]}\
    \ ]]; then\n        if [[ ${arr[j]} -gt $max ]]; then\n          max=${arr[j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n    if [[ $max_index\
    \ -ne 0 ]]; then\n      result=$max_index\n      break\n    fi\n  done\n  echo\
    \ $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n\
    \  local -i max_index=-1\n  local -i max_value=${arr[0]}\n  local -i cur_value=0\n\
    \  for ((i=1; i<len; i++)); do\n    cur_value=${arr[i]}\n    if ((cur_value <\
    \ max_value)); then\n      max_index=$i\n      max_value=$cur_value\n    fi\n\
    \  done\n  echo $max_index", "  local -a arr=($1)\n  local i=0\n  local j=0\n\
    \  local max=0\n  local max_index=0\n  local result=-1\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if ((arr[i] < arr[i-1])); then\n      max=arr[i-1]\n   \
    \   max_index=i-1\n      for ((j=i; j<${#arr[@]}; j++)); do\n        if ((arr[j]\
    \ < max)); then\n          result=$j\n          break\n        fi\n      done\n\
    \      break\n    fi\n  done\n  echo $result", "  local -a arr=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max=0\n  local -i max_i=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=len-1; i>=0; i--)); do\n    if ((arr[i] >= max)); then\n      max=arr[i]\n\
    \      max_i=i\n    fi\n  done\n  echo $max_i", "    local -a arr=(\"$@\")\n \
    \   local i=0\n    local j=0\n    local max=0\n    local max_i=0\n    local max_j=0\n\
    \    local max_k=0\n    local max_l=0\n    local max_m=0\n    local max_n=0\n\
    \    local max_o=0\n    local max_p=0\n    local max_q=0\n    local max_r=0\n\
    \    local max_s=0\n    local max_t=0\n    local max_u=0\n    local max_v=0\n\
    \    local max_w=0\n    local max_x=0\n    local max_y=0\n    local max_z=0\n\
    \    local max_aa=0\n    local max_ab=0\n    local max_ac=0\n    local max_ad=0\n\
    \    local max_ae=0\n    local max_af=0\n    local max_ag=0\n    local max_ah=0\n\
    \    local max_ai=0\n    local max_aj=0\n    local max_ak=0\n    local max_al=0\n\
    \    local max_am=0\n    local max_an=0\n    local max_ao=0\n    local max_ap=0\n\
    \    local max_aq=0\n    local max_ar=0\n    local max_as=0\n    local max_at=0\n\
    \    local max_au=0\n    local max_av=0\n    local max_aw=0\n    local max_ax=0\n\
    \    local max_ay=0\n    local max_az=0\n    local max_ba=0\n    local max_bb=0\n\
    \    local max_bc=0\n    local max_bd=0\n    local max_be=0\n    local max_bf=0\n\
    \    local max_bg=0\n    local max_bh=0\n    local max_bi=0\n    local max_bj=0\n\
    \    local max_bk=0\n    local max_bl=0\n    local max_bm=0\n    local max_bn=0\n\
    \    local max_bo=0\n    local max_bp=0\n   ", "  local -a arr=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max=0\n  local -i max_index=0\n  local -i\
    \ len=${#arr[@]}\n  for ((i=1; i<len; i++)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]}\
    \ ]]; then\n      max=${arr[i-1]}\n      max_index=i-1\n      for ((j=i-1; j>=0;\
    \ j--)); do\n        if [[ ${arr[j]} -le $max ]]; then\n          max=${arr[j]}\n\
    \          max_index=j\n        fi\n      done\n      echo $max_index\n      return\n\
    \    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max=0\n  local -i max_index=0\n  local -i len=${#arr[@]}\n\
    \  local -i result=-1\n\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] > max));\
    \ then\n      max=arr[i]\n      max_index=i\n    fi\n  done\n\n  for ((i=0; i<len;\
    \ i++)); do\n    if ((arr[i] < max)); then\n      for ((j=i+1; j<len; j++)); do\n\
    \        if ((arr[j] < arr[i])); then\n          break\n        fi\n      done\n\
    \      if ((j == len)); then\n        result=i\n        break\n      fi\n    fi\n\
    \  done\n\n  echo $result", "  local -a arr=(\"$@\")\n  local i=0\n  local j=1\n\
    \  local max_index=0\n  local max_value=0\n  local result=-1\n  while [ $i -lt\
    \ ${#arr[@]} ]; do\n    if [ ${arr[$i]} -lt ${arr[$j]} ]; then\n      if [ ${arr[$j]}\
    \ -gt $max_value ]; then\n        max_value=${arr[$j]}\n        max_index=$j\n\
    \      fi\n    else\n      if [ $max_index -gt $i ]; then\n        result=$max_index\n\
    \        break\n      fi\n      max_value=0\n      max_index=0\n    fi\n    i=$((i+1))\n\
    \    j=$((j+1))\n  done\n  echo $result", "  local -a arr=(\"$@\")\n  local i=0\n\
    \  local j=0\n  local k=0\n  local max=0\n  local max_i=0\n  local max_j=0\n \
    \ local max_k=0\n  local max_arr=()\n  local max_arr_i=0\n  local max_arr_j=0\n\
    \  local max_arr_k=0\n  local max_arr_len=0\n  local max_arr_len_i=0\n  local\
    \ max_arr_len_j=0\n  local max_arr_len_k=0\n  local max_arr_len_arr=()\n  local\
    \ max_arr_len_arr_i=0\n  local max_arr_len_arr_j=0\n  local max_arr_len_arr_k=0\n\
    \  local max_arr_len_arr_len=0\n  local max_arr_len_arr_len_i=0\n  local max_arr_len_arr_len_j=0\n\
    \  local max_arr_len_arr_len_k=0\n  local max_arr_len_arr_len_arr=()\n  local\
    \ max_arr_len_arr_len_arr_i=0\n  local max_arr_len_arr_len_arr_j=0\n  local max_arr_len_arr_len_arr_k=0\n\
    \  local max_arr_len_arr_len_arr_len=0\n  local max_arr_len_arr_len_arr_len_i=0\n\
    \  local max_arr_len_arr_len_arr_len_j=0\n  local max_arr_len_arr_len_arr_len_k=0\n\
    \  local max_arr_len_arr_len_arr_len_arr=()\n  local max_arr_len_arr_len_arr_len_arr_i=0\n\
    \  local max_arr_len_arr_len_arr_len_arr_j=0\n  local max_arr_len_arr_len_arr_len_arr_k=0\n\
    \  local max_arr_len_arr_len_arr_len_arr_", "  local -a arr=($1)\n  local i=0\n\
    \  local j=1\n  local max_index=-1\n  local max_value=${arr[0]}\n  while [ $j\
    \ -lt ${#arr[@]} ]; do\n    if [ ${arr[$j]} -lt $max_value ]; then\n      max_index=$j\n\
    \      max_value=${arr[$j]}\n    fi\n    ((j++))\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n\
    \  local -i max_index=-1\n  for ((i=1; i<len; i++)); do\n    for ((j=0; j<i; j++));\
    \ do\n      if [[ ${arr[i]} -ge ${arr[j]} ]]; then\n        if [[ j -gt max_index\
    \ ]]; then\n          max_index=$j\n        fi\n      fi\n    done\n  done\n \
    \ echo $max_index", "  local -a arr\n  arr=($1)\n  local i\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if ((arr[i]<arr[i-1])); then\n      echo $i\n      return\n\
    \    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i i=${#arr[@]}-1\n\
    \  local -i j=0\n  while (( i > 0 )); do\n    if (( arr[i] < arr[i-1] )); then\n\
    \      j=i\n      while (( j < ${#arr[@]} )); do\n        if (( arr[j] < arr[i-1]\
    \ )); then\n          echo $j\n          return\n        fi\n        (( j++ ))\n\
    \      done\n    fi\n    (( i-- ))\n  done\n  echo -1", "  local -a arr\n  IFS='\
    \ ' read -r -a arr <<< \"$1\"\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i current_value=0\n  local -i current_index=0\n\
    \  local -i current_max_index=0\n  local -i current_max_value=0\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    current_value=${arr[$i]}\n    current_index=$i\n\
    \    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ ${arr[$j]} -le $current_value\
    \ ]]; then\n        if [[ $current_max_value -lt ${arr[$j]} ]]; then\n       \
    \   current_max_value=${arr[$j]}\n          current_max_index=$j\n        fi\n\
    \      fi\n    done\n    if [[ $current_max_value -gt $max_value ]]; then\n  \
    \    max_value=$current_max_value\n      max_index=$current_max_index\n    fi\n\
    \  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_index=-1\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n  \
    \  if ((arr[i] < arr[i-1])); then\n      for ((j=i-1; j>=0; j--)); do\n      \
    \  if ((arr[j] <= arr[i])); then\n          max_index=$j\n          break\n  \
    \      fi\n      done\n      break\n    fi\n  done\n  echo $max_index", "    local\
    \ -a arr=($1)\n    local i\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n       \
    \ if ((arr[i] < arr[i-1])); then\n            echo $i\n            return\n  \
    \      fi\n    done\n    echo -1", "    local -a arr=($1)\n    local -i i=0\n\
    \    local -i j=0\n    local -i max_i=0\n    local -i max_j=0\n    local -i max_diff=0\n\
    \    local -i diff=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1;\
    \ j<${#arr[@]}; j++)); do\n            diff=${arr[j]}-${arr[i]}\n            if\
    \ ((diff > 0 && diff > max_diff)); then\n                max_diff=$diff\n    \
    \            max_i=$i\n                max_j=$j\n            fi\n        done\n\
    \    done\n    if ((max_diff > 0)); then\n        echo $max_j\n    else\n    \
    \    echo -1\n    fi", "    local -a arr=($1)\n    local i=0\n    local j=0\n\
    \    local max=0\n    local max_index=0\n    for ((i=${#arr[@]}-1; i>=0; i--));\
    \ do\n        if ((arr[i] >= max)); then\n            max=${arr[i]}\n        \
    \    max_index=$i\n        fi\n    done\n    for ((i=${#arr[@]}-1; i>=0; i--));\
    \ do\n        if ((arr[i] < max)); then\n            if ((i < max_index)); then\n\
    \                echo $i\n                return\n            fi\n        fi\n\
    \    done\n    echo -1", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n  local\
    \ -i curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n\
    \    curr_value=${arr[i]}\n    for ((j=i+1; j<len; j++)); do\n      if [[ ${arr[j]}\
    \ -le curr_value ]]; then\n        curr_index=$j\n        break\n      fi\n  \
    \  done\n    if [[ $curr_index -gt $max_index ]]; then\n      max_index=$curr_index\n\
    \      max_value=${arr[max_index]}\n    fi\n  done\n  echo $max_index", "  local\
    \ -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local\
    \ -i max_value=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n \
    \   if ((arr[i] < arr[i+1])); then\n      if ((arr[i] > max_value)); then\n  \
    \      max_value=arr[i]\n        max_index=i\n      fi\n    fi\n  done\n  echo\
    \ $max_index", "  local -a arr\n  arr=($1)\n  local i\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if ((arr[i] < arr[i-1])); then\n      echo $i\n      return\n\
    \    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i max_i=0\n  local -i max_val=0\n  local -i ret=-1\n  local -i val=0\n\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    val=${arr[$i]}\n    if ((val >= max_val));\
    \ then\n      max_val=$val\n      max_i=$i\n    else\n      ret=$i\n      break\n\
    \    fi\n  done\n\n  echo $ret", "  local -a arr=($1)\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i max=0\n  local -i len=${#arr[@]}\n  for ((i=0;\
    \ i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[ ${arr[j]} -le\
    \ ${arr[i]} ]]; then\n        k=j\n        break\n      fi\n    done\n    if [[\
    \ $k -gt $max ]]; then\n      max=$k\n    fi\n  done\n  if [[ $max -eq 0 ]]; then\n\
    \    echo -1\n  else\n    echo $max\n  fi", "  local -a arr=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_diff=0\n\
    \  local -i diff=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n\
    \    for ((j=i+1; j<len; j++)); do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff>0\
    \ && diff>max_diff)); then\n        max_diff=$diff\n        max_i=$i\n       \
    \ max_j=$j\n      fi\n    done\n  done\n  if ((max_diff>0)); then\n    echo $max_j\n\
    \  else\n    echo -1\n  fi", "    local -a arr\n    local -i i\n    local -i max\n\
    \    local -i max_i\n    local -i n\n    local -i prev\n    local -i ret\n\n \
    \   arr=($1)\n    n=${#arr[@]}\n    max=${arr[0]}\n    max_i=0\n    prev=${arr[0]}\n\
    \    ret=-1\n    for ((i=1; i<n; i++)); do\n        if [[ ${arr[i]} -lt prev ]];\
    \ then\n            if [[ ${arr[i]} -gt max ]]; then\n                max=${arr[i]}\n\
    \                max_i=i\n            fi\n        else\n            prev=${arr[i]}\n\
    \        fi\n    done\n    if [[ max -lt prev ]]; then\n        ret=$max_i\n \
    \   fi\n    echo $ret", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  for ((i=0; i<len; i++)); do\n    if ((arr[i]\
    \ < max_value)); then\n      for ((j=i+1; j<len; j++)); do\n        if ((arr[j]\
    \ > arr[i])); then\n          break\n        fi\n      done\n      if ((j == len));\
    \ then\n        echo $i\n        return\n      fi\n    fi\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i\
    \ max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n  while [ $i\
    \ -lt $len ]; do\n    curr_value=${arr[$i]}\n    if [ $curr_value -gt $max_value\
    \ ]; then\n      max_value=$curr_value\n      max_index=$i\n    fi\n    i=$((i+1))\n\
    \  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i arr_len=${#arr[@]}\n\
    \  for ((i=0; i<arr_len; i++)); do\n    if ((arr[i] >= max_value)); then\n   \
    \   max_value=arr[i]\n      max_index=i\n    fi\n  done\n  for ((i=0; i<arr_len;\
    \ i++)); do\n    for ((j=i+1; j<arr_len; j++)); do\n      if ((arr[i] > arr[j]));\
    \ then\n        echo \"false\"\n        return\n      fi\n    done\n  done\n \
    \ echo \"true\"", "  local -a arr=($1)\n  local i=0\n  local j=0\n  local max_index=0\n\
    \  local max_value=0\n  local index=-1\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n\
    \    if [[ ${arr[i]} -ge $max_value ]]; then\n      max_value=${arr[i]}\n    \
    \  max_index=$i\n    fi\n    if [[ ${arr[i]} -le ${arr[i-1]} ]]; then\n      index=$i\n\
    \      break\n    fi\n  done\n  if [[ $index -eq -1 ]]; then\n    echo $max_index\n\
    \  else\n    echo $index\n  fi", "  local -a arr=(\"$@\")\n  local i=0\n  local\
    \ j=0\n  local max=0\n  local max_index=0\n  local result=-1\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if [[ ${arr[i]} -le ${arr[i-1]} ]]; then\n      max=${arr[i]}\n\
    \      max_index=$i\n      for ((j=i-1; j>=0; j--)); do\n        if [[ ${arr[j]}\
    \ -le $max ]]; then\n          max=${arr[j]}\n          max_index=$j\n       \
    \ fi\n      done\n      result=$max_index\n      break\n    fi\n  done\n  echo\
    \ $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i max_index=0\n\
    \  local -i max_value=0\n  local -i result=-1\n\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    if ((arr[i] >= max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n\n  if ((max_index > 0)); then\n    result=max_index\n  fi\n\n\
    \  echo $result", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_i=0\n  local -i max_j=0\n  local -i max_diff=0\n  local -i diff=0\n \
    \ local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len;\
    \ j++)); do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff>0 && diff>max_diff));\
    \ then\n        max_diff=$diff\n        max_i=$i\n        max_j=$j\n      fi\n\
    \    done\n  done\n  if ((max_diff>0)); then\n    echo $max_j\n  else\n    echo\
    \ -1\n  fi", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max=0\n  local -i max_index=0\n  local -i n=${#arr[@]}\n  local -i result=-1\n\
    \n  for ((i=0; i<n; i++)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1;\
    \ j<n; j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=$j\n      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n\
    \      result=$i\n      break\n    fi\n  done\n\n  echo $result", "  local -a\
    \ arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local\
    \ -i max_value=-1\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    if ((arr[i] >=\
    \ max_value)); then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n\
    \  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  local -i current_value=0\n\
    \  local -i current_index=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    current_value=${arr[i]}\n\
    \    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -le $current_value\
    \ ]]; then\n        if [[ ${arr[j]} -gt $max_value ]]; then\n          max_value=${arr[j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n  done\n  echo $max_index",
  "  local -a arr=($1)\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i max_idx=-1\n\
    \  local -i max_val=0\n  local -i cur_val=0\n  local -i cur_idx=0\n  for ((i=0;\
    \ i<len; i++)); do\n    cur_val=${arr[i]}\n    if ((cur_val > max_val)); then\n\
    \      max_val=$cur_val\n      max_idx=$i\n    fi\n  done\n  for ((i=0; i<len;\
    \ i++)); do\n    cur_val=${arr[i]}\n    if ((cur_val < max_val)); then\n     \
    \ max_val=$cur_val\n      max_idx=$i\n    fi\n  done\n  echo $max_idx", "    local\
    \ -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i\
    \ max_index=-1\n    local -i max_value=0\n    for ((i=0; i<len; i++)); do\n  \
    \      if [[ ${arr[i]} -le max_value ]]; then\n            max_index=$i\n    \
    \        max_value=${arr[i]}\n        fi\n    done\n    echo $max_index", "  local\
    \ -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local largest_index=-1\n  local\
    \ largest_value=0\n  local current_value=0\n  local current_index=0\n  local previous_value=0\n\
    \  local previous_index=0\n  local arr_len=${#arr[@]}\n  for ((i=0; i<arr_len;\
    \ i++)); do\n    current_value=${arr[$i]}\n    current_index=$i\n    for ((j=i+1;\
    \ j<arr_len; j++)); do\n      if [[ ${arr[$j]} -le $current_value ]]; then\n \
    \       if [[ ${arr[$j]} -gt $largest_value ]]; then\n          largest_value=${arr[$j]}\n\
    \          largest_index=$j\n        fi\n      fi\n    done\n    if [[ $largest_index\
    \ -gt $current_index ]]; then\n      echo $largest_index\n      return\n    fi\n\
    \  done\n  echo -1", "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local\
    \ max_index=0\n  local max_value=0\n  local result=-1\n  for ((i=${#arr[@]}-1;\
    \ i>=0; i--)); do\n    if [[ ${arr[i]} -ge $max_value ]]; then\n      max_value=${arr[i]}\n\
    \      max_index=$i\n    else\n      result=$max_index\n      break\n    fi\n\
    \  done\n  echo $result", "    local -a arr=($1)\n    local -i i=0\n    local\
    \ -i j=0\n    local -i max=0\n    local -i max_i=0\n    local -i len=${#arr[@]}\n\
    \    local -i result=-1\n\n    for ((i=0; i<len; i++)); do\n        max=0\n  \
    \      max_i=0\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]}\
    \ -le ${arr[i]} ]]; then\n                if [[ ${arr[j]} -gt $max ]]; then\n\
    \                    max=${arr[j]}\n                    max_i=$j\n           \
    \     fi\n            fi\n        done\n        if [[ $max_i -gt 0 ]]; then\n\
    \            result=$max_i\n            break\n        fi\n    done\n\n    echo\
    \ $result", "  local -a arr=()\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\
    \  local -i max_i=0\n  local -i n=0\n  local -i ret=0\n  local -i tmp=0\n  arr=($1)\n\
    \  n=${#arr[@]}\n  for ((i=n-1; i>=0; i--)); do\n    max=${arr[i]}\n    max_i=i\n\
    \    for ((j=i-1; j>=0; j--)); do\n      tmp=${arr[j]}\n      if ((tmp<=max));\
    \ then\n        max=tmp\n        max_i=j\n      fi\n    done\n    if ((max_i==i));\
    \ then\n      ret=-1\n      break\n    else\n      ret=$max_i\n    fi\n  done\n\
    \  echo $ret", "  local -a arr=($1)\n  local i=0\n  local j=0\n  local max_index=-1\n\
    \  local max_value=0\n  local curr_value=0\n  local curr_index=0\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    curr_value=${arr[$i]}\n    curr_index=$i\n    for\
    \ ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ ${arr[$j]} -le $curr_value ]];\
    \ then\n        if [[ $j -gt $max_index ]]; then\n          max_index=$j\n   \
    \       max_value=${arr[$j]}\n        fi\n      fi\n    done\n  done\n  if [[\
    \ $max_index -eq -1 ]]; then\n    echo -1\n  else\n    echo $max_index\n  fi",
  "    local -a arr=($1)\n    local -i i=0\n    local -i j=1\n    local -i max_idx=-1\n\
    \    local -i max_val=0\n    local -i len=${#arr[@]}\n    while (( i < len ));\
    \ do\n        if (( arr[i] < arr[j] )); then\n            if (( arr[j] > max_val\
    \ )); then\n                max_val=arr[j]\n                max_idx=j\n      \
    \      fi\n        fi\n        (( i++ ))\n        (( j++ ))\n    done\n    echo\
    \ $max_idx", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local\
    \ -i max_index=-1\n    local -i max_value=0\n    local -i curr_value=0\n    local\
    \ -i curr_index=0\n    local -i prev_value=0\n    for ((i=0; i<${#arr[@]}; i++));\
    \ do\n        curr_value=${arr[$i]}\n        for ((j=i-1; j>=0; j--)); do\n  \
    \          prev_value=${arr[$j]}\n            if ((curr_value >= prev_value));\
    \ then\n                if ((curr_value > max_value)); then\n                \
    \    max_value=$curr_value\n                    max_index=$i\n               \
    \ fi\n                break\n            fi\n        done\n    done\n    echo\
    \ $max_index", "  local -a arr=(\"$@\")\n  local -i i=0 j=0\n  local -i len=${#arr[@]}\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  for ((i=0; i<len; i++)); do\n\
    \    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i max=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[\
    \ ${arr[j]} -lt ${arr[i]} ]]; then\n        if [[ $j -gt $max ]]; then\n     \
    \     max=$j\n        fi\n      fi\n    done\n  done\n  if [[ $max -eq 0 ]]; then\n\
    \    echo -1\n  else\n    echo $max\n  fi", "    local -a arr=(\"$@\")\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max=0\n    local -i max_i=0\n    local\
    \ -i min=0\n    local -i min_i=0\n    local -i n=${#arr[@]}\n    local -i res=-1\n\
    \    for ((i=0; i<n; i++)); do\n        if ((arr[i] > max)); then\n          \
    \  max=arr[i]\n            max_i=i\n        fi\n    done\n    for ((i=0; i<n;\
    \ i++)); do\n        if ((arr[i] < min)); then\n            min=arr[i]\n     \
    \       min_i=i\n        fi\n    done\n    if ((min_i < max_i)); then\n      \
    \  res=min_i\n    fi\n    echo $res", "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n\
    \  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  while (( i\
    \ >= 0 )); do\n    if (( arr[i] >= max_value )); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n    (( i-- ))\n  done\n  echo $max_index", "  local\
    \ -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local\
    \ -i max_value=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n \
    \   if ((arr[i] > max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++));\
    \ do\n      if ((arr[i] > arr[j])); then\n        echo $max_index\n        return\n\
    \      fi\n    done\n  done\n  echo -1", "    local -a arr=(\"$@\")\n    local\
    \ i=0\n    local j=0\n    local max=0\n    local max_index=0\n    local result=-1\n\
    \n    for ((i=0; i<${#arr[@]}; i++)); do\n        max=${arr[i]}\n        max_index=$i\n\
    \        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -le\
    \ $max ]]; then\n                max=${arr[j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [[ $max_index -gt $i ]]; then\n    \
    \        result=$i\n            break\n        fi\n    done\n\n    echo $result",
  "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    if [[ ${arr[i]} -gt max_value ]]; then\n      max_value=${arr[i]}\n\
    \      max_index=i\n    fi\n  done\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[i]}\
    \ -lt ${arr[max_index]} ]]; then\n      max_index=-1\n      break\n    fi\n  done\n\
    \  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max=0\n  local -i max_index=0\n  local -i n=${#arr[@]}\n  local -i\
    \ result=-1\n\n  for ((i=0; i<n; i++)); do\n    max=${arr[i]}\n    max_index=$i\n\
    \    for ((j=i+1; j<n; j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n  \
    \      max=${arr[j]}\n        max_index=$j\n      fi\n    done\n    if [[ $max_index\
    \ -gt $i ]]; then\n      result=$i\n      break\n    fi\n  done\n\n  echo $result",
  "  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i current_value=0\n  local -i current_index=0\n\
    \  local -i length=${#array[@]}\n  for ((i=0; i<length; i++)); do\n    current_value=${array[i]}\n\
    \    for ((j=i+1; j<length; j++)); do\n      if [[ ${array[j]} -le current_value\
    \ ]]; then\n        if [[ ${array[j]} -gt max_value ]]; then\n          max_value=${array[j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n    if [[ $max_index\
    \ -ne -1 ]]; then\n      echo $max_index\n      return\n    fi\n  done\n  echo\
    \ $max_index", "  local -a arr=(\"$@\")\n  local i=0\n  local j=1\n  local max_i=-1\n\
    \  local max_j=-1\n  local max_diff=-1\n  local diff=0\n  while [ $i -lt $(( ${#arr[@]}\
    \ - 1 )) ]; do\n    diff=$(( arr[j] - arr[i] ))\n    if [ $diff -lt 0 ]; then\n\
    \      if [ $(( -diff )) -gt $max_diff ]; then\n        max_diff=$(( -diff ))\n\
    \        max_i=$i\n        max_j=$j\n      fi\n    fi\n    i=$(( i + 1 ))\n  \
    \  j=$(( j + 1 ))\n  done\n  echo $max_j", "  local -a arr\n  local -i i\n  local\
    \ -i j\n  local -i max\n  local -i max_index\n  local -i result\n  arr=($1)\n\
    \  max=${arr[0]}\n  max_index=0\n  result=-1\n  for ((i=1; i<${#arr[@]}; i++));\
    \ do\n    if ((arr[i] < max)); then\n      result=$max_index\n      break\n  \
    \  fi\n    if ((arr[i] > max)); then\n      max=${arr[i]}\n      max_index=$i\n\
    \    fi\n  done\n  echo $result", "  local -a arr=(\"$@\")\n  local -i i=0\n \
    \ local -i j=0\n  local -i n=${#arr[@]}\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  for ((i=0; i<n; i++)); do\n    if ((arr[i] < max_value)); then\n      max_index=i\n\
    \      max_value=arr[i]\n    fi\n  done\n  echo $max_index", "    local -a arr\n\
    \    local -i i\n    local -i len\n    local -i max\n    local -i max_idx\n  \
    \  local -i prev\n    local -i ret\n\n    arr=($1)\n    len=${#arr[@]}\n    max=0\n\
    \    max_idx=-1\n    prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n       \
    \ if [[ ${arr[i]} -gt prev ]]; then\n            if [[ ${arr[i]} -gt max ]]; then\n\
    \                max=${arr[i]}\n                max_idx=$i\n            fi\n \
    \       fi\n        prev=${arr[i]}\n    done\n    echo $max_idx", "    local -a\
    \ arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local\
    \ -i max_index=0\n    local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n\
    \        max=${arr[i]}\n        max_index=i\n        for ((j=i+1; j<len; j++));\
    \ do\n            if [[ ${arr[j]} -le ${arr[i]} ]]; then\n                if [[\
    \ ${arr[j]} -gt $max ]]; then\n                    max=${arr[j]}\n           \
    \         max_index=$j\n                fi\n            fi\n        done\n   \
    \     if [[ $max_index -ne $i ]]; then\n            echo $max_index\n        \
    \    return\n        fi\n    done\n    echo -1", "  local -a arr=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i value=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    value=${arr[i]}\n\
    \    if ((value > max_value)); then\n      max_value=$value\n      max_index=$i\n\
    \    fi\n  done\n  if ((max_index == -1)); then\n    echo $max_index\n    return\n\
    \  fi\n  for ((i=0; i<len; i++)); do\n    value=${arr[i]}\n    if ((value == max_value));\
    \ then\n      continue\n    fi\n    for ((j=i+1; j<len; j++)); do\n      if ((value\
    \ < ${arr[j]})); then\n        break\n      fi\n    done\n    if ((j == len));\
    \ then\n      echo $i\n      return\n    fi\n  done\n  echo -1", "  local -a arr=(\"\
    $@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i current_value=0\n  local -i current_index=0\n  local -i previous_value=0\n\
    \  local -i previous_index=0\n  local -i arr_length=${#arr[@]}\n  for ((i=0; i<arr_length;\
    \ i++)); do\n    current_value=${arr[i]}\n    current_index=i\n    for ((j=0;\
    \ j<arr_length; j++)); do\n      previous_value=${arr[j]}\n      previous_index=j\n\
    \      if ((current_value >= previous_value)) && ((current_index > previous_index));\
    \ then\n        if ((current_value > max_value)); then\n          max_value=current_value\n\
    \          max_index=current_index\n        fi\n      fi\n    done\n  done\n \
    \ echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_value=-1\n  local -i current_value=0\n\
    \  local -i current_index=0\n  local -i arr_length=${#arr[@]}\n  for ((i=0; i<arr_length;\
    \ i++)); do\n    current_value=${arr[i]}\n    current_index=i\n    for ((j=i+1;\
    \ j<arr_length; j++)); do\n      if [[ ${arr[j]} -le current_value ]]; then\n\
    \        if [[ ${arr[j]} -gt max_value ]]; then\n          max_value=${arr[j]}\n\
    \          max_index=j\n        fi\n      fi\n    done\n    if [[ max_index -ne\
    \ -1 ]]; then\n      echo $max_index\n      return\n    fi\n  done\n  echo -1",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n\
    \    if (( arr[i] < arr[i-1] )); then\n      continue\n    fi\n    for ((j=i+1;\
    \ j<n; j++)); do\n      if (( arr[j] < arr[i-1] )); then\n        continue\n \
    \     fi\n      if (( arr[j] > max_value )); then\n        max_value=arr[j]\n\
    \        max_index=j\n      fi\n    done\n  done\n  echo $max_index", "  local\
    \ -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n \
    \ local -i max_value=-1\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] < max_value));\
    \ then\n      for ((j=i+1; j<len; j++)); do\n        if ((arr[j] > arr[i])); then\n\
    \          echo -1\n          return\n        fi\n      done\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1", "  local -a arr\n  local -i i j\n \
    \ IFS=' ' read -r -a arr <<< \"$1\"\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if ((arr[i] >= arr[j])); then\n     \
    \   echo \"$j\"\n        return\n      fi\n    done\n  done\n  echo -1", "  local\
    \ -a a=($1)\n  local i=0\n  local j=1\n  local max_i=0\n  local max_j=0\n  local\
    \ max_diff=0\n  local diff=0\n  local max_i_diff=0\n  local max_j_diff=0\n  local\
    \ max_i_j_diff=0\n  local max_i_j_diff_i=0\n  local max_i_j_diff_j=0\n  local\
    \ max_i_j_diff_diff=0\n  local max_i_j_diff_i_diff=0\n  local max_i_j_diff_j_diff=0\n\
    \  local max_i_j_diff_i_j_diff=0\n  local max_i_j_diff_i_j_diff_i=0\n  local max_i_j_diff_i_j_diff_j=0\n\
    \  local max_i_j_diff_i_j_diff_diff=0\n  local max_i_j_diff_i_j_diff_i_diff=0\n\
    \  local max_i_j_diff_i_j_diff_j_diff=0\n  local max_i_j_diff_i_j_diff_i_j_diff=0\n\
    \  local max_i_j_diff_i_j_diff_i_j_diff_i=0\n  local max_i_j_diff_i_j_diff_i_j_diff_j=0\n\
    \  local max_i_j_diff_i_j_diff_i_j_diff_diff=0\n  local max_i_j_diff_i_j_diff_i_j_diff_i_diff=0\n\
    \  local max_i_j_diff_i_j_diff_i_j_diff_j_diff=0\n  local max_i_j_diff_i_j_diff_i_j_diff_i_j_diff=0\n\
    \  local max_i_j_diff_i_j_diff_i_j_diff_i_j_diff_i=0\n  local max_i_j_diff_i",
  "  local -a array=()\n  local i=0\n  local j=0\n  local max=0\n  local max_index=0\n\
    \  local result=-1\n\n  # Convert the space-separated list into an array\n  for\
    \ i in $1; do\n    array[$j]=$i\n    j=$((j+1))\n  done\n\n  # Find the largest\
    \ index of an element which is not greater than or equal\n  # to the element immediately\
    \ preceding it\n  for ((i=0; i<${#array[@]}; i++)); do\n    if ((array[i] >= max));\
    \ then\n      max=${array[i]}\n      max_index=$i\n    fi\n  done\n\n  # If the\
    \ largest index is not the last element then return the largest\n  # index\n \
    \ if ((max_index < ${#array[@]}-1)); then\n    result=$max_index\n  fi\n\n  echo\
    \ $result", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i curr_value=0\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    curr_value=${arr[i]}\n    if ((curr_value > max_value)); then\n    \
    \  max_value=$curr_value\n      max_index=$i\n    fi\n  done\n  echo $max_index",
  "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\
    \    local -i max_index=0\n    local -i len=${#arr[@]}\n    for ((i=0; i<len;\
    \ i++)); do\n        max=0\n        max_index=0\n        for ((j=i+1; j<len; j++));\
    \ do\n            if [[ ${arr[j]} -le ${arr[i]} ]]; then\n                if [[\
    \ ${arr[j]} -gt $max ]]; then\n                    max=${arr[j]}\n           \
    \         max_index=$j\n                fi\n            fi\n        done\n   \
    \     if [[ $max -gt 0 ]]; then\n            echo $max_index\n            return\n\
    \        fi\n    done\n    echo -1", "  local -a arr=($1)\n  local -i i=0\n  local\
    \ -i j=0\n  local -i len=${#arr[@]}\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  for ((i=0; i<len; i++)); do\n    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  for ((i=0; i<len; i++)); do\n    if ((arr[i]\
    \ < max_value)); then\n      for ((j=i+1; j<len; j++)); do\n        if ((arr[j]\
    \ <= arr[i])); then\n          echo $j\n          return\n        fi\n      done\n\
    \    fi\n  done\n  echo $max_index", "    local -a arr=($1)\n    local -i n=${#arr[@]}\n\
    \    local -i i=0\n    local -i max_index=-1\n    local -i max_value=0\n    while\
    \ (( i < n )); do\n        if (( arr[i] < arr[i-1] )); then\n            if ((\
    \ arr[i] > max_value )); then\n                max_value=arr[i]\n            \
    \    max_index=i\n            fi\n        fi\n        (( i++ ))\n    done\n  \
    \  echo $max_index", "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local\
    \ max=0\n  local max_index=0\n  local len=${#arr[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n\
    \      if [[ ${arr[j]} -lt $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n      arr[$max_index]=${arr[i]}\n\
    \      arr[$i]=$max\n    fi\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [[\
    \ ${arr[i]} -gt ${arr[i+1]} ]]; then\n      echo $i\n      return\n    fi\n  done\n\
    \  echo -1", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n  local -i\
    \ curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n   \
    \ curr_value=${arr[i]}\n    curr_index=$i\n    for ((j=i+1; j<len; j++)); do\n\
    \      if ((curr_value>=arr[j])); then\n        if ((curr_value>max_value)); then\n\
    \          max_value=$curr_value\n          max_index=$curr_index\n        fi\n\
    \        break\n      fi\n    done\n  done\n  echo $max_index", "  local -a arr=(\"\
    $@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i max_index=-1\n  local\
    \ -i max_value=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[i]} -le max_value\
    \ ]]; then\n      max_index=$i\n      max_value=${arr[i]}\n    fi\n  done\n  echo\
    \ $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=-1\n  for ((i=${#arr[@]}-1; i>=0; i--));\
    \ do\n    if ((arr[i] >= max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n  echo $max_index", "  local -a arr=($1)\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i current_value=0\n\
    \  local -i current_index=0\n  local -i arr_len=${#arr[@]}\n  local -i max_index_value=0\n\
    \  local -i max_index_index=0\n  for ((i=0; i<arr_len; i++)); do\n    current_value=${arr[i]}\n\
    \    if ((current_value > max_value)); then\n      max_value=$current_value\n\
    \      max_index=$i\n    fi\n  done\n  for ((i=0; i<arr_len; i++)); do\n    current_value=${arr[i]}\n\
    \    if ((current_value < max_value)); then\n      max_index_value=$current_value\n\
    \      max_index_index=$i\n      for ((j=0; j<arr_len; j++)); do\n        current_value=${arr[j]}\n\
    \        if ((current_value <= max_index_value)); then\n          max_index_value=$current_value\n\
    \          max_index_index=$j\n        fi\n      done\n      if ((max_index_index\
    \ < max_index)); then\n        max_index=$max_index_index\n      fi\n    fi\n\
    \  done\n  echo $max_index", "  # Write your code here\n  # To print results to\
    \ the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"Hello world\"", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n\
    \    local -i max_index=-1\n    local -i max_value=-1\n    local -i len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        if ((arr[i] > max_value)); then\n  \
    \          max_value=arr[i]\n            max_index=i\n        fi\n    done\n \
    \   for ((i=0; i<len; i++)); do\n        if ((arr[i] < max_value)); then\n   \
    \         for ((j=i+1; j<len; j++)); do\n                if ((arr[j] < arr[i]));\
    \ then\n                    echo -1\n                    return\n            \
    \    fi\n            done\n            echo $i\n            return\n        fi\n\
    \    done\n    echo -1", "  local -a arr\n  local -i i j\n  IFS=' ' read -r -a\
    \ arr <<< \"$1\"\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    for ((j=i-1; j>=0;\
    \ j--)); do\n      if ((arr[i] >= arr[j])); then\n        echo \"$j\"\n      \
    \  return\n      fi\n    done\n  done\n  echo -1", "  local -a arr\n  arr=($1)\n\
    \  local -i i\n  local -i j\n  local -i max_index=-1\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -le\
    \ ${arr[i]} ]]; then\n        if [[ j -gt max_index ]]; then\n          max_index=$j\n\
    \        fi\n      fi\n    done\n  done\n  echo $max_index", "  local -a arr=(\"\
    $@\")\n  local i=0\n  local j=0\n  local max_index=-1\n  local max_value=0\n \
    \ local prev_value=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt $prev_value\
    \ ]]; then\n      if [[ $i -gt $max_value ]]; then\n        max_value=$i\n   \
    \     max_index=$j\n      fi\n    fi\n    prev_value=$i\n    j=$((j+1))\n  done\n\
    \  echo $max_index", "    local -a arr=(\"$@\")\n    local i=0\n    local j=0\n\
    \    local max_i=0\n    local max_j=0\n    local max_diff=0\n    local diff=0\n\
    \    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            diff=$((arr[j] - arr[i]))\n            if [[ $diff\
    \ -gt $max_diff ]]; then\n                max_diff=$diff\n                max_i=$i\n\
    \                max_j=$j\n            fi\n        done\n    done\n    echo $max_j",
  "  local -a arr=($1)\n  local -i len=${#arr[@]}\n  local -i i=0\n  local -i max_i=0\n\
    \  local -i max_val=0\n  local -i max_i_prev=0\n  local -i max_val_prev=0\n  local\
    \ -i max_i_prev_prev=0\n  local -i max_val_prev_prev=0\n  local -i max_i_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev=0\n  local -i max_i_prev_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev_prev=0\n  local -i max_i_prev_prev_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev_prev_prev=0\n  local -i max_i_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev_prev_prev_prev=0\n  local -i max_i_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev_prev_prev_prev_prev=0\n  local -i max_i_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i max_i_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_val_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i\
    \ max_i_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i max_val_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_i_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \ local -i max_val_", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max=0\n  local -i max_index=0\n  local -i len=${#arr[@]}\n  for ((i=0;\
    \ i<len; i++)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len;\
    \ j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=$j\n      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n\
    \      echo $i\n      return\n    fi\n  done\n  echo -1", "    local -a arr=($1)\n\
    \    local i=0\n    local j=0\n    local max=-1\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[j]} -lt\
    \ ${arr[i]} ]]; then\n                if [[ $j -gt $max ]]; then\n           \
    \         max=$j\n                fi\n            fi\n        done\n    done\n\
    \    echo $max", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i current_value=0\n  local\
    \ -i current_index=0\n  local -i arr_length=${#arr[@]}\n  local -i arr_length_minus_one=$((arr_length\
    \ - 1))\n\n  for ((i=0; i<arr_length_minus_one; i++)); do\n    current_value=${arr[$i]}\n\
    \    current_index=$i\n    max_value=${arr[$i]}\n    max_index=$i\n    for ((j=$i+1;\
    \ j<arr_length; j++)); do\n      if [[ ${arr[$j]} -le $current_value ]]; then\n\
    \        if [[ ${arr[$j]} -gt $max_value ]]; then\n          max_value=${arr[$j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n    if [[ $max_index\
    \ -ne $current_index ]]; then\n      echo $max_index\n      return\n    fi\n \
    \ done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  local -i current_value=0\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    current_value=${arr[$i]}\n    if ((current_value\
    \ > max_value)); then\n      max_value=$current_value\n      max_index=$i\n  \
    \  fi\n  done\n  echo $max_index", "  local -a arr\n  local i\n  local j\n  local\
    \ max\n  local max_idx\n  local -i len\n  local -i ret\n\n  IFS=' ' read -r -a\
    \ arr <<< \"$1\"\n  len=${#arr[@]}\n  ret=-1\n  for ((i=0; i<len-1; i++)); do\n\
    \    max=${arr[i]}\n    max_idx=$i\n    for ((j=i+1; j<len; j++)); do\n      if\
    \ [[ ${arr[j]} -lt $max ]]; then\n        max=${arr[j]}\n        max_idx=$j\n\
    \      fi\n    done\n    if [[ $max_idx -gt $i ]]; then\n      ret=$max_idx\n\
    \      break\n    fi\n  done\n  echo $ret", "  local -a arr=(\"$@\")\n  local\
    \ i=0\n  local j=0\n  local max_index=-1\n  local max_value=0\n  local prev_value=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -gt $prev_value ]]; then\n      if\
    \ [[ $i -lt $max_value ]]; then\n        echo $max_index\n        return\n   \
    \   fi\n      max_value=$i\n      max_index=$j\n    fi\n    prev_value=$i\n  \
    \  ((j++))\n  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n\
    \  local -i j=0\n  local -i max_index=-1\n  local -i max_value=-1\n  local -i\
    \ curr_value=0\n  local -i curr_index=0\n  local -i len=${#arr[@]}\n  for ((i=0;\
    \ i<len; i++)); do\n    curr_value=${arr[i]}\n    curr_index=$i\n    for ((j=i+1;\
    \ j<len; j++)); do\n      if ((${arr[j]} <= curr_value)); then\n        if ((j\
    \ > max_index)); then\n          max_index=$j\n          max_value=${arr[j]}\n\
    \        fi\n      fi\n    done\n    if ((max_index > -1)); then\n      echo $max_index\n\
    \      return\n    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local i=0\n\
    \  local j=0\n  local max=0\n  local max_index=0\n  local result=-1\n\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1;\
    \ j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=$j\n      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n\
    \      result=$i\n      break\n    fi\n  done\n\n  echo $result", "  local -a\
    \ arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i index=-1\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    max=${arr[i]}\n    for ((j=i+1; j<${#arr[@]};\
    \ j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        index=$j\n      fi\n    done\n    if [[ $index -ne -1 ]]; then\n    \
    \  echo $index\n      return\n    fi\n  done\n  echo $index", "  local -a arr=(\"\
    $@\")\n  local i=0\n  local j=0\n  local max=0\n  local max_index=0\n  local result=-1\n\
    \n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]}\
    \ ]]; then\n      max=${arr[i-1]}\n      max_index=$i\n      for ((j=i-1; j>=0;\
    \ j--)); do\n        if [[ ${arr[j]} -le $max ]]; then\n          max=${arr[j]}\n\
    \          max_index=$j\n        fi\n      done\n      result=$max_index\n   \
    \   break\n    fi\n  done\n\n  echo $result", "    local -a arr=($1)\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max_index=-1\n    local -i max_value=-1\n\
    \    local -i len=${#arr[@]}\n    for ((i=len-1; i>=0; i--)); do\n        if ((arr[i]\
    \ >= max_value)); then\n            max_value=arr[i]\n            max_index=i\n\
    \        fi\n    done\n    echo $max_index", "  local -a arr=($1)\n  local -i\
    \ i=${#arr[@]}-1\n  local -i j=i-1\n  local -i k=0\n  while ((i>0)); do\n    if\
    \ ((arr[i]>=arr[j])); then\n      ((i--))\n      ((j--))\n    else\n      k=i\n\
    \      break\n    fi\n  done\n  echo $k", "  local -a arr\n  arr=($1)\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local -i\
    \ i=0\n  local -i j=0\n  local -i max_index=0\n  local -i max_value=0\n  local\
    \ -i result=-1\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if (( arr[i] > max_value\
    \ )); then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    if (( arr[i] >= arr[i-1] )); then\n    \
    \  result=i\n      break\n    fi\n  done\n\n  echo $result", "  local -a arr=(\"\
    $@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i current_value=0\n  local -i current_index=0\n  local -i arr_length=${#arr[@]}\n\
    \  for ((i=0; i<arr_length; i++)); do\n    current_value=${arr[i]}\n    for ((j=i+1;\
    \ j<arr_length; j++)); do\n      if [[ ${arr[j]} -le current_value ]]; then\n\
    \        if [[ ${arr[j]} -gt max_value ]]; then\n          max_value=${arr[j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n  done\n  echo $max_index",
  "  local -a arr=($1)\n  local i=0\n  local j=0\n  local max=0\n  local max_index=0\n\
    \  for i in ${!arr[@]}; do\n    max=${arr[i]}\n    max_index=$i\n    for j in\
    \ $(seq $((i+1)) ${#arr[@]}); do\n      if [[ ${arr[j]} -le $max ]]; then\n  \
    \      max=${arr[j]}\n        max_index=$j\n      fi\n    done\n    if [[ $max_index\
    \ -gt $i ]]; then\n      echo $i\n      return\n    fi\n  done\n  echo -1", " \
    \ local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  local -i cur_value=0\n  local -i cur_index=0\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    cur_value=${arr[$i]}\n    cur_index=$i\n\
    \    for ((j=0; j<i; j++)); do\n      if [[ ${arr[$j]} -le $cur_value ]]; then\n\
    \        if [[ $max_value -lt ${arr[$j]} ]]; then\n          max_value=${arr[$j]}\n\
    \          max_index=$j\n        fi\n      fi\n    done\n    if [[ $max_index\
    \ -ge 0 ]]; then\n      arr[$cur_index]=${arr[$max_index]}\n      arr[$max_index]=$cur_value\n\
    \      max_index=-1\n      max_value=0\n    fi\n  done\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ ${arr[$i]} -lt ${arr[$((i+1))]} ]]; then\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1", "  local -a arr=($1)\n  local i=0\n\
    \  local j=0\n  local max=0\n  local max_index=0\n  local result=-1\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1;\
    \ j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -lt $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=$j\n      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n\
    \      result=$i\n      break\n    fi\n  done\n  echo $result", "  local -a array\n\
    \  IFS=' ' read -r -a array <<< \"$1\"\n  local -i i=0\n  local -i j=0\n  local\
    \ -i n=${#array[@]}\n  local -i max=0\n  local -i max_index=0\n  local -i max_index_prev=0\n\
    \  local -i max_index_prev_prev=0\n  local -i max_index_prev_prev_prev=0\n  local\
    \ -i max_index_prev_prev_prev_prev=0\n  local -i max_index_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev=0\n  local -i max_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local -i max_index_prev", "  local -a a=($1)\n  local i=0\n  local j=0\n  local\
    \ max=0\n  local max_index=0\n  local result=-1\n  for ((i=0; i<${#a[@]}; i++));\
    \ do\n    max=${a[i]}\n    max_index=$i\n    for ((j=i+1; j<${#a[@]}; j++)); do\n\
    \      if [[ ${a[j]} -le $max ]]; then\n        max=${a[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n      result=$i\n \
    \     break\n    fi\n  done\n  echo $result", "  local -a arr=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_index=0\n  local -i max_value=0\n  local\
    \ -i result=-1\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((arr[i] > max_value));\
    \ then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    if ((arr[i] < max_value)); then\n      for ((j=i+1;\
    \ j<${#arr[@]}; j++)); do\n        if ((arr[j] < arr[i])); then\n          result=i\n\
    \          break\n        fi\n      done\n    fi\n  done\n\n  echo $result", " \
    \ # Write your code here\n  # To print results to the standard output you can\
    \ use echo\n  # Example: echo \"Hello world\"\n  echo \"Hello world\"", "  local\
    \ -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i max_index=0\n\
    \  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] > max));\
    \ then\n      max=arr[i]\n      max_index=i\n    fi\n  done\n  for ((i=0; i<max_index;\
    \ i++)); do\n    if ((arr[i] > arr[i+1])); then\n      echo -1\n      return\n\
    \    fi\n  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local i=0\n \
    \ local j=0\n  local max=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n\
    \  local max_l=0\n  local max_m=0\n  local max_n=0\n  local max_o=0\n  local max_p=0\n\
    \  local max_q=0\n  local max_r=0\n  local max_s=0\n  local max_t=0\n  local max_u=0\n\
    \  local max_v=0\n  local max_w=0\n  local max_x=0\n  local max_y=0\n  local max_z=0\n\
    \  local max_aa=0\n  local max_ab=0\n  local max_ac=0\n  local max_ad=0\n  local\
    \ max_ae=0\n  local max_af=0\n  local max_ag=0\n  local max_ah=0\n  local max_ai=0\n\
    \  local max_aj=0\n  local max_ak=0\n  local max_al=0\n  local max_am=0\n  local\
    \ max_an=0\n  local max_ao=0\n  local max_ap=0\n  local max_aq=0\n  local max_ar=0\n\
    \  local max_as=0\n  local max_at=0\n  local max_au=0\n  local max_av=0\n  local\
    \ max_aw=0\n  local max_ax=0\n  local max_ay=0\n  local max_az=0\n  local max_ba=0\n\
    \  local max_bb=0\n  local max_bc=0\n  local max_bd=0\n  local max_be=0\n  local\
    \ max_bf=0\n  local max_bg=0\n  local max_bh=0\n  local max_bi=0\n  local max_bj=0\n\
    \  local max_bk=0\n  local max_bl=0\n  local max_bm=0\n  local max_bn=0\n  local\
    \ max_bo=0\n  local max_bp=0\n ", "  local -a arr=(\"$@\")\n  local -i i=0\n \
    \ local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i cur_value=0\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    cur_value=${arr[i]}\n    if ((cur_value\
    \ > max_value)); then\n      max_value=$cur_value\n      max_index=$i\n    fi\n\
    \  done\n  echo $max_index", "    local -a arr=($1)\n    local i=0\n    local\
    \ j=0\n    local max=0\n    local max_index=0\n    local len=${#arr[@]}\n    for\
    \ ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n           \
    \ if [[ ${arr[j]} -le ${arr[i]} ]]; then\n                if [[ $j -gt $max ]];\
    \ then\n                    max=$j\n                    max_index=$i\n       \
    \         fi\n            fi\n        done\n    done\n    if [[ $max_index -eq\
    \ 0 ]]; then\n        echo -1\n    else\n        echo $max_index\n    fi", " \
    \ local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local len=${#arr[@]}\n  local\
    \ max=0\n  local max_index=0\n  local max_index_found=false\n  local max_index_found_index=0\n\
    \  local max_index_found_index_found=false\n  local max_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found=false\n  local max_index_found_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found_index_found=false\n  local max_index_found_index_found_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found_index_found_index_found=false\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found=false\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found_index_found=false\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found_index_found_index_found=false\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found_index_found_index_found_index=0\n\
    \  local max_index_found_index_found_index_found_index_found_index_found_index_found_index_found_index_found_index_found=false\n\
    \  local max_index_found_index_found_index_found_index_found_index", "    local\
    \ -a arr\n    arr=($1)\n    local i\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n\
    \        if [[ ${arr[i]} -le ${arr[i-1]} ]]; then\n            echo $i\n     \
    \       return\n        fi\n    done\n    echo -1", "  local -a array=($1)\n \
    \ local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i current_value=0\n  local -i current_index=0\n  local -i current_max_index=0\n\
    \  local -i current_max_value=0\n  local -i current_max_index_value=0\n  local\
    \ -i current_max_index_index=0\n  local -i current_max_index_index_value=0\n \
    \ local -i current_max_index_index_index=0\n  local -i current_max_index_index_index_value=0\n\
    \  local -i current_max_index_index_index_index=0\n  local -i current_max_index_index_index_index_value=0\n\
    \  local -i current_max_index_index_index_index_index=0\n  local -i current_max_index_index_index_index_index_value=0\n\
    \  local -i current_max_index_index_index_index_index_index=0\n  local -i current_max_index_index_index_index_index_index_value=0\n\
    \  local -i current_max_index_index_index_index_index_index_index=0\n  local -i\
    \ current_max_index_index_index_index_index_index_index_value=0\n  local -i current_max_index_index_index_index_index_index_index_index=0\n\
    \  local -i current_max_index_index_index_index_index_index_index_index_value=0\n\
    \  local -i current_max_index_index_index_index_index_index_index_index_index=0\n\
    \  local -i current_max_index_index_index_index_index_index_index_index_index_value=0\n\
    \  local -i current_max_index_index_index_index_index_index_index_index_index_index=0\n\
    \  local -i current_max_index_index_index_index_index_index_index_index_index",
  "  local -a array=($1)\n  local -i len=${#array[@]}\n  local -i i=0\n  local -i\
    \ max=0\n  local -i max_index=0\n  local -i index=-1\n  while (( i < len )); do\n\
    \    if (( array[i] > max )); then\n      max=array[i]\n      max_index=i\n  \
    \  fi\n    if (( i > 0 && array[i] < array[i-1] )); then\n      index=max_index\n\
    \    fi\n    (( i++ ))\n  done\n  echo $index", "  local -a arr=($1)\n  local\
    \ i=0\n  local len=${#arr[@]}\n  local max_index=-1\n  local max_value=0\n  while\
    \ [ $i -lt $len ]; do\n    if [ ${arr[$i]} -ge $max_value ]; then\n      max_value=${arr[$i]}\n\
    \      max_index=$i\n    fi\n    i=$((i+1))\n  done\n  echo $max_index", "  local\
    \ -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n \
    \ local -i max_value=0\n  local -i current_value=0\n  local -i current_index=0\n\
    \  local -i prev_value=0\n  local -i prev_index=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    current_value=${arr[i]}\n    current_index=i\n\
    \    for ((j=i+1; j<len; j++)); do\n      if [[ ${arr[j]} -lt $current_value ]];\
    \ then\n        current_value=${arr[j]}\n        current_index=j\n      fi\n \
    \   done\n    if [[ $current_index -gt $max_index ]]; then\n      max_index=$current_index\n\
    \      max_value=$current_value\n    fi\n    if [[ $i -gt 0 ]]; then\n      prev_value=${arr[i-1]}\n\
    \      prev_index=$i-1\n      if [[ $prev_value -gt $max_value ]]; then\n    \
    \    echo $prev_index\n        return\n      fi\n    fi\n  done\n  echo $max_index",
  "    local -a arr=($1)\n    local i=0\n    local j=0\n    local max=0\n    local\
    \ max_index=0\n    local result=-1\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n\
    \        if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n            max=${arr[i-1]}\n\
    \            max_index=i-1\n            for ((j=i-1; j>=0; j--)); do\n       \
    \         if [[ ${arr[j]} -le $max ]]; then\n                    max=${arr[j]}\n\
    \                    max_index=j\n                fi\n            done\n     \
    \       result=$max_index\n            break\n        fi\n    done\n    echo $result",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_i=0\n \
    \ local -i max_j=0\n  local -i max_diff=0\n  local -i diff=0\n  local -i len=${#arr[@]}\n\
    \  local -i ret=-1\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++));\
    \ do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff > 0 && diff > max_diff));\
    \ then\n        max_diff=$diff\n        max_i=$i\n        max_j=$j\n      fi\n\
    \    done\n  done\n\n  if ((max_diff > 0)); then\n    ret=$max_j\n  fi\n\n  echo\
    \ $ret", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local\
    \ -i max=0\n    local -i max_index=0\n    local -i len=${#arr[@]}\n    for ((i=0;\
    \ i<len; i++)); do\n        max=${arr[i]}\n        max_index=$i\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${arr[j]} -le $max ]]; then\n          \
    \      max=${arr[j]}\n                max_index=$j\n            fi\n        done\n\
    \        if [[ $max_index -gt $i ]]; then\n            echo $max_index\n     \
    \       return\n        fi\n    done\n    echo -1", "  local -a arr=($1)\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i curr_value=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    curr_value=${arr[i]}\n\
    \    if ((curr_value > max_value)); then\n      max_value=$curr_value\n      max_index=$i\n\
    \    fi\n  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local i=0\n \
    \ local j=0\n  local k=0\n  local max_index=0\n  local max_value=0\n  local curr_value=0\n\
    \  local curr_index=0\n  local prev_value=0\n  local prev_index=0\n  local ret_value=-1\n\
    \  local ret_index=-1\n  local len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n\
    \    curr_value=${arr[$i]}\n    curr_index=$i\n    if ((curr_value > prev_value));\
    \ then\n      if ((curr_index > max_index)); then\n        max_index=$curr_index\n\
    \        max_value=$curr_value\n      fi\n    elif ((curr_value < prev_value));\
    \ then\n      if ((curr_index > ret_index)); then\n        ret_index=$curr_index\n\
    \        ret_value=$curr_value\n      fi\n    fi\n    prev_value=$curr_value\n\
    \    prev_index=$curr_index\n  done\n  echo \"$ret_index\"", "  local -a arr\n\
    \  local -i i\n  local -i j\n  local -i max\n  local -i max_index\n  local -i\
    \ n\n  local -i prev\n  local -i ret\n\n  arr=($1)\n  n=${#arr[@]}\n  max=0\n\
    \  max_index=-1\n  prev=${arr[0]}\n  for ((i=1; i<n; i++)); do\n    if [[ ${arr[i]}\
    \ -gt prev ]]; then\n      if [[ ${arr[i]} -gt max ]]; then\n        max=${arr[i]}\n\
    \        max_index=i\n      fi\n    fi\n    prev=${arr[i]}\n  done\n  ret=-1\n\
    \  if [[ max_index -ne -1 ]]; then\n    for ((j=max_index-1; j>=0; j--)); do\n\
    \      if [[ ${arr[j]} -lt max ]]; then\n        ret=$j\n        break\n     \
    \ fi\n    done\n  fi\n  echo $ret", "  local -a arr=(\"$@\")\n  local -i i=0\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  local -i prev_value=0\n  for\
    \ i in \"${!arr[@]}\"; do\n    if [[ ${arr[$i]} -gt $prev_value ]]; then\n   \
    \   if [[ $i -gt $max_index ]]; then\n        max_index=$i\n        max_value=${arr[$i]}\n\
    \      fi\n    fi\n    prev_value=${arr[$i]}\n  done\n  echo $max_index", "  local\
    \ -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n \
    \ local -i max_value=0\n  local -i cur_value=0\n  local -i cur_index=0\n  for\
    \ ((i=${#arr[@]}-1; i>=0; i--)); do\n    cur_value=${arr[i]}\n    cur_index=i\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -le $cur_value ]]; then\n\
    \        if [[ $cur_index -gt $max_index ]]; then\n          max_index=$cur_index\n\
    \          max_value=$cur_value\n        fi\n        break\n      fi\n    done\n\
    \  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n\
    \  local max_index=-1\n  local max_value=0\n  local current_value=0\n  local current_index=0\n\
    \  for i in \"${arr[@]}\"; do\n    current_value=${arr[$j]}\n    current_index=$j\n\
    \    if [[ $current_value -gt $max_value ]]; then\n      max_value=$current_value\n\
    \      max_index=$current_index\n    fi\n    ((j++))\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local\
    \ -i max_i=0\n  local -i n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    max=${arr[i]}\n\
    \    max_i=$i\n    for ((j=i+1; j<n; j++)); do\n      if [[ ${arr[j]} -le $max\
    \ ]]; then\n        max=${arr[j]}\n        max_i=$j\n      fi\n    done\n    if\
    \ [[ $max_i -gt $i ]]; then\n      arr[$max_i]=${arr[i]}\n      arr[$i]=$max\n\
    \    else\n      echo -1\n      return\n    fi\n  done\n  echo $i", '  # Your
    code here', "  local -a arr=($1)\n  local -i i=0\n  local -i len=${#arr[@]}\n\
    \  local -i max_i=0\n  local -i max_val=0\n  local -i res=-1\n  while (( i < len\
    \ )); do\n    if (( arr[i] < arr[i-1] )); then\n      if (( arr[i] > max_val ));\
    \ then\n        max_val=arr[i]\n        max_i=i\n      fi\n    else\n      res=max_i\n\
    \    fi\n    (( i++ ))\n  done\n  echo $res", "  local -a arr=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    if (( arr[i] < arr[i-1]\
    \ )); then\n      if (( arr[i] > max_value )); then\n        max_value=arr[i]\n\
    \        max_index=i\n      fi\n    fi\n  done\n  echo $max_index", "    local\
    \ -a arr=($1)\n    local i=0\n    local len=${#arr[@]}\n    local max_index=-1\n\
    \    local max_value=${arr[0]}\n    local max_index_value=${arr[0]}\n    while\
    \ [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt $max_value ]; then\n      \
    \      if [ $max_index_value -gt ${arr[$i]} ]; then\n                max_index=$i\n\
    \                max_index_value=${arr[$i]}\n            fi\n        else\n  \
    \          max_index=$i\n            max_index_value=${arr[$i]}\n            max_value=${arr[$i]}\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $max_index", "  local -a arr=(\"\
    $@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=0\n  local -i max_value=0\n\
    \  local -i len=${#arr[@]}\n  local -i result=-1\n\n  for ((i=0; i<len; i++));\
    \ do\n    if ((arr[i] < arr[i-1])); then\n      if ((arr[i] > max_value)); then\n\
    \        max_value=arr[i]\n        max_index=i\n      fi\n    fi\n  done\n\n \
    \ if ((max_value > 0)); then\n    result=$max_index\n  fi\n\n  echo $result",
  "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n  local -i j\n  while (( i > 0\
    \ )); do\n    (( j = i - 1 ))\n    while (( j >= 0 )); do\n      if (( arr[j]\
    \ <= arr[i] )); then\n        (( j-- ))\n      else\n        echo $j\n       \
    \ return\n      fi\n    done\n    (( i-- ))\n  done\n  echo -1", "  local -a arr=($1)\n\
    \  local i=0\n  local j=0\n  local max=0\n  local max_index=0\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n      max=${arr[i-1]}\n\
    \      max_index=$i\n      for ((j=i; j<${#arr[@]}; j++)); do\n        if [[ ${arr[j]}\
    \ -lt $max ]]; then\n          max=${arr[j]}\n          max_index=$j\n       \
    \ fi\n      done\n      echo $max_index\n      return\n    fi\n  done\n  echo\
    \ -1", "    local -a arr=(\"$@\")\n    local i=0\n    while [[ $i -lt ${#arr[@]}\
    \ ]]; do\n        if [[ ${arr[$i]} -lt ${arr[$((i-1))]} ]]; then\n           \
    \ echo $((i-1))\n            return\n        fi\n        i=$((i+1))\n    done\n\
    \    echo -1", "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local max_i=0\n\
    \  local max_j=0\n  local max_diff=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n \
    \   for ((j=i+1; j<${#arr[@]}; j++)); do\n      if ((arr[j] < arr[i])); then\n\
    \        if ((j - i > max_diff)); then\n          max_diff=j-i\n          max_i=i\n\
    \          max_j=j\n        fi\n      fi\n    done\n  done\n  if ((max_diff ==\
    \ 0)); then\n    echo -1\n  else\n    echo $max_j\n  fi", "    local -a arr\n\
    \    IFS=' ' read -r -a arr <<< \"$1\"\n    local -i i=0\n    local -i j=0\n \
    \   local -i max_index=-1\n    local -i max_value=0\n    local -i curr_value=0\n\
    \    local -i curr_index=0\n    for i in \"${!arr[@]}\"; do\n        curr_value=${arr[$i]}\n\
    \        if (( curr_value > max_value )); then\n            max_value=$curr_value\n\
    \            max_index=$i\n        fi\n        for j in \"${!arr[@]}\"; do\n \
    \           if (( j < i )); then\n                if (( arr[$j] <= curr_value\
    \ )); then\n                    curr_index=-1\n                    break\n   \
    \             fi\n            fi\n        done\n        if (( curr_index > max_index\
    \ )); then\n            max_index=$curr_index\n        fi\n        curr_index=$i\n\
    \    done\n    echo $max_index", "  local -a arr=()\n  local -i i=0\n  local -i\
    \ j=0\n  local -i max=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i n=0\n\
    \  local -i result=-1\n  local -i tmp=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n\n  arr=($1)\n  n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1;\
    \ j<n; j++)); do\n      x=${arr[i]}\n      y=${arr[j]}\n      if ((x < y)); then\n\
    \        z=$((y - x))\n        if ((z > max)); then\n          max=$z\n      \
    \    max_i=$i\n          max_j=$j\n        fi\n      fi\n    done\n  done\n  if\
    \ ((max > 0)); then\n    result=$max_i\n  fi\n  echo $result", "  local -a arr=(\"\
    $@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[i]}\
    \ -gt max_value ]]; then\n      max_value=${arr[i]}\n      max_index=i\n    fi\n\
    \  done\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[i]} -lt max_value ]];\
    \ then\n      for ((j=i+1; j<len; j++)); do\n        if [[ ${arr[j]} -lt ${arr[i]}\
    \ ]]; then\n          echo -1\n          return\n        fi\n      done\n    fi\n\
    \  done\n  echo $max_index", "  local arr=($1)\n  local i=0\n  local j=0\n  local\
    \ max=0\n  local max_i=0\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    if [[ ${arr[i]}\
    \ -ge $max ]]; then\n      max=${arr[i]}\n      max_i=$i\n    else\n      echo\
    \ $max_i\n      return\n    fi\n  done\n  echo -1", "  local -a arr=($1)\n  local\
    \ -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i cur_value=0\n  local -i cur_index=0\n  local -i len=${#arr[@]}\n  for ((i=0;\
    \ i<len; i++)); do\n    cur_value=${arr[i]}\n    for ((j=i+1; j<len; j++)); do\n\
    \      if [[ ${arr[j]} -le cur_value ]]; then\n        cur_index=$j\n        break\n\
    \      fi\n    done\n    if [[ $cur_index -gt $max_index ]]; then\n      max_index=$cur_index\n\
    \      max_value=${arr[max_index]}\n    fi\n  done\n  echo $max_index", "  local\
    \ -a arr=($1)\n  local i=0\n  local j=0\n  local len=${#arr[@]}\n  local -a res=()\n\
    \  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[\
    \ ${arr[j]} -lt ${arr[i]} ]]; then\n        res[i]=$j\n        break\n      fi\n\
    \    done\n  done\n  if [[ ${#res[@]} -eq 0 ]]; then\n    echo -1\n  else\n  \
    \  echo ${res[@]} | tr ' ' '\\n' | sort -n | tail -n 1\n  fi", "    local -a arr=($1)\n\
    \    local i=0\n    local j=0\n    local max=0\n    local max_index=0\n    local\
    \ len=${#arr[@]}\n    for ((i=len-1; i>=0; i--)); do\n        if [[ ${arr[i]}\
    \ -ge $max ]]; then\n            max=${arr[i]}\n            max_index=$i\n   \
    \     fi\n    done\n    for ((i=len-1; i>=0; i--)); do\n        if [[ ${arr[i]}\
    \ -lt $max ]]; then\n            echo $i\n            return\n        fi\n   \
    \ done\n    echo -1", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n\
    \    local -i max_index=-1\n    local -i max_value=-1\n    local -i len=${#arr[@]}\n\
    \    for ((i=len-1; i>=0; i--)); do\n        if ((arr[i] < max_value)); then\n\
    \            max_index=i\n            max_value=arr[i]\n        fi\n    done\n\
    \    echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1;\
    \ j<${#arr[@]}; j++)); do\n      if [[ ${arr[j]} -le ${arr[i]} ]]; then\n    \
    \    if [[ j -gt max_index ]]; then\n          max_index=$j\n        fi\n    \
    \  fi\n    done\n  done\n  echo $max_index", "  local -a arr\n  arr=($1)\n  local\
    \ i=0\n  local j=0\n  local max=0\n  local max_index=0\n  local len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1;\
    \ j<len; j++)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=$j\n      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n\
    \      arr[$max_index]=${arr[i]}\n      arr[$i]=$max\n    fi\n  done\n  for ((i=0;\
    \ i<len-1; i++)); do\n    if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n      echo\
    \ $i\n      return\n    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n  local\
    \ max_index=-1\n  local max_value=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++));\
    \ do\n    if ((arr[i] < max_value)); then\n      max_index=$i\n      max_value=${arr[i]}\n\
    \    fi\n  done\n  echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n\
    \  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i n=${#arr[@]}\n\
    \  for ((i=0; i<n; i++)); do\n    if ((arr[i] > max_value)); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  for ((i=0; i<n; i++)); do\n    if ((arr[i]\
    \ < max_value)); then\n      for ((j=i+1; j<n; j++)); do\n        if ((arr[j]\
    \ >= arr[i])); then\n          break\n        fi\n      done\n      if ((j ==\
    \ n)); then\n        echo $i\n        return\n      fi\n    fi\n  done\n  echo\
    \ $max_index", "  local -a arr\n  local -i i=0\n  local -i len\n  local -i max_index=-1\n\
    \  local -i max_value\n  local -i value\n\n  arr=($1)\n  len=${#arr[@]}\n  max_value=${arr[0]}\n\
    \n  for ((i=1; i<len; i++)); do\n    value=${arr[i]}\n    if ((value <= max_value));\
    \ then\n      max_index=$i\n      max_value=$value\n    fi\n  done\n\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local max_index=-1\n  local\
    \ max_value=-1\n  local temp_index=-1\n  local temp_value=-1\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ ${arr[$i]} -gt $max_value ]]; then\n      max_value=${arr[$i]}\n\
    \      max_index=$i\n    fi\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if [[ ${arr[$i]} -lt $max_value ]]; then\n      temp_value=${arr[$i]}\n   \
    \   temp_index=$i\n      for ((j=$i+1; j<${#arr[@]}; j++)); do\n        if [[\
    \ ${arr[$j]} -ge $temp_value ]]; then\n          temp_value=${arr[$j]}\n     \
    \     temp_index=$j\n        fi\n      done\n      if [[ $temp_index -gt $max_index\
    \ ]]; then\n        max_index=$temp_index\n      fi\n    fi\n  done\n  echo $max_index",
  "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max=0\n\
    \    local -i max_index=0\n    local -i len=${#arr[@]}\n    local -i res=-1\n\n\
    \    for ((i=0; i<len; i++)); do\n        max=${arr[i]}\n        max_index=i\n\
    \        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]} -le $max ]];\
    \ then\n                max=${arr[j]}\n                max_index=j\n         \
    \   fi\n        done\n        if [[ $max_index -gt $i ]]; then\n            res=$i\n\
    \            break\n        fi\n    done\n\n    echo $res", "  arr=($1)\n  for\
    \ ((i=${#arr[@]}-1; i>0; i--)); do\n    if ((arr[i] < arr[i-1])); then\n     \
    \ echo $i\n      return\n    fi\n  done\n  echo -1", "  local -a arr=(\"$@\")\n\
    \  local -i i=0\n  local -i len=${#arr[@]}\n  local -i max_index=-1\n  local -i\
    \ max_value=0\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] >= max_value));\
    \ then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local i=0\n  local j=0\n  local max=0\n  local max_i=0\n\
    \  local max_j=0\n  local len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    for\
    \ ((j=i+1; j<len; j++)); do\n      if ((arr[j] < arr[i])); then\n        if ((arr[j]\
    \ > max)); then\n          max=${arr[j]}\n          max_i=$i\n          max_j=$j\n\
    \        fi\n      fi\n    done\n  done\n  if ((max > 0)); then\n    echo $max_j\n\
    \  else\n    echo -1\n  fi", "  local -a arr=($1)\n  local i=0\n  local j=0\n\
    \  local k=0\n  local max=0\n  local max_index=0\n  local max_index_prev=0\n \
    \ local max_index_prev_prev=0\n  local max_index_prev_prev_prev=0\n  local max_index_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev=0\n  local max_index_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev=0\n  local max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev", " \
    \   local -a arr=($1)\n    local -i i=0\n    local -i max=0\n    local -i max_i=0\n\
    \    local -i len=${#arr[@]}\n    local -i ret=-1\n\n    while (( i < len ));\
    \ do\n        if (( arr[i] > max )); then\n            max=arr[i]\n          \
    \  max_i=i\n        fi\n        (( i++ ))\n    done\n\n    (( i = max_i - 1 ))\n\
    \    while (( i >= 0 )); do\n        if (( arr[i] <= max )); then\n          \
    \  ret=i\n            break\n        fi\n        (( i-- ))\n    done\n\n    echo\
    \ $ret"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        local num=$i\n        if\
    \ (( num < 0 )); then\n            num=$(( -num ))\n        fi\n        while\
    \ (( num > 0 )); do\n            sum=$(( sum + num % 10 ))\n            num=$((\
    \ num / 10 ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    if [[ $num -lt 0 ]]; then\n      num=$(( -num ))\n    fi\n    while [[ $num\
    \ -gt 0 ]]; do\n      sum=$(( sum + num % 10 ))\n      num=$(( num / 10 ))\n \
    \   done\n    if [[ $sum -gt 0 ]]; then\n      count=$(( count + 1 ))\n    fi\n\
    \    sum=0\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        for ((i=0; i<${#num}; i++));\
    \ do\n            sum=$((sum + ${num:$i:1}))\n        done\n        if ((sum >\
    \ 0)); then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_pi8zdsz.sh: line 17: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    local\
    \ -i i=0\n    local -i len=${#arr[@]}\n    local -i sum=0\n    local -i num=0\n\
    \    local -i sign=0\n    local -i digit=0\n\n    while (( i < len )); do\n  \
    \      num=${arr[i]}\n        if (( num < 0 )); then\n            sign=-1\n  \
    \          num=$(( -num ))\n        else\n            sign=1\n        fi\n   \
    \     sum=0\n        while (( num > 0 )); do\n            digit=$(( num % 10 ))\n\
    \            sum=$(( sum + digit ))\n            num=$(( num / 10 ))\n       \
    \ done\n        if (( sign * sum > 0 )); then\n            count=$(( count + 1\
    \ ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpka9jk75m.sh: line 22: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local nums=($1)\n  local count=0\n  for num in ${nums[@]};\
    \ do\n    local sum=0\n    local abs_num=${num#-}\n    while [ $abs_num -gt 0\
    \ ]; do\n      sum=$((sum + abs_num % 10))\n      abs_num=$((abs_num / 10))\n\
    \    done\n    if [ $sum -gt 0 ]; then\n      count=$((count + 1))\n    fi\n \
    \ done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=${i#-}\n        while\
    \ [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i num\n    local -i count=0\n\
    \    for num in $1; do\n        if (( num < 0 )); then\n            num=-num\n\
    \        fi\n        while (( num > 0 )); do\n            sum+=num%10\n      \
    \      num/=10\n        done\n        if (( sum > 0 )); then\n            (( count++\
    \ ))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file
    or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh:
    line 21: num/=10: No such file or directory\n/tmp/tmpgq2buk8_.sh: line 21: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1659996681
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for ((i=0;\
    \ i<${#array[@]}; i++)); do\n        local sum=0\n        local num=${array[$i]}\n\
    \        if ((num < 0)); then\n            num=$((-num))\n        fi\n       \
    \ while ((num > 0)); do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if ((sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local -i count=0\n    for num\
    \ in \"${arr[@]}\"; do\n        local -i sum=0\n        if (( num < 0 )); then\n\
    \            num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n  \
    \          sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n      \
    \  done\n        if (( sum > 0 )); then\n            count=$(( count + 1 ))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -i sum=0\n  for num in $1; do\n    if (( num <\
    \ 0 )); then\n      num=-num\n    fi\n    while (( num > 0 )); do\n      sum+=num%10\n\
    \      num/=10\n    done\n    if (( sum > 0 )); then\n      (( ++count ))\n  \
    \  fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local nums=($1)\n  local count=0\n  for num in ${nums[@]};\
    \ do\n    local sum=0\n    local abs_num=${num#-}\n    while [ $abs_num -gt 0\
    \ ]; do\n      sum=$((sum + abs_num % 10))\n      abs_num=$((abs_num / 10))\n\
    \    done\n    if [ $sum -gt 0 ]; then\n      count=$((count + 1))\n    fi\n \
    \ done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  # TODO: implement this function\n  return 0\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        if [[\
    \ $i -lt 0 ]]; then\n            num=$((-i))\n        fi\n        while [[ $num\
    \ -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num /\
    \ 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while (( abs_num > 0 )); do\n            (( sum += abs_num % 10 ))\n\
    \            (( abs_num /= 10 ))\n        done\n        (( sum > 0 )) && (( count++\
    \ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=(\"$@\")\n    local count=0\n    for\
    \ i in \"${array[@]}\"; do\n        local sum=0\n        for (( j=0; j<${#i};\
    \ j++ )); do\n            (( sum += ${i:$j:1} ))\n        done\n        (( sum\
    \ > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp47_l089z.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmp47_l089z.sh: line 17: ((: sum +=   : syntax error: operand expected (error
    token is "+=   ")

    /tmp/tmp47_l089z.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    /tmp/tmp47_l089z.sh: line 17: ((: sum +=   : syntax error: operand expected (error
    token is "+=   ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    for i in $1; do\n        if ((\
    \ i < 0 )); then\n            (( sum += -i % 10 ))\n            (( i /= -10 ))\n\
    \        else\n            (( sum += i % 10 ))\n            (( i /= 10 ))\n  \
    \      fi\n        while (( i > 0 )); do\n            (( sum += i % 10 ))\n  \
    \          (( i /= 10 ))\n        done\n        if (( sum > 0 )); then\n     \
    \       (( count++ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  for i in $1; do\n    if [ $i -lt 0 ];\
    \ then\n      i=$((-$i))\n    fi\n    while [ $i -gt 0 ]; do\n      sum=$((sum\
    \ + i % 10))\n      i=$((i / 10))\n    done\n    if [ $sum -gt 0 ]; then\n   \
    \   echo $i\n    fi\n  done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local -i count=0\n    for\
    \ i in \"${array[@]}\"; do\n        local -i sum=0\n        local -i num=$i\n\
    \        while (( num > 0 )); do\n            (( sum += num % 10 ))\n        \
    \    (( num /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        if ((num < 0)); then\n \
    \           num=$((-num))\n        fi\n        while ((num > 0)); do\n       \
    \     sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n \
    \       if ((sum > 0)); then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ ));\
    \ do\n            local digit=${i:$j:1}\n            if [[ $digit == \"-\" ]];\
    \ then\n                continue\n            fi\n            sum=$((sum + digit))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        local num=${i#-}\n    \
    \    while (( num > 0 )); do\n            sum=$(( sum + num % 10 ))\n        \
    \    num=$(( num / 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9ul4h4u8.sh: line 17: ((: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp9ul4h4u8.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while ((abs_num > 0)); do\n            sum=$((sum + abs_num % 10))\n\
    \            abs_num=$((abs_num / 10))\n        done\n        ((sum > 0)) && ((count++))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while (( abs_num > 0 )); do\n            (( sum += abs_num % 10 ))\n\
    \            (( abs_num /= 10 ))\n        done\n        (( sum > 0 )) && (( count++\
    \ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    # Hint: use a\
    \ for loop and the sum_digits function\n    # Hint: use the -gt operator to compare\
    \ integers\n    # Hint: use the -eq operator to compare integers\n    # Hint:\
    \ use the -ne operator to compare integers\n    # Hint: use the -a operator to\
    \ combine conditions\n    # Hint: use the -o operator to combine conditions\n\
    \    # Hint: use the -z operator to check if a string is empty\n    # Hint: use\
    \ the -n operator to check if a string is not empty\n    # Hint: use the -z operator\
    \ to check if a string is empty\n    # Hint: use the -n operator to check if a\
    \ string is not empty\n    # Hint: use the -z operator to check if a string is\
    \ empty\n    # Hint: use the -n operator to check if a string is not empty\n \
    \   # Hint: use the -z operator to check if a string is empty\n    # Hint: use\
    \ the -n operator to check if a string is not empty\n    # Hint: use the -z operator\
    \ to check if a string is empty\n    # Hint: use the -n operator to check if a\
    \ string is not empty\n    # Hint: use the -z operator to check if a string is\
    \ empty\n    # Hint: use the -n operator to check if a string is not empty\n \
    \   # Hint: use the -z operator to check if a string is empty\n    # Hint: use\
    \ the -n operator to check if a string is not empty\n    # Hint: use the -z operator\
    \ to check if a string is empty\n    # Hint: use the -n operator to check if a\
    \ string is not empty\n    # Hint: use the -z operator to check if a string is\
    \ empty\n    # Hint: use the -n operator to check if a string is not empty\n \
    \   # Hint: use the -z operator to check if a string is empty\n    # Hint: use\
    \ the -n operator to check if a string is not empty\n    # Hint: use the -z operator\
    \ to check if a string is empty\n    # Hint: use the -n operator to check if a\
    \ string is not empty\n    # Hint: use the -\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx9qh5jtk.sh: line 42: syntax error near unexpected token `}''

    /tmp/tmpx9qh5jtk.sh: line 42: `}''

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local\
    \ -i count=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[$i]}\
    \ -lt 0 ]]; then\n            sum=$(( ${arr[$i]} * -1 ))\n        else\n     \
    \       sum=${arr[$i]}\n        fi\n        while [[ $sum -gt 0 ]]; do\n     \
    \       sum=$(( sum / 10 ))\n            count=$(( count + 1 ))\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp0b8lrvs.sh: line 16: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpp0b8lrvs.sh: line 19: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        local num=$i\n        while\
    \ [[ $num -ne 0 ]]; do\n            local digit=$((num % 10))\n            num=$((num\
    \ / 10))\n            sum=$((sum + digit))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n  \
    \          i=$((-i))\n        fi\n        while [[ $i -gt 0 ]]; do\n         \
    \   sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n        if\
    \ [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    return 0\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    local\
    \ -i i=0\n    local -i sum=0\n    local -i num=0\n    local -i len=${#nums[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        num=${nums[i]}\n        if [[ $num -lt\
    \ 0 ]]; then\n            num=-$num\n        fi\n        while [[ $num -gt 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local count=0\n  for num in \"\
    ${nums[@]}\"; do\n    local sum=0\n    local abs_num=${num#-}\n    while (( abs_num\
    \ > 0 )); do\n      (( sum += abs_num % 10 ))\n      (( abs_num /= 10 ))\n   \
    \ done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local digits=${num//-/}\n\
    \        for ((i=0; i<${#digits}; i++)); do\n            ((sum += ${digits:$i:1}))\n\
    \        done\n        ((sum > 0)) && ((count++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local\
    \ -i count=0\n    for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n \
    \           (( sum = sum + i * -1 ))\n        else\n            (( sum = sum +\
    \ i ))\n        fi\n        if (( sum > 0 )); then\n            (( count = count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzv6b450w.sh: line 16: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpzv6b450w.sh: line 19: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpzv6b450w.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpzv6b450w.sh: line 19: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local -i count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-$i))\n\
    \        fi\n        local -i sum=0\n        while [[ $i -gt 0 ]]; do\n      \
    \      sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n      \
    \  if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"\
    ; do\n    local sum=0\n    if (( i < 0 )); then\n      i=$(( -i ))\n    fi\n \
    \   while (( i > 0 )); do\n      sum=$(( sum + i % 10 ))\n      i=$(( i / 10 ))\n\
    \    done\n    if (( sum > 0 )); then\n      count=$(( count + 1 ))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      sum=$(( sum + ${num:$i:1}\
    \ ))\n    done\n    if (( sum > 0 )); then\n      count=$(( count + 1 ))\n   \
    \ fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw0is_45o.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp5d6bwx.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  for num in $1; do\n    if [[ $num -lt\
    \ 0 ]]; then\n      num=$(( -1 * num ))\n    fi\n    while [[ $num -gt 0 ]]; do\n\
    \      sum=$(( sum + num % 10 ))\n      num=$(( num / 10 ))\n    done\n    if\
    \ [[ $sum -gt 0 ]]; then\n      echo $num\n    fi\n  done\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -i sum=0\n  local -i count=0\n  for num in $1;\
    \ do\n    if (( num < 0 )); then\n      num=${num#-}\n    fi\n    while (( num\
    \ > 0 )); do\n      sum+=$(( num % 10 ))\n      num=$(( num / 10 ))\n    done\n\
    \    if (( sum > 0 )); then\n      (( count++ ))\n    fi\n    sum=0\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=${i#-}\n        while\
    \ (( num > 0 )); do\n            (( sum += num % 10 ))\n            (( num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ ));\
    \ do\n            sum=$(( sum + ${i:$j:1} ))\n        done\n        if (( sum\
    \ > 0 )); then\n            count=$(( count + 1 ))\n        fi\n    done\n   \
    \ echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpheir02dd.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"\
    ; do\n    local sum=0\n    local num=${i#-}\n    while (( num > 0 )); do\n   \
    \   (( sum += num % 10 ))\n      (( num /= 10 ))\n    done\n    (( sum > 0 ))\
    \ && (( count++ ))\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp5d6bwx.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -i sum=0\n  local -i num\n  for num in $1; do\n\
    \    if (( num < 0 )); then\n      num=-num\n    fi\n    while (( num > 0 ));\
    \ do\n      sum+=num%10\n      num/=10\n    done\n    if (( sum > 0 )); then\n\
    \      (( ++count ))\n    fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local\
    \ -i count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            i=$((-i))\n        fi\n        while [[ $i -gt 0 ]]; do\n       \
    \     sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n       \
    \ if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n  \
    \      sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyz0l3i7s.sh: line 16: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpyz0l3i7s.sh: line 19: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpyz0l3i7s.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpyz0l3i7s.sh: line 19: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if [[ $sum -gt 0 ]]; then\n          \
    \  count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7k71zosh.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=${i#-}\n        while\
    \ [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        [[ $sum -gt 0 ]] && count=$((count + 1))\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        local num=$i\n        while\
    \ [ $num -ne 0 ]; do\n            local digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if [ $sum -gt\
    \ 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local num\n    local sum\n    local\
    \ count=0\n    for num in $nums; do\n        sum=0\n        while [ $num -ne 0\
    \ ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i count=0\n    for num in $1; do\n        local\
    \ -i sum=0\n        for ((i=0; i<${#num}; i++)); do\n            ((sum+=${num:$i:1}))\n\
    \        done\n        ((sum>0)) && ((count++))\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpioudwjzz.sh: line 16: ((: sum+=-: syntax error: operand expected
    (error token is "-")

    /tmp/tmpioudwjzz.sh: line 16: ((: sum+=-: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    sum=0\n    if [ $num -lt 0 ]; then\n      num=$((-$num))\n    fi\n    while\
    \ [ $num -gt 0 ]; do\n      sum=$((sum + num % 10))\n      num=$((num / 10))\n\
    \    done\n    if [ $sum -gt 0 ]; then\n      count=$((count + 1))\n    fi\n \
    \ done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr\n    local -i sum\n    local -i i\n \
    \   local -i j\n    local -i count\n    local -i num\n    local -i digit\n\n \
    \   arr=($1)\n    count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        num=${arr[i]}\n\
    \        sum=0\n        for ((j=0; j<${#num}; j++)); do\n            digit=${num:j:1}\n\
    \            sum=$((sum + digit))\n        done\n        if ((sum > 0)); then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ylr2w9q.sh: line 26: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        while\
    \ [[ $num -ne 0 ]]; do\n            local digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd1_wq3ms.sh: line 17: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpd1_wq3ms.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local -i sum=0\n        for digit in $(echo\
    \ \"$num\" | sed 's/-//g'); do\n            ((sum+=digit))\n        done\n   \
    \     ((sum>0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp5d6bwx.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local -i count=0\n  local -i i=0\n\
    \  local -i sum=0\n  local -i num=0\n  local -i num_len=0\n  local -i num_len_i=0\n\
    \  local -i num_len_i_div=0\n  local -i num_len_i_mod=0\n  local -i num_len_i_mod_div=0\n\
    \  local -i num_len_i_mod_mod=0\n  local -i num_len_i_mod_mod_div=0\n  local -i\
    \ num_len_i_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_div=0\n  local -i\
    \ num_len_i_mod_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_mod_div=0\n  local\
    \ -i num_len_i_mod_mod_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_mod_mod_div=0\n\
    \  local -i num_len_i_mod_mod_mod_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_mod_mod_mod_div=0\n\
    \  local -i num_len_i_mod_mod_mod_mod_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_mod_mod_mod_mod_div=0\n\
    \  local -i num_len_i_mod_mod_mod_mod_mod_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_mod_mod_mod_mod_mod_div=0\n\
    \  local -i num_len_i_mod_mod_mod_mod_mod_mod_mod_mod_mod=0\n  local -i num_len_i_mod_mod_mod_mod_mod_mod_mod_mod_mod_div=0\n\
    \  local -i num_len_i_mod_mod_mod_mod_\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            ((\
    \ sum += ${num:$i:1} ))\n        done\n        if (( sum > 0 )); then\n      \
    \      (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5tcbo2fv.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmp5tcbo2fv.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local -i sum=0\n    local -i\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        if [[ $i -lt\
    \ 0 ]]; then\n            i=$((i * -1))\n        fi\n        while [[ $i -gt 0\
    \ ]]; do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n     \
    \   done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    local\
    \ -i i=0\n    local -i sum=0\n    local -i num=0\n    local -i len=${#arr[@]}\n\
    \    local -i digit=0\n    local -i sign=0\n    local -i abs=0\n    local -i abs_digit=0\n\
    \    local -i abs_sum=0\n    local -i abs_num=0\n    local -i abs_len=0\n    local\
    \ -i abs_i=0\n    local -i abs_count=0\n    local -i abs_sign=0\n    local -i\
    \ abs_digit=0\n    local -i abs_sum=0\n    local -i abs_num=0\n    local -i abs_len=0\n\
    \    local -i abs_i=0\n    local -i abs_count=0\n    local -i abs_sign=0\n   \
    \ local -i abs_digit=0\n    local -i abs_sum=0\n    local -i abs_num=0\n    local\
    \ -i abs_len=0\n    local -i abs_i=0\n    local -i abs_count=0\n    local -i abs_sign=0\n\
    \    local -i abs_digit=0\n    local -i abs_sum=0\n    local -i abs_num=0\n  \
    \  local -i abs_len=0\n    local -i abs_i=0\n    local -i abs_count=0\n    local\
    \ -i abs_sign=0\n    local -i abs_digit=0\n    local -i abs_sum=0\n    local -i\
    \ abs_num=0\n    local -i abs_len=0\n    local -i abs_i=0\n    local -i abs_count=0\n\
    \    local -i abs_sign=0\n    local -i abs_digit=0\n    local -i abs_sum=0\n \
    \   local -i abs_num=0\n    local -i abs_len=0\n    local -i abs_i=0\n    local\
    \ -i abs_count=0\n    local -i abs_sign=0\n    local -i abs_digit=0\n   \n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp5d6bwx.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local count=0\n  for num in \"\
    ${nums[@]}\"; do\n    local sum=0\n    local abs_num=${num#-}\n    while (( abs_num\
    \ > 0 )); do\n      (( sum += abs_num % 10 ))\n      (( abs_num /= 10 ))\n   \
    \ done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while ((abs_num > 0)); do\n            local digit=$((abs_num % 10))\n\
    \            sum=$((sum + digit))\n            abs_num=$((abs_num / 10))\n   \
    \     done\n        if ((sum > 0)); then\n            count=$((count + 1))\n \
    \       fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i num\n    for num in $1;\
    \ do\n        if (( num < 0 )); then\n            num=-num\n        fi\n     \
    \   while (( num > 0 )); do\n            sum+=num%10\n            num/=10\n  \
    \      done\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1659996681
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    echo \"0\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    for n in $1; do\n        if [ $n\
    \ -lt 0 ]; then\n            n=$((-$n))\n        fi\n        while [ $n -gt 0\
    \ ]; do\n            sum=$((sum + n % 10))\n            n=$((n / 10))\n      \
    \  done\n        if [ $sum -gt 0 ]; then\n            echo $n\n        fi\n  \
    \  done | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    sum=0\n    for digit in $(echo $num | sed 's/-//g' | sed 's/./& /g'); do\n\
    \      sum=$((sum + digit))\n    done\n    if [ $sum -gt 0 ]; then\n      count=$((count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # your code here\n    echo $1 | tr ' ' '\\n' | awk\
    \ '{sum=0; for(i=1;i<=length($1);i++) {sum+=substr($1,i,1)}; if(sum>0) print $1}'\
    \ | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    for i in $1; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            (( sum += ${i:$j:1} ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        while\
    \ [ $num -ne 0 ]; do\n            local digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if [ $sum -gt\
    \ 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5lch1h40.sh: line 17: [: -ne: unary operator expected

    /tmp/tmp5lch1h40.sh: line 17: [: -1: unary operator expected

    /tmp/tmp5lch1h40.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr\n    local -i sum\n    local -i i\n \
    \   arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=0\n        while\
    \ ((arr[i] != 0)); do\n            ((sum += arr[i] % 10))\n            ((arr[i]\
    \ /= 10))\n        done\n        ((sum > 0)) && ((count++))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    # Hint: use the\
    \ following command to get the sum of digits:\n    # echo $((1 + 2 + 3))\n   \
    \ # Hint: use the following command to get the absolute value:\n    # echo $((-1\
    \ * -1))\n    # Hint: use the following command to get the first signed digit:\n\
    \    # echo $((-123 / 100))\n    # Hint: use the following command to get the\
    \ remaining digits:\n    # echo $((-123 % 100))\n    # Hint: use the following\
    \ command to get the length of an array:\n    # echo ${#array[@]}\n    # Hint:\
    \ use the following command to get the nth element of an array:\n    # echo ${array[n]}\n\
    \    # Hint: use the following command to get the first n elements of an array:\n\
    \    # echo ${array[@]:0:n}\n    # Hint: use the following command to get the\
    \ last n elements of an array:\n    # echo ${array[@]:${#array[@]}-n:n}\n    #\
    \ Hint: use the following command to get the elements of an array except\n   \
    \ # the first n elements:\n    # echo ${array[@]:n}\n    # Hint: use the following\
    \ command to get the elements of an array except\n    # the last n elements:\n\
    \    # echo ${array[@]:0:${#array[@]}-n}\n    # Hint: use the following command\
    \ to get the elements of an array except\n    # the first n elements and the last\
    \ m elements:\n    # echo ${array[@]:n:${#array[@]}-n-m}\n    # Hint: use the\
    \ following command to get the elements of an array except\n    # the last n elements\
    \ and the first m elements:\n    # echo ${array[@]:m:${#array[@]}-n-m}\n    #\
    \ Hint: use the following command to get the elements of an array except\n   \
    \ # the nth element:\n    # echo ${array[@]:0:n} ${array[@]:n+1}\n    # Hint:\
    \ use the following command to get the elements of an array except\n    # the\
    \ nth\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp06c73ez.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmpp06c73ez.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a numbers=($1)\n    local count=0\n    for\
    \ number in \"${numbers[@]}\"; do\n        local sum=0\n        local abs_number=${number#-}\n\
    \        while (( abs_number > 0 )); do\n            (( sum += abs_number % 10\
    \ ))\n            (( abs_number /= 10 ))\n        done\n        (( sum > 0 ))\
    \ && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  # TODO: implement this function\n  # Hint: use the following\
    \ command to get the absolute value of a number:\n  # abs() { [[ $1 -lt 0 ]] &&\
    \ echo \"$((-$1))\" || echo \"$1\"; }\n  # Hint: use the following command to\
    \ get the sum of digits of a number:\n  # sum_digits() { echo \"$1\" | grep -o\
    \ . | paste -sd+ | bc; }\n  # Hint: use the following command to get the first\
    \ signed digit of a number:\n  # first_signed_digit() { echo \"$1\" | grep -o\
    \ . | head -n 1; }\n  # Hint: use the following command to get the rest of digits\
    \ of a number:\n  # rest_digits() { echo \"$1\" | grep -o . | tail -n +2; }\n\
    \  # Hint: use the following command to get the sum of digits of a number:\n \
    \ # sum_digits() { echo \"$1\" | grep -o . | paste -sd+ | bc; }\n  # Hint: use\
    \ the following command to get the first signed digit of a number:\n  # first_signed_digit()\
    \ { echo \"$1\" | grep -o . | head -n 1; }\n  # Hint: use the following command\
    \ to get the rest of digits of a number:\n  # rest_digits() { echo \"$1\" | grep\
    \ -o . | tail -n +2; }\n  # Hint: use the following command to get the sum of\
    \ digits of a number:\n  # sum_digits() { echo \"$1\" | grep -o . | paste -sd+\
    \ | bc; }\n  # Hint: use the following command to get the first signed digit of\
    \ a number:\n  # first_signed_digit() { echo \"$1\" | grep -o . | head -n 1; }\n\
    \  # Hint: use the following command to get the rest of digits of a number:\n\
    \  # rest_digits() { echo \"$1\" | grep -o . | tail -n +2; }\n  # Hint: use the\
    \ following command to get the sum of digits of a number:\n  # sum_digits() {\
    \ echo \"$1\" | grep -o . |\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7cr1jtvi.sh: line 35: syntax error near unexpected token `}''

    /tmp/tmp7cr1jtvi.sh: line 35: `}''

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local -i sum=0\n        local -i n=${num}\n\
    \        if (( n < 0 )); then\n            n=-n\n        fi\n        while ((\
    \ n > 0 )); do\n            (( sum += n % 10 ))\n            (( n /= 10 ))\n \
    \       done\n        if (( sum > 0 )); then\n            (( count++ ))\n    \
    \    fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local count=0\n  for i in $1; do\n    if [ $i -lt 0\
    \ ]; then\n      i=$((-$i))\n    fi\n    local sum=0\n    while [ $i -gt 0 ];\
    \ do\n      sum=$((sum + i % 10))\n      i=$((i / 10))\n    done\n    if [ $sum\
    \ -gt 0 ]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i num\n    local -i count=0\n\
    \    for num in $1; do\n        if (( num < 0 )); then\n            num=-num\n\
    \        fi\n        while (( num > 0 )); do\n            (( sum += num % 10 ))\n\
    \            (( num /= 10 ))\n        done\n        if (( sum > 0 )); then\n \
    \           (( count++ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        if [ $i -lt 0 ]; then\n            sum=$(( $i * -1 ))\n        else\n\
    \            sum=$i\n        fi\n        while [ $sum -gt 0 ]; do\n          \
    \  sum=$(( $sum / 10 ))\n            count=$(( $count + 1 ))\n        done\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local count=0\n  for num in \"\
    ${nums[@]}\"; do\n    local sum=0\n    local abs_num=${num#-}\n    while (( abs_num\
    \ > 0 )); do\n      sum=$(( sum + abs_num % 10 ))\n      abs_num=$(( abs_num /\
    \ 10 ))\n    done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # Your code here\n    echo $1 | tr ' ' '\\n' | awk\
    \ '{sum=0; for(i=1;i<=length($1);i++) {sum+=substr($1,i,1)}; if(sum>0) {print\
    \ $1}}' | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=($1)\n    local count=0\n    local i=0\n\
    \    local sum=0\n    local num=0\n    local digit=0\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        num=${nums[$i]}\n        sum=0\n        while [ $num -ne\
    \ 0 ]; do\n            digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local -i sum=0\n        for (( i=0; i<${#num};\
    \ i++ )); do\n            local -i digit=${num:$i:1}\n            if (( digit\
    \ < 0 )); then\n                digit=$(( -digit ))\n            fi\n        \
    \    (( sum += digit ))\n        done\n        if (( sum > 0 )); then\n      \
    \      (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwx967h_1.sh: line 17: local: -: syntax error: operand expected
    (error token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            ((\
    \ sum += ${num:$i:1} ))\n        done\n        (( sum > 0 )) && (( count++ ))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb1e0gtks.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpb1e0gtks.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        if [[\
    \ $i -lt 0 ]]; then\n            num=$((-i))\n        fi\n        while [[ $num\
    \ -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num /\
    \ 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    local num\n\
    \    for num in \"${nums[@]}\"; do\n        local sum=0\n        local digit\n\
    \        for digit in $(echo \"$num\" | sed 's/-//g'); do\n            sum=$((sum\
    \ + digit))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local num\n    local i\n    for num\
    \ in $1; do\n        sum=0\n        if [[ $num -lt 0 ]]; then\n            num=$((\
    \ -num ))\n        fi\n        while [[ $num -gt 0 ]]; do\n            i=$(( num\
    \ % 10 ))\n            num=$(( num / 10 ))\n            sum=$(( sum + i ))\n \
    \       done\n        if [[ $sum -gt 0 ]]; then\n            echo $num\n     \
    \   fi\n    done | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"\
    ; do\n    local sum=0\n    local num=$i\n    while [[ $num -ne 0 ]]; do\n    \
    \  sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n    if [[ $sum\
    \ -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=(\"$@\")\n  local count=0\n  for i in \"\
    ${arr[@]}\"; do\n    local sum=0\n    for ((j=0; j<${#i}; j++)); do\n      ((sum+=${i:$j:1}))\n\
    \    done\n    ((sum>0)) && ((count++))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmk4ch92v.sh: line 17: ((: sum+=-: syntax error: operand expected
    (error token is "-")

    /tmp/tmpmk4ch92v.sh: line 17: ((: sum+= : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpmk4ch92v.sh: line 17: ((: sum+=-: syntax error: operand expected (error
    token is "-")

    /tmp/tmpmk4ch92v.sh: line 17: ((: sum+= : syntax error: operand expected (error
    token is "+= ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a numbers=($1)\n    local -i count=0\n    for\
    \ number in \"${numbers[@]}\"; do\n        local -i sum=0\n        local -i n=${number#-}\n\
    \        while (( n > 0 )); do\n            (( sum += n % 10 ))\n            ((\
    \ n /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        local sum=0\n        while [[ $i -gt 0 ]]; do\n         \
    \   sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n        if\
    \ [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local -i sum=0\n        local -i n=${num#-}\n\
    \        while (( n > 0 )); do\n            (( sum += n % 10 ))\n            ((\
    \ n /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while [ $abs_num -gt 0 ]; do\n            sum=$((sum + abs_num % 10))\n\
    \            abs_num=$((abs_num / 10))\n        done\n        if [ $sum -gt 0\
    \ ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i num\n    for num in $1;\
    \ do\n        if (( num < 0 )); then\n            num=-num\n        fi\n     \
    \   while (( num > 0 )); do\n            sum+=num%10\n            num/=10\n  \
    \      done\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file
    or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh:
    line 20: num/=10: No such file or directory\n/tmp/tmp5uc_pcb3.sh: line 20: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1659996681
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        if [ $i -lt 0 ]; then\n            sum=$((sum + i))\n        else\n \
    \           sum=$((sum + i % 10))\n            i=$((i / 10))\n            while\
    \ [ $i -gt 0 ]; do\n                sum=$((sum + i % 10))\n                i=$((i\
    \ / 10))\n            done\n        fi\n        if [ $sum -gt 0 ]; then\n    \
    \        count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if [[ $sum -gt 0 ]]; then\n          \
    \  count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7k71zosh.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            sum=$((\
    \ sum + ${num:$i:1} ))\n        done\n        if (( sum > 0 )); then\n       \
    \     count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp36502ucz.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=$(( -i ))\n\
    \        fi\n        local -i sum=0\n        while (( i > 0 )); do\n         \
    \   sum=$(( sum + i % 10 ))\n            i=$(( i / 10 ))\n        done\n     \
    \   if (( sum > 0 )); then\n            count=$(( count + 1 ))\n        fi\n \
    \   done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpintdcqva.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpintdcqva.sh: line 19: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpintdcqva.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpintdcqva.sh: line 19: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  declare -a arr=(\"$@\")\n  local count=0\n  for i in\
    \ \"${arr[@]}\"; do\n    local sum=0\n    if [[ $i -lt 0 ]]; then\n      i=$((-i))\n\
    \    fi\n    while [[ $i -gt 0 ]]; do\n      sum=$((sum + i % 10))\n      i=$((i\
    \ / 10))\n    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7okr21ka.sh: line 16: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp7okr21ka.sh: line 19: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp7okr21ka.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp7okr21ka.sh: line 19: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i count=0\n    for i in\
    \ $1; do\n        if (( i < 0 )); then\n            i=${i#-}\n        fi\n   \
    \     while (( i > 0 )); do\n            sum+=i%10\n            i/=10\n      \
    \  done\n        (( sum > 0 )) && (( ++count ))\n        sum=0\n    done\n   \
    \ echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh:
    line 20: i/=10: No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10:
    No such file or directory\n/tmp/tmpyhlvjgax.sh: line 20: i/=10: No such file or
    directory'
  stdout: None
  timestamp: 1659996681
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local sum=0\n    local\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n    \
    \        i=$(( i * -1 ))\n        fi\n        while (( i > 0 )); do\n        \
    \    sum=$(( sum + i % 10 ))\n            i=$(( i / 10 ))\n        done\n    \
    \    if (( sum > 0 )); then\n            count=$(( count + 1 ))\n        fi\n\
    \        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw_p43a1w.sh: line 16: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpw_p43a1w.sh: line 19: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpw_p43a1w.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpw_p43a1w.sh: line 19: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        while\
    \ [ $num -ne 0 ]; do\n            local digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if [ $sum -gt\
    \ 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5lch1h40.sh: line 17: [: -ne: unary operator expected

    /tmp/tmp5lch1h40.sh: line 17: [: -1: unary operator expected

    /tmp/tmp5lch1h40.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n  \
    \          i=$((-i))\n        fi\n        while [[ $i -gt 0 ]]; do\n         \
    \   sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n        if\
    \ [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      (( sum += ${num:$i:1}\
    \ ))\n    done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpixcfnmyf.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpixcfnmyf.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local count=0\n    for num in $nums;\
    \ do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ ));\
    \ do\n            local c=${i:$j:1}\n            if [[ $c == \"-\" ]]; then\n\
    \                continue\n            fi\n            sum=$((sum + c))\n    \
    \    done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"\
    ; do\n    local sum=0\n    local num=$i\n    if [[ $i -lt 0 ]]; then\n      num=$((-1\
    \ * $i))\n    fi\n    while [[ $num -gt 0 ]]; do\n      local digit=$((num % 10))\n\
    \      sum=$((sum + digit))\n      num=$((num / 10))\n    done\n    if [[ $sum\
    \ -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    local\
    \ -i sum=0\n    local -i num=0\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        num=${arr[$i]}\n        if ((num < 0));\
    \ then\n            num=-num\n        fi\n        while ((num > 0)); do\n    \
    \        sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if ((sum > 0)); then\n            count=$((count + 1))\n        fi\n\
    \        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl1m2u_fs.sh: line 19: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        if (( i < 0 )); then\n     \
    \       sum=$(( -i % 10 ))\n            i=$(( -i / 10 ))\n        fi\n       \
    \ while (( i > 0 )); do\n            sum=$(( sum + i % 10 ))\n            i=$((\
    \ i / 10 ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local -i sum=0\n    local -i\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n    \
    \        i=${i#-}\n        fi\n        while (( i > 0 )); do\n            (( sum\
    \ += i % 10 ))\n            (( i /= 10 ))\n        done\n        (( sum > 0 ))\
    \ && (( count++ ))\n        (( sum = 0 ))\n    done\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=($1)\n    local count=0\n    for i in\
    \ ${array[@]}; do\n        local sum=0\n        local num=${i#-}\n        while\
    \ [ $num -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        if [[\
    \ $i -lt 0 ]]; then\n            num=$((-1 * i))\n        fi\n        while [[\
    \ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            sum=$((\
    \ sum + ${num:$i:1} ))\n        done\n        if (( sum > 0 )); then\n       \
    \     count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp36502ucz.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for i in $1; do\n  \
    \  if [[ $i -lt 0 ]]; then\n      i=$(( -i ))\n    fi\n    while [[ $i -gt 0 ]];\
    \ do\n      sum=$(( sum + i % 10 ))\n      i=$(( i / 10 ))\n    done\n    if [[\
    \ $sum -gt 0 ]]; then\n      count=$(( count + 1 ))\n    fi\n    sum=0\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    local sum=0\n\
    \    local count=0\n    for i in $1\n    do\n        sum=0\n        if [ $i -lt\
    \ 0 ]\n        then\n            i=$((i*-1))\n        fi\n        while [ $i -gt\
    \ 0 ]\n        do\n            sum=$((sum+i%10))\n            i=$((i/10))\n  \
    \      done\n        if [ $sum -gt 0 ]\n        then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=($1)\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        local sum=0\n        local abs_num=${num#-}\n      \
    \  while [ $abs_num -gt 0 ]; do\n            local digit=$((abs_num % 10))\n \
    \           sum=$((sum + digit))\n            abs_num=$((abs_num / 10))\n    \
    \    done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -i sum=0\n  local -i n=0\n  for i in $1; do\n\
    \    if (( i < 0 )); then\n      (( sum += -i % 10 ))\n      (( i = -i / 10 ))\n\
    \    fi\n    while (( i > 0 )); do\n      (( sum += i % 10 ))\n      (( i /= 10\
    \ ))\n    done\n    (( sum > 0 )) && (( n += 1 ))\n    (( sum = 0 ))\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for digit in $(echo $num | sed 's/-//g'); do\n  \
    \          sum=$((sum + digit))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i count=0\n    local -i num=0\n    local -i sign=0\n    local -i digit=0\n\
    \    local -i len=0\n    local -a arr=()\n    arr=($1)\n    len=${#arr[@]}\n \
    \   for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        if ((num < 0));\
    \ then\n            sign=-1\n            num=-num\n        else\n            sign=1\n\
    \        fi\n        sum=0\n        while ((num > 0)); do\n            digit=num%10\n\
    \            sum+=digit\n            num=num/10\n        done\n        if ((sign*sum\
    \ > 0)); then\n            count+=1\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i count=0\n    for num in $1; do\n        local\
    \ -i sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1}\
    \ ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpterw2cdk.sh: line 16: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpterw2cdk.sh: line 16: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    # Hint: use the\
    \ function sum_digits\n    echo \"TODO\"\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n\
    \            i=$((-$i))\n        fi\n        while [[ $i -gt 0 ]]; do\n      \
    \      sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n      \
    \  if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i count=0\n    local -i\
    \ i=0\n    local -i num=0\n    local -i digit=0\n    local -i num_digits=0\n \
    \   local -i num_digits_orig=0\n    local -i num_digits_abs=0\n    local -i num_digits_abs_orig=0\n\
    \    local -i num_digits_abs_orig_copy=0\n    local -i num_digits_abs_orig_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy=0\n    local -i num_digits_abs_orig_copy_copy_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy_copy_copy=0\n    local -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy=0\n    local\
    \ -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy=0\n    local\
    \ -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy_copy=0\n    local\
    \ -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy=0\n\
    \    local -i num_digits_abs_orig_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy=0\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local -i sum=0\n        local -i n=$num\n\
    \        while [ $n -ne 0 ]; do\n            local -i digit=$((n % 10))\n    \
    \        sum=$((sum + digit))\n            n=$((n / 10))\n        done\n     \
    \   if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=($1)\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        local sum=0\n        for digit in $(echo $num | sed\
    \ 's/-//g'); do\n            sum=$((sum + digit))\n        done\n        if [\
    \ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=(\"$@\")\n  local -i count=0\n  local -i\
    \ sum=0\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i num=0\n  local\
    \ -i digit=0\n  local -i sign=0\n\n  while (( i < len )); do\n    num=${arr[i]}\n\
    \    if (( num < 0 )); then\n      sign=-1\n      num=$(( -num ))\n    else\n\
    \      sign=1\n    fi\n    sum=0\n    while (( num > 0 )); do\n      digit=$((\
    \ num % 10 ))\n      sum=$(( sum + digit ))\n      num=$(( num / 10 ))\n    done\n\
    \    if (( sum * sign > 0 )); then\n      count=$(( count + 1 ))\n    fi\n   \
    \ i=$(( i + 1 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplpw8_7hy.sh: line 22: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    for i in $1; do\n        if [ $i\
    \ -lt 0 ]; then\n            i=$((-$i))\n        fi\n        while [ $i -gt 0\
    \ ]; do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n      \
    \  done\n        if [ $sum -gt 0 ]; then\n            echo $sum\n        fi\n\
    \        sum=0\n    done | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i n=0\n    for i in $1;\
    \ do\n        if (( i < 0 )); then\n            (( sum += -i % 10 ))\n       \
    \ else\n            (( sum += i % 10 ))\n        fi\n        (( i /= 10 ))\n \
    \       while (( i )); do\n            (( sum += i % 10 ))\n            (( i /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( n++ ))\n        (( sum = 0\
    \ ))\n    done\n    echo $n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      i=$((i * -1))\n    fi\n    local sum=0\n\
    \    while [[ $i -gt 0 ]]; do\n      sum=$((sum + i % 10))\n      i=$((i / 10))\n\
    \    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr\n    local -i i sum\n    arr=($1)\n \
    \   for ((i=0; i<${#arr[@]}; i++)); do\n        sum=0\n        while ((arr[i]\
    \ != 0)); do\n            sum=$((sum + arr[i] % 10))\n            arr[i]=$((arr[i]\
    \ / 10))\n        done\n        if ((sum > 0)); then\n            echo -n \"${arr[i]}\
    \ \"\n        fi\n    done\n    echo\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local count=0\n    for n in $1; do\n        local\
    \ sum=0\n        for d in $(echo $n | sed 's/-//g'); do\n            sum=$((sum\
    \ + d))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array\n    local -i i\n    local -i sum\n\
    \    local -i count\n    array=($1)\n    count=0\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        sum=0\n        while ((array[i] != 0)); do\n            sum=$((sum\
    \ + array[i] % 10))\n            array[i]=$((array[i] / 10))\n        done\n \
    \       ((sum != 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  # your code here\n  echo $1 | tr ' ' '\\n' | awk '{sum=0;\
    \ for(i=1;i<=length($1);i++) {sum+=substr($1,i,1)}; if(sum>0) {print $1}}' | wc\
    \ -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local count=0\n  for num in \"\
    ${nums[@]}\"; do\n    local sum=0\n    for ((i=0; i<${#num}; i++)); do\n     \
    \ ((sum+=${num:$i:1}))\n    done\n    ((sum>0)) && ((count++))\n  done\n  echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpta74qf0s.sh: line 17: ((: sum+=-: syntax error: operand expected
    (error token is "-")

    /tmp/tmpta74qf0s.sh: line 17: ((: sum+=-: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=${i:1}\n\
    \        fi\n        local -i sum=0\n        while [[ $i -gt 0 ]]; do\n      \
    \      sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n      \
    \  if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnx6igop1.sh: line 15: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpnx6igop1.sh: line 19: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpnx6igop1.sh: line 15: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpnx6igop1.sh: line 19: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    for num in $1; do\n        if\
    \ (( num < 0 )); then\n            (( num = -num ))\n        fi\n        while\
    \ (( num > 0 )); do\n            (( sum += num % 10 ))\n            (( num /=\
    \ 10 ))\n        done\n        if (( sum > 0 )); then\n            (( count++\
    \ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local\
    \ -i count=0\n  local -i num=0\n  local -i num_len=0\n  local -i num_len_minus_1=0\n\
    \  local -i num_len_minus_2=0\n  local -i num_len_minus_3=0\n  local -i num_len_minus_4=0\n\
    \  local -i num_len_minus_5=0\n  local -i num_len_minus_6=0\n  local -i num_len_minus_7=0\n\
    \  local -i num_len_minus_8=0\n  local -i num_len_minus_9=0\n  local -i num_len_minus_10=0\n\
    \  local -i num_len_minus_11=0\n  local -i num_len_minus_12=0\n  local -i num_len_minus_13=0\n\
    \  local -i num_len_minus_14=0\n  local -i num_len_minus_15=0\n  local -i num_len_minus_16=0\n\
    \  local -i num_len_minus_17=0\n  local -i num_len_minus_18=0\n  local -i num_len_minus_19=0\n\
    \  local -i num_len_minus_20=0\n  local -i num_len_minus_21=0\n  local -i num_len_minus_22=0\n\
    \  local -i num_len_minus_23=0\n  local -i num_len_minus_24=0\n  local -i num_len_minus_25=0\n\
    \  local -i num_len_minus_26=0\n  local -i num_len_minus_27=0\n  local -i num_len_minus_28=0\n\
    \  local -i num_len_minus_29=0\n  local -i num_len_minus_30=0\n  local -i num_len_minus_31=0\n\
    \  local -i num_len_minus_32=0\n  local -i num_len_minus_33=0\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local absnum=${num#-}\n\
    \        while (( absnum > 0 )); do\n            (( sum += absnum % 10 ))\n  \
    \          (( absnum /= 10 ))\n        done\n        (( sum > 0 )) && (( count++\
    \ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        if (( i < 0 )); then\n\
    \            i=$(( -i ))\n        fi\n        while (( i > 0 )); do\n        \
    \    sum=$(( sum + i % 10 ))\n            i=$(( i / 10 ))\n        done\n    \
    \    if (( sum > 0 )); then\n            count=$(( count + 1 ))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local -i count=0\n  for i in \"\
    ${arr[@]}\"; do\n    local -i sum=0\n    local -i n=${i#-}\n    while ((n > 0));\
    \ do\n      ((sum += n % 10))\n      ((n /= 10))\n    done\n    ((sum > 0)) &&\
    \ ((count++))\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if [[ $sum -gt 0 ]]; then\n          \
    \  count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7k71zosh.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    local\
    \ sum=0\n    for num in \"${array[@]}\"; do\n        if [[ $num -lt 0 ]]; then\n\
    \            num=$((-$num))\n        fi\n        while [[ $num -gt 0 ]]; do\n\
    \            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local\
    \ -i sum=0\n    local -i count=0\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ $i -lt 0 ]]; then\n            i=${i:1}\n        fi\n        while [[ $i -gt\
    \ 0 ]]; do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkgd0wg2d.sh: line 16: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp5d6bwx.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for i in $1; do\n  \
    \  sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      sum=$(( sum + ${i:$j:1} ))\n\
    \    done\n    if (( sum > 0 )); then\n      count=$(( count + 1 ))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdfcff9ry.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=(\"$@\")\n  local count=0\n  for i in \"\
    ${arr[@]}\"; do\n    local sum=0\n    local num=${i#-}\n    while [[ $num -gt\
    \ 0 ]]; do\n      sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n\
    \    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n \
    \ echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp6g1w65.sh: line 17: [[: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmppp6g1w65.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    sum=0\n    if [[ $num -lt 0 ]]; then\n      num=$((num * -1))\n    fi\n \
    \   while [[ $num -gt 0 ]]; do\n      sum=$((sum + num % 10))\n      num=$((num\
    \ / 10))\n    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    for num in $1; do\n        if [ $num\
    \ -lt 0 ]; then\n            num=$((-$num))\n        fi\n        while [ $num\
    \ -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            echo $sum\n      \
    \  fi\n    done | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while (( abs_num > 0 )); do\n            sum=$(( sum + abs_num % 10 ))\n\
    \            abs_num=$(( abs_num / 10 ))\n        done\n        if (( sum > 0\
    \ )); then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local count=0\n  for num in $1; do\n    local sum=0\n\
    \    if [[ $num -lt 0 ]]; then\n      num=$((-$num))\n    fi\n    while [[ $num\
    \ -gt 0 ]]; do\n      sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n\
    \    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n \
    \ echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i num\n    for num in $1;\
    \ do\n        if ((num < 0)); then\n            num=-num\n        fi\n       \
    \ while ((num > 0)); do\n            sum+=$((num % 10))\n            num=$((num\
    \ / 10))\n        done\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local -i count=0\n    for\
    \ i in \"${array[@]}\"; do\n        local -i sum=0\n        local -i num=$i\n\
    \        while (( num != 0 )); do\n            (( sum += num % 10 ))\n       \
    \     (( num /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # Write your code here\n    echo $1 | tr ' ' '\\n'\
    \ | awk '{\n        sum = 0\n        for (i = 1; i <= length($1); i++) {\n   \
    \         sum += substr($1, i, 1)\n        }\n        if (sum > 0) {\n       \
    \     print $1\n        }\n    }' | wc -l\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=($1)\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        local sum=0\n        for digit in $(echo $num | sed\
    \ 's/-//g'); do\n            sum=$((sum + digit))\n        done\n        if [[\
    \ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i count=0\n    local -i len=${#arr[@]}\n    local -i num=0\n\
    \    local -i digit=0\n    local -i abs=0\n    local -i signed=0\n    local -i\
    \ sign=0\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        sign=$((num\
    \ < 0 ? -1 : 1))\n        abs=$((num * sign))\n        while ((abs > 0)); do\n\
    \            digit=$((abs % 10))\n            sum=$((sum + digit))\n         \
    \   abs=$((abs / 10))\n        done\n        if ((sum > 0)); then\n          \
    \  count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3engoake.sh: line 23: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 0
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        if [[ $num -lt 0 ]]; then\n\
    \            num=${num:1}\n            sum=$((sum - ${num:0:1}))\n        fi\n\
    \        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n   \
    \         num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        for (( j=0; j<${#i}; j++\
    \ )); do\n            sum=$((sum + ${i:$j:1}))\n        done\n        if (( sum\
    \ > 0 )); then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp53wyvlvm.sh: line 17: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        local num=${i#-}\n    \
    \    while [ $num -gt 0 ]; do\n            sum=$((sum + num % 10))\n         \
    \   num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n       \
    \     count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=(\"$@\")\n  local count=0\n  for i in \"\
    ${array[@]}\"; do\n    local sum=0\n    local abs_i=${i#-}\n    while [[ $abs_i\
    \ -gt 0 ]]; do\n      sum=$((sum + abs_i % 10))\n      abs_i=$((abs_i / 10))\n\
    \    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphcd4tm1s.sh: line 17: [[: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmphcd4tm1s.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local abs_num=${num#-}\n\
    \        while (( abs_num > 0 )); do\n            sum=$(( sum + abs_num % 10 ))\n\
    \            abs_num=$(( abs_num / 10 ))\n        done\n        if (( sum > 0\
    \ )); then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            sum=$((\
    \ $sum + ${num:$i:1} ))\n        done\n        if [ $sum -gt 0 ]; then\n     \
    \       count=$(( $count + 1 ))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6bs55fzy.sh: line 17: 0 + - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    local\
    \ -i sum=0\n    local -i i=0\n    local -i num=0\n    local -i sign=0\n    local\
    \ -i digit=0\n    local -i abs=0\n    for num in \"${arr[@]}\"; do\n        sum=0\n\
    \        if (( num < 0 )); then\n            sign=-1\n        else\n         \
    \   sign=1\n        fi\n        abs=${num#-}\n        while (( abs > 0 )); do\n\
    \            digit=$(( abs % 10 ))\n            sum=$(( sum + digit ))\n     \
    \       abs=$(( abs / 10 ))\n        done\n        if (( sum * sign > 0 )); then\n\
    \            count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprblzeppv.sh: line 20: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      (( sum += ${num:$i:1}\
    \ ))\n    done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpixcfnmyf.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpixcfnmyf.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    local -i sum=0\n\
    \    local -i count=0\n    for i in $1; do\n        if [[ $i -lt 0 ]]; then\n\
    \            sum=$(( $i * -1 ))\n        else\n            sum=$i\n        fi\n\
    \        while [[ $sum -gt 0 ]]; do\n            sum=$(( $sum / 10 ))\n      \
    \      count=$(( $count + 1 ))\n        done\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local num_abs=${num#-}\n\
    \        while (( num_abs > 0 )); do\n            sum=$(( sum + num_abs % 10 ))\n\
    \            num_abs=$(( num_abs / 10 ))\n        done\n        if (( sum > 0\
    \ )); then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local -i sum=0\n        local -i n=${i#-}\n\
    \        while (( n > 0 )); do\n            (( sum += n % 10 ))\n            ((\
    \ n /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbiib719j.sh: line 16: local: 1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  for num in $1; do\n    if [ $num -lt\
    \ 0 ]; then\n      num=$((-$num))\n    fi\n    while [ $num -gt 0 ]; do\n    \
    \  sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n    if [ $sum -gt\
    \ 0 ]; then\n      echo $num\n    fi\n  done\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -i sum=0\n    local -i count=0\n    for num\
    \ in $1; do\n        sum=0\n        if (( num < 0 )); then\n            num=-num\n\
    \        fi\n        while (( num > 0 )); do\n            sum+=$(( num % 10 ))\n\
    \            num=$(( num / 10 ))\n        done\n        if (( sum > 0 )); then\n\
    \            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded
    (error token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmpax2sa85w.sh: line 19: ((: -num: expression recursion level exceeded (error
    token is "num")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for num in $1;\
    \ do\n        sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            ((\
    \ sum += ${num:$i:1} ))\n        done\n        (( sum > 0 )) && (( count++ ))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb1e0gtks.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpb1e0gtks.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            (( sum +=\
    \ ${i:$j:1} ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpto3kfzzq.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpto3kfzzq.sh: line 17: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local sum=0\n  local count=0\n\
    \  for num in \"${nums[@]}\"; do\n    if (( num < 0 )); then\n      num=$(( -num\
    \ ))\n    fi\n    while (( num > 0 )); do\n      sum=$(( sum + num % 10 ))\n \
    \     num=$(( num / 10 ))\n    done\n    if (( sum > 0 )); then\n      count=$((\
    \ count + 1 ))\n    fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=(\"$@\")\n    local count=0\n    for\
    \ i in \"${array[@]}\"; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n\
    \            i=$((i * -1))\n        fi\n        while [[ $i -gt 0 ]]; do\n   \
    \         sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n   \
    \     if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbw5_2_44.sh: line 16: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpbw5_2_44.sh: line 19: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpbw5_2_44.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpbw5_2_44.sh: line 19: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  # Write your code here\n  echo $1\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    for i in $1; do\n        if [ $i\
    \ -lt 0 ]; then\n            i=$((-i))\n        fi\n        while [ $i -gt 0 ];\
    \ do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            echo $sum\n        fi\n        sum=0\n\
    \    done | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=($1)\n    local count=0\n    for i\
    \ in \"${array[@]}\"; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n\
    \            i=$((-i))\n        fi\n        while [[ $i -gt 0 ]]; do\n       \
    \     local digit=$((i % 10))\n            sum=$((sum + digit))\n            i=$((i\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local -i sum=0\n        local -i n=${i#-}\n\
    \        while (( n > 0 )); do\n            (( sum += n % 10 ))\n            ((\
    \ n /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbiib719j.sh: line 16: local: 1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    for i in\
    \ \"${arr[@]}\"; do\n        local sum=0\n        local num=${i#-}\n        while\
    \ (( num > 0 )); do\n            (( sum += num % 10 ))\n            (( num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # Write your code here\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpafx4kphf.sh: line 182: syntax error near unexpected token `}''

    /tmp/tmpafx4kphf.sh: line 182: `}''

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=($1)\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        local sum=0\n        for digit in $(echo $num | sed\
    \ 's/-//g'); do\n            sum=$((sum + digit))\n        done\n        if [[\
    \ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    local num\n\
    \    for num in \"${nums[@]}\"; do\n        local sum=0\n        local digit\n\
    \        for digit in $(echo $num | sed 's/-//g'); do\n            sum=$((sum\
    \ + digit))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for i in $1; do\n  \
    \  sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      sum=$(( sum + ${i:$j:1} ))\n\
    \    done\n    if [[ $sum -gt 0 ]]; then\n      count=$(( count + 1 ))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplrgpjthi.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local\
    \ -i count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            i=$(( -i ))\n        fi\n        while [[ $i -gt 0 ]]; do\n     \
    \       sum=$(( sum + i % 10 ))\n            i=$(( i / 10 ))\n        done\n \
    \       if [[ $sum -gt 0 ]]; then\n            count=$(( count + 1 ))\n      \
    \  fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgi3z7ats.sh: line 16: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpgi3z7ats.sh: line 19: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpgi3z7ats.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpgi3z7ats.sh: line 19: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        local -i sum=0\n        for ((i=0; i<${#num};\
    \ i++)); do\n            local -i digit=${num:$i:1}\n            if [[ $digit\
    \ == \"-\" ]]; then\n                digit=${num:$i+1:1}\n                ((i++))\n\
    \            fi\n            ((sum+=digit))\n        done\n        if ((sum>0));\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp04obn6jw.sh: line 17: local: -: syntax error: operand expected
    (error token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for i in $1; do\n  \
    \  sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      sum=$(( sum + ${i:$j:1} ))\n\
    \    done\n    if (( sum > 0 )); then\n      count=$(( count + 1 ))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdfcff9ry.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -i count=0\n  for num in $1; do\n    if (( num\
    \ < 0 )); then\n      num=-num\n    fi\n    local -i sum=0\n    while (( num >\
    \ 0 )); do\n      sum+=$(( num % 10 ))\n      num=$(( num / 10 ))\n    done\n\
    \    if (( sum > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded
    (error token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    /tmp/tmp3smk7ur0.sh: line 18: ((: -num: expression recursion level exceeded (error
    token is "num")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # TODO: implement this function\n    echo 0\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local count=0\n    for i in $1; do\n        if [[\
    \ $i -lt 0 ]]; then\n            i=$((-i))\n        fi\n        local sum=0\n\
    \        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n       \
    \     i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n       \
    \     count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a nums=($1)\n    local count=0\n    for num\
    \ in \"${nums[@]}\"; do\n        local sum=0\n        local absnum=${num#-}\n\
    \        while [ $absnum -gt 0 ]; do\n            sum=$((sum + absnum % 10))\n\
    \            absnum=$((absnum / 10))\n        done\n        if [ $sum -gt 0 ];\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        local num=$i\n        while\
    \ [[ $num -ne 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuj3wchp9.sh: line 17: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpuj3wchp9.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array=(\"$@\")\n    local count=0\n    for\
    \ i in \"${array[@]}\"; do\n        local sum=0\n        local num=$i\n      \
    \  if [[ $i -lt 0 ]]; then\n            num=$((-i))\n        fi\n        while\
    \ [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyn7jwp02.sh: line 17: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpyn7jwp02.sh: line 20: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpyn7jwp02.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpyn7jwp02.sh: line 20: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n\
    \            i=$((i * -1))\n        fi\n        while [[ $i -gt 0 ]]; do\n   \
    \         sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n   \
    \     if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7h981kt9.sh: line 16: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp7h981kt9.sh: line 19: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp7h981kt9.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp7h981kt9.sh: line 19: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local sum=0\n        for (( j=0; j<${#i}; j++\
    \ )); do\n            sum=$(( sum + ${i:$j:1} ))\n        done\n        if [[\
    \ $sum -gt 0 ]]; then\n            (( count++ ))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkq9x4yo8.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    local count=0\n    for i in $1; do\n\
    \        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum\
    \ + ${i:$j:1} ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp5d6bwx.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums=($1)\n  local count=0\n  for num in \"\
    ${nums[@]}\"; do\n    local sum=0\n    local abs_num=$(echo $num | sed 's/-//')\n\
    \    while [ $abs_num -gt 0 ]; do\n      sum=$((sum + abs_num % 10))\n      abs_num=$((abs_num\
    \ / 10))\n    done\n    if [ $sum -gt 0 ]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"\
    ; do\n    local sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      local digit=${i:$j:1}\n\
    \      if [[ $digit == \"-\" ]]; then\n        continue\n      fi\n      sum=$((sum\
    \ + digit))\n    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr\n    arr=($1)\n    local count=0\n  \
    \  for i in \"${arr[@]}\"; do\n        local sum=0\n        for ((j=0; j<${#i};\
    \ j++)); do\n            local digit=${i:$j:1}\n            if [[ $digit =~ ^[0-9]$\
    \ ]]; then\n                sum=$((sum + digit))\n            fi\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a array\n    local i\n    local sum\n    local\
    \ count=0\n    array=($1)\n    for ((i=0; i<${#array[@]}; i++)); do\n        sum=0\n\
    \        for ((j=0; j<${#array[$i]}; j++)); do\n            sum=$((sum + ${array[$i]:$j:1}))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr6b1v_iq.sh: line 20: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local sum=0\n  local count=0\n  for num in $1; do\n\
    \    if [ $num -lt 0 ]; then\n      num=$((-$num))\n    fi\n    while [ $num -gt\
    \ 0 ]; do\n      sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n      count=$((count + 1))\n    fi\n    sum=0\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=($1)\n    local count=0\n    local i=0\n\
    \    local sum=0\n    local num=0\n    local digit=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        num=${arr[$i]}\n        sum=0\n        while [ $num -ne 0\
    \ ]; do\n            digit=$((num % 10))\n            sum=$((sum + digit))\n \
    \           num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a arr=(\"$@\")\n  local count=0\n  for i in \"\
    ${arr[@]}\"; do\n    local sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      local\
    \ digit=\"${i:$j:1}\"\n      if [[ \"$digit\" == \"-\" ]]; then\n        continue\n\
    \      fi\n      sum=$(( sum + digit ))\n    done\n    if [[ \"$sum\" -gt 0 ]];\
    \ then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo \"$count\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        local -i sum=0\n        local -i n=${i#-}\n\
    \        while (( n > 0 )); do\n            (( sum += n % 10 ))\n            ((\
    \ n /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbiib719j.sh: line 16: local: 1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local sum=0\n    for i in $1; do\n        if [ $i\
    \ -lt 0 ]; then\n            i=$((-i))\n        fi\n        while [ $i -gt 0 ];\
    \ do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            echo $sum\n        fi\n        sum=0\n\
    \    done | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a array=($1)\n  local count=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    local num=${array[$i]}\n    local sum=0\n    while [ $num -ne\
    \ 0 ]; do\n      local digit=$((num % 10))\n      sum=$((sum + digit))\n     \
    \ num=$((num / 10))\n    done\n    if [ $sum -gt 0 ]; then\n      count=$((count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996676

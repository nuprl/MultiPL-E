language: sh
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [[ $1\
    \ -eq 1 ]]; then\n    echo 1\n  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n\
    \    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=0\n    while [[ $i -lt $n ]]; do\n\
    \        local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 1 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ )) ) + $(fib $(( $1 - 2 )) ) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -lt 2 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=1\n    while [ $i -lt $n ]; do\n  \
    \      local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n\
    \    done\n    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=1\n    while ((i < n)); do\n      \
    \  local c=$((a + b))\n        a=$b\n        b=$c\n        ((i++))\n    done\n\
    \    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [ $n -le 1 ]; then\n        echo $n\n    else\n        echo $(( $(fib\
    \ $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [[ $n -eq 1 ]]; then\n        echo 1\n    elif [[ $n -eq 2 ]]; then\n\
    \        echo 1\n    else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2)))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 1 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [[ $n -eq 1 ]]; then\n        echo 1\n    elif [[ $n -eq 2 ]]; then\n\
    \        echo 1\n    else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2)))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=1\n    while [ $i -lt $n ]; do\n  \
    \      local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n\
    \    done\n    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=1\n    while ((i < n)); do\n      \
    \  local c=$((a + b))\n        a=$b\n        b=$c\n        ((i++))\n    done\n\
    \    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 1 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  local a=0\n  local b=1\n  local i=1\n  while (( i < n )); do\n    local c=$((\
    \ a + b ))\n    a=$b\n    b=$c\n    (( i++ ))\n  done\n  echo $b\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [ $n -le 1 ]; then\n        echo $n\n    else\n        echo $(( $(fib\
    \ $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 1 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=1\n    while [ $i -lt $n ]; do\n  \
    \      local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n\
    \    done\n    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [[ $n -eq 1 ]]; then\n        echo 1\n    elif [[ $n -eq 2 ]]; then\n\
    \        echo 1\n    else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2)))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  if [ $n -eq 1 ] || [ $n -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fib\
    \ $((n-1))) + $(fib $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 1 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  if [ $n -eq 1 ]; then\n    echo 1\n  elif [ $n -eq 2 ]; then\n    echo 1\n\
    \  else\n    echo $(( $(fib $((n-1))) + $(fib $((n-2))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [[ $n -eq 1 ]]; then\n        echo 1\n    elif [[ $n -eq 2 ]]; then\n\
    \        echo 1\n    else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2)))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [ $n -eq 1 ] || [ $n -eq 2 ]; then\n        echo 1\n    else\n       \
    \ echo $(( $(fib $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 1 ]; then\n        echo $1\n    else\n        echo $(($(fib $(($1 - 1)))\
    \ + $(fib $(($1 - 2)))))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -le 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=1\n    while [ $i -lt $n ]; do\n  \
    \      local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n\
    \    done\n    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ \"\
    $1\" -lt 2 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 -\
    \ 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -lt 2 ]; then\n        echo $1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fib\
    \ $(($1 - 1))) + $(fib $(($1 - 2)))))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(($(fib $(($1-1))) + $(fib $(($1-2)))))\n  \
    \  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]\n    then\n        echo 1\n    elif [ $1 -eq 2 ]\n    then\n       \
    \ echo 1\n    else\n        echo $(($(fib $(($1-1))) + $(fib $(($1-2)))))\n  \
    \  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [ $n -eq 1 ]; then\n        echo 1\n    elif [ $n -eq 2 ]; then\n    \
    \    echo 1\n    else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -eq\
    \ 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local i=0\n    while [ $i -lt $n ]; do\n  \
    \      local c=$((a + b))\n        a=$b\n        b=$c\n        i=$((i + 1))\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998242
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if (( $1\
    \ <= 2 )); then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 )))\
    \ + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\n   \
    \ fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $1\
    \ -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998243

name: HumanEval_60_sum_to_n
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# sum_to_n is a function that sums numbers from 1 to n.\n# >>>\
  \ sum_to_n(30)\n# 465\n# >>> sum_to_n(100)\n# 5050\n# >>> sum_to_n(5)\n# 15\n# >>>\
  \ sum_to_n(10)\n# 55\n# >>> sum_to_n(1)\n# 1\n#\n# $1 is an integer\nsum_to_n()\
  \ {\n"
tests: "}\n\ncandidate() {\n    sum_to_n \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"6\") = \"21\" ]]\n    [[ $(candidate\
  \ \"11\") = \"66\" ]]\n    [[ $(candidate \"30\") = \"465\" ]]\n    [[ $(candidate\
  \ \"100\") = \"5050\" ]]\n}\n\nrun_test"
completions: ["    # your code here\n    if [ $1 -eq 1 ]; then\n        echo 1\n \
    \   else\n        echo $(( $1 + $(sum_to_n $(( $1 - 1 ))) ))\n    fi", "    local\
    \ sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n    done\n\
    \    echo $sum", "    if [ $1 -eq 1 ]; then\n        echo 1\n    else\n      \
    \  echo $(( $1 + $(sum_to_n $(( $1 - 1 ))) ))\n    fi", "    local sum=0\n   \
    \ for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum",
  "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum\
    \ + i))\n    done\n    echo $sum", "    local sum=0\n    for ((i=1; i<=$1; i++));\
    \ do\n        sum=$((sum + i))\n    done\n    echo $sum", "    if [ $1 -eq 1 ];\
    \ then\n        echo 1\n    else\n        echo $(( $1 + $(sum_to_n $(( $1 - 1\
    \ ))) ))\n    fi", "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++));\
    \ do\n        sum=$((sum + i))\n    done\n    echo $sum", "    local sum=0\n \
    \   for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n    done\n    echo\
    \ $sum", "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n  \
    \      sum=$((sum + i))\n    done\n    echo $sum", "    local n=$1\n    local\
    \ sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n\
    \    echo $sum", "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++));\
    \ do\n        sum=$((sum + i))\n    done\n    echo $sum", "    local sum=0\n \
    \   for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i))\n    done\n    echo\
    \ $sum", "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n  \
    \      sum=$((sum + i))\n    done\n    echo $sum", "    local sum=0\n    for ((i=1;\
    \ i<=$1; i++)); do\n        sum=$((sum + i))\n    done\n    echo $sum", "    if\
    \ [ $1 -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $1 + $(sum_to_n\
    \ $(( $1 - 1 ))) ))\n    fi", "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n\
    \        ((sum+=i))\n    done\n    echo $sum", "\tlocal sum=0\n\tfor (( i=1; i<=$1;\
    \ i++ ))\n\tdo\n\t\tsum=$((sum+i))\n\tdone\n\techo $sum", "    local sum=0\n \
    \   for (( i=1; i<=$1; i++ ))\n    do\n        sum=$((sum+i))\n    done\n    echo\
    \ $sum", "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n  \
    \      sum=$((sum + i))\n    done\n    echo $sum"]
stop_tokens:
- "\n}"

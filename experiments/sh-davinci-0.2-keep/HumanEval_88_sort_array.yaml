name: HumanEval_88_sort_array
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given an array of non-negative integers, return a copy of\
  \ the given array after sorting,\n# you will sort the given array in ascending order\
  \ if the sum( first index value, last index value) is odd,\n# or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n# Note:\n# *\
  \ don't change the given array.\n# Examples:\n# * sort_array([]) => []\n# * sort_array([5])\
  \ => [5]\n# * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n# * sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n#\n# $1 is a space-separated list\n\
  sort_array() {\n"
tests: "}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
  \ \"2 4 3 0 1 5\") = \"0 1 2 3 4 5\" ]]\n    [[ $(candidate \"2 4 3 0 1 5 6\") =\
  \ \"6 5 4 3 2 1 0\" ]]\n    [[ $(candidate \"2 1\") = \"1 2\" ]]\n    [[ $(candidate\
  \ \"15 42 87 32 11 0\") = \"0 11 15 32 42 87\" ]]\n    [[ $(candidate \"21 14 23\
  \ 11\") = \"23 21 14 11\" ]]\n}\n\nrun_test"
completions: ["  local -a array=()\n  local -i i=0\n  for item in $1; do\n    array[i]=$item\n\
    \    ((i++))\n  done\n  local -i sum=${array[0]}+${array[-1]}\n  if ((sum%2==0));\
    \ then\n    echo \"${array[@]}\" | tr ' ' '\\n' | sort -nr | tr '\\n' ' '\n  else\n\
    \    echo \"${array[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n  fi", "  local\
    \ -a arr=(\"$@\")\n  local -a sorted\n  local -i i j\n  local -i len=${#arr[@]}\n\
    \  local -i sum=$((arr[0] + arr[-1]))\n  if ((sum % 2)); then\n    for ((i=0;\
    \ i<len; i++)); do\n      for ((j=i+1; j<len; j++)); do\n        if ((arr[i] >\
    \ arr[j])); then\n          local tmp=${arr[i]}\n          arr[i]=${arr[j]}\n\
    \          arr[j]=$tmp\n        fi\n      done\n    done\n  else\n    for ((i=0;\
    \ i<len; i++)); do\n      for ((j=i+1; j<len; j++)); do\n        if ((arr[i] <\
    \ arr[j])); then\n          local tmp=${arr[i]}\n          arr[i]=${arr[j]}\n\
    \          arr[j]=$tmp\n        fi\n      done\n    done\n  fi\n  echo \"${arr[@]}\"",
  "  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i len=${#array[@]}\n\
    \  local -i sum=0\n  local -i temp=0\n  local -i flag=0\n  for ((i=0; i<len; i++))\n\
    \  do\n    for ((j=i+1; j<len; j++))\n    do\n      sum=$((array[i]+array[j]))\n\
    \      if ((sum % 2 == 0))\n      then\n        temp=${array[i]}\n        array[i]=${array[j]}\n\
    \        array[j]=$temp\n        flag=1\n      fi\n    done\n    if ((flag ==\
    \ 1))\n    then\n      break\n    fi\n  done\n  echo ${array[@]}", "    local\
    \ -a array=($1)\n    local -i sum=${array[0]}+${array[-1]}\n    if ((sum%2==0));\
    \ then\n        echo \"${array[@]}\" | tr ' ' '\\n' | sort -r | tr '\\n' ' '\n\
    \    else\n        echo \"${array[@]}\" | tr ' ' '\\n' | sort | tr '\\n' ' '\n\
    \    fi", "    local -a array=(\"$@\")\n    local -i sum=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len=${#array[@]}\n    local -i tmp=0\n    local\
    \ -i flag=0\n    if [ $len -eq 0 ]; then\n        echo \"\"\n        return 0\n\
    \    fi\n    if [ $len -eq 1 ]; then\n        echo \"${array[0]}\"\n        return\
    \ 0\n    fi\n    sum=$((array[0] + array[-1]))\n    if [ $((sum % 2)) -eq 0 ];\
    \ then\n        flag=1\n    fi\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [ $flag -eq 0 ]; then\n                if [\
    \ ${array[i]} -gt ${array[j]} ]; then\n                    tmp=${array[i]}\n \
    \                   array[i]=${array[j]}\n                    array[j]=$tmp\n\
    \                fi\n            else\n                if [ ${array[i]} -lt ${array[j]}\
    \ ]; then\n                    tmp=${array[i]}\n                    array[i]=${array[j]}\n\
    \                    array[j]=$tmp\n                fi\n            fi\n     \
    \   done\n    done\n    echo \"${array[@]}\"", "  local -a array=(\"$@\")\n  local\
    \ -i i=0\n  local -i j=0\n  local -i len=${#array[@]}\n  local -i sum=0\n  local\
    \ -i tmp=0\n  local -i flag=0\n  local -i index=0\n  local -i max=0\n  local -i\
    \ min=0\n  local -i mid=0\n  local -i mid_index=0\n  local -i mid_index_tmp=0\n\
    \  local -i mid_index_tmp_2=0\n  local -i mid_index_tmp_3=0\n  local -i mid_index_tmp_4=0\n\
    \  local -i mid_index_tmp_5=0\n  local -i mid_index_tmp_6=0\n  local -i mid_index_tmp_7=0\n\
    \  local -i mid_index_tmp_8=0\n  local -i mid_index_tmp_9=0\n  local -i mid_index_tmp_10=0\n\
    \  local -i mid_index_tmp_11=0\n  local -i mid_index_tmp_12=0\n  local -i mid_index_tmp_13=0\n\
    \  local -i mid_index_tmp_14=0\n  local -i mid_index_tmp_15=0\n  local -i mid_index_tmp_16=0\n\
    \  local -i mid_index_tmp_17=0\n  local -i mid_index_tmp_18=0\n  local -i mid_index_tmp_19=0\n\
    \  local -i mid_index_tmp_20=0\n  local -i mid_index_tmp_21=0\n  local -i mid_index_tmp_22=0\n\
    \  local -i mid_index_tmp_23=0\n  local -i mid_index_tmp_24=0\n  local -i mid_index_tmp_25=0\n\
    \  local -i mid_index_tmp_26=0\n  local -i mid_index_tmp_27=0\n  local -i mid_index_tmp_28=0\n\
    \  local -i mid_index_tmp_29=0\n ", "  local -a arr=($1)\n  local -i i=0\n  local\
    \ -i j=0\n  local -i len=${#arr[@]}\n  local -i sum=0\n  local -i tmp=0\n  local\
    \ -i is_odd=0\n  local -i is_even=0\n  local -i is_ascending=0\n  local -i is_descending=0\n\
    \n  if [[ $len -eq 0 ]]; then\n    echo \"sort_array([]) => []\"\n    return 0\n\
    \  fi\n\n  sum=$((arr[0] + arr[len-1]))\n  is_odd=$((sum % 2))\n  is_even=$((1\
    \ - is_odd))\n  is_ascending=$((1 - is_even))\n  is_descending=$((1 - is_ascending))\n\
    \n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[\
    \ $is_ascending -eq 1 ]]; then\n        if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n\
    \          tmp=${arr[i]}\n          arr[i]=${arr[j]}\n          arr[j]=$tmp\n\
    \        fi\n      else\n        if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n    \
    \      tmp=${arr[i]}\n          arr[i]=${arr[j]}\n          arr[j]=$tmp\n    \
    \    fi\n      fi\n    done\n  done\n\n  echo \"sort_array([$1]) => [${arr[@]}]\"",
  "  local -a array=($1)\n  local -i sum=${array[0]}+${array[-1]}\n  if (( sum % 2\
    \ == 0 )); then\n    echo \"${array[@]}\" | tr ' ' '\\n' | sort -nr | tr '\\n'\
    \ ' '\n  else\n    echo \"${array[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ '\n  fi", "  local -a arr=($1)\n  local -i len=${#arr[@]}\n  local -i sum=$((arr[0]\
    \ + arr[len-1]))\n  if ((sum % 2 == 0)); then\n    echo \"${arr[@]}\" | tr ' '\
    \ '\\n' | sort -r | tr '\\n' ' '\n  else\n    echo \"${arr[@]}\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n  fi", "    local -a arr=()\n    local -a res=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local sum=0\n    local tmp=0\n    local len=0\n    local -i\
    \ flag=0\n    arr=($1)\n    len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n    \
    \    echo \"\"\n        return\n    fi\n    if [ $len -eq 1 ]; then\n        echo\
    \ \"${arr[0]}\"\n        return\n    fi\n    sum=$((arr[0] + arr[len-1]))\n  \
    \  if [ $((sum % 2)) -eq 0 ]; then\n        flag=1\n    fi\n    for ((i=0; i<len;\
    \ i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [ $flag -eq\
    \ 0 ]; then\n                if [ ${arr[i]} -gt ${arr[j]} ]; then\n          \
    \          tmp=${arr[i]}\n                    arr[i]=${arr[j]}\n             \
    \       arr[j]=$tmp\n                fi\n            else\n                if\
    \ [ ${arr[i]} -lt ${arr[j]} ]; then\n                    tmp=${arr[i]}\n     \
    \               arr[i]=${arr[j]}\n                    arr[j]=$tmp\n          \
    \      fi\n            fi\n        done\n    done\n    for ((k=0; k<len; k++));\
    \ do\n        echo -n \"${arr[k]} \"\n    done\n    echo \"\"", "  local -a array=()\n\
    \  local -a sorted_array=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i sum=0\n  local -i length=0\n  local -i half_length=0\n  local -i middle=0\n\
    \  local -i middle_value=0\n  local -i middle_value_1=0\n  local -i middle_value_2=0\n\
    \  local -i middle_value_3=0\n  local -i middle_value_4=0\n  local -i middle_value_5=0\n\
    \  local -i middle_value_6=0\n  local -i middle_value_7=0\n  local -i middle_value_8=0\n\
    \  local -i middle_value_9=0\n  local -i middle_value_10=0\n  local -i middle_value_11=0\n\
    \  local -i middle_value_12=0\n  local -i middle_value_13=0\n  local -i middle_value_14=0\n\
    \  local -i middle_value_15=0\n  local -i middle_value_16=0\n  local -i middle_value_17=0\n\
    \  local -i middle_value_18=0\n  local -i middle_value_19=0\n  local -i middle_value_20=0\n\
    \  local -i middle_value_21=0\n  local -i middle_value_22=0\n  local -i middle_value_23=0\n\
    \  local -i middle_value_24=0\n  local -i middle_value_25=0\n  local -i middle",
  "    local -a array=($1)\n    local -i sum=${array[0]}+${array[-1]}\n    if (( sum\
    \ % 2 == 0 )); then\n        echo \"${array[@]}\" | tr ' ' '\\n' | sort -r | tr\
    \ '\\n' ' '\n    else\n        echo \"${array[@]}\" | tr ' ' '\\n' | sort | tr\
    \ '\\n' ' '\n    fi", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n\
    \    local -i len=${#arr[@]}\n    local -i sum=0\n    local -i tmp=0\n    local\
    \ -i flag=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len;\
    \ j++))\n        do\n            sum=$((arr[i]+arr[j]))\n            if [[ $((sum%2))\
    \ -eq 0 ]]; then\n                tmp=${arr[i]}\n                arr[i]=${arr[j]}\n\
    \                arr[j]=$tmp\n                flag=1\n            fi\n       \
    \ done\n        if [[ $flag -eq 1 ]]; then\n            break\n        fi\n  \
    \  done\n    echo ${arr[@]}", "  local -a array=($1)\n  local -a sorted_array\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i len=${#array[@]}\n  local\
    \ -i sum=$((array[0] + array[$((len - 1))]))\n  if ((sum % 2 == 0)); then\n  \
    \  for ((i = len - 1; i >= 0; i--)); do\n      sorted_array[$((len - i - 1))]=${array[$i]}\n\
    \    done\n  else\n    for ((i = 0; i < len; i++)); do\n      sorted_array[$i]=${array[$i]}\n\
    \    done\n  fi\n  echo \"${sorted_array[@]}\"", "  local -a array=()\n  local\
    \ -i i=0\n  local -i sum=0\n  local -i len=0\n  local -i tmp=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n\
    \  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n\
    \  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n\
    \  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i\
    \ mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n \
    \ local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i\
    \ vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n \
    \ local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local\
    \ -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n\
    \  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -", "  local -a\
    \ array=($1)\n  local -i sum=${array[0]}+${array[-1]}\n  if (( sum % 2 == 0 ));\
    \ then\n    echo \"${array[@]}\" | tr ' ' '\\n' | sort -nr | tr '\\n' ' '\n  else\n\
    \    echo \"${array[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n  fi", "  local\
    \ -a array=()\n  local -i i=0\n  local -i sum=0\n  local -i len=0\n  local -i\
    \ index=0\n  local -i temp=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n\
    \  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local\
    \ -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i", "    local -a array=($1)\n    local -i sum=${array[0]}+${array[-1]}\n\
    \    if (( sum % 2 == 0 )); then\n        echo \"${array[@]}\" | tr ' ' '\\n'\
    \ | sort -nr | tr '\\n' ' '\n    else\n        echo \"${array[@]}\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n    fi", "  local -a array=($1)\n  local -a sorted\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n ", "    local -a array=()\n    local -i\
    \ i=0\n    local -i sum=0\n    local -i len=0\n    local -i j=0\n    local -i\
    \ tmp=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -"]
stop_tokens:
- "\n}"

name: HumanEval_71_triangle_area
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
  \ the area of\n# the triangle rounded to 2 decimal points if the three sides form\
  \ a valid triangle. \n# Otherwise return -1\n# Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n# than the third side.\n# Example:\n\
  # triangle_area(3, 4, 5) == 6.00\n# triangle_area(1, 2, 10) == -1\n#\n# $1 is an\
  \ integer\n# $2 is an integer\n# $3 is an integer\ntriangle_area() {\n"
tests: "}\n\ncandidate() {\n    triangle_area \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"3\" \"4\" \"5\") = \"6.0\" ]]\n    [[ $(candidate \"1\" \"\
  2\" \"10\") = \"-1\" ]]\n    [[ $(candidate \"4\" \"8\" \"5\") = \"8.18\" ]]\n \
  \   [[ $(candidate \"2\" \"2\" \"2\") = \"1.73\" ]]\n    [[ $(candidate \"1\" \"\
  2\" \"3\") = \"-1\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"16.25\" ]]\n\
  \    [[ $(candidate \"2\" \"6\" \"3\") = \"-1\" ]]\n    [[ $(candidate \"1\" \"\
  1\" \"1\") = \"0.43\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"-1\" ]]\n}\n\
  \nrun_test"
completions: ["  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n      echo $(echo \"scale=2;sqrt(3)/4*($1^2)\" | bc)\n\
    \    elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo $(echo \"\
    scale=2;sqrt(($1+$2+$3)*($1+$2-$3)*($1-$2+$3)*(-1*$1+$2+$3))/4\" | bc)\n    else\n\
    \      echo $(echo \"scale=2;sqrt(($1+$2+$3)*($1+$2-$3)*($1-$2+$3)*(-1*$1+$2+$3))/4\"\
    \ | bc)\n    fi\n  else\n    echo -1\n  fi", "    if [ $1 -lt 1 ] || [ $2 -lt\
    \ 1 ] || [ $3 -lt 1 ]; then\n        echo -1\n    elif [ $1 -eq $2 ] && [ $2 -eq\
    \ $3 ]; then\n        echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n \
    \   elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo $(echo\
    \ \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n    elif [ $1 -gt $2 ] && [ $1 -gt\
    \ $3 ]; then\n        if [ $1 -lt $(($2 + $3)) ]; then\n            echo $(echo\
    \ \"scale=2; sqrt($1 * $1 + $2 * $2 + $3 * $3) / 4\" | bc)\n        else\n   \
    \         echo -1\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n\
    \        if [ $2 -lt $(($1 + $3)) ]; then\n            echo $(echo \"scale=2;\
    \ sqrt($1 * $1 + $2 * $2 + $3 * $3) / 4\" | bc)\n        else\n            echo\
    \ -1\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [\
    \ $3 -lt $(($1 + $2)) ]; then\n            echo $(echo \"scale=2; sqrt($1 * $1\
    \ + $2 * $2 + $3 * $3) / 4\" | bc)\n        else\n            echo -1\n      \
    \  fi\n    fi", "  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[\
    \ $1 -lt $2+$3 && $2 -lt $1+$3 && $3 -lt $1+$2 ]]; then\n      echo \"$(echo \"\
    scale=2; sqrt($1*$1 + $2*$2 - $3*$3)\" | bc)\"\n    else\n      echo \"-1\"\n\
    \    fi\n  else\n    echo \"-1\"\n  fi", "    if [[ $1 -lt 1 || $2 -lt 1 || $3\
    \ -lt 1 ]]; then\n        echo -1\n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n\
    \        echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n    elif [[ $1\
    \ -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo $(echo \"scale=2; sqrt(3)\
    \ / 4 * $1 * $1\" | bc)\n    else\n        echo -1\n    fi", "  if (( $1 + $2\
    \ > $3 && $1 + $3 > $2 && $2 + $3 > $1 )); then\n    echo $(echo \"scale=2; sqrt($1*$1\
    \ + $2*$2 - 2*$1*$2*c($3))/4\" | bc -l)\n  else\n    echo -1\n  fi", "    if ((\
    \ $1 + $2 > $3 && $1 + $3 > $2 && $2 + $3 > $1 )); then\n        echo $(echo \"\
    scale=2; sqrt($1*$1 + $2*$2 - 2*$1*$2*cos(($3*3.14159265359/180)))/2\" | bc -l)\n\
    \    else\n        echo -1\n    fi", "    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [\
    \ $3 -gt 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        \
    \    echo $(echo \"scale=2; sqrt(3)/4 * $1 * $1\" | bc)\n        elif [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n            echo $(echo \"scale=2;\
    \ sqrt(3)/4 * $1 * $1\" | bc)\n        else\n            echo $(echo \"scale=2;\
    \ sqrt(3)/4 * $1 * $1\" | bc)\n        fi\n    else\n        echo -1\n    fi",
  "    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n        if [ $1 -eq\
    \ $2 ] && [ $2 -eq $3 ]; then\n            echo \"scale=2; sqrt(3)/4*($1*$1)\"\
    \ | bc\n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n \
    \           echo \"scale=2; sqrt(3)/4*($1*$1)\" | bc\n        else\n         \
    \   echo \"scale=2; sqrt(3)/4*($1*$1)\" | bc\n        fi\n    else\n        echo\
    \ -1\n    fi", "  if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n    echo\
    \ -1\n  elif [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n    echo -1\n\
    \  elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo -1\n  elif [ $1 -eq $2\
    \ ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo -1\n  elif [ $1 -gt $2 ]\
    \ && [ $1 -gt $3 ]; then\n    if [ $1 -lt $(( $2 + $3 )) ]; then\n      echo $(echo\
    \ \"scale=2; sqrt($(( $1 + $2 + $3 )) * ($(( $1 + $2 + $3 )) - $1) * ($(( $1 +\
    \ $2 + $3 )) - $2) * ($(( $1 + $2 + $3 )) - $3)) / 4\" | bc)\n    else\n     \
    \ echo -1\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $2 -lt\
    \ $(( $1 + $3 )) ]; then\n      echo $(echo \"scale=2; sqrt($(( $1 + $2 + $3 ))\
    \ * ($(( $1 + $2 + $3 )) - $1) * ($(( $1 + $2 + $3 )) - $2) * ($(( $1 + $2 + $3\
    \ )) - $3)) / 4\" | bc)\n    else\n      echo -1\n    fi\n  elif [ $3 -gt $1 ]\
    \ && [ $3 -gt $2 ]; then\n    if [ $3 -lt $(( $1 + $2 )) ]; then\n      echo $(echo\
    \ \"scale=2; sqrt($(( $1 + $2 + $3 )) * ($(( $1 + $2 + $3 )) - $1) * ($(( $1 +\
    \ $2 + $3 )) - $2) * ($(( $1 + $2 + $3 )) - $3)) / 4\" | bc)\n    else\n     \
    \ echo -1\n    fi", "    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo $(echo \"scale=2;\
    \ sqrt(3) / 4 * $1 * $1\" | bc)\n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] ||\
    \ [ $1 -eq $3 ]; then\n            echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\"\
    \ | bc)\n        else\n            echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\"\
    \ | bc)\n        fi\n    else\n        echo -1\n    fi", "    if [ $1 -gt 0 ]\
    \ && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n        if [ $1 -gt $2 ] && [ $1 -gt\
    \ $3 ]; then\n            if [ $(( $2 + $3 )) -gt $1 ]; then\n               \
    \ echo $(echo \"scale=2; $2 * $3 / 2\" | bc)\n            else\n             \
    \   echo -1\n            fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n\
    \            if [ $(( $1 + $3 )) -gt $2 ]; then\n                echo $(echo \"\
    scale=2; $1 * $3 / 2\" | bc)\n            else\n                echo -1\n    \
    \        fi\n        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if\
    \ [ $(( $1 + $2 )) -gt $3 ]; then\n                echo $(echo \"scale=2; $1 *\
    \ $2 / 2\" | bc)\n            else\n                echo -1\n            fi\n\
    \        fi\n    else\n        echo -1\n    fi", "    # Write your code here\n\
    \    if [ $1 -lt 1 ] || [ $2 -lt 1 ] || [ $3 -lt 1 ]; then\n        echo -1\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo $(echo \"scale=2;\
    \ sqrt(3) / 4 * $1 * $1\" | bc)\n    elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [\
    \ $1 -eq $3 ]; then\n        echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\" |\
    \ bc)\n    else\n        echo -1\n    fi", "  # Write your code here\n  if [ $1\
    \ -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq $2 ] && [ $2\
    \ -eq $3 ]; then\n      echo \"scale=2;sqrt(3)*$1^2/4\" | bc\n    elif [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"scale=2;sqrt(($1+$2-$3)*($1-$2+$3)*($3+$2-$1)*($1+$2+$3))/4\"\
    \ | bc\n    else\n      echo \"scale=2;sqrt(($1+$2-$3)*($1-$2+$3)*($3+$2-$1)*($1+$2+$3))/4\"\
    \ | bc\n    fi\n  else\n    echo -1\n  fi", "    if [ $1 -gt 0 ] && [ $2 -gt 0\
    \ ] && [ $3 -gt 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n \
    \           echo \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc\n        elif [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n            echo \"scale=2; sqrt(3)\
    \ / 4 * $1 * $1\" | bc\n        else\n            echo \"scale=2; sqrt(3) / 4\
    \ * $1 * $1\" | bc\n        fi\n    else\n        echo -1\n    fi", "    if [\
    \ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n        if [ $1 -eq $2 ] &&\
    \ [ $2 -eq $3 ]; then\n            echo \"scale=2;sqrt(3)/4*($1*$1)\" | bc\n \
    \       elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n         \
    \   echo \"scale=2;1/4*sqrt(($1+$2+$3)*($1+$2-$3)*($1-$2+$3)*(-1*$1+$2+$3))\"\
    \ | bc\n        else\n            echo \"scale=2;1/4*sqrt(2*($1*$1*$2*$2+$2*$2*$3*$3+$1*$1*$3*$3)-($1*$1*$1*$1+$2*$2*$2*$2+$3*$3*$3*$3))\"\
    \ | bc\n        fi\n    else\n        echo -1\n    fi", "    if [ $1 -lt $2 ]\
    \ && [ $1 -lt $3 ]; then\n        if [ $(( $2 + $3 )) -gt $1 ]; then\n       \
    \     echo $(( $1 + $2 + $3 ))\n        else\n            echo -1\n        fi\n\
    \    elif [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n        if [ $(( $1 + $3 )) -gt\
    \ $2 ]; then\n            echo $(( $1 + $2 + $3 ))\n        else\n           \
    \ echo -1\n        fi\n    elif [ $3 -lt $1 ] && [ $3 -lt $2 ]; then\n       \
    \ if [ $(( $1 + $2 )) -gt $3 ]; then\n            echo $(( $1 + $2 + $3 ))\n \
    \       else\n            echo -1\n        fi\n    else\n        echo -1\n   \
    \ fi", "  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq\
    \ $2 ] && [ $2 -eq $3 ]; then\n      echo \"scale=2;sqrt(3)/4*($1*$1)\" | bc\n\
    \    elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"\
    scale=2;sqrt(3)/4*($1*$1)\" | bc\n    else\n      echo \"scale=2;sqrt(3)/4*($1*$1)\"\
    \ | bc\n    fi\n  else\n    echo -1\n  fi", "    if [ $1 -gt 0 ] && [ $2 -gt 0\
    \ ] && [ $3 -gt 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n \
    \           echo $(echo \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n        elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n            echo $(echo\
    \ \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n        else\n            echo $(echo\
    \ \"scale=2; sqrt(3) / 4 * $1 * $1\" | bc)\n        fi\n    else\n        echo\
    \ -1\n    fi", "    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -lt\
    \ 0 || $b -lt 0 || $c -lt 0 ]]; then\n        echo -1\n    elif [[ $a -gt $b+$c\
    \ || $b -gt $a+$c || $c -gt $a+$b ]]; then\n        echo -1\n    else\n      \
    \  local p=$(echo \"scale=2; ($a+$b+$c)/2\" | bc)\n        local area=$(echo \"\
    scale=2; sqrt($p*($p-$a)*($p-$b)*($p-$c))\" | bc)\n        echo $area\n    fi",
  "  if (( $1 + $2 > $3 && $1 + $3 > $2 && $2 + $3 > $1 )); then\n    echo $(echo\
    \ \"scale=2; sqrt($1*$1 + $2*$2 - $3*$3)\" | bc)\n  else\n    echo -1\n  fi"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_3_below_zero
results:
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # To debug: echo \"Debug messages...\"\
    \ >&2\n    local balance=0\n    for i in $1; do\n        balance=$((balance +\
    \ i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [ $sum -lt 0 ]; then\n      echo True\n      return\n    fi\n  done\n\
    \  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum+=i))\n        if ((sum<0)); then\n     \
    \       echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"\
    \n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a ary\n    IFS=' ' read -r -a ary <<< \"$1\"\
    \n    local sum=0\n    for i in \"${ary[@]}\"; do\n        (( sum += i ))\n  \
    \      if (( sum < 0 )); then\n            echo \"True\"\n            return\n\
    \        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1\n    do\n       \
    \ balance=$((balance + i))\n        if [ $balance -lt 0 ]\n        then\n    \
    \        echo \"True\"\n            return\n        fi\n    done\n    echo \"\
    False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    ((sum+=i))\n    if ((sum<0)); then\n      echo \"True\"\n\
    \      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    ((sum += i))\n \
    \   if ((sum < 0)); then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        let sum+=$i\n        if [[ $sum -lt 0 ]]; then\n\
    \            echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpukl0xrnl.sh: line 15: let: sum+=: syntax error: operand expected
    (error token is "+=")

    '
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    for i in $1; do\n        if [ $i -lt 0 ]; then\n \
    \           echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=($1)\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    ((sum += i))\n    if ((sum < 0)); then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo \"True\"\n       \
    \     return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n \
    \   below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local balance=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( balance\
    \ += i ))\n            if (( balance < 0 )); then\n                echo \"True\"\
    \n                return\n            fi\n        else\n            (( balance\
    \ += i ))\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo True\n           \
    \ return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo \"True\"\n            return\n\
    \        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [ $sum -lt 0 ]; then\n\
    \            echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr\n    arr=($1)\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"; do\n        ((sum += i))\n        if ((sum < 0)); then\n\
    \            echo True\n            return\n        fi\n    done\n    echo False\n\
    }\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo True\n           \
    \ return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local total=0\n  for i in $1; do\n    total=$((total\
    \ + i))\n    if [ $total -lt 0 ]; then\n      echo \"True\"\n      return\n  \
    \  fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # To debug: echo \"Debug messages...\"\
    \ >&2\n    local -a arr=(\"$@\")\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$((sum + i))\n        if [ $sum -lt 0 ]; then\n            echo\
    \ \"True\"\n            return\n        fi\n    done\n    echo \"False\"\n}\n\n\
    candidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo \"True\"\n            return\n\
    \        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum + i))\n    if ((sum < 0)); then\n      echo \"\
    True\"\n      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n \
    \   below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=($1)\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        sum=$((sum + i))\n        if [ $sum -lt 0 ]; then\n \
    \           echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum+=i))\n        if ((sum<0)); then\n     \
    \       echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"\
    \n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [ $sum -lt 0 ]; then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    ((sum+=i))\n    if ((sum<0)); then\n      echo \"True\"\n\
    \      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    ((balance +=\
    \ i))\n    if ((balance < 0)); then\n      echo True\n      return\n    fi\n \
    \ done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local list=$1\n  local balance=0\n  for i in $list;\
    \ do\n    balance=$((balance + i))\n    if [[ $balance -lt 0 ]]; then\n      echo\
    \ True\n      return\n    fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr\n    local i\n    local sum=0\n    IFS='\
    \ ' read -r -a arr <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo \"True\"\n            return\n\
    \        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr\n    local i\n    local sum=0\n    arr=($1)\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum + arr[i]))\n     \
    \   if ((sum < 0)); then\n            echo \"True\"\n            return\n    \
    \    fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    ((sum += i))\n \
    \   if ((sum < 0)); then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    local amount\n    for amount\
    \ in $1; do\n        balance=$((balance + amount))\n        if ((balance < 0));\
    \ then\n            echo True\n            return\n        fi\n    done\n    echo\
    \ False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n\tlocal -a arr=(\"$@\")\n\tlocal sum=0\n\tfor i in \"\
    ${arr[@]}\"; do\n\t\tsum=$((sum + i))\n\t\tif [[ $sum -lt 0 ]]; then\n\t\t\techo\
    \ \"True\"\n\t\t\treturn\n\t\tfi\n\tdone\n\techo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local total=0\n    for i in $1; do\n        total=$((total\
    \ + i))\n        if [[ $total -lt 0 ]]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=($1)\n  local balance=0\n  for i in \"\
    ${arr[@]}\"; do\n    ((balance+=i))\n    if ((balance<0)); then\n      echo \"\
    True\"\n      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n \
    \   below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1\n    do\n       \
    \ balance=$((balance + i))\n        if [ $balance -lt 0 ]\n        then\n    \
    \        echo True\n            return\n        fi\n    done\n    echo False\n\
    }\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo \"True\"\n       \
    \     return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n \
    \   below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=($1)\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        ((sum+=i))\n        if ((sum<0)); then\n            echo\
    \ \"True\"\n            return\n        fi\n    done\n    echo \"False\"\n}\n\n\
    candidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1\n    do\n       \
    \ balance=$((balance + i))\n        if [ $balance -lt 0 ]\n        then\n    \
    \        echo \"True\"\n            return\n        fi\n    done\n    echo \"\
    False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo True\n      return\n    fi\n\
    \  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    local operation\n    for operation\
    \ in $1; do\n        balance=$((balance + operation))\n        if [[ $balance\
    \ -lt 0 ]]; then\n            echo True\n            return\n        fi\n    done\n\
    \    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo True\n           \
    \ return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local list=$1\n  local sum=0\n  for i in $list; do\n\
    \    sum=$((sum + i))\n    if [[ $sum -lt 0 ]]; then\n      echo True\n      return\n\
    \    fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum+=i))\n        if ((sum<0)); then\n     \
    \       echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"\
    \n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a list=($1)\n  local sum=0\n  for i in \"${list[@]}\"\
    ; do\n    sum=$((sum + i))\n    if [[ $sum -lt 0 ]]; then\n      echo \"True\"\
    \n      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    ((balance +=\
    \ i))\n    if ((balance < 0)); then\n      echo \"True\"\n      return\n    fi\n\
    \  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum += i))\n        if ((sum < 0)); then\n \
    \           echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo True\n      return\n    fi\n\
    \  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr\n    local -i sum=0\n    IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n        ((sum+=i))\n \
    \       if ((sum<0)); then\n            echo \"True\"\n            return\n  \
    \      fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4\
    \ 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr\n  arr=($1)\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    ((sum+=i))\n    if ((sum<0)); then\n      echo \"True\"\
    \n      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=($1)\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        ((sum += i))\n        if ((sum < 0)); then\n        \
    \    echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"\
    \n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo True\n      return\n    fi\n\
    \  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum += i))\n        if ((sum < 0)); then\n \
    \           echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [[ $sum -lt 0 ]]; then\n      echo True\n      return\n    fi\n  done\n\
    \  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo True\n           \
    \ return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    ((sum+=i))\n    if ((sum<0)); then\n      echo \"True\"\n\
    \      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    ((sum += i))\n    if ((sum < 0)); then\n      echo \"True\"\
    \n      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [[ $sum -lt 0 ]]; then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    ((sum += i))\n \
    \   if ((sum < 0)); then\n      echo True\n      return\n    fi\n  done\n  echo\
    \ False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local balance=0\n  for i in\
    \ \"${arr[@]}\"; do\n    balance=$((balance + i))\n    if [[ $balance -lt 0 ]];\
    \ then\n      echo \"True\"\n      return\n    fi\n  done\n  echo \"False\"\n\
    }\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr\n    local sum=0\n    IFS=' ' read -r\
    \ -a arr <<< \"$1\"\n    for i in \"${arr[@]}\"; do\n        ((sum+=i))\n    \
    \    if ((sum<0)); then\n            echo \"True\"\n            return\n     \
    \   fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    ((sum+=i))\n    if ((sum<0)); then\n      echo \"True\"\n\
    \      return\n    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        ((balance\
    \ += i))\n        if ((balance < 0)); then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [ $sum -lt 0 ]; then\n\
    \            echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        let sum+=$i\n\
    \        if [ $sum -lt 0 ]; then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [[ $sum -lt 0 ]]; then\n      echo True\n      return\n    fi\n  done\n\
    \  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum+=i))\n        if ((sum<0)); then\n     \
    \       echo \"True\"\n            return\n        fi\n    done\n    echo \"False\"\
    \n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5\
    \ 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a array=($1)\n    local sum=0\n    for i in\
    \ \"${array[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        ((balance\
    \ += i))\n        if ((balance < 0)); then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local list=$1\n    local sum=0\n    for i in $list;\
    \ do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]]; then\n          \
    \  echo True\n            return\n        fi\n    done\n    echo False\n}\n\n\
    candidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    ((balance +=\
    \ i))\n    if ((balance < 0)); then\n      echo \"True\"\n      return\n    fi\n\
    \  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [ $sum -lt 0 ]; then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo \"True\"\n      return\n\
    \    fi\n  done\n  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local total=0\n    for i in $1; do\n        total=$((total\
    \ + i))\n        if [[ $total -lt 0 ]]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [ $sum -lt 0 ]; then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        ((sum +=\
    \ i))\n        if ((sum < 0)); then\n            echo \"True\"\n            return\n\
    \        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        ((sum += i))\n        if ((sum < 0)); then\n \
    \           echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo True\n            return\n\
    \        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    # TODO: Your code here\n    return 0\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=($1)\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        ((sum+=i))\n        if ((sum<0)); then\n            echo\
    \ \"True\"\n            return 0\n        fi\n    done\n    echo \"False\"\n}\n\
    \ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2\
    \ -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [ $balance -lt 0 ]; then\n      echo True\n      return\n    fi\n\
    \  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo \"True\"\n  \
    \          return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate()\
    \ {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[\
    \ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5\
    \ -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"\
    true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local sum=0\n  for i in $1; do\n    sum=$((sum + i))\n\
    \    if [ $sum -lt 0 ]; then\n      echo \"True\"\n      return\n    fi\n  done\n\
    \  echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo \"True\"\n    \
    \        return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo True\n          \
    \  return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -i sum=0\n    for i in $1; do\n        (( sum\
    \ += i ))\n        if (( sum < 0 )); then\n            echo True\n           \
    \ return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    balance=$((balance\
    \ + i))\n    if [[ $balance -lt 0 ]]; then\n      echo True\n      return\n  \
    \  fi\n  done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [ $balance -lt 0 ]; then\n            echo True\n        \
    \    return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        balance=$((balance\
    \ + i))\n        if [[ $balance -lt 0 ]]; then\n            echo True\n      \
    \      return\n        fi\n    done\n    echo False\n}\n\ncandidate() {\n    below_zero\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n\
    \    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"\
    false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local balance=0\n    for\
    \ i in \"${arr[@]}\"; do\n        balance=$((balance + i))\n        if [[ $balance\
    \ -lt 0 ]]; then\n            echo \"True\"\n            return\n        fi\n\
    \    done\n    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a arr=(\"$@\")\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt 0 ]];\
    \ then\n            echo \"True\"\n            return\n        fi\n    done\n\
    \    echo \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [ $sum -lt 0 ]; then\n            echo \"True\"\n        \
    \    return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n  \
    \  below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local -a list=($1)\n    local sum=0\n    for i in\
    \ \"${list[@]}\"; do\n        ((sum+=i))\n        if [[ $sum -lt 0 ]]; then\n\
    \            echo \"True\"\n            return\n        fi\n    done\n    echo\
    \ \"False\"\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2\
    \ -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate \"\
    1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\"\
    ) = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local balance=0\n    for i in $1; do\n        ((balance\
    \ += i))\n        if ((balance < 0)); then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt 0 ]]; then\n            echo \"True\"\n      \
    \      return\n        fi\n    done\n    echo \"False\"\n}\n\ncandidate() {\n\
    \    below_zero \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 -4 5 6\") = \"true\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 -2 2 -2 5 -5 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248
- exit_code: 1
  program: "#!/bin/bash\n# You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n# zero balance. Your task is to detect if\
    \ at any point the balance of account fallls below zero, and\n# at that point\
    \ function should return True. Otherwise it should return False.\n# >>> below_zero([1,\
    \ 2, 3])\n# False\n# >>> below_zero([1, 2, -4, 5])\n# True\n#\n# $1 is a space-separated\
    \ list\nbelow_zero() {\n  local balance=0\n  for i in $1; do\n    ((balance +=\
    \ i))\n    if ((balance < 0)); then\n      echo True\n      return\n    fi\n \
    \ done\n  echo False\n}\n\ncandidate() {\n    below_zero \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"1\
    \ 2 -3 1 2 -3\") = \"false\" ]]\n    [[ $(candidate \"1 2 -4 5 6\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 -1 2 -2 5 -5 4 -4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 -1 2 -2 5 -5 4 -5\") = \"true\" ]]\n    [[ $(candidate \"1 -2 2 -2 5 -5\
    \ 4 -4\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999248

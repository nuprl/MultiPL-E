name: HumanEval_45_triangle_area
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given length of a side and high return area for a triangle.\n\
  # >>> triangle_area(5, 3)\n# 7.5\n#\n# $1 is an integer\n# $2 is an integer\ntriangle_area()\
  \ {\n"
tests: "}\n\ncandidate() {\n    triangle_area \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5\" \"3\") = \"7.5\" ]]\n    [[ $(candidate \"2\" \"2\") =\
  \ \"2.0\" ]]\n    [[ $(candidate \"10\" \"8\") = \"40.0\" ]]\n}\n\nrun_test"
completions: ['    echo "scale=2;($1 * $2) / 2" | bc', '    echo "scale=2; $1 * $2
    / 2" | bc', '    echo "scale=2; ($1 * $2) / 2" | bc', "    local side=$1\n   \
    \ local high=$2\n    echo \"$((side * high / 2))\"", '    echo "scale=2; $1 *
    $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', "    local side=$1\n  \
    \  local high=$2\n    echo \"$(echo \"scale=2; $side * $high / 2\" | bc)\"", '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2;
    $1 * $2 / 2" | bc', "    # Write your code here\n    echo \"scale=2;($1*$2)/2\"\
    \ | bc", '  echo "scale=2; $1 * $2 / 2" | bc', '    echo "$(bc <<< "scale=2; $1
    * $2 / 2")"', '    echo "scale=2;($1 * $2) / 2" | bc', '    echo "scale=2; $1
    * $2 / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', "    local side=$1\n    local\
    \ high=$2\n    echo \"scale=2; $side * $high / 2\" | bc", '    echo "scale=2;($1
    * $2) / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2; $1 * $2
    / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;($1 * $2)
    / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2
    / 2" | bc', '    echo "$(echo "scale=2; $1 * $2 / 2" | bc)"', '    echo "scale=2;
    $1 * $2 / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2;($1 *
    $2) / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "$1 * $2 / 2" | bc
    -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2) / 2"
    | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2) /
    2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" |
    bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2) / 2"
    | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2"
    | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;$1*$2/2" | bc',
  '    echo "$1 * $2 / 2" | bc -l', "    local side=$1\n    local high=$2\n    echo\
    \ \"$((side * high / 2))\"", "    local side=$1\n    local high=$2\n    echo \"\
    $side * $high / 2\" | bc -l", '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2) / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; ($1 * $2) / 2" | bc', '    echo "scale=2;($1 * $2) / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', "    local side=$1\n    local high=$2\n    echo\
    \ $(echo \"$side * $high / 2\" | bc -l)", '    echo "scale=2; $1 * $2 / 2" | bc',
  '    echo "scale=2; $1 * $2 / 2" | bc', '  echo $(echo "scale=2; $1 * $2 / 2" |
    bc)', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2) /
    2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2
    / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2
    / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2 / 2" |
    bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 /
    2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "$1 * $2 / 2" | bc -l',
  '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2)/2" | bc',
  '    echo "$1 * $2 / 2" | bc -l', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2;
    $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2) / 2" | bc', '    echo $(echo
    "scale=2; $1 * $2 / 2" | bc)', '  echo "scale=2; ($1 * $2) / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', "    if [[ $# -ne 2 ]]; then\n        echo \"Usage:\
    \ $0 <side> <high>\"\n        return 1\n    fi\n\n    local side=$1\n    local\
    \ high=$2\n\n    echo \"$side * $high / 2\" | bc -l", '    echo "scale=2; $1 *
    $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1
    * $2 / 2" | bc', '    echo "$(bc <<< "scale=2; $1 * $2 / 2")"', '    echo "$1
    * $2 / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2
    / 2" | bc -l', '    echo "$1 * $2 / 2" | bc -l', '    echo "$1 * $2 / 2" | bc
    -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2"
    | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc',
  '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$(echo "scale=2; $1 * $2 / 2"
    | bc)"', '    echo "$1 * $2 / 2" | bc -l', '    echo "$1 * $2 / 2" | bc -l', " \
    \   local side=$1\n    local high=$2\n    echo $(echo \"$side * $high / 2\" |\
    \ bc -l)", '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;($1 * $2)
    / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc -l', '    echo "scale=2; $1
    * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;$1*$2/2"
    | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=1; $1 * $2 / 2"
    | bc', '    echo "scale=2;($1 * $2) / 2" | bc', '    echo "$1 * $2 / 2" | bc -l',
  '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc',
  '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc',
  '    echo "$(($1 * $2 / 2))"', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; ($1 * $2) / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2;($1
    * $2) / 2" | bc', "    local side=$1\n    local high=$2\n    echo \"scale=2; $side\
    \ * $high / 2\" | bc", '  echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;
    ($1 * $2) / 2" | bc', '    echo "$(bc <<< "scale=2; $1 * $2 / 2")"', '    echo
    "$1 * $2 / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;
    $1 * $2 / 2" | bc', '    echo "$(bc <<< "scale=2; $1 * $2 / 2")"', '    echo $(echo
    "scale=2; $1 * $2 / 2" | bc)', "    local side=$1\n    local high=$2\n    local\
    \ area=$(echo \"scale=2; $side * $high / 2\" | bc)\n    echo $area", '    echo
    "$1 * $2 / 2" | bc -l', '    echo "scale=2;$1*$2/2" | bc', '    echo "$1 * $2
    / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$(($1 * $2 /
    2))"', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2 / 2" | bc -l',
  '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;($1 * $2) / 2" | bc',
  "    if [ $# -eq 2 ]; then\n        echo \"scale=2;($1*$2)/2\" | bc\n    else\n\
    \        echo \"Usage: $0 <length> <high>\"\n    fi", '    echo "scale=2;($1 *
    $2) / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', "    local side=$1\n \
    \   local high=$2\n    echo $(echo \"$side * $high / 2\" | bc -l)", "    local\
    \ a=$1\n    local h=$2\n    echo \"$a * $h / 2\" | bc -l", '    echo "scale=2;($1
    * $2) / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2; $1 * $2
    / 2" | bc', '    echo "scale=2;($1 * $2) / 2" | bc', '    echo "scale=2; $1 *
    $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;($1
    * $2) / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;
    ($1 * $2) / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;
    $1 * $2 / 2" | bc', "    local side=$1\n    local high=$2\n    echo $(echo \"\
    scale=2; $side * $high / 2\" | bc)", '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; ($1 * $2) / 2" | bc', '    echo "scale=2;($1 * $2) / 2" | bc', '    echo
    "scale=2; ($1 * $2) / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2;($1 * $2) / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo
    "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2;$1*$2/2"
    | bc', '    echo "scale=2;($1 * $2) / 2" | bc', "    local side=$1\n    local\
    \ high=$2\n    echo \"scale=2;$side * $high / 2\" | bc", '    echo "scale=2; $1
    * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1
    * $2 / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$(bc <<< "scale=2;
    $1 * $2 / 2")"', '    echo "scale=2;($1 * $2)/2" | bc', '    echo "$1 * $2 / 2"
    | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; ($1 * $2)
    / 2" | bc', '    echo $(echo "scale=2; $1 * $2 / 2" | bc)', '    echo "scale=2;
    ($1 * $2) / 2" | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$1 *
    $2 / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "$1 * $2 /
    2" | bc -l', '    echo $(echo "scale=2; $1 * $2 / 2" | bc)', '    echo "$1 * $2
    / 2" | bc -l', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo "scale=2; $1
    * $2 / 2" | bc', '    echo $(echo "scale=2; $1 * $2 / 2" | bc)', '    echo "$1
    * $2 / 2" | bc -l', '    echo "$1 * $2 / 2" | bc -l', '    echo "scale=2; $1 *
    $2 / 2" | bc', '    echo "$(($1 * $2 / 2))"', '    echo "scale=2; $1 * $2 / 2"
    | bc', '    echo "scale=2; $1 * $2 / 2" | bc', '    echo $(echo "scale=2; $1 *
    $2 / 2" | bc)', '    echo "scale=2; $1 * $2 / 2" | bc']
stop_tokens:
- "\n}"

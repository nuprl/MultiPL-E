name: HumanEval_30_get_positive
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> get_positive([-1,\
  \ 2, -4, 5, 6])\n# [2, 5, 6]\n# >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
  \ 1, -10])\n# [5, 3, 2, 3, 9, 123, 1]\n#\n# $1 is a space-separated list\nget_positive()\
  \ {\n"
tests: "}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
  \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
  ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
completions: ["    local list=$1\n    local result=()\n    for i in $list; do\n  \
    \      if [[ $i -gt 0 ]]; then\n            result+=($i)\n        fi\n    done\n\
    \    echo ${result[@]}", "    echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$'",
  "    echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$'", "    echo \"$1\" | tr ' '\
    \ '\\n' | awk '$1>0'", "    echo $1 | tr ' ' '\\n' | grep -E '^[0-9]+$'", "  \
    \  local numbers=($1)\n    local positive_numbers=()\n    for number in ${numbers[@]};\
    \ do\n        if [[ $number -gt 0 ]]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n    echo ${positive_numbers[@]}", "    local list=$1\n\
    \    local positive_list=()\n    for i in $list; do\n        if [ $i -gt 0 ];\
    \ then\n            positive_list+=($i)\n        fi\n    done\n    echo ${positive_list[@]}",
  "  local list=$1\n  local positive_list=()\n  for i in $list; do\n    if [[ $i -gt\
    \ 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n  echo ${positive_list[@]}",
  "    local list=$1\n    local result=()\n    for i in $list; do\n        if [[ $i\
    \ -gt 0 ]]; then\n            result+=($i)\n        fi\n    done\n    echo ${result[@]}",
  "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [\
    \ $i -gt 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result", "    local list=$1\n    local positive_list=()\n    for i\
    \ in $list; do\n        if [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n    echo ${positive_list[@]}", "    local list=$1\n   \
    \ local result=()\n    for i in $list; do\n        if [ $i -gt 0 ]; then\n   \
    \         result+=($i)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if [ $i\
    \ -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n   \
    \ echo $result", "    echo $1 | tr ' ' '\\n' | grep -E '^[0-9]+$'", "    local\
    \ list=$1\n    local result=()\n    for i in $list; do\n        if [ $i -gt 0\
    \ ]; then\n            result+=($i)\n        fi\n    done\n    echo ${result[@]}",
  "    local list=$1\n    local positive_list=()\n    for i in $list; do\n       \
    \ if [ $i -gt 0 ]; then\n            positive_list+=($i)\n        fi\n    done\n\
    \    echo ${positive_list[@]}", "  echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$'",
  "    echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$'", "  local list=\"$1\"\n  local\
    \ result=\"\"\n  for i in $list; do\n    if [ $i -ge 0 ]; then\n      result=\"\
    $result $i\"\n    fi\n  done\n  echo $result", "    echo \"$1\" | tr ' ' '\\n'\
    \ | grep -E '^[0-9]+$'"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_44_change_base
results:
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while ((x > 0));\
    \ do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$(( x % base ))\n        x=$(( x / base ))\n   \
    \     result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$(( x % base ))\n        x=$(( x / base ))\n   \
    \     result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    local quotient=0\n    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n\
    \        x=$((x / base))\n        result=\"$remainder$result\"\n    done\n   \
    \ echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    x=$((x / base))\n    result=\"$remainder$result\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=\"$((x % base))$result\"\n        x=$((x / base))\n  \
    \  done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=''\n  local remainder=0\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=\"\
    $remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while (( x > 0 ));\
    \ do\n        result=\"$(( x % base ))$result\"\n        x=$(( x / base ))\n \
    \   done\n    echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ tmp=0\n    local tmp_result=''\n    local tmp_result_len=0\n    local tmp_result_len_half=0\n\
    \    local tmp_result_len_half_floor=0\n    local tmp_result_len_half_ceil=0\n\
    \    local tmp_result_len_half_floor_index=0\n    local tmp_result_len_half_ceil_index=0\n\
    \    local tmp_result_len_half_floor_char=''\n    local tmp_result_len_half_ceil_char=''\n\
    \    local tmp_result_len_half_floor_char_int=0\n    local tmp_result_len_half_ceil_char_int=0\n\
    \    local tmp_result_len_half_floor_char_int_base=0\n    local tmp_result_len_half_ceil_char_int_base=0\n\
    \    local tmp_result_len_half_floor_char_int_base_sum=0\n    local tmp_result_len_half_ceil_char_int_base_sum=0\n\
    \    local tmp_result_len_half_floor_char_int_base_sum_int=0\n    local tmp_result_len_half_ceil_char_int_base_sum_int=0\n\
    \    local tmp_result_len_half_floor_char_int_base_sum_int_char=''\n    local\
    \ tmp_result_len_half_ceil_char_int_base_sum_int_char=''\n    local tmp_result_len_half_floor_char_int_base_sum_int_char_int=0\n\
    \    local tmp_result_len_half_ceil_char_int_base_sum_int_char_int=0\n    local\
    \ tmp_result_len_half_floor_char_int_base_sum_int_char_int_base=0\n    local tmp_result_len_half_ceil_char_int_base_\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        result=\"\
    $remainder$result\"\n        x=$((x / base))\n    done\n    echo $result\n}\n\n\
    candidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local bbbb=0\n    local ccc\n}\n\ncandidate() {\n    change_base \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"\
    11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate\
    \ \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n \
    \   [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") =\
    \ \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"\
    5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate\
    \ \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=\"\
    $remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    x=$((x / base))\n    result=\"$remainder$result\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n  \
    \  change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=$((x % base))$result\n        x=$((x / base))\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    x=$((x / base))\n    result=\"$remainder$result\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        result=$(($x % $base))$result\n        x=$(($x / $base))\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=$remainder$result\n    done\n    echo $result\n}\n\n\
    candidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local res=''\n    while [ $x -gt 0 ]; do\n\
    \        res=$(($x % $base))$res\n        x=$(($x / $base))\n    done\n    echo\
    \ $res\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\")\
    \ = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=\"$(($x % $base))$result\"\n        x=$(($x / $base))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  local quotient=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local temp=0\n  local temp_array=()\n\
    \  local temp_array_2=()\n  local temp_array_3=()\n  local temp_array_4=()\n \
    \ local temp_array_5=()\n  local temp_array_6=()\n  local temp_array_7=()\n  local\
    \ temp_array_8=()\n  local temp_array_9=()\n  local temp_array_10=()\n  local\
    \ temp_array_11=()\n  local temp_array_12=()\n  local temp_array_13=()\n  local\
    \ temp_array_14=()\n  local temp_array_15=()\n  local temp_array_16=()\n  local\
    \ temp_array_17=()\n  local temp_array_18=()\n  local temp_array_19=()\n  local\
    \ temp_array_20=()\n  local temp_array_21=()\n  local temp_array_22=()\n  local\
    \ temp_array_23=()\n  local temp_array_24=()\n  local temp_array_25=()\n  local\
    \ temp_array_26=()\n  local temp_array_27=()\n  local temp_array_28=()\n  local\
    \ temp_array_29=()\n  local temp_array_30=()\n  local temp_array_31=()\n  local\
    \ temp_array_32=()\n  local temp_array_33=()\n  local temp_array_34=()\n  local\
    \ temp_array_35=()\n  local temp_array_36=()\n  local temp_array_37=()\n  local\
    \ temp_array_38=()\n  local temp_array_39=()\n  local temp_array_40=()\n  local\
    \ temp_array_41=()\n  local temp_array_42=()\n  local temp_array_43=()\n  local\
    \ temp_array_44=()\n  local temp_array_45=()\n  local temp\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=$remainder$result\n    done\n    echo $result\n}\n\n\
    candidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while (( x > 0 ));\
    \ do\n        local remainder=$(( x % base ))\n        x=$(( x / base ))\n   \
    \     result=\"${remainder}${result}\"\n    done\n    echo \"$result\"\n}\n\n\
    candidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        result=\"\
    $remainder$result\"\n        x=$((x / base))\n    done\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  local quotient=0\n\
    \  while [ $x -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n\
    \    result=\"$remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    local quotient=0\n    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n\
    \        quotient=$((x / base))\n        result=\"$remainder$result\"\n      \
    \  x=$quotient\n    done\n    echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    result=\"$remainder$result\"\n    x=$((x / base))\n\
    \  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    result=\"$remainder$result\"\n    x=$((x / base))\n\
    \  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=\"\
    $remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=\"\
    $remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$(( x % base ))\n    x=$(( x / base ))\n    result=\"$remainder$result\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local r=$((x % base))\n        x=$((x / base))\n        result=\"\
    $r$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n\t\
    local num=$1\n\tlocal base=$2\n\tlocal result=\"\"\n\twhile [ $num -gt 0 ]; do\n\
    \t\tresult=\"$(($num % $base))$result\"\n\t\tnum=$(($num / $base))\n\tdone\n\t\
    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=$remainder$result\n    done\n    echo $result\n}\n\n\
    candidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n  \
    \  change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=$remainder$result\n    done\n    echo $result\n}\n\ncandidate() {\n \
    \   change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while (( x > 0 ));\
    \ do\n        local remainder=$(( x % base ))\n        x=$(( x / base ))\n   \
    \     result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local res=''\n    while [ $x -gt 0 ]; do\n\
    \        res=\"$(($x % $base))$res\"\n        x=$(($x / $base))\n    done\n  \
    \  echo $res\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local digit=$((x % base))\n        result=\"$digit$result\"\n\
    \        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  local quotient=0\n\
    \  while [ $x -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n\
    \    result=\"$remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        result=$(($x % $base))$result\n        x=$(($x / $base))\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while (( x > 0 ));\
    \ do\n        local remainder=$(( x % base ))\n        result=\"${remainder}${result}\"\
    \n        x=$(( x / base ))\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=$remainder$result\n    done\n    echo $result\n}\n\n\
    candidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=\"$((x % base))$result\"\n        x=$((x / base))\n  \
    \  done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local tmp=0\n    local tmp_result=\"\
    \"\n    local tmp_remainder=0\n    local tmp_quotient=0\n    local tmp_i=0\n \
    \   local tmp_tmp=0\n    local tmp_tmp_result=\"\"\n    local tmp_tmp_remainder=0\n\
    \    local tmp_tmp_quotient=0\n    local tmp_tmp_i=0\n    local tmp_tmp_tmp=0\n\
    \    local tmp_tmp_tmp_result=\"\"\n    local tmp_tmp_tmp_remainder=0\n    local\
    \ tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_tmp=0\n\
    \    local tmp_tmp_tmp_tmp_result=\"\"\n    local tmp_tmp_tmp_tmp_remainder=0\n\
    \    local tmp_tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp_i=0\n    local\
    \ tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_result=\"\"\n    local\
    \ tmp_tmp_tmp_tmp_tmp_remainder=0\n    local tmp_tmp_tmp_tmp_tmp_quotient=0\n\
    \    local tmp_tmp_tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_tmp_tmp_tmp=0\n    local\
    \ tmp_tmp_tmp_tmp_tmp_tmp_result=\"\"\n    local tmp_tmp_tmp_tmp_tmp_tmp_remainder=0\n\
    \    local tmp_tmp_tmp_tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_i=0\n\
    \    local tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_tmp_result=\"\
    \"\n    local tmp_tmp_tmp_tmp_tmp_tmp_tmp_remainder=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_tmp_quotient=\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    local quotient=0\n    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n\
    \        quotient=$((x / base))\n        result=\"$remainder$result\"\n      \
    \  x=$quotient\n    done\n    echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  local quotient=0\n\
    \  while [ $x -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n\
    \    result=\"$remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remain=''\n \
    \   while [ $x -gt 0 ]; do\n        remain=$((x % base))\n        x=$((x / base))\n\
    \        result=$remain$result\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local i=0\n    while\
    \ [ $x -gt 0 ]; do\n        result=$((x % base))$result\n        x=$((x / base))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=''\n  local remainder=0\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=$remainder$result\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local rem=$((x % base))\n        result=\"$rem$result\"\n   \
    \     x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n  \
    \  change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=$((x % base))$result\n        x=$((x / base))\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local digit=0\n    local digits=(\"\
    0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\")\n    while [ $x -gt\
    \ 0 ]; do\n        remainder=$((x % base))\n        quotient=$((x / base))\n \
    \       result=${digits[$remainder]}$result\n        x=$quotient\n    done\n \
    \   echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local digit\n   \
    \ while [ $x -gt 0 ]; do\n        digit=$((x % base))\n        result=\"$digit$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while (( x > 0 )); do\n    local\
    \ remainder=$(( x % base ))\n    result=\"${remainder}${result}\"\n    x=$(( x\
    \ / base ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n\
    \    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\"\
    ) = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate\
    \ \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n \
    \   [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") =\
    \ \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"\
    5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate\
    \ \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder=0\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=\"\
    $remainder$result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  if [ $# -ne 2 ]; then\n        echo \"Usage: change_base <number> <base>\"\n\
    \        return 1\n    fi\n    local number=$1\n    local base=$2\n    local result=\"\
    \"\n    while [ $number -gt 0 ]; do\n        local remainder=$((number % base))\n\
    \        result=\"$remainder$result\"\n        number=$((number / base))\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        result=$remainder$result\n\
    \        x=$((x / base))\n    done\n    echo $result\n}\n\ncandidate() {\n   \
    \ change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\"\
    ) = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$(( x % base ))\n        x=$((\
    \ x / base ))\n        result=$remainder$result\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=\"$(($x % $base))$result\"\n        x=$(($x / $base))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local rem=0\n   \
    \ local quotient=0\n    local i=0\n    local j=0\n    local tmp=0\n    local tmp_result=\"\
    \"\n    local tmp_rem=0\n    local tmp_quotient=0\n    local tmp_i=0\n    local\
    \ tmp_j=0\n    local tmp_tmp=0\n    local tmp_tmp_result=\"\"\n    local tmp_tmp_rem=0\n\
    \    local tmp_tmp_quotient=0\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n\
    \    local tmp_tmp_tmp=0\n    local tmp_tmp_tmp_result=\"\"\n    local tmp_tmp_tmp_rem=0\n\
    \    local tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_j=0\n\
    \    local tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_result=\"\"\n    local\
    \ tmp_tmp_tmp_tmp_rem=0\n    local tmp_tmp_tmp_tmp_quotient=0\n    local tmp_tmp_tmp_tmp_i=0\n\
    \    local tmp_tmp_tmp_tmp_j=0\n    local tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_result=\"\
    \"\n    local tmp_tmp_tmp_tmp_tmp_rem=0\n    local tmp_tmp_tmp_tmp_tmp_quotient=0\n\
    \    local tmp_tmp_tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_tmp_tmp_j=0\n    local\
    \ tmp_tmp_tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_result=\"\"\n \
    \   local tmp_tmp_tmp_tmp_tmp_tmp_rem=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_quotient=0\n\
    \    local tmp_tmp_tmp_tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_tmp_tmp_tmp_j=0\n\
    \    local tmp_tmp_tmp\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        result=$((x % base))$result\n        x=$((x / base))\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  local remainder\n  while [ $x\
    \ -gt 0 ]; do\n    remainder=$((x % base))\n    x=$((x / base))\n    result=\"\
    $remainder$result\"\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=''\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    result=\"$remainder$result\"\n    x=$((x / base))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while (( x > 0 ));\
    \ do\n        local remainder=$(( x % base ))\n        result=\"${remainder}${result}\"\
    \n        x=$(( x / base ))\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        local remainder=$((x % base))\n        x=$((x / base))\n       \
    \ result=\"$remainder$result\"\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    x=$((x / base))\n    result=\"$remainder$result\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while (( x > 0 ));\
    \ do\n        local remainder=$(( x % base ))\n        x=$(( x / base ))\n   \
    \     result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=\"\
    \"\n    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x\
    \ / base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    while [ $x -gt 0 ];\
    \ do\n        result=\"$(($x % $base))$result\"\n        x=$(($x / $base))\n \
    \   done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ temp=0\n    local temp_result=\"\"\n    local temp_result_len=0\n    local temp_result_len_half=0\n\
    \    local temp_result_len_half_floor=0\n    local temp_result_len_half_ceil=0\n\
    \    local temp_result_len_half_floor_index=0\n    local temp_result_len_half_ceil_index=0\n\
    \    local temp_result_len_half_floor_char=\"\"\n    local temp_result_len_half_ceil_char=\"\
    \"\n    local temp_result_len_half_floor_char_ascii=0\n    local temp_result_len_half_ceil_char_ascii=0\n\
    \    local temp_result_len_half_floor_char_ascii_plus=0\n    local temp_result_len_half_ceil_char_ascii_plus=0\n\
    \    local temp_result_len_half_floor_char_ascii_plus_char=\"\"\n    local temp_result_len_half_ceil_char_ascii_plus_char=\"\
    \"\n    local temp_result_len_half_floor_char_ascii_plus_char_ascii=0\n    local\
    \ temp_result_len_half_ceil_char_ascii_plus_char_ascii=0\n    local temp_result_len_half_floor_char_ascii_plus_char_ascii_plus=0\n\
    \    local temp_result_len_half_ceil_char_ascii_plus_char_ascii_plus=0\n    local\
    \ temp_result_len_half_floor_char_ascii_plus_char_ascii_plus_char=\"\"\n    local\
    \ temp_result_len_half_ceil_char_ascii_plus_char_ascii_plus_char=\"\"\n    local\
    \ temp_result_len_half_floor_char_ascii_plus_char\n}\n\ncandidate() {\n    change_base\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\"\
    \ \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n\
    \    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\"\
    ) = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  if\
    \ [[ $1 -lt 0 ]]; then\n    echo \"Error: input number must be greater than 0\"\
    \n    exit 1\n  fi\n  if [[ $2 -lt 2 ]]; then\n    echo \"Error: base number must\
    \ be greater than 1\"\n    exit 1\n  fi\n  if [[ $2 -gt 10 ]]; then\n    echo\
    \ \"Error: base number must be less than 10\"\n    exit 1\n  fi\n  local x=$1\n\
    \  local base=$2\n  local result=\"\"\n  while [[ $x -gt 0 ]]; do\n    local remainder=$((x\
    \ % base))\n    result=\"$remainder$result\"\n    x=$((x / base))\n  done\n  echo\
    \ \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"\
    3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[\
    \ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") =\
    \ \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local number=$1\n    local base=$2\n    local result=\"\"\n    while [ $number\
    \ -gt 0 ]; do\n        local remainder=$((number % base))\n        number=$((number\
    \ / base))\n        result=\"$remainder$result\"\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ temp=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_array_index=0\n\
    \    local temp_array_element=0\n    local temp_array_element_length=0\n    local\
    \ temp_array_element_index=0\n    local temp_array_element_char=0\n    local temp_array_element_char_ascii=0\n\
    \    local temp_array_element_char_ascii_int=0\n    local temp_array_element_char_ascii_int_remainder=0\n\
    \    local temp_array_element_char_ascii_int_quotient=0\n    local temp_array_element_char_ascii_int_quotient_remainder=0\n\
    \    local temp_array_element_char_ascii_int_quotient_remainder_quotient=0\n \
    \   local temp_array_element_char_ascii_int_quotient_remainder_quotient_remainder=0\n\
    \    local temp_array_element_char_ascii_int_quotient_remainder_quotient_remainder_quotient=0\n\
    \    local temp_array_element_char_ascii_int_quotient_remainder_quotient_remainder_quotient_remainder=0\n\
    \    local temp_array_element_char_ascii_int_quotient_remainder_quotient_remainder_quotient_remainder_quotient=0\n\
    \    local temp_array_element_char_ascii_int_quotient_remainder_quotient_remainder_quotient_remainder_quotient_remainder=0\n\
    \    local temp_array_element_char_ascii_int_quotient_remainder_quotient_remainder_quotient_remainder\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    result=\"$remainder$result\"\n    x=$((x / base))\n\
    \  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while (( x > 0 ));\
    \ do\n        local digit=$(( x % base ))\n        result=\"${digit}${result}\"\
    \n        x=$(( x / base ))\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=''\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    result=$remainder$result\n    x=$((x / base))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while (( x > 0 )); do\n        remainder=$(( x % base ))\n        x=$(( x\
    \ / base ))\n        result=\"$remainder$result\"\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        result=\"\
    $remainder$result\"\n        x=$((x / base))\n    done\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=''\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    result=$remainder$result\n    x=$((x / base))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    local quotient=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ temp=0\n    local temp_result=''\n    local temp_result_array=()\n    local\
    \ temp_result_array_len=0\n    local temp_result_array_index=0\n    local temp_result_array_index_len=0\n\
    \    local temp_result_array_index_len_len=0\n    local temp_result_array_index_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len=0\n    local temp_result_array_index_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len=0\n    local temp_result_array_index_len_len_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len_len_len=0\n    local\
    \ temp_result_array_index_len_len_len_len_len_len_len_len_len=0\n    local temp_result_array_index_len_len_len_len_len_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len_len_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len_len_len_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len_len_len_len_len_len_len_len_len=0\n\
    \    local temp_result_array_index_len_len_len_len_len_len_len_len_len_len_len_len_len_\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=\"$(($x % $base))$result\"\n        x=$(($x / $base))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        result=\"$remainder$result\"\
    \n        x=$((x / base))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\" \"\
    3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        result=\"$((x % base))$result\"\n        x=$((x / base))\n  \
    \  done\n    echo $result\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=\"\"\n  while [ $x -gt 0 ]; do\n    local\
    \ remainder=$((x % base))\n    x=$((x / base))\n    result=\"$remainder$result\"\
    \n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    change_base \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\"\
    \ ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\"\
    \ \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate\
    \ \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[\
    \ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\"\
    \ ]]\n    [[ $(candidate \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"\
    8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=''\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    local remainder=0\n\
    \    while [ $x -gt 0 ]; do\n        remainder=$((x % base))\n        x=$((x /\
    \ base))\n        result=\"$remainder$result\"\n    done\n    echo $result\n}\n\
    \ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n   \
    \ [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"\
    2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate\
    \ \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[\
    \ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"\
    7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015
- exit_code: 1
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  local\
    \ x=$1\n  local base=$2\n  local result=''\n  local remainder=0\n  local quotient=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_result=''\n\
    \  local tmp_remainder=0\n  local tmp_quotient=0\n  local tmp_i=0\n  local tmp_j=0\n\
    \  local tmp_k=0\n  local tmp_tmp=0\n  local tmp_tmp_result=''\n  local tmp_tmp_remainder=0\n\
    \  local tmp_tmp_quotient=0\n  local tmp_tmp_i=0\n  local tmp_tmp_j=0\n  local\
    \ tmp_tmp_k=0\n  local tmp_tmp_tmp=0\n  local tmp_tmp_tmp_result=''\n  local tmp_tmp_tmp_remainder=0\n\
    \  local tmp_tmp_tmp_quotient=0\n  local tmp_tmp_tmp_i=0\n  local tmp_tmp_tmp_j=0\n\
    \  local tmp_tmp_tmp_k=0\n  local tmp_tmp_tmp_tmp=0\n  local tmp_tmp_tmp_tmp_result=''\n\
    \  local tmp_tmp_tmp_tmp_remainder=0\n  local tmp_tmp_tmp_tmp_quotient=0\n  local\
    \ tmp_tmp_tmp_tmp_i=0\n  local tmp_tmp_tmp_tmp_j=0\n  local tmp_tmp_tmp_tmp_k=0\n\
    \  local tmp_tmp_tmp_tmp_tmp=0\n  local tmp_tmp_tmp_tmp_tmp_result=''\n  local\
    \ tmp_tmp_tmp_tmp_tmp_remainder=0\n  local tmp_tmp_tmp_tmp_tmp_quotient=0\n  local\
    \ tmp_tmp_tmp_tmp_tmp_i=0\n  local tmp_tmp_tmp_tmp_tmp_j=0\n  local tmp_tmp_tmp_tmp_tmp_k=0\n\
    \  local tmp_tmp_tmp_tmp_tmp_tmp=0\n  local tmp_tmp_tmp_tmp_tmp_tmp_result=\n\
    }\n\ncandidate() {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\"\
    \ ]]\n    [[ $(candidate \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate\
    \ \"16\" \"2\") = \"10000\" ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n\
    \    [[ $(candidate \"7\" \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\"\
    ) = \"2\" ]]\n    [[ $(candidate \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"\
    4\" \"5\") = \"4\" ]]\n    [[ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6\" \"7\") = \"6\" ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993016
- exit_code: 0
  program: "#!/bin/bash\n# Change numerical base of input number x to base.\n# return\
    \ string representation after the conversion.\n# base numbers are less than 10.\n\
    # >>> change_base(8, 3)\n# '22'\n# >>> change_base(8, 2)\n# '1000'\n# >>> change_base(7,\
    \ 2)\n# '111'\n#\n# $1 is an integer\n# $2 is an integer\nchange_base() {\n  \
    \  local x=$1\n    local base=$2\n    local result=\"\"\n    while [ $x -gt 0\
    \ ]; do\n        local remainder=$((x % base))\n        x=$((x / base))\n    \
    \    result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    change_base \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    8\" \"3\") = \"22\" ]]\n    [[ $(candidate \"9\" \"3\") = \"100\" ]]\n    [[ $(candidate\
    \ \"234\" \"2\") = \"11101010\" ]]\n    [[ $(candidate \"16\" \"2\") = \"10000\"\
    \ ]]\n    [[ $(candidate \"8\" \"2\") = \"1000\" ]]\n    [[ $(candidate \"7\"\
    \ \"2\") = \"111\" ]]\n    [[ $(candidate \"2\" \"3\") = \"2\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\") = \"3\" ]]\n    [[ $(candidate \"4\" \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"5\" \"6\") = \"5\" ]]\n    [[ $(candidate \"6\" \"7\") = \"6\"\
    \ ]]\n    [[ $(candidate \"7\" \"8\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659993015

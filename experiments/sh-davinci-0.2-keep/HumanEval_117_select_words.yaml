name: HumanEval_117_select_words
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given a string s and a natural number n, you have been tasked\
  \ to implement \n# a function that returns a list of all words from string s that\
  \ contain exactly \n# n consonants, in order these words appear in the string s.\n\
  # If the string s is empty then the function should return an empty list.\n# Note:\
  \ you may assume the input string contains only letters and spaces.\n# Examples:\n\
  # select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n# select_words(\"\
  Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n# select_words(\"simple white\
  \ space\", 2) ==> []\n# select_words(\"Hello world\", 4) ==> [\"world\"]\n# select_words(\"\
  Uncle sam\", 3) ==> [\"Uncle\"]\n#\n# $1 is a string\n# $2 is an integer\nselect_words()\
  \ {\n"
tests: "}\n\ncandidate() {\n    select_words \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"Mary had a little lamb\" \"4\") = \"little\" ]]\n    [[ $(candidate\
  \ \"Mary had a little lamb\" \"3\") = \"Mary lamb\" ]]\n    [[ $(candidate \"simple\
  \ white space\" \"2\") = \"\" ]]\n    [[ $(candidate \"Hello world\" \"4\") = \"\
  world\" ]]\n    [[ $(candidate \"Uncle sam\" \"3\") = \"Uncle\" ]]\n    [[ $(candidate\
  \ \"\" \"4\") = \"\" ]]\n    [[ $(candidate \"a b c d e f\" \"1\") = \"b c d f\"\
  \ ]]\n}\n\nrun_test"
completions: ["    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello\
    \ world\"", "  local str=\"$1\"\n  local num=\"$2\"\n  local words=()\n  local\
    \ word=\"\"\n  local consonants=0\n  local i=0\n  local j=0\n  local len=0\n \
    \ local c=\"\"\n  local vowels=\"aeiou\"\n  local is_vowel=0\n  local is_consonant=0\n\
    \  local is_space=0\n  local is_letter=0\n  local is_word=0\n  local is_consonant_count=0\n\
    \  local is_word_count=0\n  local is_word_count_match=0\n  local is_consonant_count_match=0\n\
    \  local is_word_count_match_count=0\n  local is_consonant_count_match_count=0\n\
    \  local is_word_count_match_count_match=0\n  local is_consonant_count_match_count_match=0\n\
    \  local is_word_count_match_count_match_count=0\n  local is_consonant_count_match_count_match_count=0\n\
    \  local is_word_count_match_count_match_count_match=0\n  local is_consonant_count_match_count_match_count_match=0\n\
    \  local is_word_count_match_count_match_count_match_count=0\n  local is_consonant_count_match_count_match_count_match_count=0\n\
    \  local is_word_count_match_count_match_count_match_count_match=0\n  local is_consonant_count_match_count_match_count_match_count_match=0\n\
    \  local is_word_count_match_count_match_count_match_count_match_count=0\n  local\
    \ is_consonant_count_match_count_match_count_match_count_match_count=0\n  local\
    \ is_word_count_match_count_match_count_match_count_match_count_match=0\n  local\
    \ is_consonant_count_match_count_match_count_match_count_match_count_match=0\n",
  "    local str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local count=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            local char=${word:$i:1}\n            if [[ $char =~\
    \ [^aeiou] ]]; then\n                count=$((count+1))\n            fi\n    \
    \    done\n        if [[ $count -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local\
    \ num=$2\n    local words=($string)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for (( i=0; i<${#word}; i++ )); do\n    \
    \        if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n                (( count++ ))\n\
    \            fi\n        done\n        if [[ $count -eq $num ]]; then\n      \
    \      result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ string=$1\n    local number=$2\n    local words=($string)\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo $word | grep -o \"[^aeiouAEIOU ]\" | wc -l)\n      \
    \  if [[ $consonants -eq $number ]]; then\n            result+=($word)\n     \
    \   fi\n    done\n    echo ${result[@]}", "    local -a words=($1)\n    local\
    \ -a result=()\n    for word in \"${words[@]}\"; do\n        if [[ $(echo $word\
    \ | grep -o '[^aeiouAEIOU]' | wc -l) -eq $2 ]]; then\n            result+=(\"\
    $word\")\n        fi\n    done\n    echo \"${result[@]}\"", "    local s=$1\n\
    \    local n=$2\n    local words=($s)\n    local result=()\n    for word in \"\
    ${words[@]}\"; do\n        local count=0\n        for ((i=0; i<${#word}; i++));\
    \ do\n            local c=${word:$i:1}\n            if [[ $c =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [ $count\
    \ -eq $n ]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n\
    \    local word=\"\"\n    local consonants=0\n    local char=\"\"\n    local vowels=\"\
    aeiou\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local\
    \ m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n", " \
    \   local -a words\n    local -a consonants\n    local -a vowels\n    local -a\
    \ result\n    local word\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local e\n    local\
    \ i\n    local o\n    local u\n    local -i num_consonants\n    local -i num_vowels\n\
    \    local -i num_letters\n    local -i num_spaces\n    local -i num_words\n \
    \   local -i num_args\n    local -i num_consonants_arg\n    local -i num_vowels_arg\n\
    \    local -i num_letters_arg\n    local -i num_spaces_arg\n    local -i num_words_arg\n\
    \    local -i num_args_arg\n    local -i num_consonants_word\n    local -i num_vowels_word\n\
    \    local -i num_letters_word\n    local -i num_spaces_word\n    local -i num_words_word\n\
    \    local -i num_args_word\n    local -i num_consonants_result\n    local -i\
    \ num_vowels_result\n    local -i num_letters_result\n    local -i num_spaces_result\n\
    \    local -i num_words_result\n    local -i num_args_result\n    local -i num_consonants_consonants\n\
    \    local -i num_vowels_consonants\n    local -i num_letters_consonants\n   \
    \ local -i num_spaces_consonants\n    local -i num_words_consonants\n    local\
    \ -i num_args_consonants\n    local -i num_consonants_vowels\n    local -i num_vowels_vowels\n\
    \    local -i num_letters_vowels\n    local -i num_spaces_vowels\n    local -i\
    \ num_words", "    local str=\"$1\"\n    local num=\"$2\"\n    local words=()\n\
    \    local word=''\n    local consonants=0\n    local i=0\n    local c=''\n  \
    \  local vowels='aeiou'\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_space=0\n    local is_letter=0\n    local is_word=0\n    local is_end=0\n\
    \    local is_start=0\n    local is_empty=0\n    local is_num=0\n    local is_str=0\n\
    \    local is_num_int=0\n    local is_num_pos=0\n    local is_num_zero=0\n   \
    \ local is_num_neg=0\n    local is_num_dec=0\n    local is_num_exp=0\n    local\
    \ is_num_inf=0\n    local is_num_nan=0\n    local is_num_hex=0\n    local is_num_oct=0\n\
    \    local is_num_bin=0\n    local is_num_float=0\n    local is_num_int_float=0\n\
    \    local is_num_pos_float=0\n    local is_num_zero_float=0\n    local is_num_neg_float=0\n\
    \    local is_num_dec_float=0\n    local is_num_exp_float=0\n    local is_num_inf_float=0\n\
    \    local is_num_nan_float=0\n    local is_num_hex_float=0\n    local is_num_oct_float=0\n\
    \    local is_num_bin_float=0\n    local is_num_int_pos=0\n    local is_num_int_zero=0\n\
    \    local is_num_int_neg=0\n    local is_num_int_dec=0\n    local is_num_int_exp=0\n\
    \    local is_num_int_inf=0\n    local is_num_int_nan=0\n    local is_num_int_hex=0\n\
    \    local is_num_int_oct=0\n    local is_num_int_bin=", "    local str=\"$1\"\
    \n    local n=\"$2\"\n    local words=()\n    local word\n    local consonants\n\
    \    local i\n    local char\n    local vowels=\"aeiou\"\n    local is_vowel\n\
    \    local is_consonant\n    local is_space\n    local is_letter\n    local is_digit\n\
    \    local is_punctuation\n    local is_symbol\n    local is_control\n    local\
    \ is_printable\n    local is_graphical\n    local is_blank\n    local is_cntrl\n\
    \    local is_xdigit\n    local is_upper\n    local is_lower\n    local is_alpha\n\
    \    local is_alnum\n    local is_ascii\n    local is_unicode\n    local is_digit_hex\n\
    \    local is_digit_oct\n    local is_digit_bin\n    local is_digit_dec\n    local\
    \ is_digit_int\n    local is_digit_float\n    local is_digit_real\n    local is_digit_complex\n\
    \    local is_digit_rational\n    local is_digit_number\n    local is_digit_infinity\n\
    \    local is_digit_nan\n    local is_digit_zero\n    local is_digit_positive\n\
    \    local is_digit_negative\n    local is_digit_nonpositive\n    local is_digit_nonnegative\n\
    \    local is_digit_odd\n    local is_digit_even\n    local is_digit_prime\n \
    \   local is_digit_composite\n    local is_digit_perfect\n    local is_digit_abundant\n\
    \    local is_digit_deficient\n    local is_digit_amicable\n    local is_digit_sociable\n\
    \    local is_digit_unsociable\n    local is_digit_perfect_power\n    local is_digit_perfect_square\n\
    \    local is_digit_perfect_cube\n    local is_digit_perfect_fourth\n    local\
    \ is_digit_perfect_fifth\n    local is_digit_perfect_sixth\n    local is_digit_perfect_seventh\n\
    \    local is_digit_perfect_eighth\n    local is_digit_perfect_ninth\n    local\
    \ is_digit_perfect_t", "    local str=$1\n    local n=$2\n    local words=$(echo\
    \ $str | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n    \
    \    local consonants=$(echo $word | sed 's/[aeiouAEIOU]//g')\n        if [ ${#consonants}\
    \ -eq $n ]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo\
    \ ${result[@]}", "  local str=\"$1\"\n  local n=\"$2\"\n  local result=\"\"\n\
    \  local word=\"\"\n  local consonants=\"\"\n  local vowels=\"aeiou\"\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local\
    \ g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local\
    \ c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n ", " \
    \   local s=$1\n    local n=$2\n    local words=($s)\n    local result=()\n  \
    \  local word\n    local consonants\n    for word in \"${words[@]}\"; do\n   \
    \     consonants=$(echo $word | grep -o '[^aeiouAEIOU ]' | wc -l)\n        if\
    \ [[ $consonants -eq $n ]]; then\n            result+=(\"$word\")\n        fi\n\
    \    done\n    echo \"${result[@]}\"", "    local str=$1\n    local n=$2\n   \
    \ local words=($str)\n    local result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed 's/[aeiou]//g')\n\
    \        if [[ ${#consonants} -eq $n ]]; then\n            result+=($word)\n \
    \       fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local\
    \ n=$2\n    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local consonants=$(echo $word | sed 's/[aeiou]//g')\n        if\
    \ [ ${#consonants} -eq $n ]; then\n            result+=($word)\n        fi\n \
    \   done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed -e\
    \ 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $n ]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ s=$1\n    local n=$2\n    local words=()\n    local word\n    local count\n\
    \    for word in $s; do\n        count=$(echo $word | grep -o '[^aeiou]' | wc\
    \ -l)\n        if [ $count -eq $n ]; then\n            words+=($word)\n      \
    \  fi\n    done\n    echo ${words[@]}", "    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed -e\
    \ 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $n ]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ str=$1\n    local num=$2\n    local words=($str)\n    local result=()\n    local\
    \ word\n    local consonants\n    for word in \"${words[@]}\"; do\n        consonants=$(echo\
    \ $word | sed -E 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $num ];\
    \ then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ tr -cd [bcdfghjklmnpqrstvwxyz] | wc -c)\n        if [[ $consonants -eq $n ]];\
    \ then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local -a words=($1)\n    local -a result=()\n    for word in \"${words[@]}\"\
    ; do\n        local -i consonants=0\n        for ((i=0; i<${#word}; i++)); do\n\
    \            local char=${word:$i:1}\n            if [[ $char =~ [^aeiouAEIOU]\
    \ ]]; then\n                consonants+=1\n            fi\n        done\n    \
    \    if [[ $consonants -eq $2 ]]; then\n            result+=(\"$word\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"", "    local -a words=($1)\n    local\
    \ -a result=()\n    local count=0\n    for word in \"${words[@]}\"; do\n     \
    \   count=0\n        for ((i=0; i<${#word}; i++)); do\n            if [[ ${word:$i:1}\
    \ =~ [^aeiouAEIOU] ]]; then\n                ((count++))\n            fi\n   \
    \     done\n        if [[ $count -eq $2 ]]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"", "    local str=$1\n    local\
    \ n=$2\n    local words=($str)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n                ((count++))\n\
    \            fi\n        done\n        if [[ $count -eq $n ]]; then\n        \
    \    result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ string=$1\n    local number=$2\n    local words=()\n    local word=''\n    local\
    \ consonants=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1}\
    \ =~ [a-zA-Z] ]]; then\n            word+=${string:$i:1}\n        else\n     \
    \       if [[ ${#word} -gt 0 ]]; then\n                consonants=$(echo $word\
    \ | sed -e 's/[aeiou]//g' | wc -m)\n                if [[ $consonants -eq $number\
    \ ]]; then\n                    words+=($word)\n                fi\n         \
    \       word=''\n            fi\n        fi\n    done\n    if [[ ${#word} -gt\
    \ 0 ]]; then\n        consonants=$(echo $word | sed -e 's/[aeiou]//g' | wc -m)\n\
    \        if [[ $consonants -eq $number ]]; then\n            words+=($word)\n\
    \        fi\n    fi\n    echo ${words[@]}", "  local string=$1\n  local number=$2\n\
    \  local words=$(echo $string | tr ' ' '\\n')\n  local result=\"\"\n  for word\
    \ in $words; do\n    local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \    if [ ${#consonants} -eq $number ]; then\n      result=\"$result $word\"\n\
    \    fi\n  done\n  echo $result", "    local string=$1\n    local num=$2\n   \
    \ local -a words=()\n    local -a vowels=('a' 'e' 'i' 'o' 'u')\n    local -a consonants=('b'\
    \ 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y'\
    \ 'z')\n    local -a word_consonants=()\n    local -a word_vowels=()\n    local\
    \ -a word_letters=()\n    local word_consonants_num=0\n    local word_vowels_num=0\n\
    \    local word_letters_num=0\n    local word_consonants_num_str=''\n    local\
    \ word_vowels_num_str=''\n    local word_letters_num_str=''\n    local word=''\n\
    \    local word_num=0\n    local word_num_str=''\n    local word_num_str_len=0\n\
    \    local word_num_str_len_str=''\n    local word_num_str_len_str_len=0\n   \
    \ local word_num_str_len_str_len_str=''\n    local word_num_str_len_str_len_str_len=0\n\
    \    local word_num_str_len_str_len_str_len_str=''\n    local word_num_str_len_str_len_str_len_str_len=0\n\
    \    local word_num_str_len_str_len_str_len_str_len_str=''\n    local word_num_str_len_str_len_str_len_str_len_str_len=0\n\
    \    local word_num_str_len_str_len_str_len_str_len_str_len_str=''\n    local\
    \ word_num_str_len_str_len_str_len_str_len_str_len_str_len=0\n    local word_num_str_len_str_len_str_len_str_len_str",
  "    local -a words=($1)\n    local -a result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed -e\
    \ 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $2 ]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n    for\
    \ word in ${words[@]}; do\n        local count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            local c=${word:$i:1}\n            if [[ $c =~ [^aeiouAEIOU]\
    \ ]]; then\n                ((count++))\n            fi\n        done\n      \
    \  if [[ $count -eq $n ]]; then\n            result+=($word)\n        fi\n   \
    \ done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    for word in ${words[@]}; do\n        local count=0\n        for (( i=0;\
    \ i<${#word}; i++ )); do\n            if [[ $consonants =~ ${word:$i:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local str=$1\n    local num=$2\n    local word\n    local\
    \ result=()\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local c\n    local count\n    for word in $str; do\n        count=0\n  \
    \      for ((i=0; i<${#word}; i++)); do\n            c=${word:$i:1}\n        \
    \    if [[ $vowels =~ $c ]]; then\n                continue\n            fi\n\
    \            if [[ $consonants =~ $c ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n        if [[ $count -eq $num ]]; then\n      \
    \      result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo $word | sed 's/[aeiou]//g' | wc -c)\n        if [ $consonants\
    \ -eq $n ]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n\
    \    local word\n    local consonants\n    for word in $str; do\n        consonants=$(echo\
    \ \"$word\" | tr -cd '[bcdfghjklmnpqrstvwxyz]' | wc -c)\n        if [ \"$consonants\"\
    \ -eq \"$n\" ]; then\n            words+=(\"$word\")\n        fi\n    done\n \
    \   echo \"${words[@]}\"", "    local s=$1\n    local n=$2\n    local words=()\n\
    \    local word=\"\"\n    local consonants=0\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local vowels=(\"a\" \"e\" \"\
    i\" \"o\" \"u\")\n    for ((i=0; i<${#s}; i++)); do\n        if [[ ${s:$i:1} ==\
    \ \" \" ]]; then\n            if [[ $consonants -eq $n ]]; then\n            \
    \    words[$j]=$word\n                j=$((j+1))\n            fi\n           \
    \ word=\"\"\n            consonants=0\n        else\n            word=\"$word${s:$i:1}\"\
    \n            for ((k=0; k<${#vowels[@]}; k++)); do\n                if [[ ${s:$i:1}\
    \ == ${vowels[$k]} ]]; then\n                    consonants=$((consonants+1))\n\
    \                fi\n            done\n        fi\n    done\n    if [[ $consonants\
    \ -eq $n ]]; then\n        words[$j]=$word\n    fi\n    echo ${words[@]}", " \
    \   local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=0\n        for ((i=0;\
    \ i<${#word}; i++)); do\n            local char=${word:$i:1}\n            if [[\
    \ $char =~ [^aeiouAEIOU] ]]; then\n                ((count++))\n            fi\n\
    \        done\n        if [[ $count -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "    local str=\"$1\"\n   \
    \ local num=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local c=0\n    local letter=\"\"\n  \
    \  local vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local consonants=(\"b\" \"\
    c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"r\" \"\
    s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\")\n    for ((i=0; i<${#str}; i++)); do\n\
    \        if [[ \"${str:$i:1}\" == \" \" ]]; then\n            if [[ \"$word\"\
    \ != \"\" ]]; then\n                consonants=0\n                for ((j=0; j<${#word};\
    \ j++)); do\n                    letter=\"${word:$j:1}\"\n                   \
    \ for ((k=0; k<${#vowels[@]}; k++)); do\n                        if [[ \"$letter\"\
    \ == \"${vowels[$k]}\" ]]; then\n                            ((vowels[$k]++))\n\
    \                        fi\n                    done\n                    for\
    \ ((l=0; l<${#consonants[@]}; l++)); do\n                        if [[ \"$letter\"\
    \ == \"${consonants[$l]}\" ]]; then\n                            ((consonants[$l]++))\n\
    \                        fi\n                    done\n                done\n\
    \                for ((m=0; m<${#vowels[@]}; m++)); do\n                   ",
  "    local string=$1\n    local num=$2\n    local words=($string)\n    local result=()\n\
    \    local word\n    local count\n    for word in \"${words[@]}\"; do\n      \
    \  count=0\n        for ((i=0; i<${#word}; i++)); do\n            if [[ \"${word:$i:1}\"\
    \ =~ [^aeiou] ]]; then\n                ((count++))\n            fi\n        done\n\
    \        if [[ $count -eq $num ]]; then\n            result+=(\"$word\")\n   \
    \     fi\n    done\n    echo \"${result[@]}\"", "    local -a words\n    local\
    \ -i i=0\n    local -i n=$2\n    local -i len=0\n    local -i consonants=0\n \
    \   local -i vowels=0\n    local -i index=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i e=0\n    local -i i=0\n    local -i o=0\n    local -i u=0\n\
    \    local -i space=0\n    local -i letter=0\n    local -i word=0\n    local -i\
    \ word_len=0\n    local -i word_consonants=0\n    local -i word_vowels=0\n   \
    \ local -i word_index=0\n    local -i word_j=0\n    local -i word_k=0\n    local\
    \ -i word_l=0\n    local -i word_m=0\n    local -i word_p=0\n    local -i word_q=0\n\
    \    local -i word_r=0\n    local -i word_s=0\n    local -i word_t=0\n    local\
    \ -i word_u=0\n    local -i word_v=0\n    local -i word_w=0\n    local -i word_x=0\n\
    \    local -i word_y=0\n    local -i word_z=0\n    local -i word_a=0\n    local\
    \ -i word_e=0\n    local -i word_i=0\n    local -i word_o=0\n    local -i word_u=0\n\
    \    local -i word_space=0\n    local -i word_letter=0\n    local -i word_word",
  "    local str=$1\n    local num=$2\n    local words=($str)\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            local char=${word:$i:1}\n            if [[ $char =~ [^aeiou]\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \        if [[ $count -eq $num ]]; then\n            result+=($word)\n       \
    \ fi\n    done\n    echo ${result[@]}", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"Hello world\"", "    local string=$1\n    local num=$2\n\
    \    local words=($string)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $num ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n\
    \    local word=\"\"\n    local consonants=0\n    local i=0\n    local j=0\n \
    \   local len=0\n    local char=\"\"\n    local vowels=\"aeiou\"\n    local vowel=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_space=0\n    local\
    \ is_letter=0\n    local is_word=0\n    local is_consonant_word=0\n    local is_vowel_word=0\n\
    \    local is_word_end=0\n    local is_word_start=0\n    local is_word_start_or_end=0\n\
    \    local is_word_start_or_end_or_space=0\n    local is_word_start_or_end_or_space_or_letter=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_vowel=0\n    local is_word_start_or_end_or_space_or_letter_or_vowel_or_consonant=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_vowel_or_consonant_or_word=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_vowel_or_consonant_or_word_or_consonant_word=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_vowel_or_consonant_or_word_or_consonant_word_or_vowel_word=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_vowel_or_consonant_or_word_or_consonant_word_or_vowel_word_or_word_end=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_vowel_or_consonant_or_word_",
  "    local str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local cons=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            local c=${word:$i:1}\n            if [[ $c =~ [^aeiouAEIOU]\
    \ ]]; then\n                (( cons++ ))\n            fi\n        done\n     \
    \   if [[ $cons -eq $n ]]; then\n            result+=($word)\n        fi\n   \
    \ done\n    echo ${result[@]}", "    local words=($1)\n    local n=$2\n    local\
    \ result=()\n    local word\n    local consonants\n    for word in \"${words[@]}\"\
    ; do\n        consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n\
    \        if [ $consonants -eq $n ]; then\n            result+=($word)\n      \
    \  fi\n    done\n    echo ${result[@]}", "    local -a words=($1)\n    local -a\
    \ result=()\n    for word in \"${words[@]}\"; do\n        if [[ $(echo $word |\
    \ grep -o '[^aeiouAEIOU]' | wc -l) -eq $2 ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local num=$2\n\
    \    local arr=()\n    local word=''\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local len=0\n    local char=''\n    local vowels='aeiou'\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_space=0\n    local\
    \ is_letter=0\n    local is_word=0\n    local is_word_start=0\n    local is_word_end=0\n\
    \    local is_word_found=0\n    local is_word_found_count=0\n    local is_word_found_count_match=0\n\
    \    local is_word_found_count_match_count=0\n    local is_word_found_count_match_count_match=0\n\
    \    local is_word_found_count_match_count_match_count=0\n    local is_word_found_count_match_count_match_count_match=0\n\
    \    local is_word_found_count_match_count_match_count_match_count=0\n    local\
    \ is_word_found_count_match_count_match_count_match_count_match=0\n    local is_word_found_count_match_count_match_count_match_count_match_count=0\n\
    \    local is_word_found_count_match_count_match_count_match_count_match_count_match=0\n\
    \    local is_word_found_count_match_count_match_count_match_count_match_count_match_count=0\n\
    \    local is_word_found_count_match_count_match_count_match_count_match_count_match_count_match=0\n\
    \    local is_word_found_count_match_count_match_count_match_count_match_count_match_count_match_count=0\n\
    \    local is_word_found_count_match_count_match_count_match_count_match_count_match_count_match_count_match=0\n\
    \    local is_word_found_count_match_count_match_count", "    local str=\"$1\"\
    \n    local n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=\"\
    bcdfghjklmnpqrstvwxyz\"\n    local consonant=\"\"\n    local counter=0\n    local\
    \ i=0\n    local j=0\n    local len=0\n    local len2=0\n    local len3=0\n  \
    \  local len4=0\n    local len5=0\n    local len6=0\n    local len7=0\n    local\
    \ len8=0\n    local len9=0\n    local len10=0\n    local len11=0\n    local len12=0\n\
    \    local len13=0\n    local len14=0\n    local len15=0\n    local len16=0\n\
    \    local len17=0\n    local len18=0\n    local len19=0\n    local len20=0\n\
    \    local len21=0\n    local len22=0\n    local len23=0\n    local len24=0\n\
    \    local len25=0\n    local len26=0\n    local len27=0\n    local len28=0\n\
    \    local len29=0\n    local len30=0\n    local len31=0\n    local len32=0\n\
    \    local len33=0\n    local len34=0\n    local len35=0\n    local len36=0\n\
    \    local len37=0\n    local len38=0\n    local len39=0\n    local len40=0\n\
    \    local len41=0\n    local len42=0\n    local len43=0\n    local len44=0\n\
    \    local len45=0\n    local len46=0\n    local len47=0\n    local len48=0\n\
    \    local len49=0\n    local len50=0\n    local len51=0\n    local len52=0\n\
    \    local len53=0\n    local len54=0\n    local len55=0\n    local len56=0\n\
    \    local len57=0\n    local len58=0\n    local len59=0\n    local len60=0\n\
    \    local len61=0\n    local len62=0\n    local len63=0", "    local string=$1\n\
    \    local n=$2\n    local words=$(echo $string | tr ' ' '\\n')\n    local result=()\n\
    \    for word in $words; do\n        local count=$(echo $word | sed 's/[^aeiou]//g'\
    \ | wc -c)\n        if [ $count -eq $n ]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo ${result[@]}", "  local str=$1\n  local n=$2\n\
    \  local words=($str)\n  local result=()\n  for word in \"${words[@]}\"; do\n\
    \    local count=0\n    for (( i=0; i<${#word}; i++ )); do\n      local char=${word:$i:1}\n\
    \      if [[ $char =~ [^aeiou] ]]; then\n        count=$((count+1))\n      fi\n\
    \    done\n    if [ $count -eq $n ]; then\n      result+=($word)\n    fi\n  done\n\
    \  echo ${result[@]}", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
    \            if [[ $char =~ [^aeiou] ]]; then\n                ((count++))\n \
    \           fi\n        done\n        if [ $count -eq $n ]; then\n           \
    \ result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local str=\"\
    $1\"\n    local num=\"$2\"\n    local words\n    local word\n    local count\n\
    \    local result\n    words=($(echo \"$str\" | tr ' ' '\\n'))\n    for word in\
    \ \"${words[@]}\"; do\n        count=$(echo \"$word\" | grep -o '[^aeiouAEIOU]'\
    \ | wc -l)\n        if [[ \"$count\" -eq \"$num\" ]]; then\n            result+=(\"\
    $word\")\n        fi\n    done\n    echo \"${result[@]}\"", "    # Write your\
    \ code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    echo \"Hello world\"", "    local str=\"\
    $1\"\n    local n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local i=0\n    local len=0\n    local c=\"\"\n    local is_consonant=0\n\
    \    local is_space=0\n    local is_letter=0\n    local is_consonant_counted=0\n\
    \    local is_word_added=0\n    local is_word_added_to_words=0\n    local is_word_added_to_words_counted=0\n\
    \    local is_word_added_to_words_counted_counted=0\n    local is_word_added_to_words_counted_counted_counted=0\n\
    \    local is_word_added_to_words_counted_counted_counted_counted=0\n    local\
    \ is_word_added_to_words_counted_counted_counted_counted_counted=0\n    local\
    \ is_word_added_to_words_counted_counted_counted_counted_counted_counted=0\n \
    \   local is_word_added_to_words_counted_counted_counted_counted_counted_counted_counted=0\n\
    \    local is_word_added_to_words_counted_counted_counted_counted_counted_counted_counted_counted=0\n\
    \    local is_word_added_to_words_counted_counted_counted_counted_counted_counted_counted_counted_counted=0\n\
    \    local is_word_added_to_words_counted_counted_counted_counted_counted_counted_counted_counted_counted_counted=0\n\
    \    local is_word_added_to_words_counted_counted_counted_counted_counted_counted_counted_counted_counted_counted_counted=0\n\
    \    local is_word_added_to_words_counted_counted_counted_counted_counted_counted_counted_counted_counted_counted_counted_",
  "    local string=$1\n    local number=$2\n    local words=($string)\n    local\
    \ result=()\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local vowels=\"\
    aeiou\"\n    local word\n    local consonant_count\n    local letter\n    for\
    \ word in \"${words[@]}\"; do\n        consonant_count=0\n        for letter in\
    \ $(echo $word | grep -o .); do\n            if [[ $consonants =~ $letter ]];\
    \ then\n                consonant_count=$((consonant_count + 1))\n           \
    \ fi\n        done\n        if [[ $consonant_count -eq $number ]]; then\n    \
    \        result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local -a words=($1)\n    local -a result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed 's/[aeiouAEIOU]//g'\
    \ | wc -c)\n        if [ $consonants -eq $2 ]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"", "    local s=$1\n    local\
    \ n=$2\n    local words=($s)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for (( i=0; i<${#word}; i++ )); do\n    \
    \        local c=${word:$i:1}\n            if [[ $c =~ [^aeiou] ]]; then\n   \
    \             (( count++ ))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    for word in \"${words[@]}\"; do\n        local consonants=$(echo\
    \ $word | grep -o -i '[bcdfghjklmnpqrstvwxyz]' | wc -l)\n        if [ $consonants\
    \ -eq $n ]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local str=$1\n    local n=$2\n    local words=(${str// /\
    \ })\n    local result=()\n    for word in ${words[@]}; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
    \            if [[ $char =~ [^aeiou] ]]; then\n                ((count++))\n \
    \           fi\n        done\n        if [[ $count -eq $n ]]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ s=$1\n    local n=$2\n    local words=($s)\n    local result=()\n    local word\n\
    \    local consonants\n    for word in \"${words[@]}\"; do\n        consonants=$(echo\
    \ $word | sed -e 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $n ]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local str=$1\n    local num=$2\n    local words=($str)\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g' | wc -c)\n      \
    \  if [ $consonants -eq $num ]; then\n            result+=(\"$word\")\n      \
    \  fi\n    done\n    echo \"${result[@]}\"", "    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for (( i=0; i<${#word}; i++ )); do\n    \
    \        local char=${word:$i:1}\n            if [[ \"$char\" =~ [bcdfghjklmnpqrstvwxyz]\
    \ ]]; then\n                ((count++))\n            fi\n        done\n      \
    \  if [[ $count -eq $n ]]; then\n            result+=(\"$word\")\n        fi\n\
    \    done\n    echo \"${result[@]}\"", "    local str=$1\n    local n=$2\n   \
    \ local words=()\n    local word=\"\"\n    local consonants=0\n    local i=0\n\
    \    local c=\"\"\n    local vowels=\"aeiou\"\n    local is_vowel=0\n    local\
    \ is_consonant=0\n    local is_space=0\n    local is_letter=0\n    local is_word=0\n\
    \    local is_consonant_word=0\n    local is_consonant_word_found=0\n    local\
    \ is_consonant_word_found_prev=0\n    local is_consonant_word_found_curr=0\n \
    \   local is_consonant_word_found_next=0\n    local is_consonant_word_found_next_next=0\n\
    \    local is_consonant_word_found_next_next_next=0\n    local is_consonant_word_found_next_next_next_next=0\n\
    \    local is_consonant_word_found_next_next_next_next_next=0\n    local is_consonant_word_found_next_next_next_next_next_next=0\n\
    \    local is_consonant_word_found_next_next_next_next_next_next_next=0\n    local\
    \ is_consonant_word_found_next_next_next_next_next_next_next_next=0\n    local\
    \ is_consonant_word_found_next_next_next_next_next_next_next_next_next=0\n   \
    \ local is_consonant_word_found_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local is_consonant_word_found_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local is_consonant_word_found_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local is_consonant_word_found_next_next_next_next_next_next_next_next_next_next_next",
  "    local -a words=($1)\n    local -a result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed -e\
    \ 's/[aeiou]//gi' | wc -m)\n        if [ $consonants -eq $2 ]; then\n        \
    \    result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"", " \
    \ local str=$1\n  local n=$2\n  local words=($str)\n  local result=()\n  for word\
    \ in \"${words[@]}\"; do\n    local count=0\n    for ((i=0; i<${#word}; i++));\
    \ do\n      local char=${word:$i:1}\n      if [[ $char =~ [^aeiou] ]]; then\n\
    \        ((count++))\n      fi\n    done\n    if [[ $count -eq $n ]]; then\n \
    \     result+=(\"$word\")\n    fi\n  done\n  echo \"${result[@]}\"", "    local\
    \ str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n    local\
    \ word\n    local consonants\n    for word in \"${words[@]}\"; do\n        consonants=$(echo\
    \ $word | sed 's/[aeiou]//g')\n        if [[ ${#consonants} -eq $n ]]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"",
  "    local string=$1\n    local n=$2\n    local words=$(echo \"$string\" | tr '\
    \ ' '\\n')\n    local result=()\n    for word in $words; do\n        local consonants=$(echo\
    \ \"$word\" | sed -E 's/[aeiou]//g')\n        if [ ${#consonants} -eq $n ]; then\n\
    \            result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # Example: echo \"Hello world\"\n  echo \"Hello world\"", "    local\
    \ string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=0\n        for ((i=0;\
    \ i<${#word}; i++)); do\n            local char=${word:$i:1}\n            if [[\
    \ $char =~ [aeiou] ]]; then\n                continue\n            else\n    \
    \            ((count++))\n            fi\n        done\n        if [[ $count -eq\
    \ $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word=\"\
    \"\n    local consonants=0\n    local i=0\n    local c=0\n    local len=0\n  \
    \  local is_consonant=0\n    local is_space=0\n    local is_letter=0\n    local\
    \ is_word=0\n    local is_consonant_count=0\n    local is_word_count=0\n    local\
    \ is_word_start=0\n    local is_word_end=0\n    local is_word_start_count=0\n\
    \    local is_word_end_count=0\n    local is_word_start_index=0\n    local is_word_end_index=0\n\
    \    local is_word_start_index_count=0\n    local is_word_end_index_count=0\n\
    \    local is_word_start_index_list=()\n    local is_word_end_index_list=()\n\
    \    local is_word_start_index_list_count=0\n    local is_word_end_index_list_count=0\n\
    \    local is_word_start_index_list_count_index=0\n    local is_word_end_index_list_count_index=0\n\
    \    local is_word_start_index_list_count_index_value=0\n    local is_word_end_index_list_count_index_value=0\n\
    \    local is_word_start_index_list_count_index_value_count=0\n    local is_word_end_index_list_count_index_value_count=0\n\
    \    local is_word_start_index_list_count_index_value_count_index=0\n    local\
    \ is_word_end_index_list_count_index_value_count_index=0\n    local is_word_start_index_list_count_index_value_count_index_value=0\n\
    \    local is_word_end_index_list_count_index_value_count_index_value=0\n    local\
    \ is_word_start_index_list_count_index_value_count_index_value_count=0", "   \
    \ local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word=\"\"\
    \n    local consonants=0\n    local char=\"\"\n    local vowels=\"aeiou\"\n  \
    \  local i=0\n    local j=0\n    local k=0\n    local len=0\n    local len_vowels=0\n\
    \    local len_words=0\n    local len_word=0\n    local is_vowel=0\n    local\
    \ is_consonant=0\n    local is_space=0\n    local is_word=0\n    local is_consonant_count=0\n\
    \    local is_consonant_count_word=0\n    local is_consonant_count_words=0\n \
    \   local is_consonant_count_words_word=0\n    local is_consonant_count_words_words=0\n\
    \    local is_consonant_count_words_words_word=0\n    local is_consonant_count_words_words_words=0\n\
    \    local is_consonant_count_words_words_words_word=0\n    local is_consonant_count_words_words_words_words=0\n\
    \    local is_consonant_count_words_words_words_words_word=0\n    local is_consonant_count_words_words_words_words_words=0\n\
    \    local is_consonant_count_words_words_words_words_words_word=0\n    local\
    \ is_consonant_count_words_words_words_words_words_words=0\n    local is_consonant_count_words_words_words_words_words_words_word=0\n\
    \    local is_consonant_count_words_words_words_words_words_words_words=0\n  \
    \  local is_consonant_count_words_words_words_words_words_words_words_word=0\n\
    \    local is_consonant_count_words_words_words_words_words_words_words_words=0\n\
    \    local is_consonant_count_words_words_words_words_words_words_words_words_word=",
  "    local string=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word\n\
    \    local consonants\n    local i\n    local j\n    local c\n    local vowels=\"\
    aeiou\"\n    for word in $string; do\n        consonants=0\n        for ((i=0;\
    \ i<${#word}; i++)); do\n            c=${word:$i:1}\n            for ((j=0; j<${#vowels};\
    \ j++)); do\n                if [[ $c == ${vowels:$j:1} ]]; then\n           \
    \         break\n                fi\n            done\n            if [[ $j -eq\
    \ ${#vowels} ]]; then\n                consonants=$((consonants+1))\n        \
    \    fi\n        done\n        if [[ $consonants -eq $n ]]; then\n           \
    \ words+=(\"$word\")\n        fi\n    done\n    echo \"${words[@]}\"", "    local\
    \ str=$1\n    local num=$2\n    local words=($str)\n    local result=()\n    for\
    \ word in ${words[@]}; do\n        local count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            local char=${word:$i:1}\n            if [[ $char =~ [^aeiou]\
    \ ]]; then\n                ((count++))\n            fi\n        done\n      \
    \  if [[ $count -eq $num ]]; then\n            result+=($word)\n        fi\n \
    \   done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local char=${word:$i:1}\n            if [[ $char =~ [^aeiouAEIOU] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local s=$1\n    local n=$2\n    local words=($s)\n \
    \   local result=()\n    for word in \"${words[@]}\"; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
    \            if [[ $char =~ [^aeiou] ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n        if [[ $count -eq $n ]]; then\n        \
    \    result+=($word)\n        fi\n    done\n    echo \"${result[@]}\"", "    local\
    \ string=$1\n    local number=$2\n    local words=($string)\n    local result=()\n\
    \    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for (( i=0; i<${#word}; i++ )); do\n    \
    \        local letter=${word:$i:1}\n            if [[ $consonants =~ $letter ]];\
    \ then\n                count=$((count+1))\n            fi\n        done\n   \
    \     if [[ $count -eq $number ]]; then\n            result+=($word)\n       \
    \ fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local number=$2\n\
    \    local words=($string)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local consonants=$(echo $word | tr -d -c '[bcdfghjklmnpqrstvwxz]')\n\
    \        if [ ${#consonants} -eq $number ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local string=$1\n    local\
    \ n=$2\n    local words\n    local word\n    local consonants\n    local consonant\n\
    \    local result\n    words=($string)\n    for word in \"${words[@]}\"; do\n\
    \        consonants=0\n        for consonant in {b..d}{b..d}{b..d}; do\n     \
    \       if [[ $word =~ $consonant ]]; then\n                consonants=$((consonants\
    \ + 1))\n            fi\n        done\n        if [[ $consonants -eq $n ]]; then\n\
    \            result+=\"$word \"\n        fi\n    done\n    echo \"$result\"",
  "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word=''\n\
    \    local consonants=0\n    local char=''\n    local i=0\n    local j=0\n   \
    \ local len=0\n    local len2=0\n    local is_consonant=0\n    local is_space=0\n\
    \    local is_letter=0\n    local is_consonant_char=0\n    local is_space_char=0\n\
    \    local is_letter_char=0\n    local is_consonant_word=0\n    local is_space_word=0\n\
    \    local is_letter_word=0\n    local is_consonant_str=0\n    local is_space_str=0\n\
    \    local is_letter_str=0\n    local is_consonant_n=0\n    local is_space_n=0\n\
    \    local is_letter_n=0\n    local is_consonant_words=0\n    local is_space_words=0\n\
    \    local is_letter_words=0\n    local is_consonant_word=0\n    local is_space_word=0\n\
    \    local is_letter_word=0\n    local is_consonant_char=0\n    local is_space_char=0\n\
    \    local is_letter_char=0\n    local is_consonant_i=0\n    local is_space_i=0\n\
    \    local is_letter_i=0\n    local is_consonant_j=0\n    local is_space_j=0\n\
    \    local is_letter_j=0\n    local is_consonant_len=0\n    local is_space_len=0\n\
    \    local is_letter_len=0\n    local is_consonant_len2=0\n    local is_space_len2=0\n\
    \    local is_letter_len2=0\n    local is_consonant_is_consonant=0\n    local\
    \ is_space_is_consonant=0\n    local is_letter_is_consonant=0\n    local is_consonant_is_space=0\n\
    \    local is_space_", "    local -a words=($1)\n    local -a result=()\n    local\
    \ word\n    local consonants\n    for word in \"${words[@]}\"; do\n        consonants=$(echo\
    \ \"$word\" | tr -cd '[bcdfghjklmnpqrstvwxz]' | wc -c)\n        if [ \"$consonants\"\
    \ -eq \"$2\" ]; then\n            result+=(\"$word\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"", "    local str=$1\n    local n=$2\n    local words=$(echo\
    \ $str | tr ' ' '\\n')\n    local result=()\n    for word in $words; do\n    \
    \    local count=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n    \
    \    if [ $count -eq $n ]; then\n            result+=(\"$word\")\n        fi\n\
    \    done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=()\n    local word\n    local consonants\n    local consonant\n    local\
    \ vowels=('a' 'e' 'i' 'o' 'u')\n    for word in $string; do\n        consonants=0\n\
    \        for consonant in {a..z}; do\n            if [[ $word == *$consonant*\
    \ ]]; then\n                if [[ ! \" ${vowels[@]} \" =~ \" ${consonant} \" ]];\
    \ then\n                    consonants=$((consonants+1))\n                fi\n\
    \            fi\n        done\n        if [[ $consonants -eq $n ]]; then\n   \
    \         words+=($word)\n        fi\n    done\n    echo ${words[@]}", "    local\
    \ str=\"$1\"\n    local num=\"$2\"\n    local words=()\n    local word\n    local\
    \ count\n    local i\n    local char\n    local vowels=\"aeiou\"\n    local consonants=\"\
    bcdfghjklmnpqrstvwxyz\"\n    for word in $str; do\n        count=0\n        for\
    \ ((i=0; i<${#word}; i++)); do\n            char=\"${word:$i:1}\"\n          \
    \  if [[ $vowels =~ $char ]]; then\n                continue\n            elif\
    \ [[ $consonants =~ $char ]]; then\n                ((count++))\n            fi\n\
    \        done\n        if [[ $count -eq $num ]]; then\n            words+=(\"\
    $word\")\n        fi\n    done\n    echo \"${words[@]}\"", "    local str=\"$1\"\
    \n    local n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local char=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local e=0\n    local i=0\n    local o=0\n    local u=0\n    local space=0\n\
    \    local len=0\n    local len_str=0\n    local len_word=0\n    local len_words=0\n\
    \    local len_char=0\n    local len_consonants=0\n    local len_words=0\n   \
    \ local len_word=0\n    local len_char=0\n    local len_consonants=0\n    local\
    \ len_words=0\n    local len_word=0\n    local len_char=0\n    local len_consonants=0\n\
    \    local len_words=0\n    local len_word=0\n    local len_char=0\n    local\
    \ len_consonants=0\n    local len_words=0\n    local len_word=0\n    local len_char=0\n\
    \    local len_consonants=0\n    local len_words=0\n    local len_word=0\n   \
    \ local len_char=0\n    local len_consonants=0\n    local len_words=0\n    local\
    \ len_word=0\n    local len_char=0\n    local len_consonants=0\n    local len_words=0\n\
    \    local len_word=0\n    local len_char=0\n    local len_consonants=0\n    local\
    \ len_words=0\n    local len_word=0\n    local len_char=0\n    local len_consonants=0\n\
    \    local len_words=0\n", "    local s=$1\n    local n=$2\n    local words=($s)\n\
    \    local result=()\n    local word\n    local consonants\n    for word in \"\
    ${words[@]}\"; do\n        consonants=$(echo $word | sed 's/[aeiou]//g')\n   \
    \     if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n      \
    \  fi\n    done\n    echo ${result[@]}", "    local s=$1\n    local n=$2\n   \
    \ local words=($s)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n        if [\
    \ ${#consonants} -eq $n ]; then\n            result+=($word)\n        fi\n   \
    \ done\n    echo ${result[@]}", "    local -a words=($1)\n    local -a result=()\n\
    \    local word\n    local count\n    for word in \"${words[@]}\"; do\n      \
    \  count=0\n        for ((i=0; i<${#word}; i++)); do\n            [[ \"${word:$i:1}\"\
    \ =~ [^aeiou] ]] && ((count++))\n        done\n        [[ $count -eq $2 ]] &&\
    \ result+=(\"$word\")\n    done\n    echo \"${result[@]}\"", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    local word\n\
    \    local consonants\n    for word in \"${words[@]}\"; do\n        consonants=$(echo\
    \ $word | sed 's/[aeiouAEIOU]//g' | wc -c)\n        if [ $consonants -eq $n ];\
    \ then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local string=$1\n    local num=$2\n    local words=()\n    local word=''\n\
    \    local consonants=0\n    local i=0\n    local char=''\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local is_vowel=0\n    local is_space=0\n    local is_letter=0\n\
    \    for ((i=0; i<${#string}; i++)); do\n        char=${string:$i:1}\n       \
    \ is_vowel=0\n        is_space=0\n        is_letter=0\n        for vowel in ${vowels[@]};\
    \ do\n            if [[ $char == $vowel ]]; then\n                is_vowel=1\n\
    \                break\n            fi\n        done\n        if [[ $char == '\
    \ ' ]]; then\n            is_space=1\n        fi\n        if [[ $is_vowel -eq\
    \ 0 && $is_space -eq 0 ]]; then\n            is_letter=1\n        fi\n       \
    \ if [[ $is_letter -eq 1 ]]; then\n            word+=$char\n        fi\n     \
    \   if [[ $is_space -eq 1 ]]; then\n            consonants=0\n            for\
    \ ((j=0; j<${#word}; j++)); do\n                char=${word:$j:1}\n          \
    \      is_vowel=0\n                for vowel in ${vowels[@]}; do\n           \
    \         if [[ $char == $vowel ]]; then\n                        is_vowel=1\n\
    \                        break\n                    fi\n                done\n\
    \                if [[ $is_vowel -eq 0 ]]; then\n                    consonants=$((consonants+1))\n\
    \                fi\n            done\n            if [[ $consonants -eq $num\
    \ ]]; then\n                words+=($word)\n            fi\n            word=''\n\
    \        fi\n    done\n    consonants=0\n    for ((j=0; j<${#word}; j++)); do\n\
    \        char=${word:$j:1}\n        is_vowel=0\n        for vowel in ${vowels[@]};\
    \ do\n            if [[ $char == $v", "    local s=$1\n    local n=$2\n    local\
    \ words=$(echo $s | tr ' ' '\\n')\n    local result=()\n    for word in $words;\
    \ do\n        local consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo ${result[@]}", "    # your code here\n    echo\
    \ \"Not implemented\"", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    local word\n    local consonants\n    for word in \"\
    ${words[@]}\"; do\n        consonants=$(echo $word | tr -cd '[bcdfghjklmnpqrstvwxyz]'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local str=$1\n    local n=$2\n\
    \    local words=($str)\n    local result=()\n    for word in ${words[@]}; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local char=${word:$i:1}\n            if [[ $char =~ [^aeiouAEIOU] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    if [[ -z $1 ]]; then\n        echo \"[]\"\n        return\n\
    \    fi\n    local words=($1)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        if [[ $(echo $word | grep -o '[^aeiouAEIOU ]' | wc -l) -eq $2 ]];\
    \ then\n            result+=($word)\n        fi\n    done\n    echo \"[${result[@]}]\"",
  "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word=\"\
    \"\n    local consonants=0\n    local is_consonant=0\n    local is_vowel=0\n \
    \   local vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local len=0\n    local len_vowels=0\n    local len_str=0\n  \
    \  local len_word=0\n    local len_words=0\n    local len_words_minus_1=0\n  \
    \  local is_space=0\n    local is_letter=0\n    local is_word=0\n    local is_word_end=0\n\
    \    local is_word_start=0\n    local is_word_start_or_end=0\n    local is_word_start_or_end_or_space=0\n\
    \    local is_word_start_or_end_or_space_or_letter=0\n    local is_word_start_or_end_or_space_or_letter_or_consonant=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel=0\n \
    \   local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word_or_word_end=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_",
  "    local str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo $word | sed -e 's/[aeiouAEIOU]//g' | wc -c)\n      \
    \  if [ $consonants -eq $n ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}", "    local str=\"$1\"\n    local n=\"$2\"\n\
    \    local words\n    local word\n    local consonants\n    local c\n    local\
    \ result\n    words=($(echo \"$str\" | tr ' ' '\\n'))\n    for word in \"${words[@]}\"\
    ; do\n        consonants=0\n        for ((i=0; i<${#word}; i++)); do\n       \
    \     c=\"${word:$i:1}\"\n            if [[ \"$c\" =~ [^aeiou] ]]; then\n    \
    \            consonants=$((consonants+1))\n            fi\n        done\n    \
    \    if [[ \"$consonants\" -eq \"$n\" ]]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"", "    echo $1 | tr ' ' '\\\
    n' | grep -E \"^[^aeiou]{$2}$\"", "    local str=$1\n    local n=$2\n    local\
    \ words=($str)\n    local result=()\n    for word in ${words[@]}; do\n       \
    \ local count=0\n        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
    \            if [[ $char =~ [^aeiou] ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n        if [ $count -eq $n ]; then\n          \
    \  result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n\
    \    local n=$2\n    local words=($string)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        if [[ $(echo $word | grep -o '[^aeiouAEIOU]'\
    \ | wc -l) -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "    local str=$1\n    local num=$2\n    local words=()\n\
    \    local word=''\n    local consonants=0\n    local char=''\n    for (( i=0;\
    \ i<${#str}; i++ )); do\n        char=${str:$i:1}\n        if [[ $char =~ [^aeiouAEIOU\
    \ ] ]]; then\n            consonants=$(( consonants + 1 ))\n        fi\n     \
    \   if [[ $char =~ [a-zA-Z] ]]; then\n            word=\"$word$char\"\n      \
    \  else\n            if [[ $consonants -eq $num ]]; then\n                words+=(\"\
    $word\")\n            fi\n            word=''\n            consonants=0\n    \
    \    fi\n    done\n    if [[ $consonants -eq $num ]]; then\n        words+=(\"\
    $word\")\n    fi\n    echo \"${words[@]}\"", "    local s=$1\n    local n=$2\n\
    \    local words=($s)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n    \
    \            count=$((count+1))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local -a words=($1)\n    local -a result=()\n    for\
    \ word in \"${words[@]}\"; do\n        if [[ $(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c) -eq $2 ]]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "    local string=$1\n    local number=$2\n    local\
    \ result=()\n    local word\n    for word in $string; do\n        if [[ $(echo\
    \ $word | grep -o '[^aeiouAEIOU]' | wc -l) -eq $number ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local str=\"$1\"\n    local\
    \ n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local i=0\n    local j=0\n    local len=0\n    local c=\"\"\n    local vowels=\"\
    aeiou\"\n    local is_vowel=0\n    local is_consonant=0\n    local is_space=0\n\
    \    local is_letter=0\n    local is_word=0\n    local is_consonant_word=0\n \
    \   local is_word_end=0\n    local is_word_start=0\n    local is_word_start_or_end=0\n\
    \    local is_word_start_or_end_or_space=0\n    local is_word_start_or_end_or_space_or_letter=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant=0\n    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word_or_consonant_word=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word_or_consonant_word_or_is_word_end=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word_or_consonant_word_or_is_word_end_or_is_word_start=0\n\
    \    local is_word_start_or_end_or_space_or_letter_or_consonant_or_vowel_or_word_or_consonant_word_or_is_word_end_",
  "    local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=0\n        for ((i=0;\
    \ i<${#word}; i++)); do\n            local c=${word:$i:1}\n            if [[ $c\
    \ =~ [^aeiouAEIOU] ]]; then\n                ((count++))\n            fi\n   \
    \     done\n        if [[ $count -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "  local -a words=($(echo $1\
    \ | tr ' ' '\\n'))\n  local -a result=()\n  local word\n  local consonants\n \
    \ for word in \"${words[@]}\"; do\n    consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n    if [ $consonants -eq $2 ]; then\n      result+=($word)\n    fi\n\
    \  done\n  echo ${result[@]}", "  local str=\"$1\"\n  local n=\"$2\"\n  local\
    \ words=()\n  local word=\"\"\n  local consonants=\"\"\n  local consonant=\"\"\
    \n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local char=\"\"\n  local word_consonants=\"\"\n  local word_consonant=\"\"\n\
    \  local word_consonant_count=0\n  local word_consonant_count_str=\"\"\n  local\
    \ word_consonant_count_str_len=0\n  local word_consonant_count_str_len_str=\"\"\
    \n  local word_consonant_count_str_len_str_len=0\n  local word_consonant_count_str_len_str_len_str=\"\
    \"\n  local word_consonant_count_str_len_str_len_str_len=0\n  local word_consonant_count_str_len_str_len_str_len_str=\"\
    \"\n  local word_consonant_count_str_len_str_len_str_len_str_len=0\n  local word_consonant_count_str_len_str_len_str_len_str_len_str=\"\
    \"\n  local word_consonant_count_str_len_str_len_str_len_str_len_str_len=0\n \
    \ local word_consonant_count_str_len_str_len_str_len_str_len_str_len_str=\"\"\n\
    \  local word_consonant_count_str_len_str_len_str_len_str_len_str_len_str_len=0\n\
    \  local word_consonant_count_str_len_str_len_str_len_str_len_str_len_str_len_str",
  "    local str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local consonants=$(echo $word | sed\
    \ 's/[aeiouAEIOU]//g')\n        if [ ${#consonants} -eq $n ]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ str=\"$1\"\n    local n=\"$2\"\n    local words\n    local word\n    local consonants\n\
    \    local i\n    local c\n    local result\n    words=($(echo \"$str\" | tr '\
    \ ' '\\n'))\n    for word in \"${words[@]}\"; do\n        consonants=0\n     \
    \   for ((i=0; i<${#word}; i++)); do\n            c=\"${word:$i:1}\"\n       \
    \     if [[ $c =~ [^aeiou] ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        done\n        if [[ $consonants -eq $n ]]; then\n   \
    \         result+=\"$word \"\n        fi\n    done\n    echo \"$result\"", " \
    \   local str=$1\n    local n=$2\n    local words=($str)\n    local result=()\n\
    \    local word\n    local consonants\n    for word in \"${words[@]}\"; do\n \
    \       consonants=$(echo $word | grep -o -E '[^aeiouAEIOU ]' | wc -l)\n     \
    \   if [ $consonants -eq $n ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}", "    local str=$1\n    local n=$2\n    local\
    \ word\n    local result\n    local consonants\n    local vowels=\"aeiou\"\n \
    \   local c\n    for word in $str; do\n        consonants=0\n        for (( i=0;\
    \ i<${#word}; i++ )); do\n            c=${word:$i:1}\n            if [[ $vowels\
    \ != *$c* ]]; then\n                (( consonants++ ))\n            fi\n     \
    \   done\n        if [[ $consonants -eq $n ]]; then\n            result=\"$result\
    \ $word\"\n        fi\n    done\n    echo $result", "    local str=\"$1\"\n  \
    \  local n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local char=\"\"\n    local vowels=\"aeiou\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local len=0\n    local len2=0\n    local len3=0\n    local\
    \ len4=0\n    local len5=0\n    local len6=0\n    local len7=0\n    local len8=0\n\
    \    local len9=0\n    local len10=0\n    local len11=0\n    local len12=0\n \
    \   local len13=0\n    local len14=0\n    local len15=0\n    local len16=0\n \
    \   local len17=0\n    local len18=0\n    local len19=0\n    local len20=0\n \
    \   local len21=0\n    local len22=0\n    local len23=0\n    local len24=0\n \
    \   local len25=0\n    local len26=0\n    local len27=0\n    local len28=0\n \
    \   local len29=0\n    local len30=0\n    local len31=0\n    local len32=0\n \
    \   local len33=0\n    local len34=0\n    local len35=0\n    local len36=0\n \
    \   local len37=0\n    local len38=0\n    local len39=0\n    local len40=0\n \
    \   local len41=0\n    local len42=0\n    local len43=0\n    local len44=0\n \
    \   local len45=0\n    local len46=0\n    local len47=0\n    local len48=0\n \
    \   local len49=0\n    local len50=0\n    local len51=0\n    local len52=0\n \
    \   local len53=0\n    local len54=0\n    local len55=0\n    local len56=0\n \
    \   local len57=0\n    local len58=0\n    local len59=0\n    local len60=0\n \
    \   local len61=0\n    local len62=0\n    local len63=0\n    local len64", " \
    \ local str=\"$1\"\n  local num=\"$2\"\n  local words=()\n  for word in $str;\
    \ do\n    local count=0\n    for ((i=0; i<${#word}; i++)); do\n      if [[ \"\
    ${word:$i:1}\" =~ [^aeiou] ]]; then\n        ((count++))\n      fi\n    done\n\
    \    if [[ $count -eq $num ]]; then\n      words+=(\"$word\")\n    fi\n  done\n\
    \  echo \"${words[@]}\"", "    local -a words\n    local -i i=0\n    local -i\
    \ n=$2\n    local -i consonants=0\n    local -i vowels=0\n    local -a consonants_list=('b'\
    \ 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'z')\n\
    \    local -a vowels_list=('a' 'e' 'i' 'o' 'u' 'y')\n    local -i consonants_list_length=${#consonants_list[@]}\n\
    \    local -i vowels_list_length=${#vowels_list[@]}\n    local -i word_length=0\n\
    \    local -i word_length_max=0\n    local -i word_length_min=0\n    local -i\
    \ word_length_avg=0\n    local -i word_length_sum=0\n    local -i word_length_count=0\n\
    \    local -i word_length_median=0\n    local -i word_length_mode=0\n    local\
    \ -i word_length_mode_count=0\n    local -i word_length_mode_count_max=0\n   \
    \ local -i word_length_mode_count_min=0\n    local -i word_length_mode_count_avg=0\n\
    \    local -i word_length_mode_count_sum=0\n    local -i word_length_mode_count_count=0\n\
    \    local -i word_length_mode_count_median=0\n    local -i word_length_mode_count_mode=0\n\
    \    local -i word_length_mode_count_mode_count=0\n    local -i word_length_mode_count_mode_count_max=0\n\
    \    local -i word_length_mode_count_mode_count_min=0\n    local -i word_length_mode_count_mode_count_avg=0\n\
    \    local -i word_length_mode_count_mode_count_sum=0\n    local -i word_", " \
    \   local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word=\"\
    \"\n    local consonants=0\n    local i=0\n    local c=''\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_space=0\n    local is_letter=0\n    local is_word=0\n    local is_word_end=0\n\
    \    local is_word_start=0\n    local is_word_found=0\n    local is_word_valid=0\n\
    \    local is_word_invalid=0\n    local is_word_invalid_end=0\n    local is_word_invalid_start=0\n\
    \    local is_word_invalid_found=0\n    local is_word_invalid_valid=0\n    local\
    \ is_word_invalid_invalid=0\n    local is_word_invalid_invalid_end=0\n    local\
    \ is_word_invalid_invalid_start=0\n    local is_word_invalid_invalid_found=0\n\
    \    local is_word_invalid_invalid_valid=0\n    local is_word_invalid_invalid_invalid=0\n\
    \    local is_word_invalid_invalid_invalid_end=0\n    local is_word_invalid_invalid_invalid_start=0\n\
    \    local is_word_invalid_invalid_invalid_found=0\n    local is_word_invalid_invalid_invalid_valid=0\n\
    \    local is_word_invalid_invalid_invalid_invalid=0\n    local is_word_invalid_invalid_invalid_invalid_end=0\n\
    \    local is_word_invalid_invalid_invalid_invalid_start=0\n    local is_word_invalid_invalid_invalid_invalid_found=0\n\
    \    local is_word_invalid_invalid_invalid_invalid_valid=0\n    local is_word_invalid_invalid_invalid_invalid_",
  "    local str=\"$1\"\n    local num=\"$2\"\n    local word\n    local count\n \
    \   local result\n    for word in $str; do\n        count=0\n        for (( i=0;\
    \ i<${#word}; i++ )); do\n            if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n        if [[ $count\
    \ -eq $num ]]; then\n            result+=\"$word \"\n        fi\n    done\n  \
    \  echo $result", "    local -a words=($1)\n    local -a result=()\n    local\
    \ word\n    local consonants\n    for word in \"${words[@]}\"; do\n        consonants=$(echo\
    \ $word | tr -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n        if [[ $consonants -eq\
    \ $2 ]]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "  local str=\"$1\"\n  local num=\"$2\"\n  local words=()\n\
    \  local word=''\n  local cons=0\n  local i=0\n  local j=0\n  local len=0\n  local\
    \ c=''\n  local vowels='aeiouAEIOU'\n  local is_vowel=0\n  local is_cons=0\n \
    \ local is_space=0\n  local is_word=0\n  local is_cons_num=0\n  local is_word_end=0\n\
    \  local is_word_start=0\n  local is_word_start_space=0\n  local is_word_end_space=0\n\
    \  local is_word_start_cons=0\n  local is_word_end_cons=0\n  local is_word_start_vowel=0\n\
    \  local is_word_end_vowel=0\n  local is_word_start_cons_num=0\n  local is_word_end_cons_num=0\n\
    \  local is_word_start_cons_num_eq=0\n  local is_word_end_cons_num_eq=0\n  local\
    \ is_word_start_cons_num_gt=0\n  local is_word_end_cons_num_gt=0\n  local is_word_start_cons_num_lt=0\n\
    \  local is_word_end_cons_num_lt=0\n  local is_word_start_cons_num_ge=0\n  local\
    \ is_word_end_cons_num_ge=0\n  local is_word_start_cons_num_le=0\n  local is_word_end_cons_num_le=0\n\
    \  local is_word_start_cons_num_ne=0\n  local is_word_end_cons_num_ne=0\n  local\
    \ is_word_start_cons_num_eq_num=0\n  local is_word_end_cons_num_eq_num=0\n  local\
    \ is_word_start_cons_num_gt_num=0\n  local is_word_end_cons_num_gt_num=0\n  local\
    \ is_word_start_", "    local string=$1\n    local n=$2\n    local words=($string)\n\
    \    local result=()\n    local word\n    local consonants\n    for word in \"\
    ${words[@]}\"; do\n        consonants=$(echo $word | sed -e 's/[aeiou]//g' | wc\
    \ -c)\n        if [[ $consonants -eq $n ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local -a words=($1)\n    local\
    \ -a result=()\n    for word in \"${words[@]}\"; do\n        local -i consonants=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
    \            if [[ $char =~ [^aeiouAEIOU] ]]; then\n                consonants+=1\n\
    \            fi\n        done\n        if [[ $consonants -eq $2 ]]; then\n   \
    \         result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local str=\"$1\"\n    local num=\"$2\"\n    local words=()\n    local word=''\n\
    \    local consonants=0\n    local char=''\n    local vowels=('a' 'e' 'i' 'o'\
    \ 'u')\n    local is_vowel=0\n    local is_consonant=0\n    local is_space=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local len2=0\n\
    \    local len3=0\n    local len4=0\n    local len5=0\n    local len6=0\n    local\
    \ len7=0\n    local len8=0\n    local len9=0\n    local len10=0\n    local len11=0\n\
    \    local len12=0\n    local len13=0\n    local len14=0\n    local len15=0\n\
    \    local len16=0\n    local len17=0\n    local len18=0\n    local len19=0\n\
    \    local len20=0\n    local len21=0\n    local len22=0\n    local len23=0\n\
    \    local len24=0\n    local len25=0\n    local len26=0\n    local len27=0\n\
    \    local len28=0\n    local len29=0\n    local len30=0\n    local len31=0\n\
    \    local len32=0\n    local len33=0\n    local len34=0\n    local len35=0\n\
    \    local len36=0\n    local len37=0\n    local len38=0\n    local len39=0\n\
    \    local len40=0\n    local len41=0\n    local len42=0\n    local len43=0\n\
    \    local len44=0\n    local len45=0\n    local len46=0\n    local len47=0\n\
    \    local len48=0\n    local len49=0\n    local len50=0\n    local len51=0\n\
    \    local len52=0\n    local len53=0\n    local len54=0\n    local len55=0\n\
    \    local len56=0\n    local len57=0\n    local len58=", "    echo $1 | tr '\
    \ ' '\\n' | grep -E \"^[^aeiou]{$2}$\"", "    local str=$1\n    local n=$2\n \
    \   local words=($str)\n    local result=()\n    for word in ${words[@]}; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local c=${word:$i:1}\n            if [[ $c =~ [^aeiou] ]]; then\n          \
    \      ((count++))\n            fi\n        done\n        if [[ $count -eq $n\
    \ ]]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo ${result[@]}",
  "    local -a words=($1)\n    local -a result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo \"$word\" | sed\
    \ 's/[aeiou]//g')\n        if [[ ${#consonants} -eq $2 ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "    local string=$1\n    local\
    \ number=$2\n    local words=$(echo $string | tr \" \" \"\\n\")\n    local result=()\n\
    \    for word in $words; do\n        local consonants=$(echo $word | tr -cd \"\
    [bcdfghjklmnpqrstvwxyz]\")\n        if [ ${#consonants} -eq $number ]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local str=$1\n    local num=$2\n    local words=($str)\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local count=0\n        for (( i=0; i<${#word};\
    \ i++ )); do\n            local char=${word:$i:1}\n            if [[ \"$char\"\
    \ =~ [^aeiou] ]]; then\n                count=$((count+1))\n            fi\n \
    \       done\n        if [[ $count -eq $num ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    if [[ -z $1 ]]; then\n   \
    \     echo \"[]\"\n        return\n    fi\n    local words=($1)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=0\n        for\
    \ (( i=0; i<${#word}; i++ )); do\n            local char=${word:$i:1}\n      \
    \      if [[ $char =~ [^aeiou] ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        done\n        if [[ $consonants -eq $2 ]]; then\n   \
    \         result+=(\"$word\")\n        fi\n    done\n    echo \"[${result[@]}]\"",
  "    local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local count=0\n        for ((i=0;\
    \ i<${#word}; i++)); do\n            local char=${word:$i:1}\n            if [[\
    \ $char =~ [^aeiou] ]]; then\n                ((count++))\n            fi\n  \
    \      done\n        if [ $count -eq $n ]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local s=$1\n    local n=$2\n\
    \    local words=(${s// / })\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      if [[ ${word:$i:1} =~ [^aeiou] ]]; then\n                ((count++))\n\
    \            fi\n        done\n        if [[ $count -eq $n ]]; then\n        \
    \    result+=($word)\n        fi\n    done\n    echo ${result[@]}", "  local string=\"\
    $1\"\n  local num=\"$2\"\n  local words=()\n  local word=''\n  local consonants=0\n\
    \  local char=''\n  local vowels=('a' 'e' 'i' 'o' 'u')\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  for ((i=0; i<${#string};\
    \ i++)); do\n    char=\"${string:$i:1}\"\n    if [[ \"$char\" == ' ' ]]; then\n\
    \      if [[ $consonants -eq $num ]]; then\n        words+=(\"$word\")\n     \
    \ fi\n      word=''\n      consonants=0\n    else\n      word+=\"$char\"\n   \
    \   for ((j=0; j<${#vowels[@]}; j++)); do\n        if [[ \"$char\" == \"${vowels[$j]}\"\
    \ ]]; then\n          consonants=0\n          break\n        fi\n      done\n\
    \      if [[ $consonants -eq 0 ]]; then\n        consonants=1\n      fi\n    fi\n\
    \  done\n  if [[ $consonants -eq $num ]]; then\n    words+=(\"$word\")\n  fi\n\
    \  echo \"${words[@]}\"", "    local str=$1\n    local n=$2\n    local words=($str)\n\
    \    local result=()\n    for word in ${words[@]}; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n\
    \            if [[ $char =~ [^aeiou] ]]; then\n                ((count++))\n \
    \           fi\n        done\n        if [ $count -eq $n ]; then\n           \
    \ result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local -a\
    \ words=($1)\n    local -a result=()\n    local word\n    local consonants\n \
    \   for word in \"${words[@]}\"; do\n        consonants=$(echo $word | tr -cd\
    \ '[^aeiouAEIOU ]' | wc -c)\n        if [[ $consonants -eq $2 ]]; then\n     \
    \       result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ s=$1\n    local n=$2\n    local words=($s)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}", "    local s=$1\n    local n=$2\n\
    \    local words=($s)\n    local result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo \"$word\" | tr\
    \ -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n        if [ $consonants -eq $n ]; then\n\
    \            result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local str=\"$1\"\n    local num=\"$2\"\n    local words=()\n    local word=\"\
    \"\n    local consonants=0\n    local char=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local e=0\n    local i=0\n    local o=0\n    local\
    \ u=0\n    local space=0\n    local length=0\n    local index=0\n    local index2=0\n\
    \    local index3=0\n    local index4=0\n    local index5=0\n    local index6=0\n\
    \    local index7=0\n    local index8=0\n    local index9=0\n    local index10=0\n\
    \    local index11=0\n    local index12=0\n    local index13=0\n    local index14=0\n\
    \    local index15=0\n    local index16=0\n    local index17=0\n    local index18=0\n\
    \    local index19=0\n    local index20=0\n    local index21=0\n    local index22=0\n\
    \    local index23=0\n    local index24=0\n    local index25=0\n    local index26=0\n\
    \    local index27=0\n    local index28=0\n    local index29=0\n    local index30=0\n\
    \    local index31=0\n    local index32=0\n    local index33=0\n    local index34=0\n\
    \    local index35=0\n    local index36=0\n    local index37=0\n    local index38=0\n\
    \    local index39=0\n    local index40=0\n    local index41=0\n    local index42=0\n\
    \    local index43=0\n    local index44=0\n    local index45=0\n    local index46=0\n\
    \   ", "  local str=\"$1\"\n  local num=\"$2\"\n  local words=($(echo \"$str\"\
    \ | tr ' ' '\\n'))\n  local result=()\n  local word\n  local consonants\n  for\
    \ word in \"${words[@]}\"; do\n    consonants=$(echo \"$word\" | tr -cd '[^aeiouAEIOU]'\
    \ | wc -m)\n    if [[ \"$consonants\" -eq \"$num\" ]]; then\n      result+=(\"\
    $word\")\n    fi\n  done\n  echo \"${result[@]}\"", "    local -a words\n    local\
    \ -a consonants\n    local -a vowels\n    local -a result\n    local word\n  \
    \  local i\n    local j\n    local k\n    local consonant_count\n    local vowel_count\n\
    \    local word_length\n    local word_count\n    local char\n    local char_count\n\
    \    local char_index\n    local char_index_count\n    local char_index_count_count\n\
    \    local char_index_count_count_count\n    local char_index_count_count_count_count\n\
    \    local char_index_count_count_count_count_count\n    local char_index_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count\n    local char_index_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n\
    \    local char_index_count_count_count_count_count_count_count_", "    local\
    \ string=$1\n    local num=$2\n    local word\n    local count\n    local result\n\
    \    for word in $string; do\n        count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            if [[ \"${word:$i:1}\" != [aeiou] ]]; then\n        \
    \        ((count++))\n            fi\n        done\n        if [[ $count -eq $num\
    \ ]]; then\n            result+=\"$word \"\n        fi\n    done\n    echo $result",
  "  local str=\"$1\"\n  local n=\"$2\"\n  local words\n  local word\n  local consonants\n\
    \  local consonant\n  local result\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local e\n  local i\n  local o\n  local u\n  local y\n  local b\n\
    \  local c\n  local d\n  local f\n  local g\n  local h\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local v\n  local w\n  local x\n  local z\n  local consonants\n \
    \ local result\n  local words\n  local word\n  local consonant\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local e\n  local i\n  local o\n  local\
    \ u\n  local y\n  local b\n  local c\n  local d\n  local f\n  local g\n  local\
    \ h\n  local j\n  local k\n  local l\n  local m\n  local n\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local v\n  local w\n  local x\n  local\
    \ z\n  local consonants\n  local result\n  local words\n  local word\n  local\
    \ consonant\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n ", "    local\
    \ s=$1\n    local n=$2\n    local words=($s)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiouyAEIOUY]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=($word)\n   \
    \     fi\n    done\n    echo ${result[@]}", "    local str=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ char=\"\"\n    local vowels=\"aeiou\"\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n   \
    \ local f=0\n    local g=0\n", "    local str=$1\n    local n=$2\n    local words=($str)\n\
    \    local result=()\n    for word in ${words[@]}; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local c=${word:$i:1}\n\
    \            if [[ $c =~ [^aeiouAEIOU] ]]; then\n                ((count++))\n\
    \            fi\n        done\n        if [[ $count -eq $n ]]; then\n        \
    \    result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ sed -e 's/[aeiou]//gi' | wc -m)\n        if [[ $consonants -eq $n ]]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \   local str=$1\n    local n=$2\n    local words=()\n    local word=''\n    local\
    \ consonants=0\n    local char=''\n    local vowels=('a' 'e' 'i' 'o' 'u')\n  \
    \  local is_vowel=0\n    for ((i=0; i<${#str}; i++)); do\n        char=${str:$i:1}\n\
    \        if [[ \"$char\" == ' ' ]]; then\n            if [[ $consonants -eq $n\
    \ ]]; then\n                words+=(\"$word\")\n            fi\n            word=''\n\
    \            consonants=0\n        else\n            word+=\"$char\"\n       \
    \     is_vowel=0\n            for vowel in \"${vowels[@]}\"; do\n            \
    \    if [[ \"$char\" == \"$vowel\" ]]; then\n                    is_vowel=1\n\
    \                    break\n                fi\n            done\n           \
    \ if [[ $is_vowel -eq 0 ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        fi\n    done\n    if [[ $consonants -eq $n ]]; then\n\
    \        words+=(\"$word\")\n    fi\n    echo \"${words[@]}\"", "    local string=\"\
    $1\"\n    local n=\"$2\"\n    local regex=\"[^aeiouAEIOU]{$n}\"\n    local words=($(echo\
    \ \"$string\" | tr ' ' '\\n'))\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        if [[ $word =~ $regex ]]; then\n            result+=($word)\n  \
    \      fi\n    done\n    echo \"${result[@]}\"", "    local str=$1\n    local\
    \ num=$2\n    local words=($str)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [aeiou] ]]; then\n\
    \                continue\n            else\n                ((count++))\n   \
    \         fi\n        done\n        if [[ $count -eq $num ]]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ str=\"$1\"\n    local num=\"$2\"\n    local words=()\n    local word=\"\"\n\
    \    local consonants=0\n    local i=0\n    local j=0\n    local len=0\n    local\
    \ c=\"\"\n    local vowels=\"aeiou\"\n    local is_vowel=0\n    local is_consonant=0\n\
    \    local is_space=0\n    local is_letter=0\n    local is_word=0\n    local is_consonant_num=0\n\
    \    local is_word_num=0\n    local is_word_start=0\n    local is_word_end=0\n\
    \    local is_word_start_num=0\n    local is_word_end_num=0\n    local is_word_start_consonant=0\n\
    \    local is_word_end_consonant=0\n    local is_word_start_consonant_num=0\n\
    \    local is_word_end_consonant_num=0\n    local is_word_start_vowel=0\n    local\
    \ is_word_end_vowel=0\n    local is_word_start_vowel_num=0\n    local is_word_end_vowel_num=0\n\
    \    local is_word_start_letter=0\n    local is_word_end_letter=0\n    local is_word_start_letter_num=0\n\
    \    local is_word_end_letter_num=0\n    local is_word_start_space=0\n    local\
    \ is_word_end_space=0\n    local is_word_start_space_num=0\n    local is_word_end_space_num=0\n\
    \    local is_word_start_consonant_num_eq=0\n    local is_word_end_consonant_num_eq=0\n\
    \    local is_word_start_vowel_num_eq=0\n    local is_word_end_vowel_num_eq=0\n\
    \    local is_word_start_letter_num_eq=0\n    local is_word_end_letter_num_eq=0\n\
    \    local is_word_", "  local str=$1\n  local num=$2\n  local word\n  local count\n\
    \  local result=\"\"\n  for word in $str; do\n    count=0\n    for ((i=0; i<${#word};\
    \ i++)); do\n      case ${word:$i:1} in\n        [aeiouAEIOU])\n          ;;\n\
    \        *)\n          ((count++))\n          ;;\n      esac\n    done\n    if\
    \ [ $count -eq $num ]; then\n      result=\"$result $word\"\n    fi\n  done\n\
    \  echo $result", "    local str=$1\n    local num=$2\n    local words=($str)\n\
    \    local result=()\n    for word in ${words[@]}; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            if [[ ${word:$i:1} =~ [^aeiou]\
    \ ]]; then\n                ((count++))\n            fi\n        done\n      \
    \  if [[ $count -eq $num ]]; then\n            result+=($word)\n        fi\n \
    \   done\n    echo ${result[@]}", "    local string=$1\n    local n=$2\n    local\
    \ words=($string)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        if [[ $(echo $word | grep -o -i \"[^aeiouy]\" | wc -l) -eq $n ]]; then\n\
    \            result+=($word)\n        fi\n    done\n    echo ${result[@]}", " \
    \ local str=\"$1\"\n  local n=\"$2\"\n  local words\n  local word\n  local consonants\n\
    \  local consonant\n  local result\n  local i\n  local j\n  local k\n  local len\n\
    \  local len2\n  local len3\n  local len4\n  local len5\n  local len6\n  local\
    \ len7\n  local len8\n  local len9\n  local len10\n  local len11\n  local len12\n\
    \  local len13\n  local len14\n  local len15\n  local len16\n  local len17\n \
    \ local len18\n  local len19\n  local len20\n  local len21\n  local len22\n  local\
    \ len23\n  local len24\n  local len25\n  local len26\n  local len27\n  local len28\n\
    \  local len29\n  local len30\n  local len31\n  local len32\n  local len33\n \
    \ local len34\n  local len35\n  local len36\n  local len37\n  local len38\n  local\
    \ len39\n  local len40\n  local len41\n  local len42\n  local len43\n  local len44\n\
    \  local len45\n  local len46\n  local len47\n  local len48\n  local len49\n \
    \ local len50\n  local len51\n  local len52\n  local len53\n  local len54\n  local\
    \ len55\n  local len56\n  local len57\n  local len58\n  local len59\n  local len60\n\
    \  local len61\n  local len62\n  local len63\n  local len64\n  local len65\n \
    \ local len66\n  local len67\n  local len68\n  local len69\n  local len70\n  local\
    \ len71\n  local len72\n  local len73\n  local len74\n  local len75\n  local len76\n\
    \  local len77\n  local len78\n  local len79\n  local len80\n  local len81\n \
    \ local len82\n  local len83\n  local len84\n  local len85\n  local len86\n  local\
    \ len87\n  local len88\n  local len89\n  local len90\n  local len91\n  local len92\n\
    \  local", "    local str=$1\n    local n=$2\n    local words=($str)\n    local\
    \ result=()\n    local word\n    local consonants\n    for word in \"${words[@]}\"\
    ; do\n        consonants=$(echo $word | sed 's/[aeiouAEIOU]//g' | wc -c)\n   \
    \     if [ $consonants -eq $n ]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo ${result[@]}", "    local str=$1\n    local n=$2\n    local\
    \ words=($str)\n    local result=()\n    local word\n    local consonants\n  \
    \  for word in \"${words[@]}\"; do\n        consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz'\
    \ | wc -c)\n        if [ $consonants -eq $n ]; then\n            result+=(\"$word\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"", "    local string=\"$1\"\n\
    \    local n=\"$2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n\
    \    local char=\"\"\n    local vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local\
    \ is_vowel=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n   \
    \ local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local\
    \ r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n\
    \    local x=0\n    local y=0\n    local z=0\n    for ((i=0; i<${#string}; i++));\
    \ do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" == \" \" ]]; then\n\
    \            if [[ $consonants -eq $n ]]; then\n                words+=(\"$word\"\
    )\n            fi\n            word=\"\"\n            consonants=0\n        else\n\
    \            word+=\"$char\"\n            is_vowel=0\n            for ((j=0; j<${#vowels[@]};\
    \ j++)); do\n                if [[ \"$char\" == \"${vowels[$j]}\" ]]; then\n \
    \                   is_vowel=1\n                    break\n                fi\n\
    \            done\n            if [[ $is_vowel -eq 0 ]]; then\n              \
    \  consonants=$((consonants+1))\n            fi\n        fi\n    done\n    if\
    \ [[ $consonants -eq $n ]]; then\n        words+=(\"$word\")\n    fi\n    echo\
    \ \"${words[@]}\"", "  local str=$1\n  local num=$2\n  local words=($str)\n  local\
    \ result=()\n  local word\n  local count\n  for word in \"${words[@]}\"; do\n\
    \    count=$(echo $word | tr -cd '[aeiou]' | wc -c)\n    if [ $(( ${#word} - count\
    \ )) -eq $num ]; then\n      result+=($word)\n    fi\n  done\n  echo ${result[@]}",
  "    local string=$1\n    local n=$2\n    local words=($string)\n    local result=()\n\
    \    for word in \"${words[@]}\"; do\n        local consonants=$(echo $word |\
    \ sed 's/[aeiou]//g')\n        if [ ${#consonants} -eq $n ]; then\n          \
    \  result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local str=\"\
    $1\"\n    local n=\"$2\"\n    local words=()\n    local word=''\n    local consonants=0\n\
    \    local char=''\n    local i=0\n    local j=0\n    local len=0\n    local len2=0\n\
    \    local is_consonant=0\n    local is_vowel=0\n    local vowels=('a' 'e' 'i'\
    \ 'o' 'u')\n    local len_vowels=${#vowels[@]}\n    local is_space=0\n    local\
    \ is_letter=0\n    local is_word=0\n    local is_consonant_word=0\n    local is_consonant_word_found=0\n\
    \    local is_consonant_word_found_count=0\n    local is_consonant_word_found_count_max=0\n\
    \    local is_consonant_word_found_count_max_index=0\n    local is_consonant_word_found_count_max_index_prev=0\n\
    \    local is_consonant_word_found_count_max_index_prev_prev=0\n    local is_consonant_word_found_count_max_index_prev_prev_prev=0\n\
    \    local is_consonant_word_found_count_max_index_prev_prev_prev_prev=0\n   \
    \ local is_consonant_word_found_count_max_index_prev_prev_prev_prev_prev=0\n \
    \   local is_consonant_word_found_count_max_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local is_consonant_word_found_count_max_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local is_consonant_word_found_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local is_consonant_word_found_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local is_consonant_word_found_count", "    local s=$1\n    local n=$2\n \
    \   local words=($s)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local c=${word:$i:1}\n            if [[ $c =~ [^aeiouAEIOU] ]]; then\n     \
    \           count=$((count+1))\n            fi\n        done\n        if [ $count\
    \ -eq $n ]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local str=$1\n    local n=$2\n    local words=($str)\n\
    \    local result=()\n    for word in ${words[@]}; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local c=${word:$i:1}\n\
    \            if [[ $c =~ [aeiou] ]]; then\n                continue\n        \
    \    fi\n            count=$((count+1))\n        done\n        if [ $count -eq\
    \ $n ]; then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local string=$1\n    local number=$2\n    local words=($string)\n    local\
    \ result=()\n    for word in ${words[@]}; do\n        local count=0\n        for\
    \ ((i=0; i<${#word}; i++)); do\n            local char=${word:$i:1}\n        \
    \    if [[ $char =~ [^aeiou] ]]; then\n                ((count++))\n         \
    \   fi\n        done\n        if [[ $count -eq $number ]]; then\n            result+=($word)\n\
    \        fi\n    done\n    echo ${result[@]}", "    local s=$1\n    local n=$2\n\
    \    local words=($s)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local count=0\n        for ((i=0; i<${#word}; i++)); do\n           \
    \ local c=${word:$i:1}\n            if [[ $c =~ [^aeiou] ]]; then\n          \
    \      count=$((count+1))\n            fi\n        done\n        if [ $count -eq\
    \ $n ]; then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local -a words=($1)\n    local -a result=()\n    for word in \"${words[@]}\"\
    ; do\n        local -i consonants=0\n        for (( i=0; i<${#word}; i++ )); do\n\
    \            local char=${word:$i:1}\n            if [[ $char =~ [^aeiouAEIOU]\
    \ ]]; then\n                consonants+=1\n            fi\n        done\n    \
    \    if [[ $consonants -eq $2 ]]; then\n            result+=($word)\n        fi\n\
    \    done\n    echo \"${result[@]}\"", "    local string=$1\n    local n=$2\n\
    \    local words=($string)\n    local result=()\n    for word in \"${words[@]}\"\
    ; do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n\
    \                count=$((count+1))\n            fi\n        done\n        if\
    \ [[ $count -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo \"${result[@]}\"", "    local string=$1\n    local n=$2\n    local words=$(echo\
    \ $string | tr -s ' ' '\\n')\n    local result=()\n    for word in $words; do\n\
    \        local consonants=$(echo $word | grep -o '[^aeiouAEIOU ]' | wc -l)\n \
    \       if [ $consonants -eq $n ]; then\n            result+=($word)\n       \
    \ fi\n    done\n    echo ${result[@]}", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"Hello world\"", "    local s=$1\n    local n=$2\n  \
    \  local words=($s)\n    local result=()\n    for word in \"${words[@]}\"; do\n\
    \        local consonants=$(echo $word | tr -cd 'bcdfghjklmnpqrstvwxyz' | wc -c)\n\
    \        if [ $consonants -eq $n ]; then\n            result+=($word)\n      \
    \  fi\n    done\n    echo ${result[@]}", "  local s=$1\n  local n=$2\n  local\
    \ words=($s)\n  local result=()\n  for word in \"${words[@]}\"; do\n    local\
    \ consonants=$(echo $word | sed -e 's/[^bcdfghjklmnpqrstvwxyz]//g' | sed -e 's/[aeiou]//g')\n\
    \    if [ ${#consonants} -eq $n ]; then\n      result+=(\"$word\")\n    fi\n \
    \ done\n  echo ${result[@]}", "    local str=\"$1\"\n    local num=\"$2\"\n  \
    \  local words=()\n    local word=''\n    local consonants=0\n    local i=0\n\
    \    local c=''\n    local vowels='aeiou'\n    local is_vowel=0\n    local is_consonant=0\n\
    \    local is_space=0\n    local is_letter=0\n    local is_word=0\n    local is_word_end=0\n\
    \    local is_word_start=0\n    local is_word_found=0\n    local is_word_found_end=0\n\
    \    local is_word_found_start=0\n    local is_word_found_start_end=0\n    local\
    \ is_word_found_start_end_space=0\n    local is_word_found_start_end_space_letter=0\n\
    \    local is_word_found_start_end_space_letter_vowel=0\n    local is_word_found_start_end_space_letter_vowel_consonant=0\n\
    \    local is_word_found_start_end_space_letter_vowel_consonant_vowel=0\n    local\
    \ is_word_found_start_end_space_letter_vowel_consonant_vowel_consonant=0\n   \
    \ local is_word_found_start_end_space_letter_vowel_consonant_vowel_consonant_vowel=0\n\
    \    local is_word_found_start_end_space_letter_vowel_consonant_vowel_consonant_vowel_consonant=0\n\
    \    local is_word_found_start_end_space_letter_vowel_consonant_vowel_consonant_vowel_consonant_vowel=0\n\
    \    local is_word_found_start_end_space_letter_vowel_consonant_vowel_consonant_vowel_consonant_vowel_consonant=0\n\
    \    local is_word_found_start_end_space_letter_vowel_", "    local str=$1\n \
    \   local n=$2\n    local words=($str)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local c=${word:$i:1}\n            if [[ $c =~ [^aeiou] ]]; then\n     \
    \           ((count++))\n            fi\n        done\n        if [ $count -eq\
    \ $n ]; then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n    local word=\"\
    \"\n    local consonants=0\n    local char=\"\"\n    local i=0\n    local j=0\n\
    \    local len=0\n    local is_consonant=0\n    local is_vowel=0\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\")\n    local consonants=(\"b\" \"c\" \"d\" \"f\" \"\
    g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"\
    w\" \"x\" \"y\" \"z\")\n    local len_vowels=${#vowels[@]}\n    local len_consonants=${#consonants[@]}\n\
    \    local len_str=${#str}\n    local len_word=0\n    local is_space=0\n    local\
    \ is_letter=0\n    local is_end=0\n    local is_start=0\n    local is_word=0\n\
    \    local is_word_start=0\n    local is_word_end=0\n    local is_word_end_space=0\n\
    \    local is_word_end_letter=0\n    local is_word_end_end=0\n    local is_word_end_start=0\n\
    \    local is_word_end_word=0\n    local is_word_end_word_start=0\n    local is_word_end_word_end=0\n\
    \    local is_word_end_word_end_space=0\n    local is_word_end_word_end_letter=0\n\
    \    local is_word_end_word_end_end=0\n    local is_word_end_word_end_start=0\n\
    \    local is_word_end_word_end_word=0\n    local is_word_end_word_end_word_start=0\n\
    \    local is_word_end_word_end_word_end=0\n    local is_word_end_word_end_word_end_space=0\n\
    \    local is_word_end", "    local string=$1\n    local num=$2\n    local words=()\n\
    \    local word=''\n    local consonants=0\n    local char=''\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local is_vowel=0\n    for (( i=0; i<${#string}; i++ ));\
    \ do\n        char=${string:$i:1}\n        if [[ $char == ' ' ]]; then\n     \
    \       if [[ $consonants -eq $num ]]; then\n                words+=($word)\n\
    \            fi\n            word=''\n            consonants=0\n        else\n\
    \            word+=$char\n            is_vowel=0\n            for vowel in ${vowels[@]};\
    \ do\n                if [[ $char == $vowel ]]; then\n                    is_vowel=1\n\
    \                    break\n                fi\n            done\n           \
    \ if [[ $is_vowel -eq 0 ]]; then\n                consonants=$((consonants+1))\n\
    \            fi\n        fi\n    done\n    if [[ $consonants -eq $num ]]; then\n\
    \        words+=($word)\n    fi\n    echo ${words[@]}", "  local str=$1\n  local\
    \ n=$2\n  local words=()\n  local word=''\n  local consonants=0\n  local char=''\n\
    \  local i=0\n  local j=0\n  local k=0\n  local len=0\n  local len2=0\n  local\
    \ len3=0\n  local is_consonant=0\n  local is_vowel=0\n  local vowels=('a' 'e'\
    \ 'i' 'o' 'u')\n  local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n'\
    \ 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n  len=${#str}\n  for ((i=0; i<len;\
    \ i++)); do\n    char=${str:$i:1}\n    if [[ $char == ' ' ]]; then\n      len2=${#word}\n\
    \      if [[ $len2 -gt 0 ]]; then\n        consonants=0\n        for ((j=0; j<len2;\
    \ j++)); do\n          is_consonant=0\n          is_vowel=0\n          char=${word:$j:1}\n\
    \          len3=${#vowels[@]}\n          for ((k=0; k<len3; k++)); do\n      \
    \      if [[ $char == ${vowels[$k]} ]]; then\n              is_vowel=1\n     \
    \         break\n            fi\n          done\n          if [[ $is_vowel -eq\
    \ 0 ]]; then\n            len3=${#consonants[@]}\n            for ((k=0; k<len3;\
    \ k++)); do\n              if [[ $char == ${consonants[$k]} ]]; then\n       \
    \         is_consonant=1\n                break\n              fi\n          \
    \  done\n          fi\n          if [[ $is_consonant -eq 1 ]]; then\n        \
    \    consonants=$((consonants+1))\n          fi\n        done\n        if [[ $consonants\
    \ -eq $n ]]; then\n          words+=", "    local string=$1\n    local number=$2\n\
    \    local words=()\n    local word\n    local consonants\n    for word in $string;\
    \ do\n        consonants=$(echo $word | sed 's/[aeiou]//g' | wc -c)\n        if\
    \ [ $consonants -eq $number ]; then\n            words+=(\"$word\")\n        fi\n\
    \    done\n    echo ${words[@]}", "    local s=$1\n    local n=$2\n    local -a\
    \ words\n    local -a consonants\n    local -a vowels\n    local -a result\n \
    \   local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\
    \    local -i nc\n    local -i nv\n    local -i len\n    local -i len_s\n    local\
    \ -i len_w\n    local -i len_c\n    local -i len_v\n    local -i len_r\n    local\
    \ -i len_w_c\n    local -i len_w_v\n    local -i len_r_c\n    local -i len_r_v\n\
    \    local -i len_r_w\n    local -i len_r_w_c\n    local -i len_r_w_v\n    local\
    \ -i len_r_w_c_v\n    local -i len_r_w_c_v_s\n    local -i len_r_w_c_v_s_n\n \
    \   local -i len_r_w_c_v_s_n_i\n    local -i len_r_w_c_v_s_n_i_j\n    local -i\
    \ len_r_w_c_v_s_n_i_j_k\n    local -i len_r_w_c_v_s_n_i_j_k_l\n    local -i len_r_w_c_v_s_n_i_j_k_l_m\n\
    \    local -i len_r_w_c_v_s_n_i_j_k_l_m_nc\n    local -i len_r_w_c_v_s_n_i_j_k_l_m_nc_nv\n\
    \    local -i len_r_w_c_v_s_n_i_j_k_l_m_nc_nv_len\n    local -i len_r_w_c_v_s_n_i_j_k_l_m_nc_nv_len_s\n\
    \    local -i len_r_w", "    local s=$1\n    local n=$2\n    local words=($s)\n\
    \    local result=()\n    local word\n    local consonants\n    for word in \"\
    ${words[@]}\"; do\n        consonants=$(echo $word | sed 's/[aeiou]//g' | wc -c)\n\
    \        if [ $consonants -eq $n ]; then\n            result+=($word)\n      \
    \  fi\n    done\n    echo ${result[@]}", "    local string=\"$1\"\n    local n=\"\
    $2\"\n    local words=()\n    local word=\"\"\n    local consonants=0\n    local\
    \ i=0\n    local c=0\n    local is_consonant=0\n    local is_vowel=0\n    local\
    \ vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local vowels_count=${#vowels[@]}\n\
    \    local is_space=0\n    local is_letter=0\n    local is_word_end=0\n    local\
    \ is_word_start=0\n    local is_word_found=0\n    local is_word_added=0\n    local\
    \ is_word_empty=0\n    local is_word_valid=0\n    local is_word_invalid=0\n  \
    \  local is_string_empty=0\n    local is_n_valid=0\n    local is_n_invalid=0\n\
    \    local is_n_zero=0\n    local is_n_negative=0\n    local is_n_positive=0\n\
    \    local is_n_odd=0\n    local is_n_even=0\n    local is_n_positive_even=0\n\
    \    local is_n_positive_odd=0\n    local is_n_zero_or_negative=0\n    local is_n_positive_even_or_zero=0\n\
    \    local is_n_positive_odd_or_zero=0\n    local is_n_positive_even_or_negative=0\n\
    \    local is_n_positive_odd_or_negative=0\n    local is_n_positive_even_or_negative_or_zero=0\n\
    \    local is_n_positive_odd_or_negative_or_zero=0\n    local is_n_positive_even_or_positive_odd=0\n\
    \    local is_n_positive_even_or_positive_odd_or_zero=0\n    local is_n_positive_even_or_positive_odd_or_negative=0\n\
    \    local is_n_positive_even_or_positive_odd_or_negative_or_zero=0\n    local\
    \ is_n_positive_even_", "    local str=\"$1\"\n    local n=\"$2\"\n    local words=()\n\
    \    local word=\"\"\n    local consonants=0\n    local char=\"\"\n    local vowels=\"\
    aeiou\"\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local\
    \ len_vowels=0\n    local len_words=0\n    local len_word=0\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_word=0\n    local is_space=0\n    local\
    \ is_letter=0\n    local is_consonant_count=0\n    local is_consonant_count_word=0\n\
    \    local is_consonant_count_words=0\n    local is_consonant_count_words_word=0\n\
    \    local is_consonant_count_words_words=0\n    local is_consonant_count_words_words_word=0\n\
    \    local is_consonant_count_words_words_words=0\n    local is_consonant_count_words_words_words_word=0\n\
    \    local is_consonant_count_words_words_words_words=0\n    local is_consonant_count_words_words_words_words_word=0\n\
    \    local is_consonant_count_words_words_words_words_words=0\n    local is_consonant_count_words_words_words_words_words_word=0\n\
    \    local is_consonant_count_words_words_words_words_words_words=0\n    local\
    \ is_consonant_count_words_words_words_words_words_words_word=0\n    local is_consonant_count_words_words_words_words_words_words_words=0\n\
    \    local is_consonant_count_words_words_words_words_words_words_words_word=0\n\
    \    local is_consonant_count_words_words_words_words_words_words_words_words=0\n\
    \    local is_consonant_count_words_words_words_words_words_", "    local string=$1\n\
    \    local num=$2\n    local result=()\n    local word=()\n    local consonants=()\n\
    \    local vowels=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local e=0\n    local i=0\n    local o=0\n    local u=0\n    local space=0\n\
    \    local consonant=0\n    local vowel=0\n    local word_length=0\n    local\
    \ consonant_count=0\n    local vowel_count=0\n    local consonant_count_max=0\n\
    \    local vowel_count_max=0\n    local consonant_count_min=0\n    local vowel_count_min=0\n\
    \    local consonant_count_max_index=0\n    local vowel_count_max_index=0\n  \
    \  local consonant_count_min_index=0\n    local vowel_count_min_index=0\n    local\
    \ consonant_count_max_word=()\n    local vowel_count_max_word=()\n    local consonant_count_min_word=()\n\
    \    local vowel_count_min_word=()\n    local consonant_count_max_word_length=0\n\
    \    local vowel_count_max_word_length=0\n    local consonant_count_min_word_length=0\n\
    \    local vowel_count_min_word_length=0\n    local consonant_count_max_word_index=0\n\
    \    local vowel_count_max_word_index=0\n    local consonant_count_min_word_index=0\n\
    \    local vowel_count_min_word_index=0\n    local consonant_count_max_word_index_list=()\n\
    \    local vowel_count_max_word_index_list=()\n", "    local str=$1\n    local\
    \ n=$2\n    local words=($str)\n    local result=()\n    for word in ${words[@]};\
    \ do\n        local count=0\n        for ((i=0; i<${#word}; i++)); do\n      \
    \      local char=${word:$i:1}\n            if [[ $char =~ [^aeiou] ]]; then\n\
    \                ((count++))\n            fi\n        done\n        if [[ $count\
    \ -eq $n ]]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "    local string=\"$1\"\n    local n=\"$2\"\n    local words\n\
    \    local word\n    local consonants\n    local -a result\n\n    words=$(echo\
    \ \"$string\" | tr ' ' '\\n')\n    for word in $words; do\n        consonants=$(echo\
    \ \"$word\" | tr -cd '[^aeiouAEIOU]' | wc -m)\n        if [ \"$consonants\" -eq\
    \ \"$n\" ]; then\n            result+=(\"$word\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local s=$1\n    local n=$2\n    local word\n    local\
    \ words\n    local consonants\n    local consonant\n    local vowels=\"a e i o\
    \ u\"\n    for word in $s; do\n        consonants=0\n        for consonant in\
    \ {a..z}; do\n            if [[ $vowels != *$consonant* ]]; then\n           \
    \     if [[ $word == *$consonant* ]]; then\n                    consonants=$((consonants+1))\n\
    \                fi\n            fi\n        done\n        if [[ $consonants -eq\
    \ $n ]]; then\n            words=\"$words $word\"\n        fi\n    done\n    echo\
    \ $words", "    local s=$1\n    local n=$2\n    local words=$(echo $s | tr ' '\
    \ '\\n')\n    local result=()\n    for word in $words; do\n        local count=$(echo\
    \ $word | sed 's/[^aeiou]//g' | wc -c)\n        if [ $count -eq $n ]; then\n \
    \           result+=(\"$word\")\n        fi\n    done\n    echo ${result[@]}",
  "    local -a words=($1)\n    local -a result=()\n    for word in \"${words[@]}\"\
    ; do\n        local -i count=0\n        for ((i=0; i<${#word}; i++)); do\n   \
    \         if [[ \"${word:$i:1}\" =~ [^aeiou] ]]; then\n                ((count++))\n\
    \            fi\n        done\n        if [[ $count -eq $2 ]]; then\n        \
    \    result+=(\"$word\")\n        fi\n    done\n    echo \"${result[@]}\"", " \
    \   local string=$1\n    local num=$2\n    local words=($string)\n    local result=()\n\
    \    local word\n    local count\n    for word in \"${words[@]}\"; do\n      \
    \  count=$(echo $word | grep -o '[^aeiouAEIOU]' | wc -l)\n        if [ $count\
    \ -eq $num ]; then\n            result+=($word)\n        fi\n    done\n    echo\
    \ ${result[@]}", "  local str=\"$1\"\n  local n=\"$2\"\n  local words\n  local\
    \ word\n  local consonants\n  local consonant\n  local result\n\n  words=$(echo\
    \ \"$str\" | tr ' ' '\\n')\n  for word in $words; do\n    consonants=$(echo \"\
    $word\" | grep -o '[^aeiouAEIOU]' | tr -d '\\n')\n    if [ ${#consonants} -eq\
    \ $n ]; then\n      result=\"$result $word\"\n    fi\n  done\n  echo \"$result\"",
  "    local string=$1\n    local num=$2\n    local words=($string)\n    local result=()\n\
    \    for word in ${words[@]}; do\n        local count=0\n        for ((i=0; i<${#word};\
    \ i++)); do\n            if [[ ${word:$i:1} =~ [^aeiouAEIOU] ]]; then\n      \
    \          ((count++))\n            fi\n        done\n        if [[ $count -eq\
    \ $num ]]; then\n            result+=($word)\n        fi\n    done\n    echo ${result[@]}",
  "    local -a words=($1)\n    local -a result=()\n    local word\n    local consonants\n\
    \    for word in \"${words[@]}\"; do\n        consonants=$(echo $word | sed -e\
    \ 's/[aeiou]//g' | wc -c)\n        if [ $consonants -eq $2 ]; then\n         \
    \   result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local\
    \ s=$1\n    local n=$2\n    local words=($s)\n    local result=()\n    for word\
    \ in \"${words[@]}\"; do\n        local consonants=$(echo $word | sed -e 's/[aeiou]//g')\n\
    \        if [ ${#consonants} -eq $n ]; then\n            result+=(\"$word\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "    local str=$1\n    local\
    \ num=$2\n    local result=()\n    local word=''\n    local count=0\n    local\
    \ vowels='aeiou'\n    local consonants='bcdfghjklmnpqrstvwxyz'\n    for (( i=0;\
    \ i<${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" == ' ' ]]; then\n     \
    \       if [[ $count -eq $num ]]; then\n                result+=(\"$word\")\n\
    \            fi\n            word=''\n            count=0\n        else\n    \
    \        word+=\"${str:$i:1}\"\n            if [[ $vowels != *\"${str:$i:1}\"\
    * ]]; then\n                (( count++ ))\n            fi\n        fi\n    done\n\
    \    if [[ $count -eq $num ]]; then\n        result+=(\"$word\")\n    fi\n   \
    \ echo \"${result[@]}\"", "  local str=$1\n  local num=$2\n  local words=$(echo\
    \ \"$str\" | tr ' ' '\\n')\n  local result=()\n  for word in $words; do\n    local\
    \ count=$(echo \"$word\" | tr -cd '[^aeiouAEIOU]' | wc -c)\n    if [ $count -eq\
    \ $num ]; then\n      result+=($word)\n    fi\n  done\n  echo \"${result[@]}\"",
  '  # your code here', "    local str=$1\n    local n=$2\n    local words=($str)\n\
    \    local result=()\n    for word in ${words[@]}; do\n        local count=0\n\
    \        for ((i=0; i<${#word}; i++)); do\n            local c=${word:$i:1}\n\
    \            if [[ $c =~ [^aeiou] ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n        if [ $count -eq $n ]; then\n          \
    \  result+=($word)\n        fi\n    done\n    echo ${result[@]}", "    local string=$1\n\
    \    local n=$2\n    local words=()\n    local word=''\n    local consonants=0\n\
    \    local consonants_regex='[^aeiouAEIOU]'\n    local i=0\n    local len=${#string}\n\
    \    local c=''\n    local is_word=false\n    for ((i=0; i<len; i++)); do\n  \
    \      c=${string:i:1}\n        if [[ $c =~ $consonants_regex ]]; then\n     \
    \       consonants=$((consonants + 1))\n            is_word=true\n        fi\n\
    \        if [[ $c == ' ' ]]; then\n            if [[ $is_word == true ]]; then\n\
    \                if [[ $consonants == $n ]]; then\n                    words+=(\"\
    $word\")\n                fi\n                word=''\n                consonants=0\n\
    \                is_word=false\n            fi\n        else\n            word+=$c\n\
    \        fi\n    done\n    if [[ $is_word == true ]]; then\n        if [[ $consonants\
    \ == $n ]]; then\n            words+=(\"$word\")\n        fi\n    fi\n    echo\
    \ \"${words[@]}\"", "    local -a words=($1)\n    local -a result=()\n    for\
    \ word in \"${words[@]}\"; do\n        if [[ $(echo $word | sed 's/[aeiou]//g'\
    \ | wc -c) -eq $2 ]]; then\n            result+=($word)\n        fi\n    done\n\
    \    echo ${result[@]}", "  local str=$1\n  local n=$2\n  local words=($str)\n\
    \  local result=()\n  local word\n  local consonants\n  for word in \"${words[@]}\"\
    ; do\n    consonants=$(echo $word | tr -cd [bcdfghjklmnpqrstvwxyz] | wc -c)\n\
    \    if [[ $consonants -eq $n ]]; then\n      result+=($word)\n    fi\n  done\n\
    \  echo ${result[@]}", '    # your code here', "    local string=\"$1\"\n    local\
    \ n=\"$2\"\n    local words=()\n    local word\n    local consonants\n    for\
    \ word in $string; do\n        consonants=$(echo $word | sed -e 's/[aeiou]//g'\
    \ | wc -m)\n        if [ $consonants -eq $n ]; then\n            words+=($word)\n\
    \        fi\n    done\n    echo ${words[@]}", "  local string=\"$1\"\n  local\
    \ n=\"$2\"\n  local words=($string)\n  local result=()\n  for word in \"${words[@]}\"\
    ; do\n    local consonants=$(echo \"$word\" | sed 's/[aeiou]//g')\n    if [[ ${#consonants}\
    \ -eq $n ]]; then\n      result+=(\"$word\")\n    fi\n  done\n  echo \"${result[@]}\"",
  "    # your code here\n    echo \"Not implemented\""]
stop_tokens:
- "\n}"

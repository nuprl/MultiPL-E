language: sh
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n    \
    \            break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                ((count++))\n            fi\n        done\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  echo \"$1\" | grep\
    \ -o \"$2\" | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i i=0\n    local -i len_str=${#1}\n    local -i len_substr=${#2}\n\
    \    while [ $i -lt $len_str ]; do\n        if [ \"${1:$i:$len_substr}\" == \"\
    $2\" ]; then\n            ((count++))\n            ((i+=len_substr))\n       \
    \ else\n            ((i++))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    local length=${#string}\n\
    \    local sublength=${#substring}\n    while [ $index -lt $length ]; do\n   \
    \     if [ \"${string:$index:$sublength}\" == \"$substring\" ]; then\n       \
    \     count=$((count+1))\n            index=$((index+sublength))\n        else\n\
    \            index=$((index+1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            ((count++))\n            ((i+=$len-1))\n      \
    \  fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n    \
    \            break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ \"${string:$i:$len_substring}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  local j=0\n  local len=${#string}\n\
    \  local sublen=${#substring}\n  for ((i=0; i<len; i++)); do\n    if [[ ${string:$i:$sublen}\
    \ == $substring ]]; then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") =\
    \ \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len=${#string}\n    local sublen=${#substring}\n    for ((i=0; i<len;\
    \ i++)); do\n        if [[ ${string:$i:$sublen} == $substring ]]; then\n     \
    \       ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i=0\n  local j=0\n  local\
    \ length=${#string}\n  local sublength=${#substring}\n  for ((i=0; i<length; i++));\
    \ do\n    if [[ \"${string:$i:$sublength}\" == \"$substring\" ]]; then\n     \
    \ ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            count=$((count+1))\n            i=$((i+len))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ length=${#string}\n    local sublength=${#substring}\n    while [ $i -lt $length\
    \ ]; do\n        if [ \"${string:$i:$sublength}\" == \"$substring\" ]; then\n\
    \            ((count++))\n            ((i+=$sublength))\n        else\n      \
    \      ((i++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo \"$1\" | grep\
    \ -o \"$2\" | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#str} ]; do\n        if [ \"${str:$i:${#substr}}\" == \"$substr\" ]; then\n\
    \            count=$((count+1))\n            i=$((i+${#substr}))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  if [ -z \"$1\" ]\
    \ || [ -z \"$2\" ]; then\n    echo 0\n    return\n  fi\n  local count=0\n  local\
    \ i=0\n  local len1=${#1}\n  local len2=${#2}\n  while [ $i -lt $len1 ]; do\n\
    \    if [ \"${1:$i:$len2}\" == \"$2\" ]; then\n      count=$((count+1))\n    \
    \  i=$((i+len2))\n    else\n      i=$((i+1))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [[ $i -lt $len ]]; do\n        if [[\
    \ ${string:$i:$sublen} == $substring ]]; then\n            ((count++))\n     \
    \       ((i+=$sublen))\n        else\n            ((i++))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local result=0\n    local i=0\n    local len_substring=${#substring}\n\
    \    local len_string=${#string}\n    while [ $i -lt $len_string ]; do\n     \
    \   if [ \"${string:$i:$len_substring}\" == \"$substring\" ]; then\n         \
    \   result=$((result+1))\n            i=$((i+len_substring))\n        else\n \
    \           i=$((i+1))\n        fi\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local string_length=${#string}\n    local substring_length=${#substring}\n \
    \   for ((i=0; i<string_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n\
    \    for ((i=0; i<len1; i++)); do\n        for ((j=0; j<len2; j++)); do\n    \
    \        if [[ \"${1:i:1}\" == \"${2:j:1}\" ]]; then\n                count=$((count+1))\n\
    \                break\n            fi\n        done\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#string} ]; do\n        local index_of=$(index_of \"$string\" \"$substring\"\
    \ $index)\n        if [ $index_of -ge 0 ]; then\n            count=$((count +\
    \ 1))\n            index=$((index_of + 1))\n        else\n            break\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp19cq7u1r.sh: line 18: index_of: command not found

    /tmp/tmp19cq7u1r.sh: line 19: [: -ge: unary operator expected

    '
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" == \"${substring:$j:1}\" ]]; then\n    \
    \            ((i++))\n            else\n                break\n            fi\n\
    \        done\n        if [[ $j -eq $len_substring ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo $1 | grep\
    \ -o $2 | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local length=${#substring}\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$length}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+length))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local -i count=0\n\
    \  local -i i=0\n  local -i len=${#1}\n  local -i sublen=${#2}\n  for ((i=0; i<len;\
    \ i++)); do\n    if [[ \"${1:i:sublen}\" == \"$2\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len_1=${#1}\n    local -i len_2=${#2}\n\
    \    if [[ $len_1 -lt $len_2 ]]; then\n        echo 0\n        return 0\n    fi\n\
    \    while [[ $i -lt $len_1 ]]; do\n        if [[ ${1:$i:1} == ${2:$j:1} ]]; then\n\
    \            j=$((j+1))\n            if [[ $j -eq $len_2 ]]; then\n          \
    \      count=$((count+1))\n                j=0\n            fi\n        else\n\
    \            j=0\n        fi\n        i=$((i+1))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local i=0\n    local count=0\n    while [ $i -lt ${#str}\
    \ ]; do\n        if [ \"${str:$i:${#substr}}\" == \"$substr\" ]; then\n      \
    \      count=$((count+1))\n            i=$((i+${#substr}))\n        else\n   \
    \         i=$((i+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local offset=0\n    while [[ $string\
    \ =~ $substring ]]; do\n        count=$((count + 1))\n        offset=$((offset\
    \ + ${#BASH_REMATCH[0]}))\n        string=${string:$offset}\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#str} ]; do\n        if [ \"${str:$i:${#substr}}\" == \"$substr\" ]; then\n\
    \            ((count++))\n            ((i+=${#substr}))\n        else\n      \
    \      ((i++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" == \"${substring:$j:1}\" ]]; then\n    \
    \            ((i++))\n            else\n                break\n            fi\n\
    \        done\n        if [[ $j -eq $len_substring ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n    \
    \            break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    local end=$((len - sublen))\n    while [\
    \ $i -le $end ]; do\n        if [ \"${string:$i:$sublen}\" == \"$substring\" ];\
    \ then\n            count=$((count + 1))\n            i=$((i + sublen))\n    \
    \    else\n            i=$((i + 1))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") =\
    \ \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local len=${#substr}\n    local count=0\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:$len}\" == \"$substr\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            count=$((count+1))\n            i=$((i+len))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:1} == ${substring:0:1}\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ ${string:$i+$j:1} != ${substring:$j:1} ]]; then\n                   \
    \ break\n                fi\n            done\n            if [[ $j -eq $len_substring\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local str=\"$1\"\n\
    \  local substr=\"$2\"\n  local count=0\n  local i=0\n  local len=${#str}\n  local\
    \ sublen=${#substr}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n      count=$((count+1))\n      i=$((i+sublen))\n  \
    \  else\n      i=$((i+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local length=${#string}\n    local\
    \ sublength=${#substring}\n    local i=0\n    while [ $i -lt $length ]; do\n \
    \       if [ \"${string:$i:$sublength}\" == \"$substring\" ]; then\n         \
    \   count=$((count+1))\n            i=$((i+sublength))\n        else\n       \
    \     i=$((i+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local string_length=${#string}\n    local substring_length=${#substring}\n \
    \   for ((i=0; i<string_length; i++)); do\n        if [[ \"${string:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: $0 <string> <substring>\"\n        exit 1\n    fi\n\
    \    local string=$1\n    local substring=$2\n    local len_string=${#string}\n\
    \    local len_substring=${#substring}\n    local count=0\n    for (( i=0; i<len_string;\
    \ i++ )); do\n        if [ \"${string:$i:$len_substring}\" == \"$substring\" ];\
    \ then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  local len=${#string}\n\
    \  local sublen=${#substring}\n  while [ $i -lt $len ]; do\n    if [ \"${string:$i:$sublen}\"\
    \ == \"$substring\" ]; then\n      count=$((count+1))\n      i=$((i+sublen))\n\
    \    else\n      i=$((i+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    local length=${#substring}\n\
    \    while [ $index -lt ${#string} ]; do\n        local substr=${string:$index:$length}\n\
    \        if [ \"$substr\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            index=$((index+length))\n        else\n            index=$((index+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local str=\"$1\"\n\
    \  local substr=\"$2\"\n  local count=0\n  local len=${#substr}\n  local i=0\n\
    \  while [ $i -lt ${#str} ]; do\n    if [ \"${str:$i:$len}\" == \"$substr\" ];\
    \ then\n      count=$((count+1))\n      i=$((i+len))\n    else\n      i=$((i+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local i=0\n    local count=0\n    while [ $i -lt ${#str}\
    \ ]; do\n        if [ ${str:$i:${#substr}} == $substr ]; then\n            count=$((count+1))\n\
    \            i=$((i+${#substr}))\n        else\n            i=$((i+1))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" == \"${substring:$j:1}\" ]]; then\n\
    \                for ((k=1; k<len_substring; k++)); do\n                    if\
    \ [[ \"${string:$i+$k:1}\" == \"${substring:$j+$k:1}\" ]]; then\n            \
    \            if [[ $k -eq $((len_substring-1)) ]]; then\n                    \
    \        count=$((count+1))\n                        fi\n                    else\n\
    \                        break\n                    fi\n                done\n\
    \            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local len=\"${#substr}\"\n    local count=0\n \
    \   for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:$len}\" == \"\
    $substr\" ]]; then\n            (( count++ ))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo \"$1\" | grep\
    \ -o \"$2\" | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local str=$1\n  local\
    \ substr=$2\n  local len=${#substr}\n  local count=0\n  for (( i=0; i<${#str};\
    \ i++ )); do\n    if [[ \"${str:$i:$len}\" == \"$substr\" ]]; then\n      (( count++\
    \ ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ \"${string:$i:1}\" == \"${substring:0:1}\"\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ \"${string:$i+$j:1}\" != \"${substring:$j:1}\" ]]; then\n           \
    \         break\n                fi\n            done\n            if [[ $j -eq\
    \ $len_substring ]]; then\n                ((count++))\n            fi\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local length=${#substring}\n    local count=0\n \
    \   local i=0\n    local j=0\n    for ((i=0; i<${#string}; i++)); do\n       \
    \ for ((j=0; j<${#substring}; j++)); do\n            if [[ ${string:$i:1} != ${substring:$j:1}\
    \ ]]; then\n                break\n            fi\n            if [[ $j -eq $((length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  local j=0\n  local len_string=${#string}\n\
    \  local len_substring=${#substring}\n  for ((i=0; i<len_string; i++)); do\n \
    \   for ((j=0; j<len_substring; j++)); do\n      if [[ \"${string:$i:1}\" != \"\
    ${substring:$j:1}\" ]]; then\n        break\n      fi\n      if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n        count=$((count+1))\n      fi\n      i=$((i+1))\n    done\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:1} == ${substring:0:1}\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ ${string:$i+$j:1} != ${substring:$j:1} ]]; then\n                   \
    \ break\n                fi\n            done\n            if [[ $j -eq $len_substring\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len=${#string}\n    local sublen=${#substring}\n    for ((i=0; i<len;\
    \ i++)); do\n        if [[ ${string:$i:$sublen} == $substring ]]; then\n     \
    \       ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#string}\n    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n\
    \        if [ \"${string:$i:$sublen}\" == \"$substring\" ]; then\n           \
    \ ((count++))\n            ((i+=sublen-1))\n        fi\n        ((i++))\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len=${#string}\n    local sublen=${#substring}\n    for ((i=0; i<len;\
    \ i++)); do\n        if [[ ${string:$i:$sublen} == $substring ]]; then\n     \
    \       ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local length=${#string}\n    local\
    \ sublength=${#substring}\n    for (( i=0; i<=$length-$sublength; i++ )); do\n\
    \        if [[ ${string:$i:$sublength} == $substring ]]; then\n            ((\
    \ count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local counter=0\n    local length=${#string}\n  \
    \  local sublength=${#substring}\n    local i=0\n    while [ $i -lt $length ];\
    \ do\n        if [ \"${string:$i:$sublength}\" == \"$substring\" ]; then\n   \
    \         counter=$((counter+1))\n            i=$((i+sublength))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $counter\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local i=0\n    local j=0\n    local count=0\n    for\
    \ ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:${#substr}} == $substr ]];\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ ${string:$i:1} != ${substring:$j:1} ]]; then\n            \
    \    break\n            fi\n            if [[ $j -eq $((len_substring-1)) ]];\
    \ then\n                count=$((count+1))\n            fi\n        done\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    local\
    \ length=${#string}\n    local sublength=${#substring}\n    while [ $index -lt\
    \ $length ]; do\n        if [ \"${string:$index:$sublength}\" == \"$substring\"\
    \ ]; then\n            ((count++))\n            ((index+=$sublength))\n      \
    \  else\n            ((index++))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local str=\"$1\"\n\
    \  local substr=\"$2\"\n  local count=0\n  local i=0\n  local len=${#str}\n  local\
    \ sublen=${#substr}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n      count=$((count+1))\n      i=$((i+sublen))\n  \
    \  else\n      i=$((i+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    local length=${#string}\n\
    \    local sublength=${#substring}\n    while [ $index -lt $length ]; do\n   \
    \     if [ \"${string:$index:$sublength}\" == \"$substring\" ]; then\n       \
    \     count=$((count+1))\n            index=$((index+sublength))\n        else\n\
    \            index=$((index+1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local length=${#substring}\n    local count=0\n \
    \   for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:$length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    local length=${#string}\n\
    \    local sublength=${#substring}\n    while [ $index -lt $length ]; do\n   \
    \     if [ \"${string:$index:$sublength}\" == \"$substring\" ]; then\n       \
    \     count=$((count+1))\n            index=$((index+sublength))\n        else\n\
    \            index=$((index+1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            ((count++))\n            ((i+=len-1))\n       \
    \ fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo \"$1\" | grep\
    \ -o \"$2\" | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local string_length=${#string}\n    local substring_length=${#substring}\n \
    \   for ((i=0; i<string_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ ${string:$i:1} != ${substring:$j:1} ]]; then\n\
    \                break\n            fi\n            if [[ $j == $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"\
    $substring\" ]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") =\
    \ \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local len_str=${#str}\n    local len_substr=${#substr}\n\
    \    local i=0\n    local count=0\n    while [ $i -lt $len_str ]; do\n       \
    \ if [ \"${str:$i:$len_substr}\" == \"$substr\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+len_substr))\n        else\n            i=$((i+1))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    local\
    \ length=${#string}\n    local sublength=${#substring}\n    while [ $index -lt\
    \ $length ]; do\n        if [ \"${string:$index:$sublength}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            index=$((index+sublength))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            ((count++))\n            ((i+=len-1))\n       \
    \ fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:1} == ${substring:0:1}\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ ${string:$i+$j:1} != ${substring:$j:1} ]]; then\n                   \
    \ break\n                fi\n            done\n            if [[ $j -eq $len_substring\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local len=${#string}\n    local\
    \ sublen=${#substring}\n    for ((i=0; i<len; i++)); do\n        if [[ \"${string:$i:$sublen}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local len=${#substr}\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            count=$((count+1))\n            i=$((i+len))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local offset=0\n    while true;\
    \ do\n        local index=$(index_of \"$str\" \"$substr\" \"$offset\")\n     \
    \   if [ \"$index\" -eq \"-1\" ]; then\n            break\n        fi\n      \
    \  count=$((count + 1))\n        offset=$((index + 1))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpo9i_yx2p.sh: line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh:
    line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of:
    command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh:
    line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer
    expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh:
    line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of:
    command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh:
    line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer
    expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh:
    line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of:
    command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh:
    line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer
    expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh:
    line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of:
    command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh:
    line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer
    expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh:
    line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of:
    command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh:
    line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh: line 19: [: : integer
    expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of: command not found\n/tmp/tmpo9i_yx2p.sh:
    line 19: [: : integer expression expected\n/tmp/tmpo9i_yx2p.sh: line 18: index_of:
    command not found\n/tmp/tmpo9i_yx2p.sh'
  stdout: None
  timestamp: 1659998187
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i i=0\n    local -i len=${#1}\n    local -i len_sub=${#2}\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  local j=0\n  local len=${#string}\n\
    \  local sublen=${#substring}\n  while [ $i -lt $len ]; do\n    j=0\n    while\
    \ [ $j -lt $sublen ] && [ \"${string:$i:1}\" == \"${substring:$j:1}\" ]; do\n\
    \      i=$((i+1))\n      j=$((j+1))\n    done\n    if [ $j -eq $sublen ]; then\n\
    \      count=$((count+1))\n    fi\n    i=$((i-j+1))\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") =\
    \ \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local i=0\n    while [[ $i -lt ${#str}\
    \ ]]; do\n        if [[ ${str:$i:${#substr}} == $substr ]]; then\n           \
    \ ((count++))\n            ((i+=${#substr}))\n        else\n            ((i++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local length=${#substring}\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$length}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+length))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#string} ]; do\n        local substring_index=0\n        while [ $substring_index\
    \ -lt ${#substring} ] && [ ${string:$index:1} == ${substring:$substring_index:1}\
    \ ]; do\n            let index++\n            let substring_index++\n        done\n\
    \        if [ $substring_index -eq ${#substring} ]; then\n            let count++\n\
    \        fi\n        let index++\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp391_lr4c.sh: line 19: [: ==: unary operator expected

    '
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [[ $i -lt $len ]]; do\n        if [[ \"\
    ${str:$i:$sublen}\" == \"$substr\" ]]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i i=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    for ((\
    \ i=0; i<=len1-len2; i++ ))\n    do\n        if [[ ${1:i:len2} == $2 ]]\n    \
    \    then\n            (( count++ ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len=${#string}\n    local sublen=${#substring}\n    for ((i=0; i<len;\
    \ i++)); do\n        for ((j=0; j<sublen; j++)); do\n            if [[ ${string:i+j:1}\
    \ != ${substring:j:1} ]]; then\n                break\n            fi\n      \
    \  done\n        if [[ $j -eq $sublen ]]; then\n            ((count++))\n    \
    \    fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    while [[ $i -lt $len_string ]]; do\n        j=0\n        while [[ $j -lt\
    \ $len_substring ]]; do\n            if [[ ${string:$i:1} == ${substring:$j:1}\
    \ ]]; then\n                ((j++))\n                ((i++))\n            else\n\
    \                break\n            fi\n        done\n        if [[ $j -eq $len_substring\
    \ ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n \
    \   echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n            \
    \    ((i++))\n            else\n                break\n            fi\n      \
    \  done\n        if [[ $j -eq $len_substring ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [[ $i -lt $len ]]; do\n        if [[\
    \ ${string:$i:$sublen} == $substring ]]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local len=${#substr}\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            count=$((count+1))\n            i=$((i+len))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:1} == ${substring:0:1}\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ ${string:$i+$j:1} != ${substring:$j:1} ]]; then\n                   \
    \ break\n                fi\n            done\n            if [[ $j -eq $len_substring\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local len=${#substring}\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$len}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n        fi\n    \
    \    i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local len=${#substring}\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$len}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n        fi\n    \
    \    i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local len_str=${#str}\n    local len_substr=${#substr}\n\
    \    local count=0\n    local i=0\n    while [ $i -lt $len_str ]; do\n       \
    \ if [ \"${str:$i:$len_substr}\" == \"$substr\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+len_substr))\n        else\n            i=$((i+1))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local len=${#substr}\n    local i=0\n\
    \    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"$substr\"\
    \ ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n  \
    \  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local length=${#substring}\n  local\
    \ i=0\n  while [ $i -lt ${#string} ]; do\n    if [ \"${string:$i:$length}\" ==\
    \ \"$substring\" ]; then\n      count=$((count+1))\n      i=$((i+length))\n  \
    \  else\n      i=$((i+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local index=0\n  local length=${#substring}\n\
    \  while [ $index -lt ${#string} ]; do\n    if [ \"${string:$index:$length}\"\
    \ == \"$substring\" ]; then\n      ((count++))\n      ((index+=$length))\n   \
    \ else\n      ((index++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local length=${#substring}\n    local count=0\n \
    \   local i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$length}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+length))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i count=0\n  local -i len1=${#1}\n  local -i\
    \ len2=${#2}\n  for ((i=0; i<len1; i++)); do\n    if [[ ${1:i:1} == ${2:0:1} ]];\
    \ then\n      for ((j=i, k=0; j<len1 && k<len2; j++, k++)); do\n        if [[\
    \ ${1:j:1} != ${2:k:1} ]]; then\n          break\n        fi\n      done\n   \
    \   if [[ $k -eq $len2 ]]; then\n        ((count++))\n      fi\n    fi\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ ${string:$i:1} != ${substring:$j:1} ]]; then\n            \
    \    break\n            fi\n            if [[ $j == $((len_substring-1)) ]]; then\n\
    \                count=$((count+1))\n            fi\n        done\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local substring_length=${#substring}\n    local string_length=${#string}\n \
    \   for ((i=0; i<string_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local len=${#str}\n    local sublen=${#substr}\n\
    \    for (( i=0; i<len; i++ )); do\n        if [[ \"${str:$i:$sublen}\" == \"\
    $substr\" ]]; then\n            (( count++ ))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local i=0\n    local count=0\n    while [ $i -lt\
    \ ${#str} ]; do\n        if [ \"${str:$i:${#substr}}\" == \"$substr\" ]; then\n\
    \            ((count++))\n            ((i+=$((${#substr}-1))))\n        else\n\
    \            ((i++))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659998187
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local len=${#substring}\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$len}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n        fi\n    \
    \    i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local sub=\"$2\"\n    local count=0\n    local offset=0\n    while [[ \"\
    ${str:$offset:${#sub}}\" == \"$sub\" ]]; do\n        count=$((count + 1))\n  \
    \      offset=$((offset + 1))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            ((count++))\n  \
    \          ((i+=$sublen))\n        else\n            ((i++))\n        fi\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            ((count++))\n            ((i+=sublen-1))\n\
    \        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    while\
    \ [ $i -lt $len_string ]; do\n        j=0\n        while [ $j -lt $len_substring\
    \ ] && [ ${string:$i:1} == ${substring:$j:1} ]; do\n            ((i++))\n    \
    \        ((j++))\n        done\n        if [ $j -eq $len_substring ]; then\n \
    \           ((count++))\n        fi\n        ((i++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0bzqp839.sh: line 22: [: ==: unary operator expected

    '
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local length=${#substring}\n    local count=0\n \
    \   for ((i=0; i<${#string}; i++)); do\n        if [[ \"${string:$i:$length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n            \
    \    ((i++))\n            else\n                break\n            fi\n      \
    \  done\n        if [[ $j -eq $len_substring ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local length=${#substring}\n    local count=0\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:$length}\"\
    \ == \"$substring\" ]]; then\n            count=$(( count + 1 ))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local length=${#string}\n    local\
    \ sublength=${#substring}\n    for (( i=0; i<$length; i++ )); do\n        if [[\
    \ ${string:$i:$sublength} == $substring ]]; then\n            (( count++ ))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n    \
    \            break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local len=${#substr}\n    local count=0\n    for ((\
    \ i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:$len}\" == \"$substr\"\
    \ ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len=${#string}\n    local sublen=${#substring}\n    for ((i=0; i<len;\
    \ i++)); do\n        if [[ ${string:$i:$sublen} == $substring ]]; then\n     \
    \       ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#string}\n    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n\
    \        if [ \"${string:$i:$sublen}\" == \"$substring\" ]; then\n           \
    \ count=$((count+1))\n            i=$((i+sublen))\n        else\n            i=$((i+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#string} ]; do\n        if [ \"${string:$index:${#substring}}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local str=\"$1\"\n\
    \  local substr=\"$2\"\n  local count=0\n  local i=0\n  local len=${#str}\n  local\
    \ sublen=${#substr}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n      count=$((count+1))\n      i=$((i+sublen))\n  \
    \  else\n      i=$((i+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            count=$((count+1))\n            i=$((i+len))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local pos=0\n    while true;\
    \ do\n        pos=$(str_index \"$str\" \"$substr\" \"$pos\")\n        if [ \"\
    $pos\" == \"-1\" ]; then\n            break\n        fi\n        count=$((count\
    \ + 1))\n        pos=$((pos + 1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh:
    line 18: str_index: command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index:
    command not found\n/tmp/tmpc15w35o7.sh: line 18: str_index: command not found\n/tmp/t'
  stdout: None
  timestamp: 1659998187
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local len=${#substr}\n    local i=0\n\
    \    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"$substr\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+len))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ [[ \"${string:$index:${#substring}}\" == \"$substring\" ]]; do\n        count=$((count\
    \ + 1))\n        index=$((index + ${#substring}))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i len=$((${#1} - ${#2} + 1))\n    local -i i=0\n    while ((i < len));\
    \ do\n        if [[ ${1:i:${#2}} == $2 ]]; then\n            ((count++))\n   \
    \     fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate\
    \ \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n \
    \   local len=${#str}\n    local sublen=${#substr}\n    for ((i=0; i<len; i++));\
    \ do\n        for ((j=0; j<sublen; j++)); do\n            if [[ \"${str:i+j:1}\"\
    \ != \"${substr:j:1}\" ]]; then\n                break\n            fi\n     \
    \   done\n        if [[ \"$j\" -eq \"$sublen\" ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local length=${#substring}\n\
    \    local i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:$length}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n            ((i+=$length-1))\n\
    \        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ ${string:$i:1} != ${substring:$j:1} ]]; then\n            \
    \    break\n            fi\n            if [[ $j == $((len_substring-1)) ]]; then\n\
    \                count=$((count+1))\n            fi\n        done\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    local length=${#string}\n\
    \    local sublength=${#substring}\n    while [ $index -lt $length ]; do\n   \
    \     if [ \"${string:$index:$sublength}\" == \"$substring\" ]; then\n       \
    \     count=$((count+1))\n            index=$((index+sublength))\n        else\n\
    \            index=$((index+1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ [[ $index -lt ${#string} ]]; do\n        if [[ ${string:$index:${#substring}}\
    \ == $substring ]]; then\n            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  while [ $i -lt ${#string}\
    \ ]; do\n    if [ \"${string:$i:${#substring}}\" == \"$substring\" ]; then\n \
    \     count=$((count+1))\n      i=$((i+${#substring}))\n    else\n      i=$((i+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local length_string=${#string}\n    local length_substring=${#substring}\n\
    \    for ((i=0; i<length_string; i++)); do\n        for ((j=0; j<length_substring;\
    \ j++)); do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((length_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            ((count++))\n  \
    \          ((i+=$sublen))\n        else\n            ((i++))\n        fi\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#string}\n    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n\
    \        if [ \"${string:$i:$sublen}\" == \"$substring\" ]; then\n           \
    \ count=$((count+1))\n            i=$((i+sublen))\n        else\n            i=$((i+1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:1} == ${substring:0:1}\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ ${string:$i+$j:1} != ${substring:$j:1} ]]; then\n                   \
    \ break\n                fi\n            done\n            if [[ $j -eq $len_substring\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local len=${#substr}\n    local count=0\n    for ((\
    \ i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:$len}\" == \"$substr\"\
    \ ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:$len_substring} ==\
    \ $substring ]]; then\n            ((count++))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local len_substring=${#substring}\n\
    \    local len_string=${#string}\n    for (( i=0; i<len_string; i++ )); do\n \
    \       if [[ \"${string:$i:$len_substring}\" == \"$substring\" ]]; then\n   \
    \         (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#string}\n    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n\
    \        if [ \"${string:$i:$sublen}\" == \"$substring\" ]; then\n           \
    \ ((count++))\n            ((i+=$sublen-1))\n        fi\n        ((i++))\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            ((count++))\n            ((i+=$len-1))\n      \
    \  fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local length=${#string}\n    local\
    \ sublength=${#substring}\n    for (( i=0; i<$length; i++ )); do\n        if [[\
    \ \"${string:$i:$sublength}\" == \"$substring\" ]]; then\n            (( count++\
    \ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  local j=0\n  local len_string=${#string}\n\
    \  local len_substring=${#substring}\n  for ((i=0; i<len_string; i++)); do\n \
    \   for ((j=0; j<len_substring; j++)); do\n      if [[ ${string:i+j:1} != ${substring:j:1}\
    \ ]]; then\n        break\n      fi\n    done\n    if [[ $j -eq $len_substring\
    \ ]]; then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    local\
    \ length=${#string}\n    local sublength=${#substring}\n    while [ $index -lt\
    \ $length ]; do\n        if [ \"${string:$index:$sublength}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            index=$((index+sublength))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo \"$1\" | grep\
    \ -o \"$2\" | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local length=${#string}\n    local\
    \ sublength=${#substring}\n    local i=0\n    for ((i=0; i<length; i++)); do\n\
    \        if [[ ${string:$i:$sublength} == $substring ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local str=\"$1\"\n\
    \  local substr=\"$2\"\n  local substr_len=${#substr}\n  local str_len=${#str}\n\
    \  local count=0\n  local i=0\n  while [ $i -lt $((str_len - substr_len + 1))\
    \ ]; do\n    if [ \"${str:$i:$substr_len}\" == \"$substr\" ]; then\n      count=$((count\
    \ + 1))\n      i=$((i + substr_len))\n    else\n      i=$((i + 1))\n    fi\n \
    \ done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        local\
    \ substr=${string:$i:$sublen}\n        if [ \"$substr\" == \"$substring\" ]; then\n\
    \            ((count++))\n        fi\n        ((i++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo $1 | grep\
    \ -o $2 | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            ((count++))\n            ((i+=sublen-1))\n\
    \        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local len=${#substr}\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"\
    $substr\" ]; then\n            count=$((count+1))\n            i=$((i+len))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [[ $i -lt $len ]]; do\n        if [[\
    \ ${string:$i:$sublen} == $substring ]]; then\n            ((count++))\n     \
    \       ((i+=sublen))\n        else\n            ((i++))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local -i count=0\n\
    \    local -i i=0\n    local -i len=$((${#1} - ${#2} + 1))\n    while [ $i -lt\
    \ $len ]; do\n        if [ \"${1:$i:${#2}}\" == \"$2\" ]; then\n            ((count++))\n\
    \        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ ${string:$i:1} != ${substring:$j:1} ]]; then\n            \
    \    break\n            fi\n            if [[ $j -eq $((len_substring-1)) ]];\
    \ then\n                count=$((count+1))\n            fi\n        done\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#string} ]; do\n        if [ \"${string:$index:${#substring}}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=\"$1\"\
    \n    local substr=\"$2\"\n    local count=0\n    local i=0\n    local len=${#str}\n\
    \    local sublen=${#substr}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:$sublen}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ length=${#string}\n    local sublength=${#substring}\n    while [ $i -lt $length\
    \ ]; do\n        if [ \"${string:$i:$sublength}\" == \"$substring\" ]; then\n\
    \            count=$((count+1))\n            i=$((i+sublength))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        if [[ ${string:$i:1} == ${substring:0:1}\
    \ ]]; then\n            for ((j=0; j<len_substring; j++)); do\n              \
    \  if [[ ${string:$i+$j:1} != ${substring:$j:1} ]]; then\n                   \
    \ break\n                fi\n            done\n            if [[ $j -eq $len_substring\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local len=${#substr}\n    local i=0\n\
    \    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"$substr\"\
    \ ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n  \
    \  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local count=0\n    local len=${#substr}\n    local i=0\n\
    \    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:$len}\" == \"$substr\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+len))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ [ $index -lt ${#string} ]; do\n        if [ \"${string:$index:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n    \
    \            break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    echo \"$1\" | grep\
    \ -o \"$2\" | wc -l\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i=0\n  local len=${#string}\n\
    \  local sublen=${#substring}\n  while [ $i -lt $len ]; do\n    if [ \"${string:$i:$sublen}\"\
    \ == \"$substring\" ]; then\n      ((count++))\n      ((i+=sublen-1))\n    fi\n\
    \    ((i++))\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local length=${#string}\n    local\
    \ sublength=${#substring}\n    local i=0\n    while [ $i -lt $length ]; do\n \
    \       if [ \"${string:$i:$sublength}\" == \"$substring\" ]; then\n         \
    \   ((count++))\n            ((i+=$sublength))\n        else\n            ((i++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local offset=0\n    local\
    \ length=${#substring}\n    while true; do\n        local index=$(index_of \"\
    $string\" \"$substring\" \"$offset\")\n        if [ \"$index\" -eq -1 ]; then\n\
    \            break\n        fi\n        count=$((count + 1))\n        offset=$((index\
    \ + length))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpiguh1h_r.sh: line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh:
    line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of:
    command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh:
    line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer
    expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh:
    line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of:
    command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh:
    line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer
    expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh:
    line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of:
    command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh:
    line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer
    expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh:
    line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of:
    command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh:
    line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer
    expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh:
    line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of:
    command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh:
    line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh: line 20: [: : integer
    expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of: command not found\n/tmp/tmpiguh1h_r.sh:
    line 20: [: : integer expression expected\n/tmp/tmpiguh1h_r.sh: line 19: index_of:
    command not found\n/tmp/tmpiguh1h_r.sh'
  stdout: None
  timestamp: 1659998187
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local str=$1\n\
    \    local substr=$2\n    local len=${#substr}\n    local count=0\n    for ((\
    \ i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:$len}\" == \"$substr\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+sublen))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    if [ -z \"$1\"\
    \ ] || [ -z \"$2\" ]; then\n        echo \"0\"\n        return\n    fi\n    local\
    \ str=\"$1\"\n    local substr=\"$2\"\n    local len_str=${#str}\n    local len_substr=${#substr}\n\
    \    local count=0\n    for (( i=0; i<len_str; i++ )); do\n        if [ \"${str:i:len_substr}\"\
    \ == \"$substr\" ]; then\n            count=$((count+1))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" == \"${substring:$j:1}\" ]]; then\n    \
    \            ((count++))\n                ((i++))\n            else\n        \
    \        break\n            fi\n        done\n    done\n    echo $count\n}\n\n\
    candidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local len=${#string}\n\
    \    local sublen=${#substring}\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${string:$i:$sublen}\" == \"$substring\" ]; then\n            ((count++))\n  \
    \          ((i+=sublen-1))\n        fi\n        ((i++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local pos=0\n    while [[ $pos\
    \ -lt ${#string} ]]; do\n        if [[ ${string:$pos:${#substring}} == $substring\
    \ ]]; then\n            (( count++ ))\n            (( pos += ${#substring} ))\n\
    \        else\n            (( pos++ ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    for\
    \ ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++)); do\n\
    \            if [[ \"${string:$i:1}\" == \"${substring:$j:1}\" ]]; then\n    \
    \            ((i++))\n            else\n                break\n            fi\n\
    \        done\n        if [[ $j -eq $len_substring ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local len_string=${#string}\n    local len_substring=${#substring}\n    while\
    \ [ $i -lt $len_string ]; do\n        j=0\n        while [ $j -lt $len_substring\
    \ ]; do\n            if [ \"${string:$i:1}\" != \"${substring:$j:1}\" ]; then\n\
    \                break\n            fi\n            i=$((i+1))\n            j=$((j+1))\n\
    \        done\n        if [ $j -eq $len_substring ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i-j+1))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998182
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local index=0\n  local length=${#string}\n\
    \  local sublength=${#substring}\n  while [ $index -lt $length ]; do\n    local\
    \ index_of_substring=$(index_of \"$string\" \"$substring\" $index)\n    if [ $index_of_substring\
    \ -eq -1 ]; then\n      break\n    fi\n    count=$((count + 1))\n    index=$((index_of_substring\
    \ + sublength))\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmp_s5cqc7d.sh: line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh:
    line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of:
    command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh:
    line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary
    operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh:
    line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of:
    command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh:
    line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary
    operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh:
    line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of:
    command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh:
    line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary
    operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh:
    line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of:
    command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh:
    line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary
    operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh:
    line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of:
    command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh:
    line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -eq: unary
    operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of: command not found\n/tmp/tmp_s5cqc7d.sh:
    line 21: [: -eq: unary operator expected\n/tmp/tmp_s5cqc7d.sh: line 20: index_of:
    command not found\n/tmp/tmp_s5cqc7d.sh: line 21: [: -e'
  stdout: None
  timestamp: 1659998187

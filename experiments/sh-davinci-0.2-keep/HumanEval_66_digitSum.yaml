name: HumanEval_66_digitSum
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
  \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n#\
  \ digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
  # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
  ) => 153\n#\n# $1 is a string\ndigitSum() {\n"
tests: "}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[\
  \ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n\
  \    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") =\
  \ \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
  \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
completions: ["    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum+${char}))\n\
    \        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum", "   \
    \ echo \"$1\" | grep -o \"[A-Z]\" | awk '{sum += $1} END {print sum}'", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       if [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\"\
    \ \"'$char\") ))\n        fi\n    done\n    echo $sum", "    echo \"$1\" | grep\
    \ -o '[A-Z]' | awk '{sum+=$1} END {print sum}'", "  local sum=0\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $char =~ [A-Z] ]];\
    \ then\n      sum=$((sum + char))\n    fi\n  done\n  echo $sum", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local c=${1:i:1}\n        if [[\
    \ $c =~ [A-Z] ]]; then\n            sum=$(( sum + c ))\n        fi\n    done\n\
    \    echo $sum", "    # Write your code here\n    #\n    #\n    #\n    #\n   \
    \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n", "  \
    \  local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum+${char}))\n\
    \        fi\n    done\n    echo $sum", "    # Write your code here\n    echo \"\
    $1\" | grep -o '[A-Z]' | awk '{ sum += $1 } END { print sum }'", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\"\
    ) ))\n        fi\n    done\n    echo $sum", "    # Write your code here\n    echo\
    \ \"$1\" | grep -o '[A-Z]' | awk '{sum+=$1} END {print sum}'", "  local sum=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $char\
    \ =~ [A-Z] ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n    fi\n\
    \  done\n  echo $sum", "    # Write your code here\n    echo $1 | grep -o '[A-Z]'\
    \ | awk '{s+=$1} END {print s}'", "  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:$i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum", "  local\
    \ sum=0\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[\
    \ $char =~ [A-Z] ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n\
    \    fi\n  done\n  echo $sum", "    # Write your code here\n    #\n    #\n   \
    \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n", "    echo \"$1\" | grep -o '[A-Z]' | awk '{sum += $1} END {print sum}'",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=\"${1:$i:1}\"\
    \n        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf\
    \ \"%d\" \"'$char\") ))\n        fi\n    done\n    echo $sum", "    local -i sum=0\n\
    \    local -i i=0\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n \
    \       local -i ascii=$(printf \"%d\" \"'${1:i:1}\")\n        if ((ascii >= 65\
    \ && ascii <= 90)); then\n            ((sum += ascii))\n        fi\n    done\n\
    \    echo $sum"]
stop_tokens:
- "\n}"

name: HumanEval_87_get_row
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given a 2 dimensional data, as a nested lists,\n#\
  \ which is similar to matrix, however, unlike matrices,\n# each row may contain\
  \ a different number of columns.\n# Given lst, and integer x, find integers x in\
  \ the list,\n# and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n#\
  \ each tuple is a coordinate - (row, columns), starting with 0.\n# Sort coordinates\
  \ initially by rows in ascending order.\n# Also, sort coordinates of the row by\
  \ columns in descending order.\n# Examples:\n# get_row([\n# [1,2,3,4,5,6],\n# [1,2,3,4,1,6],\n\
  # [1,2,3,4,5,1]\n# ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n# get_row([],\
  \ 1) == []\n# get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]\n#\n# $1 is a newline-separated,\
  \ space-separated list\n# $2 is an integer\nget_row() {\n"
tests: "}\n\ncandidate() {\n    get_row \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1 4\\\
  n1 0\\n2 5\\n2 0\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4\
  \ 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\" \"2\") = \"0 1\\n1 1\\n2 1\\n3\
  \ 1\\n4 1\\n5 1\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 1 3 4 5\
  \ 6\\n1 2 1 4 5 6\\n1 2 3 1 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1\
  \ 0\\n2 1\\n2 0\\n3 2\\n3 0\\n4 3\\n4 0\\n5 4\\n5 0\\n6 5\\n6 0\" ]]\n    [[ $(candidate\
  \ \"\" \"1\") = \"\" ]]\n    [[ $(candidate \"1\" \"2\") = \"\" ]]\n    [[ $(candidate\
  \ \"\\n1\\n1 2 3\" \"3\") = \"2 2\" ]]\n}\n\nrun_test"
completions: ["  local -a lst=()\n  local -i x=$2\n  local -i i=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i len=0\n  local -i len2=0\n  local -i len3=0\n  local\
    \ -i len4=0\n  local -i len5=0\n  local -i len6=0\n  local -i len7=0\n  local\
    \ -i len8=0\n  local -i len9=0\n  local -i len10=0\n  local -i len11=0\n  local\
    \ -i len12=0\n  local -i len13=0\n  local -i len14=0\n  local -i len15=0\n  local\
    \ -i len16=0\n  local -i len17=0\n  local -i len18=0\n  local -i len19=0\n  local\
    \ -i len20=0\n  local -i len21=0\n  local -i len22=0\n  local -i len23=0\n  local\
    \ -i len24=0\n  local -i len25=0\n  local -i len26=0\n  local -i len27=0\n  local\
    \ -i len28=0\n  local -i len29=0\n  local -i len30=0\n  local -i len31=0\n  local\
    \ -i len32=0\n  local -i len33=0\n  local -i len34=0\n  local -i len35=0\n  local\
    \ -i len36=0\n  local -i len37=0\n  local -i len38=0\n  local -i len39=0\n  local\
    \ -i len40=0\n  local -i len41=0\n  local -i len42=0\n  local -i len43=0\n  local\
    \ -i len44=0\n  local -i len45=0\n  local -i len46=0\n  local -i len47=0\n  local\
    \ -i len48=0\n  local -i len49=0\n  local -i len50=0\n  local -i len51=0\n  local\
    \ -i len52=0\n  local -", "    local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n\
    \    local -a res=()\n    local -i x=$2\n    local -i i=0\n    local -i j=0\n\
    \    for i in \"${!lst[@]}\"; do\n        for j in \"${!lst[$i]}\"; do\n     \
    \       if [[ ${lst[$i][$j]} -eq $x ]]; then\n                res+=(\"($i, $j)\"\
    )\n            fi\n        done\n    done\n    echo \"${res[@]}\" | tr ' ' '\\\
    n' | sort -t, -k1n -k2nr | tr '\\n' ' '", "    local -a lst=()\n    local -a row=()\n\
    \    local -a ret=()\n    local -i i=0\n    local -i j=0\n    local -i x=$2\n\
    \    local -i len=0\n    local -i len2=0\n    local -i len3=0\n    local -i len4=0\n\
    \    local -i len5=0\n    local -i len6=0\n    local -i len7=0\n    local -i len8=0\n\
    \    local -i len9=0\n    local -i len10=0\n    local -i len11=0\n    local -i\
    \ len12=0\n    local -i len13=0\n    local -i len14=0\n    local -i len15=0\n\
    \    local -i len16=0\n    local -i len17=0\n    local -i len18=0\n    local -i\
    \ len19=0\n    local -i len20=0\n    local -i len21=0\n    local -i len22=0\n\
    \    local -i len23=0\n    local -i len24=0\n    local -i len25=0\n    local -i\
    \ len26=0\n    local -i len27=0\n    local -i len28=0\n    local -i len29=0\n\
    \    local -i len30=0\n    local -i len31=0\n    local -i len32=0\n    local -i\
    \ len33=0\n    local -i len34=0\n    local -i len35=0\n    local -i len36=0\n\
    \    local -i len37=0\n    local -i len38=0\n    local -i len39=0\n    local -i\
    \ len40=0\n    local -i len41=0\n    local -i len42=0\n    local -i len43=0\n\
    \    local -i len44=0\n    local -i len45=0\n    local -i len46=0\n    local -i\
    \ len47=0\n    local -i len48=0\n    local -i len49=0\n    local -i len50=0\n\
    \    local -i len51=0\n    local -i", "    local -a lst\n    local -i x\n    local\
    \ -i i j\n    local -a row\n    local -a res\n    IFS=$'\\n' read -d '' -ra lst\
    \ <<< \"$1\"\n    x=$2\n    for ((i=0; i<${#lst[@]}; i++)); do\n        IFS='\
    \ ' read -r -a row <<< \"${lst[$i]}\"\n        for ((j=0; j<${#row[@]}; j++));\
    \ do\n            if [[ ${row[$j]} -eq $x ]]; then\n                res+=(\"($i,\
    \ $j)\")\n            fi\n        done\n    done\n    echo \"${res[@]}\" | sort\
    \ -t, -k1n -k2nr", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=\"\"\n    while read -r line; do\n        col=0\n     \
    \   for i in $line; do\n            if [[ $i -eq $x ]]; then\n               \
    \ res=\"$res($row, $col) \"\n            fi\n            col=$((col+1))\n    \
    \    done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"$res\" |\
    \ tr ' ' '\\n' | sort -t ',' -k 1n -k 2nr | tr '\\n' ' '", "    local list=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local result=()\n    while\
    \ read -r line; do\n        col=0\n        for num in $line; do\n            if\
    \ [[ $num -eq $x ]]; then\n                result+=(\"($row, $col)\")\n      \
    \      fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$list\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n -k1\
    \ -k2 -r | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local res=()\n    for i in $lst; do\n        col=0\n   \
    \     for j in $i; do\n            if [[ $j -eq $x ]]; then\n                res+=(\"\
    ($row, $col)\")\n            fi\n            col=$((col+1))\n        done\n  \
    \      row=$((row+1))\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort\
    \ -t ',' -k1,1n -k2,2nr | tr '\\n' ' '", "    local -a lst=()\n    local -i x=$2\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local\
    \ -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local\
    \ -i ppp=", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local\
    \ col=0\n    local result=()\n    while read -r line; do\n        col=0\n    \
    \    for i in $line; do\n            if [ \"$i\" == \"$x\" ]; then\n         \
    \       result+=(\"($row, $col)\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t ',' -k1,1n -k2,2nr | tr '\\n' ' '", "    local lst=$1\n\
    \    local x=$2\n    local i=0\n    local j=0\n    local res=()\n    while read\
    \ -r line; do\n        j=0\n        for num in $line; do\n            if [[ $num\
    \ -eq $x ]]; then\n                res+=($i,$j)\n            fi\n            ((j++))\n\
    \        done\n        ((i++))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t, -k1n -k2nr | tr '\\n' ' '", "    local -a list=()\n\
    \    local -a row=()\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i x=$2\n    local -i n=0\n    local -i m=0\n   \
    \ local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
    \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
    \    local -i l=0\n    local -i o=0\n    local -i max=0\n    local -i min=0\n\
    \    local -i max_index=0\n    local -i min_index=0\n    local -i max_index_row=0\n\
    \    local -i min_index_row=0\n    local -i max_index_col=0\n    local -i min_index_col=0\n\
    \    local -i max_index_row_col=0\n    local -i min_index_row_col=0\n    local\
    \ -i max_index_row_col_row=0\n    local -i min_index_row_col_row=0\n    local\
    \ -i max_index_row_col_col=0\n    local -i min_index_row_col_col=0\n    local\
    \ -i max_index_row_col_row_col=0\n    local -i min_index_row_col_row_col=0\n \
    \   local -i max_index_row_col_row_col_row=0\n    local -i min_index_row_col_row_col_row=0\n\
    \    local -i max_index_row_col_row_col_col=0\n    local -i min_index", "    local\
    \ lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=\"\
    \"\n    while read line; do\n        col=0\n        for i in $line; do\n     \
    \       if [ $i -eq $x ]; then\n                result=\"$result ($row, $col)\"\
    \n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"$result\"", "    local -a lst=($(echo \"$1\"\
    \ | tr ' ' '\\n'))\n    local x=$2\n    local -a res=()\n    local -i i=0\n  \
    \  local -i j=0\n    for i in \"${!lst[@]}\"; do\n        for j in \"${!lst[$i]}\"\
    ; do\n            if [[ \"${lst[$i][$j]}\" -eq \"$x\" ]]; then\n             \
    \   res+=(\"($i, $j)\")\n            fi\n        done\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t ',' -k1n -k2nr | tr '\\n' ' '", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i -eq $x ]]; then\n                result+=(\"($row, $col)\")\n\
    \            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort\
    \ -t ',' -k1n -k2nr | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local\
    \ -a result\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a row_col_sorted_desc\n    local -a row_col_sorted_desc_str\n\
    \    local -a row_col_sorted_desc_str_sorted\n    local -a row_col_sorted_desc_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted\n    local -a row_col_sorted_desc_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted\n    local\
    \ -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str\n    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col", "    local -a lst=()\n    local -a row=()\n    local -a\
    \ col=()\n    local -a res=()\n    local -i i=0\n    local -i j=0\n    local -i\
    \ k=0\n    local -i n=0\n    local -i m=0\n    local -i x=$2\n    local -i y=0\n\
    \    local -i z=0\n    local -i w=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local\
    \ -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i l=0\n\
    \    local -i o=0\n    local -i max=0\n    local -i min=0\n    local -i max_row=0\n\
    \    local -i max_col=0\n    local -i min_row=0\n    local -i min_col=0\n    local\
    \ -i max_row_index=0\n    local -i max_col_index=0\n    local -i min_row_index=0\n\
    \    local -i min_col_index=0\n    local -i max_row_index_tmp=0\n    local -i\
    \ max_col_index_tmp=0\n    local -i min_row_index_tmp=0\n    local -i min_col_index_tmp=0\n\
    \    local -i max_row_index_tmp2=0\n    local -i max_col_index_tmp2=0\n    local\
    \ -i min_row_index_tmp2=0\n    local -i min_col_index_tmp2=0\n    local -i max_row_index_tmp3=0\n\
    \    local -i max_col_index_tmp3=0\n    local -i min_row_index_tmp3=0\n    local\
    \ -i min", "    local -a lst=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i x=$2\n    local -i y=0\n    local -i z=0\n    local -i w=0\n    local -i\
    \ k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i a=0\n    local -i b=0\n\
    \    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i\
    \ ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i\
    \ iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local\
    \ -i qqq=0\n    local -i rrr=0\n    local -i sss=0\n    local -i ttt", "    local\
    \ list=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    while read -r line; do\n        col=0\n        for i in $line;\
    \ do\n            if [[ $i == $x ]]; then\n                result+=(\"($row, $col)\"\
    )\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$list\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort\
    \ -t ',' -k1n -k2nr | tr '\\n' ' '", "    local -a arr\n    local -a res\n   \
    \ local -i i j\n    local -i n m\n    local -i x\n    local -i x_count\n    local\
    \ -i x_index\n    local -i x_row\n    local -i x_col\n    local -i x_row_count\n\
    \    local -i x_row_index\n    local -i x_row_col\n    local -i x_row_col_count\n\
    \    local -i x_row_col_index\n    local -i x_row_col_row\n    local -i x_row_col_col\n\
    \    local -i x_row_col_row_count\n    local -i x_row_col_row_index\n    local\
    \ -i x_row_col_row_col\n    local -i x_row_col_row_col_count\n    local -i x_row_col_row_col_index\n\
    \    local -i x_row_col_row_col_row\n    local -i x_row_col_row_col_col\n    local\
    \ -i x_row_col_row_col_row_count\n    local -i x_row_col_row_col_row_index\n \
    \   local -i x_row_col_row_col_row_col\n    local -i x_row_col_row_col_row_col_count\n\
    \    local -i x_row_col_row_col_row_col_index\n    local -i x_row_col_row_col_row_col_row\n\
    \    local -i x_row_col_row_col_row_col_col\n    local -i x_row_col_row_col_row_col_row_count\n\
    \    local -i x_row_col_row_col_row_col_row_index\n    local -i x_row_col_row_col_row_col_row_col\n\
    \    local -i x_row_col_row_col_row_col_row_col_count\n    local -i x_row_col_row_col_row_col_row_col_index\n\
    \    local -i x_row_col_row_col_row", "    local lst=$1\n    local x=$2\n    local\
    \ i=0\n    local j=0\n    local row=0\n    local col=0\n    local res=()\n   \
    \ while read -r line; do\n        j=0\n        for num in $line; do\n        \
    \    if [ $num -eq $x ]; then\n                res+=($row,$j)\n            fi\n\
    \            j=$((j+1))\n        done\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t, -k1,1n -k2,2nr | tr '\\\
    n' ' '"]
stop_tokens:
- "\n}"

name: HumanEval_59_largest_prime_factor
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and is\
  \ not a prime.\n# >>> largest_prime_factor(13195)\n# 29\n# >>> largest_prime_factor(2048)\n\
  # 2\n#\n# $1 is an integer\nlargest_prime_factor() {\n"
tests: "}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
  \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
  \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
completions: ["    local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n      \
    \  if [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n        else\n   \
    \         i=$((i + 1))\n        fi\n    done\n    echo $n", "    local n=$1\n\
    \    local i=2\n    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n\
    \            n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n", "    local n=$1\n    local i=2\n    while [ $((n % i))\
    \ -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [ $n -eq 1 ]; then\n   \
    \     echo $i\n    else\n        echo $(largest_prime_factor $n)\n    fi", " \
    \   local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n\
    \ % i)) -eq 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo $n", "    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i", "    local n=$1\n    local i=2\n    while (( i < n )); do\n        if ((\
    \ n % i == 0 )); then\n            local n=$(( n / i ))\n            local i=2\n\
    \        else\n            (( i++ ))\n        fi\n    done\n    echo $n", "  \
    \  local n=$1\n    local i=2\n    local max=0\n    while [ $i -le $n ]; do\n \
    \       if [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n            max=$i\n\
    \        else\n            i=$((i + 1))\n        fi\n    done\n    echo $max",
  "    local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n %\
    \ i)) -eq 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo $n", "    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n", "    local n=$1\n    local i=2\n    local max=0\n    while [ $i -le $n\
    \ ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            max=$i\n         \
    \   n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $max", "    local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n\
    \        if [ $((n % i)) -eq 0 ]; then\n            local n=$((n / i))\n     \
    \   else\n            local i=$((i + 1))\n        fi\n    done\n    echo $n",
  "    local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n %\
    \ i)) -eq 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo $n", "    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n", "    local n=$1\n    local i=2\n    while [[ $((n % i)) -eq 0 ]];\
    \ do\n        n=$((n / i))\n    done\n    if [[ $n -eq 1 ]]; then\n        echo\
    \ $i\n    else\n        echo $n\n    fi", "    local n=$1\n    local i=2\n   \
    \ while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n           \
    \ n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n", "    local n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n \
    \       if [ $(($n % $i)) -eq 0 ]; then\n            n=$(($n / $i))\n        else\n\
    \            i=$(($i + 1))\n        fi\n    done\n    echo $n", "    local n=$1\n\
    \    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ];\
    \ then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n   \
    \     fi\n    done\n    echo $n", "    local n=$1\n    local i=2\n    while ((\
    \ i * i <= n )); do\n        if (( n % i == 0 )); then\n            n=$(( n /\
    \ i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo $n",
  "    local n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n", "    local n=$1\n    local i=2\n    while\
    \ ((i < n)); do\n        if ((n % i == 0)); then\n            n=$((n / i))\n \
    \       else\n            ((i++))\n        fi\n    done\n    echo $n"]
stop_tokens:
- "\n}"

name: HumanEval_105_by_length
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n# reverse the resulting array, and then replace each digit\
  \ by its corresponding name from\n# \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n# For example:\n# arr = [2, 1, 1, 4,\
  \ 5, 8, 2, 3]   \n# -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n# -> reverse arr ->\
  \ [8, 5, 4, 3, 2, 2, 1, 1]\n# return [\"Eight\", \"Five\", \"Four\", \"Three\",\
  \ \"Two\", \"Two\", \"One\", \"One\"]\n# If the array is empty, return an empty\
  \ array:\n# arr = []\n# return []\n# If the array has any strange number ignore\
  \ it:\n# arr = [1, -1 , 55] \n# -> sort arr -> [-1, 1, 55]\n# -> reverse arr ->\
  \ [55, 1, -1]\n# return = ['One']\n#\n# $1 is a space-separated list\nby_length()\
  \ {\n"
tests: "}\n\ncandidate() {\n    by_length \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"2 1 1 4 5 8 2 3\") = \"Eight Five Four Three Two Two One One\" ]]\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -1 55\") = \"One\" ]]\n\
  \    [[ $(candidate \"1 -1 3 2\") = \"Three Two One\" ]]\n    [[ $(candidate \"\
  9 4 8\") = \"Nine Eight Four\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \"\
    \ -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1 -k2n", "    echo\
    \ \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    local\
    \ IFS=$'\\n'\n    echo \"$*\" | sort -t' ' -k1,1", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -nr | tr '\\n' ' '", "    echo \"$1\" | awk '{ print length, $0 }' |\
    \ sort -n | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' '\
    \ -k1.4,1.4 -k1.3,1.3 -k1.2,1.2 -k1.1,1.1", "    echo \"$1\" | awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "    local IFS=$'\\n'\n    echo \"$*\"\
    \ | sort -t' ' -k1.4,1.4 -k1.3,1.3 -k1.2,1.2 -k1.1,1.1", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{\n        for (i = 1; i <= NF; i++) {\n            if (length($i) > 0) {\n\
    \                a[length($i)] = a[length($i)] $i \" \"\n            }\n     \
    \   }\n        for (i in a) {\n            print a[i]\n        }\n    }'", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "  \
    \  awk '{\n        for (i = 1; i <= NF; i++) {\n            if (length($i) > 0)\
    \ {\n                a[length($i)] = a[length($i)] $i \" \"\n            }\n \
    \       }\n    }\n    END {\n        for (i in a) {\n            print a[i]\n\
    \        }\n    }'", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t ' ' -k1,1 -k2n,2",
  "    awk '{\n        len[NR] = length($0)\n        line[NR] = $0\n    }\n    END\
    \ {\n        for (i = 1; i <= NR; i++) {\n            for (j = i + 1; j <= NR;\
    \ j++) {\n                if (len[i] < len[j]) {\n                    tmp = len[i]\n\
    \                    len[i] = len[j]\n                    len[j] = tmp\n     \
    \               tmp = line[i]\n                    line[i] = line[j]\n       \
    \             line[j] = tmp\n                }\n            }\n        }\n   \
    \     for (i = 1; i <= NR; i++) {\n            print line[i]\n        }\n    }'",
  "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   awk '{\n        len[NR] = length($0)\n        line[NR] = $0\n    }\n    END\
    \ {\n        for (i = 1; i <= NR; i++) {\n            for (j = i + 1; j <= NR;\
    \ j++) {\n                if (len[i] < len[j]) {\n                    tmp = len[i]\n\
    \                    len[i] = len[j]\n                    len[j] = tmp\n     \
    \               tmp = line[i]\n                    line[i] = line[j]\n       \
    \             line[j] = tmp\n                }\n            }\n        }\n   \
    \     for (i = 1; i <= NR; i++) {\n            print line[i]\n        }\n    }'",
  "    echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "   \
    \ echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print length,\
    \ $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' '", "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut\
    \ -d\" \" -f2-", "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut\
    \ -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{\n        n = split($0, a, \" \")\n        for (i = 1;\
    \ i <= n; i++) {\n            b[length(a[i])] = b[length(a[i])] \" \" a[i]\n \
    \       }\n        for (i in b) {\n            print b[i]\n        }\n    }'",
  "    awk '{\n        len[NR] = length($0)\n        line[NR] = $0\n    }\n    END\
    \ {\n        for (i = 1; i <= NR; i++) {\n            for (j = i + 1; j <= NR;\
    \ j++) {\n                if (len[i] < len[j]) {\n                    t = len[i]\n\
    \                    len[i] = len[j]\n                    len[j] = t\n       \
    \             t = line[i]\n                    line[i] = line[j]\n           \
    \         line[j] = t\n                }\n            }\n        }\n        for\
    \ (i = 1; i <= NR; i++) {\n            print line[i]\n        }\n    }'", "  \
    \  echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "  local\
    \ IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "    awk '{ print length, $0 }'\
    \ | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length, $0 }'\
    \ | sort -n | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t'\
    \ ' -k1,1", "    echo \"$1\" | tr ' ' '\\n' | sort -r -n -t ' ' -k 1,1", "   \
    \ echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  \
    \  echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \ local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", "  echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' '", "    echo \"$1\" | awk '{ print length, $0 }' | sort\
    \ -n | cut -d\" \" -f2-", "    awk '{ print length, $0 }' | sort -n | cut -d\"\
    \ \" -f2-", "    awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '", "    echo \"$1\" | awk '{print length,\
    \ $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "    awk '{\n        len[NR] = length($0)\n\
    \        line[NR] = $0\n    }\n    END {\n        for (i = 1; i <= NR; i++) {\n\
    \            for (j = i + 1; j <= NR; j++) {\n                if (len[i] < len[j])\
    \ {\n                    tmp = len[i]\n                    len[i] = len[j]\n \
    \                   len[j] = tmp\n                    tmp = line[i]\n        \
    \            line[i] = line[j]\n                    line[j] = tmp\n          \
    \      }\n            }\n        }\n        for (i = 1; i <= NR; i++) {\n    \
    \        print line[i]\n        }\n    }'", "    echo \"$1\" | awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "    awk '{\n        len[NR] = length($0)\n\
    \        line[NR] = $0\n    }\n    END {\n        for (x = 1; x <= NR; x++) {\n\
    \            for (y = x + 1; y <= NR; y++) {\n                if (len[x] > len[y])\
    \ {\n                    t = len[x]; len[x] = len[y]; len[y] = t\n           \
    \         t = line[x]; line[x] = line[y]; line[y] = t\n                }\n   \
    \         }\n        }\n        for (x = 1; x <= NR; x++) {\n            print\
    \ line[x]\n        }\n    }'", "    echo \"$1\" | awk '{ print length, $0 }' |\
    \ sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length, $0 }' |\
    \ sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length, $0 }' |\
    \ sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length, $0 }' |\
    \ sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{\n        for (i = 1;\
    \ i <= NF; i++) {\n            if (length($i) > 0) {\n                a[length($i)]\
    \ = a[length($i)] $i \" \"\n            }\n        }\n        for (i in a) {\n\
    \            print a[i]\n        }\n    }'", "  awk '{\n    len=length($0)\n \
    \   if (len > max) {\n      max = len\n      maxline = $0\n    }\n  }\n  END {\n\
    \    print maxline\n  }'", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1",
  "  echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "   \
    \ echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  local\
    \ IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", "    echo \"$1\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' '\
    \ -k1.4", "    echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d \" \"\
    \ -f2-", "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \"\
    \ -f2-", "    local IFS=$'\\n'\n    echo \"$*\" | sort -t' ' -k1,1 -k2n,2", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   awk '{\n        len[NR] = length($0)\n        line[NR] = $0\n    }\n    END\
    \ {\n        for (i = 1; i <= NR; i++) {\n            for (j = i + 1; j <= NR;\
    \ j++) {\n                if (len[i] < len[j]) {\n                    t = len[i]\n\
    \                    len[i] = len[j]\n                    len[j] = t\n       \
    \             t = line[i]\n                    line[i] = line[j]\n           \
    \         line[j] = t\n                }\n            }\n        }\n        for\
    \ (i = 1; i <= NR; i++) {\n            print line[i]\n        }\n    }'", "  \
    \  echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    echo \"$1\" |\
    \ awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" |\
    \ awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" |\
    \ awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" |\
    \ awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "  echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort\
    \ -t' ' -k1,1 -k2n", "    echo \"$1\" | awk '{print length, $0}' | sort -n | cut\
    \ -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", " \
    \   local IFS=$'\\n'\n    echo \"$*\" | sort -t' ' -k1.4", "    echo \"$1\" |\
    \ awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print length,\
    \ $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "  echo \"$*\" | awk '{\n    for (i = 1;\
    \ i <= NF; i++) {\n      if (length($i) > 0) {\n        a[length($i)] = a[length($i)]\
    \ \" \" $i\n      }\n    }\n    for (i in a) {\n      print a[i]\n    }\n  }'",
  "    echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    echo \"$1\" | awk\
    \ '{print length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{\
    \ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{\
    \ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{\
    \ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    local IFS=$'\\n'\n \
    \   echo \"$*\" | sort -t ' ' -k1.4,1.4 -k1.3,1.3 -k1.2,1.2 -k1.1,1.1", "    local\
    \ IFS=$'\\n'\n    echo \"$*\" | sort -t' ' -k1,1", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print length,\
    \ $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print length, $0}'\
    \ | sort -n | cut -d\" \" -f2-", "    local IFS=$'\\n'\n    echo \"$*\" | sort\
    \ -t' ' -k1,1", "    echo \"$*\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", " \
    \   echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "  \
    \  echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \ local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1.4,1.4 -k1.3,1.3 -k1.2,1.2 -k1.1,1.1",
  "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \ local IFS=$'\\n'\n  echo \"$*\" | sort -t ' ' -k1,1 -k2n", "    echo \"$1\"\
    \ | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    echo \"$1\" | awk '{print length,\
    \ $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print length, $0}'\
    \ | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' '", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", "    echo\
    \ \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  local\
    \ IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", "    awk '{\n        len[NR]\
    \ = length($0)\n        line[NR] = $0\n    }\n    END {\n        for (i = 1; i\
    \ <= NR; i++) {\n            for (j = i + 1; j <= NR; j++) {\n               \
    \ if (len[i] < len[j]) {\n                    t = len[i]\n                   \
    \ len[i] = len[j]\n                    len[j] = t\n                    t = line[i]\n\
    \                    line[i] = line[j]\n                    line[j] = t\n    \
    \            }\n            }\n        }\n        for (i = 1; i <= NR; i++) {\n\
    \            print line[i]\n        }\n    }'", "  local IFS=$'\\n'\n  echo \"\
    $*\" | sort -t' ' -k1,1", "    echo \"$1\" | awk '{ print length, $0 }' | sort\
    \ -n | cut -d\" \" -f2-", "  echo \"$1\" | awk '{print length, $0}' | sort -n\
    \ | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1",
  "    local IFS=$'\\n'\n    echo \"$*\" | sort -t' ' -k1,1", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{print length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{\
    \ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{\
    \ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    awk '{ print length,\
    \ $0 }' | sort -n | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort\
    \ -t' ' -k1.4,1.4", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", " \
    \   echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "  \
    \  echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d' ' -f2-", "    echo\
    \ \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  local\
    \ IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k2", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk '{print\
    \ length, $0}' | sort -n | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\"\
    \ | sort -t' ' -k1,1", "    awk '{ print length, $0 }' | sort -n | cut -d\" \"\
    \ -f2-", "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \"\
    \ -f2-", "    echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-",
  "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   awk '{\n        if (length($1) == 1) {\n            print $1\n        }\n\
    \    }'", "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \"\
    \ -f2-", "  awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  echo\
    \ \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "    awk '{\n\
    \        len[NR] = length($0)\n        line[NR] = $0\n    }\n    END {\n     \
    \   for (i = 1; i <= NR; i++) {\n            for (j = i + 1; j <= NR; j++) {\n\
    \                if (len[i] < len[j]) {\n                    tmp = len[i]\n  \
    \                  len[i] = len[j]\n                    len[j] = tmp\n       \
    \             tmp = line[i]\n                    line[i] = line[j]\n         \
    \           line[j] = tmp\n                }\n            }\n        }\n     \
    \   for (i = 1; i <= NR; i++) {\n            print line[i]\n        }\n    }'",
  "    echo \"$*\" | awk '{\n        n = split($0, a, \" \")\n        for (i = 1;\
    \ i <= n; i++) {\n            printf(\"%s%s\", a[i], (i < n ? OFS : ORS))\n  \
    \      }\n    }' | sort -nr | awk '{\n        n = split($0, a, \" \")\n      \
    \  for (i = 1; i <= n; i++) {\n            printf(\"%s%s\", a[i], (i < n ? OFS\
    \ : ORS))\n        }\n    }'", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' '\
    \ -k1,1 -k2n,2", "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut\
    \ -d\" \" -f2-", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t' ' -k1,1", "   \
    \ echo \"$1\" | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "    echo\
    \ \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo\
    \ \"$1\" | awk '{\n        n = split($0, a, \" \")\n        for (i = 1; i <= n;\
    \ i++) {\n            b[length(a[i])] = b[length(a[i])] \" \" a[i]\n        }\n\
    \        for (i in b) {\n            print b[i]\n        }\n    }'", "    awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | awk\
    \ '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  echo \"$1\" | awk '{\
    \ print length, $0 }' | sort -n | cut -d\" \" -f2-", "  local IFS=$'\\n'\n  echo\
    \ \"$*\" | sort -t' ' -k1,1 -k2n,2", "  awk '{ print length, $0 }' | sort -n |\
    \ cut -d\" \" -f2-", "    awk '{\n        len[NR] = length($0)\n        line[NR]\
    \ = $0\n    }\n    END {\n        for (i = 1; i <= NR; i++) {\n            for\
    \ (j = i + 1; j <= NR; j++) {\n                if (len[i] < len[j]) {\n      \
    \              tmp = len[i]\n                    len[i] = len[j]\n           \
    \         len[j] = tmp\n                    tmp = line[i]\n                  \
    \  line[i] = line[j]\n                    line[j] = tmp\n                }\n \
    \           }\n        }\n        for (i = 1; i <= NR; i++) {\n            print\
    \ line[i]\n        }\n    }'", "  awk '{\n    len=length($0)\n    if (len > 0)\
    \ {\n      print len, $0\n    }\n  }' | sort -n | cut -d' ' -f2-", "    echo \"\
    $1\" | awk '{ print length, $0 }' | sort -n | cut -d' ' -f2-", "    echo \"$1\"\
    \ | awk '{print length, $0}' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" |\
    \ awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    local IFS=$'\\\
    n'\n    echo \"$*\" | sort -t ' ' -k1.4,1.4 -k1.3,1.3 -k1.2,1.2 -k1.1,1.1", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   awk '{\n        if ($1 >= 1 && $1 <= 9) {\n            print $1\n        }\n\
    \    }' | sort -n | tac | while read i; do\n        case $i in\n            1)\
    \ echo One;;\n            2) echo Two;;\n            3) echo Three;;\n       \
    \     4) echo Four;;\n            5) echo Five;;\n            6) echo Six;;\n\
    \            7) echo Seven;;\n            8) echo Eight;;\n            9) echo\
    \ Nine;;\n        esac\n    done", "    echo \"$1\" | awk '{ print length, $0\
    \ }' | sort -n | cut -d\" \" -f2-", "    echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' '", "    awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-",
  "    echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   echo \"$1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", " \
    \   local IFS=$'\\n'\n    echo \"$*\" | sort -t' ' -k1,1 -k2,2n", "    echo \"\
    $1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"\
    $1\" | awk '{ print length, $0 }' | sort -n | cut -d\" \" -f2-", "    awk '{ print\
    \ length, $0 }' | sort -n | cut -d\" \" -f2-", "    echo \"$*\" | awk '{\n   \
    \     n = split($0, a, \" \")\n        for (i = 1; i <= n; i++)\n            printf(\"\
    %s%s\", a[i], (i < n ? OFS : ORS))\n    }' | sort -n | awk '{\n        n = split($0,\
    \ a, \" \")\n        for (i = n; i >= 1; i--)\n            printf(\"%s%s\", a[i],\
    \ (i > 1 ? OFS : ORS))\n    }'", "  local IFS=$'\\n'\n  echo \"$*\" | sort -t'\
    \ ' -k1,1 -k2n,2"]
stop_tokens:
- "\n}"

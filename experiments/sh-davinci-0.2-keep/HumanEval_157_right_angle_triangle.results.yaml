language: sh
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n\
    \        echo \"False\"\n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n       \
    \ echo \"False\"\n    elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n \
    \       echo \"False\"\n    elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if\
    \ [[ $1 -eq $(($2**2 + $3**2)) ]]; then\n            echo \"True\"\n        else\n\
    \            echo \"False\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(($1**2 + $3**2)) ]]; then\n            echo \"\
    True\"\n        else\n            echo \"False\"\n        fi\n    elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1**2 + $2**2)) ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $1 -eq $(( $2 ** 2 + $3 ** 2 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $2 -eq $(( $1 ** 2 + $3\
    \ ** 2 )) ]]; then\n                echo \"True\"\n            else\n        \
    \        echo \"False\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $3 -eq $(( $1 ** 2 + $2 ** 2 )) ]]; then\n     \
    \           echo \"True\"\n            else\n                echo \"False\"\n\
    \            fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"False\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1*$1 )) -eq $(( $2*$2 + $3*$3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if [ $(( $2*$2\
    \ )) -eq $(( $1*$1 + $3*$3 )) ]; then\n                echo \"True\"\n       \
    \     else\n                echo \"False\"\n            fi\n        elif [ $3\
    \ -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3*$3 )) -eq $(( $1*$1\
    \ + $2*$2 )) ]; then\n                echo \"True\"\n            else\n      \
    \          echo \"False\"\n            fi\n        fi\n    else\n        echo\
    \ \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $((\
    \ $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        echo \"True\"\n  \
    \    else\n        echo \"False\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n      if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \        echo \"True\"\n      else\n        echo \"False\"\n      fi\n    fi\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n      \
    \  echo \"False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n \
    \     if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"\
    True\"\n      else\n        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] &&\
    \ [ $3 -gt $2 ]; then\n      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    # Write your code here\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmexnji54.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmpmexnji54.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            return 0\n\
    \        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        \
    \    return 1\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n           \
    \ if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n                return\
    \ 0\n            else\n                return 1\n            fi\n        elif\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if [ $(( $2 * $2 )) -eq $((\
    \ $1 * $1 + $3 * $3 )) ]; then\n                return 0\n            else\n \
    \               return 1\n            fi\n        elif [ $3 -gt $1 ] && [ $3 -gt\
    \ $2 ]; then\n            if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ];\
    \ then\n                return 0\n            else\n                return 1\n\
    \            fi\n        fi\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3)) ]; then\n              \
    \  echo \"True\"\n            else\n                echo \"False\"\n         \
    \   fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if [ $(($2\
    \ * $2)) -eq $(($1 * $1 + $3 * $3)) ]; then\n                echo \"True\"\n \
    \           else\n                echo \"False\"\n            fi\n        elif\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(($3 * $3)) -eq $(($1\
    \ * $1 + $2 * $2)) ]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $(( $2 * $2 + $3 * $3 )) ] || [ $2 -eq $(( $1 * $1 + $3 * $3\
    \ )) ] || [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo \"True\"\n   \
    \ else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $(( $2 * $2 + $3 * $3 )) ] || [ $2 -eq $(( $1 * $1 + $3 * $3\
    \ )) ] || [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo \"True\"\n   \
    \ else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle\
    \ <int> <int> <int>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local\
    \ c=$3\n  if [ $a -eq 0 ] || [ $b -eq 0 ] || [ $c -eq 0 ]; then\n    echo \"False\"\
    \n    return 0\n  fi\n  if [ $a -lt 0 ] || [ $b -lt 0 ] || [ $c -lt 0 ]; then\n\
    \    echo \"False\"\n    return 0\n  fi\n  if [ $a -eq $b ] && [ $b -eq $c ];\
    \ then\n    echo \"False\"\n    return 0\n  fi\n  if [ $a -eq $b ] || [ $b -eq\
    \ $c ] || [ $a -eq $c ]; then\n    echo \"False\"\n    return 0\n  fi\n  if [\
    \ $a -gt $b ] && [ $a -gt $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n\
    \      echo \"True\"\n      return 0\n    fi\n  fi\n  if [ $b -gt $a ] && [ $b\
    \ -gt $c ]; then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"True\"\
    \n      return 0\n    fi\n  fi\n  if [ $c -gt $a ] && [ $c -gt $b ]; then\n  \
    \  if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"True\"\n      return 0\n\
    \    fi\n  fi\n  echo \"False\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    # Write your code here\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmexnji54.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmpmexnji54.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $((\
    \ $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        echo \"True\"\n  \
    \    else\n        echo \"False\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n      if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \        echo \"True\"\n      else\n        echo \"False\"\n      fi\n    fi\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n            if [ $((\
    \ $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n                echo True\n\
    \            else\n                echo False\n            fi\n        elif [\
    \ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if [ $(( $2 * $2 )) -eq $((\
    \ $1 * $1 + $3 * $3 )) ]; then\n                echo True\n            else\n\
    \                echo False\n            fi\n        elif [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n            if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]; then\n                echo True\n            else\n                echo False\n\
    \            fi\n        else\n            echo False\n        fi\n    else\n\
    \        echo False\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n        echo\
    \ \"False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n      if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"True\"\
    \n      else\n        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n\
    \        echo \"True\"\n      else\n        echo \"False\"\n      fi\n    else\n\
    \      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n      \
    \  echo \"False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n \
    \     if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"\
    True\"\n      else\n        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] &&\
    \ [ $3 -gt $2 ]; then\n      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"Hello world\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if (( $1 > 0 && $2 > 0 && $3 > 0 )); then\n    \
    \    if (( $1 > $2 && $1 > $3 )); then\n            if (( $1*$1 == $2*$2 + $3*$3\
    \ )); then\n                echo \"True\"\n            else\n                echo\
    \ \"False\"\n            fi\n        elif (( $2 > $1 && $2 > $3 )); then\n   \
    \         if (( $2*$2 == $1*$1 + $3*$3 )); then\n                echo \"True\"\
    \n            else\n                echo \"False\"\n            fi\n        elif\
    \ (( $3 > $1 && $3 > $2 )); then\n            if (( $3*$3 == $1*$1 + $2*$2 ));\
    \ then\n                echo \"True\"\n            else\n                echo\
    \ \"False\"\n            fi\n        fi\n    else\n        echo \"False\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n                echo \"True\"\n            else\n        \
    \        echo \"False\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n     \
    \           echo \"True\"\n            else\n                echo \"False\"\n\
    \            fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n                echo \"True\"\n            else\n        \
    \        echo \"False\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n     \
    \           echo \"True\"\n            else\n                echo \"False\"\n\
    \            fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 ]]; then\n      if [[ $1 -eq $3 ]]; then\n        echo \"\
    True\"\n      else\n        echo \"False\"\n      fi\n    elif [[ $1 -eq $3 ]];\
    \ then\n      if [[ $1 -eq $2 ]]; then\n        echo \"True\"\n      else\n  \
    \      echo \"False\"\n      fi\n    elif [[ $2 -eq $3 ]]; then\n      if [[ $2\
    \ -eq $1 ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\n\
    \      fi\n    else\n      if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[\
    \ $1 -eq $(( $2 ** 2 + $3 ** 2 )) ]]; then\n          echo \"True\"\n        else\n\
    \          echo \"False\"\n        fi\n      elif [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(( $1 ** 2 + $3 ** 2 )) ]]; then\n          echo\
    \ \"True\"\n        else\n          echo \"False\"\n        fi\n      elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1 ** 2 + $2 ** 2\
    \ )) ]]; then\n          echo \"True\"\n        else\n          echo \"False\"\
    \n        fi\n      fi\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1\
    \ )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $((\
    \ $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        elif [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 *\
    \ $2 )) ]]; then\n                echo \"True\"\n            else\n          \
    \      echo \"False\"\n            fi\n        else\n            echo \"False\"\
    \n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $(( $2 * $2 + $3 * $3 )) ] || [ $2 -eq $(( $1 * $1 + $3 * $3\
    \ )) ] || [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo \"True\"\n   \
    \ else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a\
    \ -gt $b ]; then\n    if [ $a -gt $c ]; then\n      if [ $a -eq $((b*b + c*c))\
    \ ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    else\n      if [ $c -eq $((a*a + b*b)) ]; then\n        echo \"True\"\n \
    \     else\n        echo \"False\"\n      fi\n    fi\n  else\n    if [ $b -gt\
    \ $c ]; then\n      if [ $b -eq $((a*a + c*c)) ]; then\n        echo \"True\"\n\
    \      else\n        echo \"False\"\n      fi\n    else\n      if [ $c -eq $((a*a\
    \ + b*b)) ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n\
    \      fi\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"False\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $1 -eq $(($2 * $2 + $3 * $3))\
    \ ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $2 -eq $(($1 * $1 +\
    \ $3 * $3)) ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\
    \n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(($1\
    \ * $1 + $2 * $2)) ]]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 && $2 -ne $3 ]]; then\n            echo \"False\"\n\
    \        elif [[ $1 -ne $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n\
    \        elif [[ $1 -eq $3 && $2 -ne $3 ]]; then\n            echo \"False\"\n\
    \        elif [[ $1 -ne $2 && $2 -ne $3 ]]; then\n            if [[ $1 -eq $3\
    \ ]]; then\n                echo \"False\"\n            else\n               \
    \ if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n                    if [[ $1 -eq $2+$3\
    \ ]]; then\n                        echo \"True\"\n                    else\n\
    \                        echo \"False\"\n                    fi\n            \
    \    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n                    if [[ $2 -eq\
    \ $1+$3 ]]; then\n                        echo \"True\"\n                    else\n\
    \                        echo \"False\"\n                    fi\n            \
    \    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n                    if [[ $3 -eq\
    \ $1+$2 ]]; then\n                        echo \"True\"\n                    else\n\
    \                        echo \"False\"\n                    fi\n            \
    \    fi\n            fi\n        fi\n    else\n        echo \"False\"\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    el\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ad73ow8.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmp5ad73ow8.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n\
    \  local min1=$b\n  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n  \
    \  min1=$a\n    min2=$c\n  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n\
    \    min2=$b\n  fi\n  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n\
    \    echo True\n  else\n    echo False\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n                echo \"True\"\n            else\n        \
    \        echo \"False\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n     \
    \           echo \"True\"\n            else\n                echo \"False\"\n\
    \            fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $1 -eq $(( $2**2 + $3**2 ))\
    \ ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $2 -eq $(( $1**2 + $3**2\
    \ )) ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\n   \
    \   fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $3 -eq $(( $1**2\
    \ + $2**2 )) ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\
    \n      fi\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -eq $2 -a $2\
    \ -eq $3 ]; then\n    echo \"False\"\n    return 0\n  fi\n  if [ $1 -eq $2 -o\
    \ $2 -eq $3 -o $1 -eq $3 ]; then\n    echo \"False\"\n    return 0\n  fi\n  if\
    \ [ $1 -gt $2 -a $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2 +\
    \ $3 * $3 )) ]; then\n      echo \"True\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 -a $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1 +\
    \ $3 * $3 )) ]; then\n      echo \"True\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 -a $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1 +\
    \ $2 * $2 )) ]; then\n      echo \"True\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"False\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local a=$1\n    local b=$2\n    local c=$3\n   \
    \ local max=$a\n    local min1=$b\n    local min2=$c\n    if [ $b -gt $max ];\
    \ then\n        max=$b\n        min1=$a\n        min2=$c\n    fi\n    if [ $c\
    \ -gt $max ]; then\n        max=$c\n        min1=$a\n        min2=$b\n    fi\n\
    \    if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n        echo True\n\
    \    else\n        echo False\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local a=$1\n    local b=$2\n    local c=$3\n   \
    \ if [ $a -gt $b ] && [ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c))\
    \ ]; then\n            echo True\n        else\n            echo False\n     \
    \   fi\n    elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq\
    \ $((a*a+c*c)) ]; then\n            echo True\n        else\n            echo\
    \ False\n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if\
    \ [ $((c*c)) -eq $((a*a+b*b)) ]; then\n            echo True\n        else\n \
    \           echo False\n        fi\n    else\n        echo False\n    fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local a=$1\n    local b=$2\n    local c=$3\n   \
    \ local max=$a\n    local min1=$b\n    local min2=$c\n    if [ $b -gt $max ];\
    \ then\n        max=$b\n        min1=$a\n        min2=$c\n    fi\n    if [ $c\
    \ -gt $max ]; then\n        max=$c\n        min1=$a\n        min2=$b\n    fi\n\
    \    if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n        echo \"True\"\
    \n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n\
    \  local min1=$b\n  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n  \
    \  min1=$a\n    min2=$c\n  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n\
    \    min2=$b\n  fi\n  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n\
    \    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"True\"\n  \
    \      elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $((\
    \ $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        echo \"True\"\n  \
    \    else\n        echo \"False\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n      if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \        echo \"True\"\n      else\n        echo \"False\"\n      fi\n    fi\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        else\n            if [ $1 -gt $2 ] && [ $1 -gt $3\
    \ ]; then\n                if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ];\
    \ then\n                    echo \"True\"\n                else\n            \
    \        echo \"False\"\n                fi\n            elif [ $2 -gt $1 ] &&\
    \ [ $2 -gt $3 ]; then\n                if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3\
    \ * $3 )) ]; then\n                    echo \"True\"\n                else\n \
    \                   echo \"False\"\n                fi\n            elif [ $3\
    \ -gt $1 ] && [ $3 -gt $2 ]; then\n                if [ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]; then\n                    echo \"True\"\n          \
    \      else\n                    echo \"False\"\n                fi\n        \
    \    fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        else\n            if [ $1 -gt $2 ] && [ $1 -gt $3\
    \ ]; then\n                if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ];\
    \ then\n                    echo \"True\"\n                else\n            \
    \        echo \"False\"\n                fi\n            elif [ $2 -gt $1 ] &&\
    \ [ $2 -gt $3 ]; then\n                if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3\
    \ * $3 )) ]; then\n                    echo \"True\"\n                else\n \
    \                   echo \"False\"\n                fi\n            elif [ $3\
    \ -gt $1 ] && [ $3 -gt $2 ]; then\n                if [ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]; then\n                    echo \"True\"\n          \
    \      else\n                    echo \"False\"\n                fi\n        \
    \    fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n      \
    \  echo \"False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n \
    \     if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"\
    True\"\n      else\n        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] &&\
    \ [ $3 -gt $2 ]; then\n      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n      \
    \  echo \"False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n \
    \     if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"\
    True\"\n      else\n        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] &&\
    \ [ $3 -gt $2 ]; then\n      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif\
    \ [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    el\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ad73ow8.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmp5ad73ow8.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif [[ $1\
    \ -gt $2 && $1 -gt $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]]; then\n        echo \"True\"\n      else\n        echo \"False\"\n\
    \      fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        echo \"True\"\n      else\n\
    \        echo \"False\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \      if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo\
    \ \"True\"\n      else\n        echo \"False\"\n      fi\n    fi\n  else\n   \
    \ echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n\
    \  local min1=$b\n  local min2=$c\n  if [[ $b -gt $max ]]; then\n    max=$b\n\
    \    min1=$a\n    min2=$c\n  fi\n  if [[ $c -gt $max ]]; then\n    max=$c\n  \
    \  min1=$a\n    min2=$b\n  fi\n  if [[ $((max*max)) -eq $((min1*min1+min2*min2))\
    \ ]]; then\n    echo True\n  else\n    echo False\n  fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n                echo \"True\"\n            else\n        \
    \        echo \"False\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n     \
    \           echo \"True\"\n            else\n                echo \"False\"\n\
    \            fi\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $1 -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n        echo \"False\"\
    \n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n      if [ $2 -eq $((\
    \ $1 * $1 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n        echo\
    \ \"False\"\n      fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n      if\
    \ [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n        echo \"True\"\n      else\n\
    \        echo \"False\"\n      fi\n    fi\n  else\n    echo \"False\"\n  fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local a=$1\n    local b=$2\n    local c=$3\n   \
    \ local max=$a\n    local min1=$b\n    local min2=$c\n    if [ $b -gt $max ];\
    \ then\n        max=$b\n        min1=$a\n        min2=$c\n    fi\n    if [ $c\
    \ -gt $max ]; then\n        max=$c\n        min1=$a\n        min2=$b\n    fi\n\
    \    if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n        echo \"True\"\
    \n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"True\"\n  \
    \      elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif [[ $1\
    \ -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]];\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc_aj3kz_.sh: line 44: syntax error near unexpected token `}''

    /tmp/tmpc_aj3kz_.sh: line 44: `}''

    '
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"True\"\n  \
    \      elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo \"True\"\
    \n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n       \
    \     echo \"False\"\n        elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    \
    \        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n          \
    \      echo \"True\"\n            else\n                echo \"False\"\n     \
    \       fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n            if\
    \ [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n                echo\
    \ \"True\"\n            else\n                echo \"False\"\n            fi\n\
    \        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            if [ $(( $3 *\
    \ $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n                echo \"True\"\n\
    \            else\n                echo \"False\"\n            fi\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if (( $1**2 + $2**2 == $3**2 )) || (( $1**2 + $3**2\
    \ == $2**2 )) || (( $2**2 + $3**2 == $1**2 )); then\n        echo \"True\"\n \
    \   else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n        echo \"True\"\n      else\n      \
    \  echo \"False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n \
    \     if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"\
    True\"\n      else\n        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] &&\
    \ [ $3 -gt $2 ]; then\n      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]; then\n        echo \"True\"\n      else\n        echo \"False\"\n      fi\n\
    \    fi\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 && $2 -ne $3 ]]; then\n      if [[ $1 -eq $3 ]]; then\n        echo\
    \ \"False\"\n      else\n        echo \"True\"\n      fi\n    elif [[ $1 -ne $2\
    \ && $2 -eq $3 ]]; then\n      if [[ $1 -eq $3 ]]; then\n        echo \"False\"\
    \n      else\n        echo \"True\"\n      fi\n    elif [[ $1 -ne $2 && $2 -ne\
    \ $3 ]]; then\n      if [[ $1 -eq $3 ]]; then\n        echo \"False\"\n      else\n\
    \        echo \"True\"\n      fi\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n      echo \"True\"\n    elif [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"False\"\n\
    \    elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1*$1 )) -eq $((\
    \ $2*$2 + $3*$3 )) ]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n      if [ $((\
    \ $2*$2 )) -eq $(( $1*$1 + $3*$3 )) ]; then\n        echo \"True\"\n      else\n\
    \        echo \"False\"\n      fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \      if [ $(( $3*$3 )) -eq $(( $1*$1 + $2*$2 )) ]; then\n        echo \"True\"\
    \n      else\n        echo \"False\"\n      fi\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo\
    \ \"True\"\n  elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n   \
    \ echo \"False\"\n  elif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $1 -eq\
    \ $(($2*$2 + $3*$3)) ]; then\n      echo \"True\"\n    else\n      echo \"False\"\
    \n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $2 -eq $(($1*$1\
    \ + $3*$3)) ]; then\n      echo \"True\"\n    else\n      echo \"False\"\n   \
    \ fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $3 -eq $(($1*$1 +\
    \ $2*$2)) ]; then\n      echo \"True\"\n    else\n      echo \"False\"\n    fi\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1\
    \ )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"True\"\n  \
    \          else\n                echo \"False\"\n            fi\n        elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $((\
    \ $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        elif [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 *\
    \ $2 )) ]]; then\n                echo \"True\"\n            else\n          \
    \      echo \"False\"\n            fi\n        else\n            echo \"False\"\
    \n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if (( $1**2 + $2**2 == $3**2 ))\n    then\n    \
    \    echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $((\
    \ $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        echo \"True\"\n  \
    \    else\n        echo \"False\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n      if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \        echo \"True\"\n      else\n        echo \"False\"\n      fi\n    fi\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if (( $1 ** 2 + $2 ** 2 == $3 ** 2 )) || (( $1 **\
    \ 2 + $3 ** 2 == $2 ** 2 )) || (( $2 ** 2 + $3 ** 2 == $1 ** 2 )); then\n    \
    \    echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993100
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"True\"\n  \
    \      elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"False\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"False\"\n    elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]]; then\n        echo \"True\"\n      else\n        echo \"\
    False\"\n      fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $((\
    \ $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        echo \"True\"\n  \
    \    else\n        echo \"False\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n      if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \        echo \"True\"\n      else\n        echo \"False\"\n      fi\n    fi\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n\
    \        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"False\"\n \
    \       elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo\
    \ \"False\"\n        elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[\
    \ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n                echo \"\
    True\"\n            else\n                echo \"False\"\n            fi\n   \
    \     elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n                echo \"True\"\n     \
    \       else\n                echo \"False\"\n            fi\n        elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n                echo \"True\"\n            else\n\
    \                echo \"False\"\n            fi\n        fi\n    else\n      \
    \  echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659993099

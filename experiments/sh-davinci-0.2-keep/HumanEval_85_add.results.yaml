language: sh
name: HumanEval_85_add
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $#);\
    \ do\n        sum=$((sum + ${!i}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpg70b96ei.sh: line 10: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for num\
    \ in $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    # your code here\n    echo $1 | tr ' '\
    \ '\\n' | awk '{if(NR%2==0 && $1%2==0) sum+=$1} END {print sum}'\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for num in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [[\
    \ $((i % 2)) -eq 0 ]] && [[ $((i % 4)) -ne 0 ]]; then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 0 2 $((${#1}\
    \ - 1))); do\n    sum=$((sum + ${1:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 0 2 $((${#1}-1)));\
    \ do\n        sum=$((sum + ${1:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n    \
    \        ((sum += lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1\n  do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]\n    then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [[\
    \ $((i % 2)) -eq 0 ]] && [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for ((i=1; i<${#1}; i+=2));\
    \ do\n    (( ${1[i]} % 2 == 0 )) && (( sum += ${1[i]} ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb5ikzww5.sh: line 10:  ${1[i]} % 2 == 0 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 0 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo $1 | tr ' ' '\\n' | awk 'NR%2==0{sum+=$1}END{print sum}'\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 0 2 $((${#1}\
    \ - 1))); do\n    sum=$((sum + ${1:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ i in \"${!lst[@]}\"; do\n        if [[ $((i % 2)) -ne 0 ]] && [[ $((lst[i] %\
    \ 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper44z11e.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper44z11e.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local -a list=($1)\n    local sum=0\n \
    \   for ((i=1; i<${#list[@]}; i+=2)); do\n        ((list[i] % 2 == 0)) && ((sum\
    \ += list[i]))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n   \
    \ for i in $lst; do\n        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ];\
    \ then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local arr=(\"$@\")\n \
    \   for ((i=1; i<${#arr[@]}; i+=2)); do\n        ((arr[i] % 2 == 0)) && ((sum\
    \ += arr[i]))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local -a lst=($1)\n    local sum=0\n  \
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum +=\
    \ lst[i]))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n    \
    \        ((sum += lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for ((i=1; i<${#1}; i+=2));\
    \ do\n        ((sum+=${1:i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpi5zii9wh.sh: line 10: ((: sum+= : syntax error: operand expected
    (error token is "+= ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq 0 ]];\
    \ then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local lst=($1)\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for num in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for ((i=1; i<${#1}; i+=2));\
    \ do\n    if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n      sum=$(( sum + ${1:$i:1}\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3rujry_4.sh: line 10: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    echo $1 | tr ' ' '\\n' | awk 'BEGIN {sum=0}\
    \ NR%2==0 {sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if [[ $((i % 2)) -eq 1 ]]; then\n      sum=$((sum + n))\n    fi\n  \
    \  i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1\n  do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]\n    then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n    \
    \        sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [[ $((i % 2)) -eq 0 ]] && [[ $((i % 4)) -ne 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpj5n4edzn.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]]; then\n\
    \            sum=$((sum+${lst[$i]}))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 0 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst[@]} ]; do\n        if [ $((i % 2)) -eq 1 ] &&\
    \ [ $((lst[i] % 2)) -eq 0 ]; then\n            sum=$((sum + lst[i]))\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if (( i % 2 == 1 && n % 2 == 0 )); then\n      (( sum += n ))\n    fi\n\
    \    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 0 2 $((${#1}\
    \ - 1))); do\n    sum=$((sum + ${1:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for ((i=1; i<${#1}; i+=2));\
    \ do\n    (( ${1[i]} % 2 == 0 )) && (( sum += ${1[i]} ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb5ikzww5.sh: line 10:  ${1[i]} % 2 == 0 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $#); do\n\
    \    sum=$((sum + ${!i}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa4tjzizu.sh: line 10: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper44z11e.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local lst=($1)\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for ((i=1; i<${#1}; i+=2));\
    \ do\n        if [[ $((${1:$i:1} % 2)) -eq 0 ]]; then\n            sum=$(($sum\
    \ + ${1:$i:1}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzjnzx8qk.sh: line 10: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for ((i=1; i<${#1}; i+=2));\
    \ do\n    if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n      sum=$(( sum + ${1:$i:1}\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3rujry_4.sh: line 10: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if [ $((i%2)) -eq 1 ] && [ $((n%2)) -eq 0 ]; then\n      sum=$((sum+n))\n\
    \    fi\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local lst=($1)\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $#);\
    \ do\n        sum=$((sum + ${!i}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpg70b96ei.sh: line 10: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 0 2 $(( ${#1[@]}\
    \ - 1 ))); do\n    sum=$(( sum + ${1[$i]} ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmpiu2s41zo.sh: line 9:  ${#1[@]} - 1 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i%2)) -eq 1 ] && [ $((n%2)) -eq 0 ]; then\n        \
    \    sum=$((sum+n))\n        fi\n        i=$((i+1))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for num\
    \ in $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if (( i % 2 == 1 && n % 2 == 0 )); then\n      (( sum += n ))\n    fi\n\
    \    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 0 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:$i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [[ $((i % 2)) -eq 0 ]] && [[ $((i % 4)) -ne 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0 ]]; then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $(($i % 2)) -eq 1 ] && [ $(($n % 2)) -eq 0 ]; then\n  \
    \          sum=$(($sum + $n))\n        fi\n        i=$(($i + 1))\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if ((i % 2 == 1)) && ((n % 2 == 0)); then\n      ((sum += n))\n    fi\n\
    \    ((i++))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n\
    \      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local list=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#list[@]}; i+=2)); do\n    ((list[i] % 2 == 0)) && ((sum += list[i]))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local -a lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $#);\
    \ do\n        sum=$((sum + ${!i}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpg70b96ei.sh: line 10: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpj5n4edzn.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1\n  do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]\n    then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local arr=($1)\n    for\
    \ (( i=1; i<${#arr[@]}; i+=2 )); do\n        (( ${arr[i]} % 2 == 0 )) && (( sum\
    \ += ${arr[i]} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n   \
    \ for i in $lst; do\n        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ];\
    \ then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n    \
    \        ((sum += lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    if ((lst[i] % 2 == 0)); then\n      sum=$((sum\
    \ + lst[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1\n    do\n\
    \        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]\n        then\n     \
    \       sum=$((sum + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpj5n4edzn.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n    for\
    \ i in $(seq 0 $(( ${#lst[@]} - 1 ))); do\n        if [[ $(( i % 2 )) -eq 1 &&\
    \ $(( lst[i] % 2 )) -eq 0 ]]; then\n            sum=$(( sum + lst[i] ))\n    \
    \    fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n    \
    \        ((sum += lst[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for num in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for x in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((x % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + x))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[i]} % 2 == 0 )) && (( sum\
    \ += ${lst[i]} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 1 2 $((${#1}\
    \ - 1))); do\n        sum=$((sum + ${1:i:1}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0mr98qb.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 0 2 $((\
    \ ${#1[@]} - 1 ))); do\n        sum=$(( sum + ${1[$i]} ))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvluozycm.sh: line 9:  ${#1[@]} - 1 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for n in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if (( $i % 2 == 0 )); then\n            sum=$(( $sum + $i ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $(($i % 2)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local arr=($1)\n    for\
    \ ((i=1; i<${#arr[@]}; i+=2)); do\n        ((arr[i] % 2 == 0)) && ((sum += arr[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $#); do\n\
    \    sum=$((sum + ${!i}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa4tjzizu.sh: line 10: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [[\
    \ $((i % 2)) -eq 0 ]] && [[ $((i % 4)) -ne 0 ]]; then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for num\
    \ in $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $#); do\n\
    \    sum=$((sum + ${!i}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa4tjzizu.sh: line 10: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for (( i=1;\
    \ i<${#lst[@]}; i+=2 )); do\n    (( ${lst[$i]} % 2 == 0 )) && (( sum += ${lst[$i]}\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[i]} % 2 == 0 )) && (( sum\
    \ += ${lst[i]} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0 ]; then\n    \
    \        sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if ((\
    \ $i % 2 == 0 )); then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n  for ((i=1;\
    \ i<${#lst[@]}; i+=2)); do\n    if ((lst[i] % 2 == 0)); then\n      sum=$((sum\
    \ + lst[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for num in $1;\
    \ do\n    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum + i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local -a lst=($1)\n    local sum=0\n  \
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum +=\
    \ lst[i]))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper44z11e.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper44z11e.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for ((i=1; i<${#1}; i+=2));\
    \ do\n        (( ${1[i]} % 2 == 0 )) && (( sum += ${1[i]} ))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjp_8fuef.sh: line 10:  ${1[i]} % 2 == 0 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq 0 2 $((\
    \ ${#1[@]} - 1 ))); do\n        sum=$(( sum + ${1[$i]} ))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvluozycm.sh: line 9:  ${#1[@]} - 1 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n    for\
    \ ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [[\
    \ $((i % 2)) -eq 0 ]] && [[ $((i % 4)) -ne 0 ]]; then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for ((i=1; i<${#1}; i+=2));\
    \ do\n    (( ${1[i]} % 2 == 0 )) && (( sum+=${1[i]} ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6op68zwd.sh: line 10:  ${1[i]} % 2 == 0 : bad substitution

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    for i in $1; do\n    \
    \    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local sum=0\n    local i=0\n    for n in\
    \ $1; do\n        if (( i % 2 == 1 && n % 2 == 0 )); then\n            (( sum\
    \ += n ))\n        fi\n        (( i++ ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $(seq 1 2 $((${#1}-1)));\
    \ do\n    sum=$((sum + ${1:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper44z11e.sh: line 10: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1659999175
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local sum=0\n  for i in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999175

name: HumanEval_13_greatest_common_divisor
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> greatest_common_divisor(3, 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n\
  # 5\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor() {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2\
    \ ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n    \
    \    greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -lt $2 ];\
    \ then\n        echo $1\n    else\n        echo $2\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    local a=$1\n    local b=$2\n    local tmp\n    while [ $b -ne\
    \ 0 ]; do\n        tmp=$b\n        b=$((a % b))\n        a=$tmp\n    done\n  \
    \  echo $a", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne\
    \ 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo\
    \ $a", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ];\
    \ do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo $a",
  "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n\
    \        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n       \
    \ echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    # Write your\
    \ code here\n    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2\
    \ ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    local\
    \ a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a\
    \ % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n\
    \    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi",
  "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n   \
    \     greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n\
    \    elif [[ $1 -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 ))\
    \ $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", " \
    \   local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n  \
    \      c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "   \
    \ local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n    \
    \    c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    if\
    \ [ $1 -gt $2 ]; then\n        a=$1\n        b=$2\n    else\n        a=$2\n  \
    \      b=$1\n    fi\n    while [ $b -ne 0 ]; do\n        r=$((a % b))\n      \
    \  a=$b\n        b=$r\n    done\n    echo $a", "    local a=$1\n    local b=$2\n\
    \    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n\
    \        b=$c\n    done\n    echo $a", "    local a=$1\n    local b=$2\n    local\
    \ c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n      \
    \  b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n\
    \    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 ))\
    \ $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", " \
    \   if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n  \
    \      echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n        echo\
    \ $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ];\
    \ then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n\
    \        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -lt $2 ]; then\n        echo $1\n    else\n      \
    \  echo $2\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while\
    \ [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n\
    \    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n\
    \    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi",
  "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n   \
    \     greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n\
    \    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n\
    \    done\n    echo $a", "    if [[ $1 -lt $2 ]]; then\n        echo $(greatest_common_divisor\
    \ $2 $1)\n    elif [[ $2 -eq 0 ]]; then\n        echo $1\n    else\n        echo\
    \ $(greatest_common_divisor $2 $(($1 % $2)))\n    fi", "    if [[ $1 -eq $2 ]];\
    \ then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n   \
    \ else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    # Write your code here\n    if [ $1 -eq $2 ]; then\n       \
    \ echo $1\n    elif [ $1 -gt $2 ]; then\n        let \"a = $1 - $2\"\n       \
    \ greatest_common_divisor $a $2\n    else\n        let \"b = $2 - $1\"\n     \
    \   greatest_common_divisor $1 $b\n    fi", "    local a=$1\n    local b=$2\n\
    \    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n\
    \        b=$c\n    done\n    echo $a", "    local a=$1\n    local b=$2\n    local\
    \ c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n      \
    \  b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n\
    \    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 ))\
    \ $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", " \
    \   if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n  \
    \      greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $[$1-$2] $2\n  \
    \  else\n        greatest_common_divisor $1 $[$2-$1]\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n    local\
    \ b=$2\n    local c\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n      \
    \  a=$b\n        b=$c\n    done\n    echo $a", "    if [[ $1 -eq $2 ]]; then\n\
    \        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n\
    \    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi",
  "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n   \
    \     c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    if\
    \ [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n   \
    \     greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n\
    \    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if\
    \ [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n   \
    \     echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n        echo\
    \ $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ];\
    \ then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n\
    \    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi",
  "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n\
    \        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n       \
    \ echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    local a=$1\n\
    \    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [[ $1 -eq $2\
    \ ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $2 $(( $1 - $2 ))\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [[ $1 -eq $2\
    \ ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    # Write your code here\n    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif\
    \ [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor $(( $1 - $2 ))\
    \ $2)\n    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n \
    \   fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2\
    \ ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n    \
    \    greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ];\
    \ then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n\
    \        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local tmp\n    while ((b !=\
    \ 0)); do\n        tmp=$b\n        b=$((a % b))\n        a=$tmp\n    done\n  \
    \  echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2\
    \ ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    # Insert your code here\n    if [[ $1 -eq $2 ]]; then\n  \
    \      echo $1\n    elif [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n   \
    \ else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while [[ $b\
    \ -ne 0 ]]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n \
    \   echo $a", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt\
    \ $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n \
    \       greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [[\
    \ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n      \
    \  echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor\
    \ $1 $(( $2 - $1 )))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n\
    \    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n\
    \    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n   \
    \ else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [[\
    \ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n      \
    \  echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor\
    \ $1 $(( $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n\
    \    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 ))\
    \ $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", " \
    \   if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n  \
    \      greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor $(( $1 -\
    \ $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n\
    \    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0\
    \ ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo\
    \ $a", "    # Write your code here\n    if [ $1 -eq $2 ]; then\n        echo $1\n\
    \    else\n        if [ $1 -gt $2 ]; then\n            echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n        else\n            echo $(greatest_common_divisor\
    \ $1 $(( $2 - $1 )))\n        fi\n    fi", "    if [ $1 -eq $2 ]; then\n     \
    \   echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $((\
    \ $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n\
    \    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ];\
    \ then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n\
    \    elif [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor $(( $1\
    \ - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1\
    \ )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n\
    \        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $[$1-$2] $2\n    else\n        greatest_common_divisor\
    \ $1 $[$2-$1]\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n   \
    \ else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n\
    \        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    if [ $a -eq $b ]; then\n        echo $a\n    elif [ $a -gt\
    \ $b ]; then\n        greatest_common_divisor $((a-b)) $b\n    else\n        greatest_common_divisor\
    \ $a $((b-a))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while\
    \ [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n\
    \    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $[$1-$2] $2\n    else\n        greatest_common_divisor\
    \ $1 $[$2-$1]\n    fi", "    local a=$1\n    local b=$2\n    local c\n    while\
    \ [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n\
    \    echo $a", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n\
    \    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi",
  "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n   \
    \     greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n\
    \    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local\
    \ a=$1\n    local b=$2\n    while [ $b -ne 0 ]; do\n        local tmp=$b\n   \
    \     b=$((a % b))\n        a=$tmp\n    done\n    echo $a", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c=$((a % b))\n    if\
    \ [ $c -eq 0 ]; then\n        echo $b\n    else\n        greatest_common_divisor\
    \ $b $c\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1\
    \ -gt $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n\
    \    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi",
  "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n   \
    \     greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor $(( $1 -\
    \ $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n\
    \    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ];\
    \ then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n\
    \    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local\
    \ a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a\
    \ % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n\
    \    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n\
    \        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    a=$1\n    b=$2\n    while [ $b -ne 0 ]; do\n        r=$((a\
    \ % b))\n        a=$b\n        b=$r\n    done\n    echo $a", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    local a=$1\n    local b=$2\n    local r\n    while\
    \ [ $b -ne 0 ]; do\n        r=$((a % b))\n        a=$b\n        b=$r\n    done\n\
    \    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$b\n    \
    \    b=$((a % b))\n        a=$c\n    done\n    echo $a", "    if [[ $1 -eq $2\
    \ ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -lt $2 ]; then\n        echo $1\n    else\n      \
    \  echo $2\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif\
    \ [[ $1 -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n \
    \   else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local\
    \ a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a\
    \ % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    if [[ $1 -eq\
    \ $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c\n\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n\n\
    \    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    local r=1\n    while [ $r -ne 0 ]; do\n        r=$((a % b))\n\
    \        a=$b\n        b=$r\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2\
    \ ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n     \
    \   greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [[ $1 -eq $2 ]];\
    \ then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1\
    \ -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n\
    \        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq\
    \ $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    # Write your code here\n    if [ $1 -eq $2 ]; then\n     \
    \   echo $1\n    elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif\
    \ [[ $1 -gt $2 ]]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n \
    \   else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if\
    \ [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n   \
    \     echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n        echo\
    \ $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ];\
    \ then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [[\
    \ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n      \
    \  greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n\
    \    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n\
    \    done\n    echo $a", "    if (( $1 == 0 || $2 == 0 )); then\n        echo\
    \ \"0\"\n    elif (( $1 == $2 )); then\n        echo \"$1\"\n    elif (( $1 >\
    \ $2 )); then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n \
    \       greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    # Write your\
    \ code here\n    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2\
    \ ]; then\n        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n\
    \        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n \
    \   local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n   \
    \ else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if [\
    \ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne\
    \ 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo\
    \ $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n\
    \        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    # Write your code here\n    if [ $1 -eq $2\
    \ ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif\
    \ [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor $(( $1 - $2 ))\
    \ $2)\n    else\n        echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n \
    \   fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ];\
    \ then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n\
    \    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if\
    \ [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -gt $2 ]]; then\n   \
    \     echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n        echo\
    \ $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi", "    local a=$1\n   \
    \ local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n\
    \        echo $1\n    elif [ $1 -gt $2 ]; then\n        greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor $1 $(( $2 - $1\
    \ ))\n    fi", "    local a=$1\n    local b=$2\n    local c\n    while [ $b -ne\
    \ 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo\
    \ $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n\
    \        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    if [ $1 -eq $2 ]; then\n        echo $1\n \
    \   elif [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n\
    \    else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    if\
    \ [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n       \
    \ greatest_common_divisor $(( $1 - $2 )) $2\n    else\n        greatest_common_divisor\
    \ $1 $(( $2 - $1 ))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n\
    \    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n\
    \    done\n    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif\
    \ [ $1 -gt $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n   \
    \ else\n        greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    local\
    \ a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a\
    \ % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n\
    \    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n    local\
    \ b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n    \
    \    a=$b\n        b=$c\n    done\n    echo $a", "    if [[ $1 -eq $2 ]]; then\n\
    \        echo $1\n    elif [[ $1 -gt $2 ]]; then\n        echo $(greatest_common_divisor\
    \ $(( $1 - $2 )) $2)\n    else\n        echo $(greatest_common_divisor $1 $((\
    \ $2 - $1 )))\n    fi", "    local a=$1\n    local b=$2\n    local c=0\n    while\
    \ [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n\
    \    echo $a", "    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt\
    \ $2 ]; then\n        greatest_common_divisor $(( $1 - $2 )) $2\n    else\n  \
    \      greatest_common_divisor $1 $(( $2 - $1 ))\n    fi", "    # Write your code\
    \ here\n    if [ $1 -eq $2 ]; then\n        echo $1\n    elif [ $1 -gt $2 ]; then\n\
    \        echo $(greatest_common_divisor $(( $1 - $2 )) $2)\n    else\n       \
    \ echo $(greatest_common_divisor $1 $(( $2 - $1 )))\n    fi"]
stop_tokens:
- "\n}"

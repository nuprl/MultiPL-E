name: HumanEval_128_prod_signs
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given an array arr of integers and you need to return\n\
  # sum of magnitudes of integers multiplied by product of all signs\n# of each number\
  \ in the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n\
  # Example:\n# >>> prod_signs([1, 2, 2, -4]) == -9\n# >>> prod_signs([0, 1]) == 0\n\
  # >>> prod_signs([]) == None\n#\n# $1 is a space-separated list\nprod_signs() {\n"
tests: "}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\"\
  \ ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\
  \") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
  \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[\
  \ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
completions: ["    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo $1 | tr ' ' '\\n' | awk '{\n            if ($1 > 0) {\n             \
    \   sign = 1\n            } else if ($1 < 0) {\n                sign = -1\n  \
    \          } else {\n                sign = 0\n            }\n            prod\
    \ *= sign\n            sum += sign * $1\n        } END {\n            if (sum\
    \ == 0) {\n                print \"None\"\n            } else {\n            \
    \    print prod * sum\n            }\n        }'\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [ $i\
    \ -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n\
    \            prod=$((prod * 1))\n        else\n            prod=0\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in \"${arr[@]}\"; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"\
    $@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [ $i\
    \ -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n    \
    \  prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n        \
    \    prod=$((prod * 1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    echo $((sum * prod))", "  if [ -z \"$1\" ];\
    \ then\n    echo \"None\"\n  else\n    local prod=1\n    local sum=0\n    for\
    \ i in $1; do\n      if [ $i -lt 0 ]; then\n        prod=$((prod * -1))\n    \
    \  elif [ $i -gt 0 ]; then\n        prod=$((prod * 1))\n      else\n        prod=0\n\
    \      fi\n      sum=$((sum + i))\n    done\n    echo $((sum * prod))\n  fi",
  "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 0 ]; then\n            sum=$((sum\
    \ + i))\n            prod=$((prod * 1))\n        elif [ $i -lt 0 ]; then\n   \
    \         sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        fi\n\
    \    done\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo None\n    else\n  \
    \      echo $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n\
    \            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n          \
    \  prod=$((prod * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod*-1))\n\
    \    elif [ $i -gt 0 ]; then\n      prod=$((prod*1))\n    else\n      prod=$((prod*0))\n\
    \    fi\n    sum=$((sum+i))\n  done\n  echo $((sum*prod))", "    local arr=(\"\
    $@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -gt 0 ]]; then\n            sum=$((sum + i))\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n\
    \            prod=$((prod * -1))\n        else\n            prod=$((prod * 0))\n\
    \        fi\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo None\n   \
    \ else\n        echo $((sum * prod))\n    fi", "    local arr=($1)\n    local\
    \ sum=0\n    local prod=1\n    local sign=0\n    for i in ${arr[@]}; do\n    \
    \    if [ $i -gt 0 ]; then\n            sign=1\n        elif [ $i -lt 0 ]; then\n\
    \            sign=-1\n        else\n            sign=0\n        fi\n        sum=$((\
    \ $sum + $i ))\n        prod=$(( $prod * $sign ))\n    done\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo None\n    else\n        echo $(( $sum * $prod ))\n\
    \    fi", "    local arr=($1)\n    local sum=0\n    local prod=1\n    local i=0\n\
    \    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n    else\n      \
    \  for i in ${arr[@]}; do\n            if [[ $i -eq 0 ]]; then\n             \
    \   prod=0\n                break\n            elif [[ $i -lt 0 ]]; then\n   \
    \             prod=$((prod * -1))\n            fi\n            sum=$((sum + i))\n\
    \        done\n        echo $((sum * prod))\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        local prod=1\n        local sum=0\n\
    \        for i in $@; do\n            if [ $i -gt 0 ]; then\n                prod=$((prod\
    \ * 1))\n            elif [ $i -lt 0 ]; then\n                prod=$((prod * -1))\n\
    \            else\n                prod=0\n            fi\n            sum=$((sum\
    \ + i))\n        done\n        echo $((prod * sum))\n    fi", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            sum=$((sum + i))\n            prod=$((prod *\
    \ 1))\n        elif [[ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n\
    \            prod=$((prod * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo None\n    else\n        echo $((sum * prod))\n    fi", " \
    \   local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n       \
    \ elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n   \
    \     sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            sum=$((sum + i))\n            prod=$((prod *\
    \ 1))\n        elif [[ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n\
    \            prod=$((prod * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo None\n    else\n        echo $((sum * prod))\n    fi", " \
    \ local arr=$1\n  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [ $i -gt 0 ]; then\n      sum=$((sum + i))\n      prod=$((prod *\
    \ 1))\n    elif [ $i -lt 0 ]; then\n      sum=$((sum + i * -1))\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n  done\n  if [ $prod -eq\
    \ 0 ]; then\n    echo None\n  else\n    echo $((sum * prod))\n  fi", "    local\
    \ arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n  \
    \      if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n       \
    \     prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n  \
    \      local prod=1\n        local sum=0\n        for n in $1; do\n          \
    \  if [ $n -lt 0 ]; then\n                prod=$((prod * -1))\n            elif\
    \ [ $n -gt 0 ]; then\n                prod=$((prod * 1))\n            fi\n   \
    \         sum=$((sum + n))\n        done\n        echo $((sum * prod))\n    fi",
  "    local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n        prod=$((prod * i / abs(i)))\n \
    \   done\n    echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n \
    \ local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n   \
    \   prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n        elif [[ $i -lt 0 ]]; then\n \
    \           prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=(\"$@\")\n    local sum=0\n    local\
    \ prod=1\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n    else\n\
    \        for i in \"${arr[@]}\"; do\n            if [ $i -eq 0 ]; then\n     \
    \           prod=0\n                break\n            elif [ $i -lt 0 ]; then\n\
    \                prod=$((prod * -1))\n            fi\n            sum=$((sum +\
    \ i))\n        done\n        echo $((sum * prod))\n    fi", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local sum=0\n    local prod=1\n    for i in $1; do\n        if [ $i -lt 0\
    \ ]; then\n            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n\
    \            prod=$((prod * 1))\n        else\n            prod=0\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  local sign=0\n  for i in ${arr[@]}; do\n   \
    \ if [[ $i -gt 0 ]]; then\n      sign=1\n    elif [[ $i -lt 0 ]]; then\n     \
    \ sign=-1\n    else\n      sign=0\n    fi\n    sum=$((sum + i))\n    prod=$((prod\
    \ * sign))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local sum=0\n    local prod=1\n    local i\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"$@\")\n    local\
    \ sum=0\n    local prod=1\n    local i\n    for i in \"${arr[@]}\"; do\n     \
    \   if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif\
    \ [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    # write your code here\n  \
    \  if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        local sum=0\n\
    \        local prod=1\n        for i in $1; do\n            if [ $i -lt 0 ]; then\n\
    \                prod=$((prod * -1))\n            elif [ $i -gt 0 ]; then\n  \
    \              prod=$((prod * 1))\n            else\n                prod=$((prod\
    \ * 0))\n            fi\n            sum=$((sum + i))\n        done\n        echo\
    \ $((sum * prod))\n    fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"\
    $@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    local sign=0\n    local n=0\n    for n in ${arr[@]}; do\n        if [[ $n\
    \ -gt 0 ]]; then\n            sign=1\n        elif [[ $n -lt 0 ]]; then\n    \
    \        sign=-1\n        else\n            sign=0\n        fi\n        sum=$((sum\
    \ + n))\n        prod=$((prod * sign))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo None\n    else\n        echo $((sum * prod))\n    fi", "    if [\
    \ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        local prod=1\n \
    \       local sum=0\n        for i in $1; do\n            if [ $i -lt 0 ]; then\n\
    \                prod=$((prod * -1))\n            elif [ $i -gt 0 ]; then\n  \
    \              prod=$((prod * 1))\n            else\n                prod=0\n\
    \            fi\n            sum=$((sum + i))\n        done\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 0 ]; then\n            sum=$((sum\
    \ + i))\n            prod=$((prod * 1))\n        elif [ $i -lt 0 ]; then\n   \
    \         sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n    done\n    if [ $prod -eq 0 ];\
    \ then\n        echo None\n    else\n        echo $((sum * prod))\n    fi", " \
    \ local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n  \
    \  if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "    local arr=$1\n    local sum=0\n    local prod=1\n\
    \    for i in $arr; do\n        if [[ $i -gt 0 ]]; then\n            sum=$((sum\
    \ + i))\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n \
    \           sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        else\n\
    \            sum=$((sum + 0))\n            prod=$((prod * 0))\n        fi\n  \
    \  done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n    \
    \    echo $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n  \
    \  local sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n\
    \            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n         \
    \   prod=$((prod * -1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            sum=$((sum + i))\n            prod=$((prod *\
    \ 1))\n        elif [[ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n\
    \            prod=$((prod * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo None\n    else\n        echo $((sum * prod))\n    fi", " \
    \   local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local sum=0\n    local prod=1\n    if [ ${#arr[@]} -eq\
    \ 0 ]; then\n        echo \"None\"\n    else\n        for i in ${arr[@]}; do\n\
    \            if [ $i -lt 0 ]; then\n                prod=$((prod * -1))\n    \
    \        elif [ $i -eq 0 ]; then\n                prod=0\n                break\n\
    \            fi\n            sum=$((sum + i))\n        done\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n\
    \            sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [[\
    \ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n            prod=$((prod\
    \ * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo None\n\
    \    else\n        echo $((sum * prod))\n    fi", "  local arr=($1)\n  local sum=0\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n     \
    \ sum=$((sum + i))\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n    fi\n  done\n  if\
    \ [[ $sum -eq 0 ]]; then\n    echo None\n  else\n    echo $((sum * prod))\n  fi",
  "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \ elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n \
    \ local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum\
    \ + i))\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum\
    \ + i * -1))\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo None\n  else\n    echo\
    \ $((sum * prod))\n  fi", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    local sign=0\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo None\n    else\n\
    \        for i in ${arr[@]}; do\n            if [ $i -eq 0 ]; then\n         \
    \       sign=0\n            elif [ $i -lt 0 ]; then\n                sign=-1\n\
    \            else\n                sign=1\n            fi\n            sum=$((sum\
    \ + i))\n            prod=$((prod * sign))\n        done\n        echo $((sum\
    \ * prod))\n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | awk '{\n            sign\
    \ = $1 < 0 ? -1 : ($1 > 0 ? 1 : 0);\n            prod *= sign;\n            sum\
    \ += sign * $1;\n        } END {\n            print prod * sum;\n        }'\n\
    \    fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    sum=$((sum\
    \ + i))\n    prod=$((prod * i / abs(i)))\n  done\n  echo $((sum * prod))", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        else\n    \
    \        prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo None\n    else\n        echo $((sum * prod))\n    fi", "    if [\
    \ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        local prod=1\n \
    \       local sum=0\n        for i in $1; do\n            if [ $i -lt 0 ]; then\n\
    \                prod=$((prod * -1))\n            elif [ $i -gt 0 ]; then\n  \
    \              prod=$((prod * 1))\n            else\n                prod=0\n\
    \            fi\n            sum=$((sum + i))\n        done\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n   \
    \ if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n\
    \      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n       \
    \     prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n \
    \   local prod=1\n    for i in ${arr[@]}; do\n        if [ $i -gt 0 ]; then\n\
    \            sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [\
    \ $i -lt 0 ]; then\n            sum=$((sum + i * -1))\n            prod=$((prod\
    \ * -1))\n        fi\n    done\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo\
    \ None\n    else\n        echo $((sum * prod))\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [ $i -gt 0 ]; then\n            sum=$((sum + i))\n          \
    \  prod=$((prod * 1))\n        elif [ $i -lt 0 ]; then\n            sum=$((sum\
    \ + i * -1))\n            prod=$((prod * -1))\n        fi\n    done\n    if [\
    \ ${#arr[@]} -eq 0 ]; then\n        echo None\n    else\n        echo $((sum *\
    \ prod))\n    fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in\
    \ ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n\
    \    sum=$((sum + i))\n    prod=$((prod * i / abs(i)))\n  done\n  echo $((sum\
    \ * prod))", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n  \
    \      local prod=1\n        local sum=0\n        for i in $1; do\n          \
    \  if [ $i -lt 0 ]; then\n                prod=$((prod * -1))\n            elif\
    \ [ $i -gt 0 ]; then\n                prod=$((prod * 1))\n            else\n \
    \               prod=0\n            fi\n            sum=$((sum + i))\n       \
    \ done\n        echo $((sum * prod))\n    fi", "    if [ -z \"$1\" ]; then\n \
    \       echo \"None\"\n    else\n        local prod=1\n        local sum=0\n \
    \       for i in $1; do\n            if [ $i -lt 0 ]; then\n                prod=$((prod\
    \ * -1))\n            elif [ $i -gt 0 ]; then\n                prod=$((prod *\
    \ 1))\n            else\n                prod=0\n            fi\n            sum=$((sum\
    \ + i))\n        done\n        echo $((sum * prod))\n    fi", "  local arr=(\"\
    $@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i\
    \ in ${arr[@]}; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod *\
    \ 1))\n        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n    \
    \    else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local -a arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    sum=$((sum\
    \ + i))\n    prod=$((prod * i / abs(i)))\n  done\n  echo $((sum * prod))", " \
    \   local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    local sign=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ sign=1\n        elif [[ $i -gt 0 ]]; then\n            sign=0\n        else\n\
    \            sign=-1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local -a arr=(\"$@\")\n   \
    \ local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n        elif [[ $i -lt 0 ]]; then\n        \
    \    prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n   \
    \ echo $((sum * prod))", "    local -a arr=(\"$@\")\n    local sum=0\n    local\
    \ prod=1\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n  \
    \          prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n    \
    \        prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local -a arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"\
    ; do\n        if [ $i -gt 0 ]; then\n            sum=$((sum + i))\n          \
    \  prod=$((prod * 1))\n        elif [ $i -lt 0 ]; then\n            sum=$((sum\
    \ + i * -1))\n            prod=$((prod * -1))\n        fi\n    done\n    if [\
    \ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n\
    \    local i\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n\
    \            sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [[\
    \ $i -lt 0 ]]; then\n            sum=$((sum + (-i)))\n            prod=$((prod\
    \ * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo None\n\
    \    else\n        echo $((sum * prod))\n    fi", "  local arr=($1)\n  local sum=0\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    else\n      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum *\
    \ prod))", "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif\
    \ [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    local\
    \ arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"\
    ; do\n        if [ \"$i\" -gt 0 ]; then\n            sum=$((sum + i))\n      \
    \      prod=$((prod * 1))\n        elif [ \"$i\" -lt 0 ]; then\n            sum=$((sum\
    \ + i * -1))\n            prod=$((prod * -1))\n        fi\n    done\n    if [\
    \ \"$sum\" -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for\
    \ i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n \
    \ local prod=1\n  local i\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i\
    \ in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n \
    \   elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "   \
    \ local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n       \
    \     prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    elif [ $i -lt 0\
    \ ]; then\n      prod=$((prod * -1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n\
    \            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n         \
    \   prod=$((prod * -1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n     \
    \ prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local\
    \ sum=0\n    for i in ${arr[@]}; do\n        if [ $i -eq 0 ]; then\n         \
    \   prod=0\n        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n\
    \            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n          \
    \  prod=$((prod * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n     \
    \ ((sum+=i))\n      ((prod*=1))\n    elif [[ $i -lt 0 ]]; then\n      ((sum+=i*-1))\n\
    \      ((prod*=-1))\n    else\n      ((prod*=0))\n    fi\n  done\n  if [[ $prod\
    \ -eq 0 ]]; then\n    echo None\n  else\n    echo $((sum*prod))\n  fi", "    local\
    \ arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]}; do\n  \
    \      if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif\
    \ [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n       \
    \     prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n \
    \ local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n \
    \   for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n \
    \ local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  local i=0\n  if [[ ${#arr[@]} -eq 0 ]]; then\n    echo \"None\"\
    \n    return\n  fi\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n  \
    \    prod=$((prod * -1))\n    elif [[ $i -eq 0 ]]; then\n      prod=0\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        else\n    \
    \        prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n        \
    \    prod=$((prod * 1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + (i * prod)))\n    done\n    echo $sum", "  local arr=($1)\n  local\
    \ sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n\
    \      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "   \
    \ local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n          \
    \  prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            sum=$((sum\
    \ + i))\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n \
    \           sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        fi\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo None\n    else\n      \
    \  echo $((sum * prod))\n    fi", "  local arr=(\"$@\")\n  local sum=0\n  local\
    \ prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "    local arr=\"$1\"\n    local prod=1\n    local sum=0\n    for\
    \ i in $arr; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n\
    \        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((prod * sum))", "    local arr=($1)\n    local sum=0\n    local prod=1\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            sum=$((sum\
    \ + i))\n            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n \
    \           sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        fi\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo None\n    else\n      \
    \  echo $((sum * prod))\n    fi", "    local arr=($1)\n    local sum=0\n    local\
    \ prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n      \
    \      prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n        \
    \    prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n   \
    \ echo $((sum * prod))", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n\
    \    for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n\
    \      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum + i\
    \ * -1))\n      prod=$((prod * -1))\n    fi\n  done\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo None\n  else\n    echo $((sum * prod))\n  fi", "    if [ -z \"$1\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' |\
    \ awk '{\n            if ($1 > 0) {\n                sign = 1\n            } else\
    \ if ($1 < 0) {\n                sign = -1\n            } else {\n           \
    \     sign = 0\n            }\n            sum += sign\n            prod *= sign\n\
    \            mag += abs($1)\n        } END {\n            if (sum == 0) {\n  \
    \              print 0\n            } else {\n                print mag * prod\n\
    \            }\n        }'\n    fi", "    local arr=($1)\n    local sum=0\n  \
    \  local prod=1\n    local sign=0\n    for i in ${arr[@]}; do\n        if [[ $i\
    \ -eq 0 ]]; then\n            sign=0\n        elif [[ $i -lt 0 ]]; then\n    \
    \        sign=-1\n        else\n            sign=1\n        fi\n        sum=$((sum\
    \ + i * sign))\n        prod=$((prod * sign))\n    done\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo None\n    else\n        echo $((sum * prod))\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   local prod=1\n        local sum=0\n        for i in $1; do\n            if\
    \ [ $i -lt 0 ]; then\n                prod=$((prod * -1))\n            elif [\
    \ $i -gt 0 ]; then\n                prod=$((prod * 1))\n            else\n   \
    \             prod=0\n            fi\n            sum=$((sum + i))\n        done\n\
    \        echo $((sum * prod))\n    fi", "    local arr=(\"$@\")\n    local sum=0\n\
    \    local prod=1\n    for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n\
    \            prod=$((prod * -1))\n        elif [ $i -gt 0 ]; then\n          \
    \  prod=$((prod * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local sum=0\n  local prod=1\n\
    \  for i in $1; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n    \
    \  prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum + i * -1))\n\
    \      prod=$((prod * -1))\n    fi\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo\
    \ None\n  else\n    echo $((sum * prod))\n  fi", "  local arr=($1)\n  local sum=0\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n     \
    \ prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    if [ -z \"\
    $1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\\
    n' | awk '{\n            if ($1 > 0) {\n                sign = 1\n           \
    \ } else if ($1 < 0) {\n                sign = -1\n            } else {\n    \
    \            sign = 0\n            }\n            sum += sign\n            product\
    \ *= sign\n            abs += abs($1)\n        } END {\n            if (sum ==\
    \ 0) {\n                print 0\n            } else {\n                print abs\
    \ * product\n            }\n        }'\n    fi", "    local arr=(\"$@\")\n   \
    \ local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0\
    \ ]]; then\n            prod=$((prod * 1))\n        else\n            prod=0\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))", " \
    \   local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [ $i -eq 0 ]; then\n            prod=0\n            break\n \
    \       fi\n        sum=$((sum + i))\n        prod=$((prod * i / abs(i)))\n  \
    \  done\n    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n   \
    \ local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n\
    \            sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [[\
    \ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n            prod=$((prod\
    \ * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo None\n\
    \    else\n        echo $((sum * prod))\n    fi", "    local arr=(\"$@\")\n  \
    \  local sum=0\n    local prod=1\n    local sign=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n        elif [[ $i\
    \ -lt 0 ]]; then\n            sign=-1\n        else\n            sign=1\n    \
    \    fi\n        sum=$((sum + i))\n        prod=$((prod * sign))\n    done\n \
    \   if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum\
    \ * prod))\n    fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i\
    \ in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n    \
    \  prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum + i * -1))\n\
    \      prod=$((prod * -1))\n    fi\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo\
    \ None\n  else\n    echo $((sum * prod))\n  fi", "    local arr=($1)\n    local\
    \ sum=0\n    local prod=1\n    local len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n\
    \        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]}; do\n \
    \       if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        elif [\
    \ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        else\n           \
    \ prod=0\n            break\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "    if [[ -z $1 ]]; then\n        echo \"None\"\n    else\n    \
    \    local prod=1\n        local sum=0\n        for i in $1; do\n            if\
    \ [[ $i -gt 0 ]]; then\n                prod=$((prod * 1))\n            elif [[\
    \ $i -lt 0 ]]; then\n                prod=$((prod * -1))\n            else\n \
    \               prod=$((prod * 0))\n            fi\n            sum=$((sum + i))\n\
    \        done\n        echo $((prod * sum))\n    fi", "    local -a arr\n    local\
    \ -i sum=0\n    local -i prod=1\n    local -i i=0\n    arr=($1)\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        if [ ${arr[$i]} -lt 0 ]; then\n          \
    \  prod=$(( prod * -1 ))\n        elif [ ${arr[$i]} -eq 0 ]; then\n          \
    \  prod=0\n            break\n        fi\n        sum=$(( sum + ${arr[$i]} ))\n\
    \    done\n    echo $(( sum * prod ))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n        \
    \    prod=$((prod * 1))\n        else\n            prod=0\n        fi\n      \
    \  sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    if [ $# -eq 0 ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$@\" | tr ' ' '\\n' |\
    \ awk '{if ($1>0) {p=p*1} else if ($1<0) {p=p*-1} else {p=p*0}; s=s+abs($1)} END\
    \ {print s*p}'\n    fi", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        sum=$((sum + i))\n        prod=$((prod\
    \ * i / abs(i)))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo None\n\
    \    else\n        echo $((sum * prod))\n    fi", "  local -a arr\n  local sum=0\n\
    \  local prod=1\n  arr=($1)\n  if [[ ${#arr[@]} -eq 0 ]]; then\n    echo \"None\"\
    \n    return\n  fi\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n  \
    \    sum=$((sum + i))\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n    fi\n  done\n  echo\
    \ $((sum * prod))", "  local -a arr\n  local -i prod=1\n  local -i sum=0\n  local\
    \ -i i=0\n  local -i len=0\n  arr=($1)\n  len=${#arr[@]}\n  if [ $len -eq 0 ];\
    \ then\n    echo \"None\"\n    return\n  fi\n  for ((i=0; i<len; i++)); do\n \
    \   if [ ${arr[$i]} -eq 0 ]; then\n      prod=0\n      break\n    fi\n    if [\
    \ ${arr[$i]} -lt 0 ]; then\n      prod=-1\n    fi\n    sum=$((sum + ${arr[$i]}))\n\
    \  done\n  echo $((prod * sum))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n\
    \      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum + i\
    \ * -1))\n      prod=$((prod * -1))\n    fi\n  done\n  if [[ $sum -eq 0 ]]; then\n\
    \    echo None\n  else\n    echo $((sum * prod))\n  fi", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    local sign=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -gt 0 ]; then\n            sign=1\n        elif [ $i -lt\
    \ 0 ]; then\n            sign=-1\n        else\n            sign=0\n        fi\n\
    \        sum=$((sum + i))\n        prod=$((prod * sign))\n    done\n    echo $((sum\
    \ * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n    \
    \        break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod *\
    \ -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n        prod=$((prod * i / abs(i)))\n \
    \   done\n    echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n  local\
    \ prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    fi\n    sum=$((sum + abs($i)))\n    prod=$((prod * sign($i)))\n\
    \  done\n  echo $((sum * prod))", "  local arr=$1\n  local sum=0\n  local prod=1\n\
    \  local num\n  for num in $arr; do\n    if [[ $num -gt 0 ]]; then\n      sum=$((sum\
    \ + num))\n      prod=$((prod * 1))\n    elif [[ $num -lt 0 ]]; then\n      sum=$((sum\
    \ + num * -1))\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n  done\n  if [[ $prod -eq 0 ]]; then\n    echo None\n  else\n    echo\
    \ $((sum * prod))\n  fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n\
    \            sum=$((sum + i))\n            prod=$((prod * 1))\n        elif [[\
    \ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n            prod=$((prod\
    \ * -1))\n        else\n            prod=$((prod * 0))\n        fi\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo None\n    else\n        echo $((sum\
    \ * prod))\n    fi", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=$((prod * 0))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo \"$((sum * prod))\"", "    local arr=($1)\n    local\
    \ sum=0\n    local prod=1\n    local sign=0\n    for i in ${arr[@]}; do\n    \
    \    if [[ $i -eq 0 ]]; then\n            sign=0\n        elif [[ $i -lt 0 ]];\
    \ then\n            sign=-1\n        else\n            sign=1\n        fi\n  \
    \      sum=$((sum + i))\n        prod=$((prod * sign))\n    done\n    echo $((sum\
    \ * prod))", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n   \
    \     local prod=1\n        local sum=0\n        for i in $@; do\n           \
    \ if [ $i -lt 0 ]; then\n                prod=$((prod*-1))\n            elif [\
    \ $i -gt 0 ]; then\n                prod=$((prod*1))\n            fi\n       \
    \     sum=$((sum+i))\n        done\n        echo $((prod*sum))\n    fi", "   \
    \ local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + (i < 0 ? -i : i)))\n    done\n    echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        else\n    \
    \        prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [ $i -lt 0 ]; then\n    \
    \  prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n\
    \    else\n      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum *\
    \ prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n        else\n    \
    \        prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum\
    \ * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr=(\"\
    $@\")\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[\
    \ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n          \
    \  prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n \
    \   local num\n    for num in \"${arr[@]}\"; do\n        if [[ $num -lt 0 ]];\
    \ then\n            prod=$((prod * -1))\n        elif [[ $num -gt 0 ]]; then\n\
    \            prod=$((prod * 1))\n        else\n            prod=0\n        fi\n\
    \        sum=$((sum + num))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n     \
    \ prod=0\n      break\n    fi\n    sum=$((sum + i))\n    prod=$((prod * i / abs(i)))\n\
    \  done\n  if [[ $prod -eq 0 ]]; then\n    echo 0\n  else\n    echo $((sum * prod))\n\
    \  fi", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    if [[ -z $1 ]]; then\n        echo \"None\"\n    else\n        local prod=1\n\
    \        local sum=0\n        for i in $1; do\n            if [[ $i -lt 0 ]];\
    \ then\n                prod=$((prod * -1))\n            elif [[ $i -gt 0 ]];\
    \ then\n                prod=$((prod * 1))\n            else\n               \
    \ prod=0\n            fi\n            sum=$((sum + i))\n        done\n       \
    \ echo $((sum * prod))\n    fi", "    if [[ $# -eq 0 ]]; then\n        echo \"\
    None\"\n    else\n        local prod=1\n        local sum=0\n        for i in\
    \ $@; do\n            if [[ $i -lt 0 ]]; then\n                prod=$((prod *\
    \ -1))\n            elif [[ $i -eq 0 ]]; then\n                prod=0\n      \
    \      fi\n            sum=$((sum + i))\n        done\n        echo $((prod *\
    \ sum))\n    fi", "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n\
    \            ((sum+=i))\n        elif [[ $i -lt 0 ]]; then\n            ((sum-=i))\n\
    \            ((prod*=i))\n        fi\n    done\n    echo $((sum*prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if\
    \ [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n\
    \      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))",
  "    local arr=($1)\n    local sum=0\n    local prod=1\n    local sign=0\n    for\
    \ i in ${arr[@]}; do\n        if [ $i -gt 0 ]; then\n            sign=1\n    \
    \    elif [ $i -lt 0 ]; then\n            sign=-1\n        else\n            sign=0\n\
    \        fi\n        sum=$((sum + i))\n        prod=$((prod * sign))\n    done\n\
    \    echo $((sum * prod))", "    local arr=(\"$@\")\n    local prod=1\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n   \
    \         prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n           \
    \ prod=$((prod * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n\
    \  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n \
    \     prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if\
    \ [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n\
    \      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local\
    \ prod=1\n    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n      \
    \      prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n        \
    \    prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n   \
    \ echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[$i]} -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    elif [[ ${arr[$i]} -eq 0 ]]; then\n      prod=0\n\
    \      break\n    fi\n    sum=$((sum + ${arr[$i]}))\n  done\n  echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local -a\
    \ arr=($1)\n    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    fi\n        sum=$((sum + i))\n        prod=$((prod * i / abs(i)))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \ elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "    local -a arr=(\"$@\")\n    local\
    \ sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        fi\n        sum=$((sum\
    \ + i))\n        prod=$((prod * i / abs(i)))\n    done\n    if [[ $prod -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n  \
    \  fi", "    local arr=$1\n    local sum=0\n    local prod=1\n    for i in $arr;\
    \ do\n        if [ $i -eq 0 ]; then\n            prod=0\n            break\n \
    \       fi\n        sum=$((sum + i))\n        prod=$((prod * i / abs(i)))\n  \
    \  done\n    if [ $prod -eq 0 ]; then\n        echo None\n    else\n        echo\
    \ $((sum * prod))\n    fi", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n    local sum=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod\
    \ * 1))\n        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n  \
    \      else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n    local prod=1\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))"]
stop_tokens:
- "\n}"

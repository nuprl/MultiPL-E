language: sh
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n\
    \            ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn5ambm5_.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if ((${arr[i]} < 100)); then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local k=$2\n  local arr=($1)\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    if (( ${arr[$i]} < 100 )); then\n      (( sum +=\
    \ ${arr[$i]} ))\n      (( k-- ))\n      if (( k == 0 )); then\n        break\n\
    \      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=$1\n    local k=$2\n    for i\
    \ in $arr; do\n        if [ ${#i} -le 2 ]; then\n            sum=$((sum + i))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=(\"$@\")\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph4bymeeh.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$(( sum + arr[i]\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for n in $1; do\n    if (( i <\
    \ $2 )); then\n      if (( n < 100 )); then\n        (( sum += n ))\n      fi\n\
    \    fi\n    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=(\"$@\")\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      ((sum+=${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0z5406d9.sh: line 17: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for num in $1; do\n    if (( ${#num}\
    \ <= 2 )); then\n      (( sum += num ))\n    fi\n    (( i++ ))\n    if (( i ==\
    \ $2 )); then\n      break\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum+=${arr[i]}\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if (( arr[i] < 100 )); then\n            (( sum\
    \ += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in ${arr[@]:0:$k};\
    \ do\n    if [[ $i -lt 100 ]]; then\n      ((sum+=i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvb16zfrf.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  local arr=($1)\n  while [ $i -lt\
    \ $2 ]; do\n    local num=${arr[$i]}\n    if [ ${#num} -le 2 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    for i in $1; do\n        if [ ${#i} -le\
    \ 2 ]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcci71wgr.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum += arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3hv6cblo.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_w4rwg7e.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if ((arr[i] < 100)); then\n            ((sum\
    \ += arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    local num=${arr[i]}\n    if [[ $num -lt 100 ]]; then\n \
    \     ((sum+=num))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 100 ]]; then\n\
    \      ((sum+=i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9f8mhy4f.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    for i in $1; do\n        if [[ $i -lt 100\
    \ ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2gn5gdam.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  local arr=($1)\n  while [ $i -lt\
    \ $2 ]; do\n    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum + arr[$i]))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local k=$2\n    for i in $1; do\n     \
    \   if [ ${#i} -le 2 ]; then\n            sum=$((sum + i))\n            k=$((k\
    \ - 1))\n        fi\n        if [ $k -eq 0 ]; then\n            break\n      \
    \  fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if ((arr[i] < 100)); then\n      ((sum += arr[i]))\n   \
    \ fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo3__4mhk.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local k=$2\n    for i in $1; do\n     \
    \   if [ ${#i} -le 2 ]; then\n            sum=$((sum + i))\n            k=$((k\
    \ - 1))\n        fi\n        if [ $k -eq 0 ]; then\n            break\n      \
    \  fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  local arr=($1)\n  while [ $i -lt\
    \ $2 ]; do\n    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum + arr[$i]))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += arr[i]\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1_8520gn.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    local num=${arr[$i]}\n    if [[ $num -lt 100 ]]; then\n     \
    \ sum=$((sum + num))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphu8qsrov.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += arr[i]\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for n in $1; do\n    if [ $i -lt\
    \ $2 ]; then\n      if [ ${#n} -le 2 ]; then\n        sum=$((sum + n))\n     \
    \ fi\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if ((${arr[i]} < 100)); then\n      ((sum += ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if (( arr[i] < 100 )); then\n      (( sum += arr[i] ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3h4r99zr.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq\
    \ 1 $k); do\n    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum + arr[$i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppcxlqa75.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local k=$2\n  local i=0\n  for n in $1; do\n\
    \    if [ $i -ge $k ]; then\n      break\n    fi\n    if [ ${#n} -le 2 ]; then\n\
    \      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  for\
    \ (( i=0; i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum\
    \ += arr[i] ))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdyv68ntw.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += arr[i]\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1_8520gn.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  local arr=($1)\n  while [ $i -lt\
    \ $2 ]; do\n    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum + arr[$i]))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local k=$2\n  for i in $1; do\n    if [ ${#i}\
    \ -le 2 ]; then\n      ((sum+=i))\n      ((k--))\n      if [ $k -eq 0 ]; then\n\
    \        break\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n \
    \ for num in $arr; do\n    if [ $i -lt $k ]; then\n      if [ ${#num} -le 2 ];\
    \ then\n        sum=$((sum + num))\n      fi\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local num\n  for num in $1; do\n    if [[ $num\
    \ -lt 100 ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += arr[i]\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=(\"$@\")\n  for ((i=0; i<$2; i++));\
    \ do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkhfaa2o5.sh: line 17: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmpkhfaa2o5.sh: line 18: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for element in $1; do\n    if\
    \ [ $i -lt $2 ]; then\n      if [ ${#element} -le 2 ]; then\n        sum=$((sum\
    \ + element))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    for i in $1; do\n        if [[ $i -lt 100\
    \ ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += arr[i]\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1_8520gn.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdiklojg5.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for num in $1; do\n    if [ $i\
    \ -eq $2 ]; then\n      break\n    fi\n    if [ ${#num} -le 2 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=(\"$@\")\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7hckzdos.sh: line 17: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<$k; i++)); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for num in $1; do\n    if [ $i\
    \ -lt $2 ]; then\n      if [ ${#num} -le 2 ]; then\n        sum=$((sum + num))\n\
    \      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -a arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n\
    \  local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n\
    \      ((sum+=arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmrcfs1m3.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    for i in $1; do\n        if [[ $i -lt 100\
    \ ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local\
    \ i=0\n  for num in $arr; do\n    if [ $i -eq $k ]; then\n      break\n    fi\n\
    \    if [ ${#num} -le 2 ]; then\n      sum=$((sum + num))\n    fi\n    i=$((i\
    \ + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=(\"$@\")\n  local k=${arr[-1]}\n  local sum=0\n\
    \  for (( i=0; i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((\
    \ sum + arr[i] ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5sxwmrf2.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=(\"$@\")\n    local k=$2\n    local sum=0\n  \
    \  for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n     \
    \       sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp39nswmtp.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  for i in $1; do\n    if [[ $i -lt 100 ]]; then\n\
    \      ((sum+=i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  for i in $1; do\n    if [[ $i -lt 100 ]]; then\n\
    \      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt $k ]; do\n    local num=${arr[$i]}\n    if [ ${#num} -le 2 ];\
    \ then\n      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcci71wgr.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for num in $1; do\n    if [ $i\
    \ -eq $2 ]; then\n      break\n    fi\n    if [ ${#num} -le 2 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$(( sum + ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  local k=$2\n  for num in $1; do\n\
    \    if [ $i -ge $k ]; then\n      break\n    fi\n    if [ ${#num} -le 2 ]; then\n\
    \      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if (( ${arr[i]} < 100 )); then\n          \
    \  sum=$(( sum + ${arr[i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  for\
    \ ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg5zz5lrm.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy0ywveci.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]:0:$k}; do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqbe04tbr.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=(\"$@\")\n  local k=${arr[-1]}\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphb_t5i80.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_e1jm06r.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n \
    \ for n in $arr; do\n    if [ $i -lt $k ]; then\n      if [ ${#n} -le 2 ]; then\n\
    \        sum=$((sum + n))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Input: arr = [111,21,3,4000,5,6,7,8,9], k\
    \ = 4\n# Output: 24 # sum of 21 + 3\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659998156

name: HumanEval_130_tri
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply by\
  \ mathematicians in \n# the last couple centuries. However, what people don't know\
  \ is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
  # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
  \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
  # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
  \ given a non-negative integer number n, you have to a return a list of the \n#\
  \ first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1, 3,\
  \ 2, 8]\n#\n# $1 is an integer\ntri() {\n"
tests: "}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
  \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2\
  \ 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
  \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15\
  \ 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63\
  \ 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
completions: []
stop_tokens:
- "\n}"

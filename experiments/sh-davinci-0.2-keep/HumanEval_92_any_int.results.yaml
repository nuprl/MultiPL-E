language: sh
name: HumanEval_92_any_int
results:
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2+$3 || $2 -eq $1+$3 || $3 -eq $1+$2 ]]; then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo\
    \ \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptpym07pd.sh: line 15: syntax error in conditional expression

    /tmp/tmptpym07pd.sh: line 15: syntax error near `+''

    /tmp/tmptpym07pd.sh: line 15: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n        echo \"\
    True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 + $2 )) ];\
    \ then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"false\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb49ig_h.sh: line 17: syntax error in conditional expression

    /tmp/tmpjb49ig_h.sh: line 17: syntax error near `+''

    /tmp/tmpjb49ig_h.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n\
    \    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4apu3b8o.sh: line 17: syntax error in conditional expression

    /tmp/tmp4apu3b8o.sh: line 17: syntax error near `+''

    /tmp/tmp4apu3b8o.sh: line 17: `    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 +
    $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"false\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb49ig_h.sh: line 17: syntax error in conditional expression

    /tmp/tmpjb49ig_h.sh: line 17: syntax error near `+''

    /tmp/tmpjb49ig_h.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu0ry3wju.sh: line 15: syntax error in conditional expression

    /tmp/tmpu0ry3wju.sh: line 15: syntax error near `+''

    /tmp/tmpu0ry3wju.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n        echo \"True\"\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmposlsrs3z.sh: line 15: syntax error in conditional expression

    /tmp/tmposlsrs3z.sh: line 15: syntax error near `+''

    /tmp/tmposlsrs3z.sh: line 15: `    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n\
    \    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4apu3b8o.sh: line 17: syntax error in conditional expression

    /tmp/tmp4apu3b8o.sh: line 17: syntax error near `+''

    /tmp/tmp4apu3b8o.sh: line 17: `    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 +
    $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu2eakglp.sh: line 16: syntax error in conditional expression

    /tmp/tmpu2eakglp.sh: line 16: syntax error near `+''

    /tmp/tmpu2eakglp.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n        echo \"True\"\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmposlsrs3z.sh: line 15: syntax error in conditional expression

    /tmp/tmposlsrs3z.sh: line 15: syntax error near `+''

    /tmp/tmposlsrs3z.sh: line 15: `    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $(($2\
    \ + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n    echo\
    \ \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo\
    \ \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptpym07pd.sh: line 15: syntax error in conditional expression

    /tmp/tmptpym07pd.sh: line 15: syntax error near `+''

    /tmp/tmptpym07pd.sh: line 15: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"True\"\n  else\n    echo\
    \ \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"False\"\n    elif\
    \ [ $1 -eq $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 +\
    \ $2 )) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"false\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb49ig_h.sh: line 17: syntax error in conditional expression

    /tmp/tmpjb49ig_h.sh: line 17: syntax error near `+''

    /tmp/tmpjb49ig_h.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n        echo \"\
    True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ $2 + $3 || $2 == $1 + $3 || $3 == $1 + $2 ]]; then\n        echo \"True\"\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwyf33n3d.sh: line 15: syntax error in conditional expression

    /tmp/tmpwyf33n3d.sh: line 15: syntax error near `+''

    /tmp/tmpwyf33n3d.sh: line 15: `    if [[ $1 == $2 + $3 || $2 == $1 + $3 || $3
    == $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    return 1\n  fi\n  if [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \    return 0\n  fi\n  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"False\"\n    elif\
    \ [ $1 -eq $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 +\
    \ $2 )) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        echo \"False\"\n\
    \    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp654kh0jv.sh: line 17: syntax error in conditional expression

    /tmp/tmp654kh0jv.sh: line 17: syntax error near `+''

    /tmp/tmp654kh0jv.sh: line 17: `    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 +
    $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $(($2\
    \ + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n    echo\
    \ \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n        echo \"True\"\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmposlsrs3z.sh: line 15: syntax error in conditional expression

    /tmp/tmposlsrs3z.sh: line 15: syntax error near `+''

    /tmp/tmposlsrs3z.sh: line 15: `    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"false\"\n    elif\
    \ [ $1 -eq $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 +\
    \ $2 )) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplp6erl4r.sh: line 15: [: 2.5: integer expression expected

    /tmp/tmplp6erl4r.sh: line 15: [: 2.5: integer expression expected

    /tmp/tmplp6erl4r.sh: line 17: [: 2.5: integer expression expected

    /tmp/tmplp6erl4r.sh: line 17: 2.5 + 3 : syntax error: invalid arithmetic operator
    (error token is ".5 + 3 ")

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n\
    \    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4apu3b8o.sh: line 17: syntax error in conditional expression

    /tmp/tmp4apu3b8o.sh: line 17: syntax error near `+''

    /tmp/tmp4apu3b8o.sh: line 17: `    elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 +
    $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if (( $1 ==\
    \ $2 + $3 )) || (( $2 == $1 + $3 )) || (( $3 == $1 + $2 )); then\n        echo\
    \ \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"False\"\n    elif\
    \ [ $1 -eq $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 +\
    \ $2 )) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n\
    \    else\n        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq\
    \ $1 + $2 ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvoz41jq0.sh: line 18: syntax error in conditional expression

    /tmp/tmpvoz41jq0.sh: line 18: syntax error near `+''

    /tmp/tmpvoz41jq0.sh: line 18: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"True\"\n  else\n    echo\
    \ \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $# -ne 3\
    \ ]]; then\n    echo \"Usage: $0 <number> <number> <number>\"\n    return 1\n\
    \  fi\n\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$\
    \ ]]; then\n    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1\
    \ + $2 ]]; then\n      echo \"True\"\n    else\n      echo \"False\"\n    fi\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwy61fyln.sh: line 21: syntax error in conditional expression

    /tmp/tmpwy61fyln.sh: line 21: syntax error near `+''

    /tmp/tmpwy61fyln.sh: line 21: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 + $2 )) ];\
    \ then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ]\n  then\n    echo \"true\"\n  elif [ $1 -eq $3 ]\n  then\n    echo \"true\"\
    \n  elif [ $2 -eq $3 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"True\"\
    \n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbhufsb2d.sh: line 16: [: too many arguments

    /tmp/tmpbhufsb2d.sh: line 16: [: too many arguments

    /tmp/tmpbhufsb2d.sh: line 16: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"false\"\n  elif [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps41bmo9f.sh: line 15: [: 2.5: integer expression expected

    /tmp/tmps41bmo9f.sh: line 15: [: 2.5: integer expression expected

    /tmp/tmps41bmo9f.sh: line 17: [: 2.5: integer expression expected

    /tmp/tmps41bmo9f.sh: line 17: 2.5 + 3: syntax error: invalid arithmetic operator
    (error token is ".5 + 3")

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $# -ne\
    \ 3 ]; then\n        echo \"Usage: any_int <number> <number> <number>\"\n    \
    \    return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"\
    First argument must be an integer\"\n        return 1\n    fi\n\n    if ! [[ $2\
    \ =~ ^[0-9]+$ ]]; then\n        echo \"Second argument must be an integer\"\n\
    \        return 1\n    fi\n\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n        echo\
    \ \"Third argument must be an integer\"\n        return 1\n    fi\n\n    if [\
    \ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n       \
    \ echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc4v0ra87.sh: line 35: [: too many arguments

    /tmp/tmpc4v0ra87.sh: line 35: [: too many arguments

    /tmp/tmpc4v0ra87.sh: line 35: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu2eakglp.sh: line 16: syntax error in conditional expression

    /tmp/tmpu2eakglp.sh: line 16: syntax error near `+''

    /tmp/tmpu2eakglp.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$\
    \ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo\
    \ \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\
    \n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9uypjken.sh: line 16: syntax error in conditional expression

    /tmp/tmp9uypjken.sh: line 16: syntax error near `+''

    /tmp/tmp9uypjken.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $(($2\
    \ + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n    echo\
    \ \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if (( $(echo \"\
    $1 + $2\" | bc -l) == $3 )) || (( $(echo \"$1 + $3\" | bc -l) == $2 )) || (( $(echo\
    \ \"$2 + $3\" | bc -l) == $1 )); then\n    echo \"True\"\n  else\n    echo \"\
    False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $(($1 + $2)) -eq $3 ]] || [[ $(($1 + $3)) -eq $2 ]] || [[ $(($2 + $3)) -eq\
    \ $1 ]]; then\n            echo \"True\"\n        else\n            echo \"False\"\
    \n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"False\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcx9ytpf2.sh: line 17: syntax error in conditional expression

    /tmp/tmpcx9ytpf2.sh: line 17: syntax error near `+''

    /tmp/tmpcx9ytpf2.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n        echo \"\
    True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3\
    \ ]] || [[ $2 -eq $1+$3 ]] || [[ $3 -eq $1+$2 ]]; then\n      echo \"True\"\n\
    \    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n\
    \    elif [[ $1 -eq $(($2 + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq\
    \ $(($1 + $2)) ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $(($2\
    \ + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n    echo\
    \ \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"False\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcx9ytpf2.sh: line 17: syntax error in conditional expression

    /tmp/tmpcx9ytpf2.sh: line 17: syntax error near `+''

    /tmp/tmpcx9ytpf2.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"False\"\n    elif\
    \ [ $1 -eq $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 +\
    \ $2 )) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n    echo \"True\"\n  else\n\
    \    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsfi9idwb.sh: line 15: syntax error in conditional expression

    /tmp/tmpsfi9idwb.sh: line 15: syntax error near `+''

    /tmp/tmpsfi9idwb.sh: line 15: `  if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 + $2 )) ];\
    \ then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if (( $(echo \"\
    $1 == $2 + $3\" | bc -l) )) || (( $(echo \"$2 == $1 + $3\" | bc -l) )) || (( $(echo\
    \ \"$3 == $1 + $2\" | bc -l) )); then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n        echo true\n  \
    \  else\n        echo false\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5nc83uip.sh: line 15: syntax error in conditional expression

    /tmp/tmp5nc83uip.sh: line 15: syntax error near `+''

    /tmp/tmp5nc83uip.sh: line 15: `    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3\
    \ ]] || [[ $2 -eq $1+$3 ]] || [[ $3 -eq $1+$2 ]]; then\n      echo \"True\"\n\
    \    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n        echo \"\
    True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 ==\
    \ *.* ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n        return 1\n    fi\n\
    \    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n        return 0\n    fi\n    return 1\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9l9gdg6f.sh: line 18: syntax error in conditional expression

    /tmp/tmp9l9gdg6f.sh: line 18: syntax error near `+''

    /tmp/tmp9l9gdg6f.sh: line 18: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n     \
    \       echo \"True\"\n        else\n            echo \"False\"\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjnh8hfpw.sh: line 16: [: too many arguments

    /tmp/tmpjnh8hfpw.sh: line 16: [: too many arguments

    /tmp/tmpjnh8hfpw.sh: line 16: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n        echo \"True\"\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmposlsrs3z.sh: line 15: syntax error in conditional expression

    /tmp/tmposlsrs3z.sh: line 15: syntax error near `+''

    /tmp/tmposlsrs3z.sh: line 15: `    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ]; then\n        if [ $1 -eq $3 ]; then\n            echo \"True\"\n    \
    \    else\n            echo \"False\"\n        fi\n    elif [ $1 -eq $3 ]; then\n\
    \        if [ $1 -eq $2 ]; then\n            echo \"True\"\n        else\n   \
    \         echo \"False\"\n        fi\n    elif [ $2 -eq $3 ]; then\n        if\
    \ [ $2 -eq $1 ]; then\n            echo \"True\"\n        else\n            echo\
    \ \"False\"\n        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"True\"\n  else\n    echo\
    \ \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo\
    \ \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptpym07pd.sh: line 15: syntax error in conditional expression

    /tmp/tmptpym07pd.sh: line 15: syntax error near `+''

    /tmp/tmptpym07pd.sh: line 15: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"False\"\n    elif\
    \ [ $1 -eq $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 +\
    \ $2 )) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"false\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb49ig_h.sh: line 17: syntax error in conditional expression

    /tmp/tmpjb49ig_h.sh: line 17: syntax error near `+''

    /tmp/tmpjb49ig_h.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"True\"\
    \n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbhufsb2d.sh: line 16: [: too many arguments

    /tmp/tmpbhufsb2d.sh: line 16: [: too many arguments

    /tmp/tmpbhufsb2d.sh: line 16: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n        echo true\n  \
    \  else\n        echo false\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5nc83uip.sh: line 15: syntax error in conditional expression

    /tmp/tmp5nc83uip.sh: line 15: syntax error near `+''

    /tmp/tmp5nc83uip.sh: line 15: `    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n    echo \"True\"\n\
    \  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    /tmp/tmp6s80cxgl.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n        echo \"\
    True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    /tmp/tmpvs792v5q.sh: line 15: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"false\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb49ig_h.sh: line 17: syntax error in conditional expression

    /tmp/tmpjb49ig_h.sh: line 17: syntax error near `+''

    /tmp/tmpjb49ig_h.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $(($2\
    \ + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n    echo\
    \ \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n    echo \"True\"\
    \n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp31o21_ev.sh: line 15: syntax error in conditional expression

    /tmp/tmp31o21_ev.sh: line 15: syntax error near `+''

    /tmp/tmp31o21_ev.sh: line 15: `  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(($2 + $3)) ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n\
    \    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $# -ne\
    \ 3 ]; then\n        echo \"Usage: any_int <number> <number> <number>\"\n    \
    \    return 1\n    fi\n\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] &&\
    \ [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3\
    \ ] || [ $3 -eq $1 + $2 ]; then\n            echo \"True\"\n        else\n   \
    \         echo \"False\"\n        fi\n    else\n        echo \"False\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz71tme32.sh: line 21: [: too many arguments

    /tmp/tmpz71tme32.sh: line 21: [: too many arguments

    /tmp/tmpz71tme32.sh: line 21: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [ $1 -eq\
    \ $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $(($2\
    \ + $3)) ]; then\n    echo \"True\"\n  elif [ $2 -eq $(($1 + $3)) ]; then\n  \
    \  echo \"True\"\n  elif [ $3 -eq $(($1 + $2)) ]; then\n    echo \"True\"\n  else\n\
    \    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $(($1 +\
    \ $2)) -eq $3 ]] || [[ $(($1 + $3)) -eq $2 ]] || [[ $(($2 + $3)) -eq $1 ]]; then\n\
    \      echo \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo\
    \ \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n     \
    \       echo \"True\"\n        else\n            echo \"False\"\n        fi\n\
    \    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjnh8hfpw.sh: line 16: [: too many arguments

    /tmp/tmpjnh8hfpw.sh: line 16: [: too many arguments

    /tmp/tmpjnh8hfpw.sh: line 16: [: too many arguments

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 -eq $2\
    \ + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n    echo \"True\"\n  else\n\
    \    echo \"False\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsfi9idwb.sh: line 15: syntax error in conditional expression

    /tmp/tmpsfi9idwb.sh: line 15: syntax error near `+''

    /tmp/tmpsfi9idwb.sh: line 15: `  if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3
    -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n  \
    \      if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]];\
    \ then\n            echo \"True\"\n        else\n            echo \"False\"\n\
    \        fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkv7yvfbo.sh: line 16: syntax error in conditional expression

    /tmp/tmpkv7yvfbo.sh: line 16: syntax error near `+''

    /tmp/tmpkv7yvfbo.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 =~\
    \ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if\
    \ [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n\
    \            echo \"True\"\n        else\n            echo \"False\"\n       \
    \ fi\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkcq89pq.sh: line 16: syntax error in conditional expression

    /tmp/tmpfkcq89pq.sh: line 16: syntax error near `+''

    /tmp/tmpfkcq89pq.sh: line 16: `        if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1
    + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo true\n\
    \    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7xh04af7.sh: line 16: syntax error in conditional expression

    /tmp/tmp7xh04af7.sh: line 16: syntax error near `+''

    /tmp/tmp7xh04af7.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu2eakglp.sh: line 16: syntax error in conditional expression

    /tmp/tmpu2eakglp.sh: line 16: syntax error near `+''

    /tmp/tmpu2eakglp.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [ $1 -eq $2\
    \ ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n    echo \"False\"\n  elif [ $1 -eq\
    \ $(( $2 + $3 )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 + $2 )) ];\
    \ then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2\
    \ + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n      echo \"\
    True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4pxlo_e.sh: line 16: syntax error in conditional expression

    /tmp/tmpu4pxlo_e.sh: line 16: syntax error near `+''

    /tmp/tmpu4pxlo_e.sh: line 16: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 =~ ^[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3\
    \ ]] || [[ $2 -eq $1+$3 ]] || [[ $3 -eq $1+$2 ]]; then\n      echo \"True\"\n\
    \    else\n      echo \"False\"\n    fi\n  else\n    echo \"False\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n    if [[ $1 -eq\
    \ $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo\
    \ \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptpym07pd.sh: line 15: syntax error in conditional expression

    /tmp/tmptpym07pd.sh: line 15: syntax error near `+''

    /tmp/tmptpym07pd.sh: line 15: `    if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# any_int(5,\
    \ 2, 7) \u279E True\n# any_int(3, 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E\
    \ True\n# any_int(3.6, -2.2, 2) \u279E False\n#\n# $1 is a floating point\n# $2\
    \ is a floating point\n# $3 is a floating point\nany_int() {\n  if [[ $1 == *.*\
    \ ]] || [[ $2 == *.* ]] || [[ $3 == *.* ]]; then\n    echo \"false\"\n  elif [[\
    \ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjb49ig_h.sh: line 17: syntax error in conditional expression

    /tmp/tmpjb49ig_h.sh: line 17: syntax error near `+''

    /tmp/tmpjb49ig_h.sh: line 17: `  elif [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3
    ]] || [[ $3 -eq $1 + $2 ]]; then''

    '
  stdout: ''
  timestamp: 1659996579

completions:
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
  \         min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!arr[@]}; do\n        arr[$i]=$(echo \"(${arr[$i]} -\
  \ $min) / $range\" | bc -l)\n    done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range\n\
  \    local _rescale_to_unit_i\n    local _rescale_to_unit_val\n    local _rescale_to_unit_rescaled_val\n\
  \    for _rescale_to_unit_i in \"${_rescale_to_unit_list[@]}\"; do\n        if ((\
  \ $(echo \"$_rescale_to_unit_i < $_rescale_to_unit_min\" | bc -l) )); then\n   \
  \         _rescale_to_unit_min=$_rescale_to_unit_i\n        fi\n        if (( $(echo\
  \ \"$_rescale_to_unit_i > $_rescale_to_unit_max\" | bc -l) )); then\n          \
  \  _rescale_to_unit_max=$_rescale_to_unit_i\n        fi\n    done\n    _rescale_to_unit_range=$(echo\
  \ \"$_rescale_to_unit_max - $_rescale_to_unit_min\" | bc -l)\n    for _rescale_to_unit_i\
  \ in \"${!_rescale_to_unit_list[@]}\"; do\n        _rescale_to_unit_val=${_rescale_to_unit_list[$_rescale_to_unit_i]}\n\
  \        _rescale_to_unit_rescaled_val=$(echo \"($_rescale_to_unit_val - $_rescale_to_unit_min)\
  \ / $_rescale_to_unit_range\" | bc -l)\n        _rescale_to_unit_list[$_rescale_to_unit_i]=$_rescale_to_unit_rescaled_val\n\
  \    done"
- "    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n\
  \ | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local result=\"\"\n    for\
  \ num in $list; do\n        local scaled=$(echo \"($num - $min) / $range\" | bc\
  \ -l)\n        result=\"$result $scaled\"\n    done\n    echo \"$result\""
- "    local -a numbers\n    IFS=' ' read -r -a numbers <<< \"$1\"\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n        if\
  \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n    \
  \    fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n           \
  \ max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc\
  \ -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number -\
  \ $min) / $range\" | bc -l)\n    done"
- "    local -n _list=$1\n    local _min=${_list[0]}\n    local _max=${_list[0]}\n\
  \    local _range\n    local _scale\n    local _value\n    for _value in \"${_list[@]}\"\
  ; do\n        if (( $(echo \"$_value < $_min\" | bc -l) )); then\n            _min=$_value\n\
  \        fi\n        if (( $(echo \"$_value > $_max\" | bc -l) )); then\n      \
  \      _max=$_value\n        fi\n    done\n    _range=$(echo \"$_max - $_min\" |\
  \ bc -l)\n    _scale=$(echo \"1 / $_range\" | bc -l)\n    for _value in \"${_list[@]}\"\
  ; do\n        echo \"$(echo \"($_value - $_min) * $_scale\" | bc -l)\"\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in \"${!arr[@]}\"; do\n        arr[$i]=$(echo \"\
  (${arr[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${numbers[@]}\"\
  \ | sort -n))\n    local min=${sorted[0]}\n    local max=${sorted[-1]}\n    local\
  \ range=$(echo \"$max - $min\" | bc)\n    for number in \"${numbers[@]}\"; do\n\
  \        echo \"$(echo \"($number - $min) / $range\" | bc -l)\"\n    done"
- "    local -a arr=()\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local min=${arr[0]}\n\
  \    local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"\
  $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
  \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n  \
  \  local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n\
  \        echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    local len=${#arr[@]}\n    for ((i=1; i<len; i++)); do\n       \
  \ if [[ ${arr[i]} -lt $min ]]; then\n            min=${arr[i]}\n        fi\n   \
  \     if [[ ${arr[i]} -gt $max ]]; then\n            max=${arr[i]}\n        fi\n\
  \    done\n    local range=$((max - min))\n    for ((i=0; i<len; i++)); do\n   \
  \     arr[i]=$(((arr[i] - min) * 1000 / range))\n    done\n    echo \"${arr[@]}\""
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers\n    local -a rescaled\n    local -a min_max\n    local -a\
  \ min_max_diff\n    local -a min_max_diff_inv\n    local -a min_max_diff_inv_times_numbers\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min\n    local -a min_max_diff_inv_times_numbers_plus_min_str\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed\n    local -a\
  \ min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted\n    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted_uniq\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted_uniq_sorted\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted_uniq_sorted_uniq\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted_uniq_sorted_uniq_sorted\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq\n\
  \    local -a min_max_diff_inv_times_numbers_plus_min_str_trimmed_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted\n\
  \    local"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
  \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n    \
  \    fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo \"$(echo\
  \ \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for i in ${numbers[@]}; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    for i in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($i - $min)\
  \ / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    local\
  \ range=0\n    local i=0\n    local len=${#arr[@]}\n    local result=()\n    for\
  \ ((i=0; i<len; i++)); do\n        if (( arr[i] < min )); then\n            min=${arr[i]}\n\
  \        fi\n        if (( arr[i] > max )); then\n            max=${arr[i]}\n  \
  \      fi\n    done\n    range=$(( max - min ))\n    for ((i=0; i<len; i++)); do\n\
  \        result[i]=$(echo \"scale=2; (${arr[i]} - $min) / $range\" | bc -l)\n  \
  \  done\n    echo \"${result[@]}\""
- "    local -a numbers=($1)\n    local -a rescaled\n    local -a min_max=($(min_max\
  \ \"${numbers[@]}\"))\n    local min=${min_max[0]}\n    local max=${min_max[1]}\n\
  \    local range=$(echo \"$max - $min\" | bc)\n    for number in \"${numbers[@]}\"\
  ; do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
  \        rescaled+=($rescaled_number)\n    done\n    echo \"${rescaled[@]}\""
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    if (( $(echo \"$max\
  \ == $min\" | bc -l) )); then\n        echo \"ERROR: max == min\"\n        exit\
  \ 1\n    fi\n    for i in \"${list[@]}\"; do\n        echo \"$(echo \"scale=2; ($i\
  \ - $min) / ($max - $min)\" | bc -l)\"\n    done"
- "    local -a list=($1)\n    local -a result=()\n    local min=${list[0]}\n    local\
  \ max=${list[0]}\n    local i\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    for i in \"${list[@]}\"; do\n        result+=($(echo \"scale=4; ($i - $min)\
  \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${result[@]}\""
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
  \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\"\
  ; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -n _list=$1\n    local _min=${_list[0]}\n    local _max=${_list[0]}\n\
  \    for _elem in ${_list[@]}; do\n        if (( $(echo \"$_elem < $_min\" | bc\
  \ -l) )); then\n            _min=$_elem\n        fi\n        if (( $(echo \"$_elem\
  \ > $_max\" | bc -l) )); then\n            _max=$_elem\n        fi\n    done\n \
  \   local _range=$(echo \"$_max - $_min\" | bc -l)\n    for i in \"${!_list[@]}\"\
  ; do\n        _list[$i]=$(echo \"(${_list[$i]} - $_min) / $_range\" | bc -l)\n \
  \   done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
  \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
  \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo $(echo\
  \ \"($n - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
  \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
  \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo \"$(echo\
  \ \"($n - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local -a result=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in ${numbers[@]}; do\n    \
  \    if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n\
  \        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n    \
  \    fi\n    done\n    for i in ${numbers[@]}; do\n        result+=($(echo \"scale=2;\
  \ ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${result[@]}"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local -a result\n    local min=${numbers[0]}\n \
  \   local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n \
  \       if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n     \
  \   fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        result+=($(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${result[@]}\""
- "    local -a list=($1)\n    local -a result=()\n    local min=${list[0]}\n    local\
  \ max=${list[0]}\n    local i\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    for i in \"${list[@]}\"; do\n        result+=($(echo \"scale=2; ($i - $min)\
  \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${result[@]}\""
- "    local -n list=$1\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n  \
  \          min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!list[@]}; do\n        list[$i]=$(echo \"(${list[$i]}\
  \ - $min) / $diff\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i=0\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a xs\n    IFS=' ' read -r -a xs <<< \"$1\"\n    local min=${xs[0]}\n\
  \    local max=${xs[0]}\n    for x in \"${xs[@]}\"; do\n        if (( $(echo \"\
  $x < $min\" | bc -l) )); then\n            min=$x\n        fi\n        if (( $(echo\
  \ \"$x > $max\" | bc -l) )); then\n            max=$x\n        fi\n    done\n  \
  \  for x in \"${xs[@]}\"; do\n        echo \"$(echo \"($x - $min) / ($max - $min)\"\
  \ | bc -l)\"\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i=0\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${list[@]}\"\
  ; do\n        echo \"$(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc -l)\"\n\
  \    done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range=0\n\
  \    local _rescale_to_unit_i=0\n    local _rescale_to_unit_len=${#_rescale_to_unit_list[@]}\n\
  \    local _rescale_to_unit_result=()\n\n    for (( _rescale_to_unit_i=0; _rescale_to_unit_i<_rescale_to_unit_len;\
  \ _rescale_to_unit_i++ )); do\n        if [[ ${_rescale_to_unit_list[$_rescale_to_unit_i]}\
  \ -lt $_rescale_to_unit_min ]]; then\n            _rescale_to_unit_min=${_rescale_to_unit_list[$_rescale_to_unit_i]}\n\
  \        fi\n        if [[ ${_rescale_to_unit_list[$_rescale_to_unit_i]} -gt $_rescale_to_unit_max\
  \ ]]; then\n            _rescale_to_unit_max=${_rescale_to_unit_list[$_rescale_to_unit_i]}\n\
  \        fi\n    done\n\n    _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max\
  \ - $_rescale_to_unit_min\" | bc)\n\n    for (( _rescale_to_unit_i=0; _rescale_to_unit_i<_rescale_to_unit_len;\
  \ _rescale_to_unit_i++ )); do\n        _rescale_to_unit_result[$_rescale_to_unit_i]=$(echo\
  \ \"(${_rescale_to_unit_list[$_rescale_to_unit_i]} - $_rescale_to_unit_min) / $_rescale_to_unit_range\"\
  \ | bc -l)\n    done\n\n    echo \"$"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}\n    do\n        if (( $(echo \"$number < $min\"\
  \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]}\n\
  \    do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a arr\n    read -ra arr <<< \"$1\"\n    local min=${arr[0]}\n    local\
  \ max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt $min ]]; then\n\
  \            min=$i\n        fi\n        if [[ $i -gt $max ]]; then\n          \
  \  max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\" | bc)\n \
  \   for i in \"${arr[@]}\"; do\n        echo \"$(echo \"($i - $min) / $diff\" |\
  \ bc -l)\"\n    done"
- "    local -n list=$1\n    local min=${list[0]}\n    local max=${list[0]}\n    local\
  \ range\n    local result=()\n    for i in ${list[@]}; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    range=$(echo \"$max - $min\" | bc -l)\n    for i in ${list[@]}; do\n      \
  \  result+=($(echo \"($i - $min) / $range\" | bc -l))\n    done\n    echo ${result[@]}"
- "    local -a arr=()\n    local -a res=()\n    local min=0\n    local max=0\n  \
  \  local i=0\n    local n=0\n    local v=0\n    local r=0\n    IFS=' ' read -r -a\
  \ arr <<< \"$1\"\n    min=${arr[0]}\n    max=${arr[0]}\n    for i in \"${arr[@]}\"\
  ; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n\
  \        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${arr[@]}\"; do\n        v=$i\n        n=$(echo\
  \ \"$v - $min\" | bc -l)\n        r=$(echo \"$n / ($max - $min)\" | bc -l)\n   \
  \     res+=(\"$r\")\n    done\n    echo \"${res[@]}\""
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i=0\n    local n=${#numbers[@]}\n    for\
  \ ((i=0; i<n; i++)); do\n        if (( ${numbers[i]} < $min )); then\n         \
  \   min=${numbers[i]}\n        fi\n        if (( ${numbers[i]} > $max )); then\n\
  \            max=${numbers[i]}\n        fi\n    done\n    for ((i=0; i<n; i++));\
  \ do\n        rescaled[i]=$(echo \"scale=2; (${numbers[i]} - $min) / ($max - $min)\"\
  \ | bc -l)\n    done\n    echo ${rescaled[@]}"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i=0\n    for n in ${numbers[@]}; do\n  \
  \      if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n      \
  \  fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n\
  \        fi\n    done\n    for n in ${numbers[@]}; do\n        rescaled[$i]=$(echo\
  \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l)\n        i=$((i+1))\n    done\n\
  \    echo ${rescaled[@]}"
- "    local -n list=$1\n    local min=$(echo \"${list[*]}\" | tr ' ' '\\n' | sort\
  \ -n | head -n 1)\n    local max=$(echo \"${list[*]}\" | tr ' ' '\\n' | sort -n\
  \ | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    for i in \"${!list[@]}\"\
  ; do\n        list[$i]=$(echo \"scale=2; (${list[$i]} - $min) / $range\" | bc)\n\
  \    done"
- "    local -n arr=$1\n    local max=${arr[0]}\n    local min=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n   \
  \         max=$i\n        fi\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!arr[@]}; do\n        arr[$i]=$(echo \"(${arr[$i]} -\
  \ $min) / $range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
  \         min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!arr[@]}; do\n        arr[$i]=$(echo \"(${arr[$i]} -\
  \ $min) / $diff\" | bc -l)\n    done"
- "    local -a vals=($1)\n    local min=${vals[0]}\n    local max=${vals[0]}\n  \
  \  for v in \"${vals[@]}\"; do\n        if [[ $v -lt $min ]]; then\n           \
  \ min=$v\n        fi\n        if [[ $v -gt $max ]]; then\n            max=$v\n \
  \       fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for v in\
  \ \"${vals[@]}\"; do\n        echo \"$(echo \"($v - $min) / $range\" | bc -l)\"\n\
  \    done"
- "    local -a numbers=($1)\n    local -a rescaled\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    local n\n    local r\n\n    for n\
  \ in \"${numbers[@]}\"; do\n        if [[ $n < $min ]]; then\n            min=$n\n\
  \        fi\n        if [[ $n > $max ]]; then\n            max=$n\n        fi\n\
  \    done\n\n    for i in \"${!numbers[@]}\"; do\n        r=$(echo \"scale=2; (${numbers[$i]}\
  \ - $min) / ($max - $min)\" | bc)\n        rescaled[$i]=$r\n    done\n\n    echo\
  \ \"${rescaled[@]}\""
- "    local -n list=$1\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n  \
  \          min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\"\
  \ | bc -l)\n    local result=()\n    for i in ${list[@]}; do\n        local scaled=$(echo\
  \ \"($i - $min) / $diff\" | bc -l)\n        result+=($scaled)\n    done\n    echo\
  \ ${result[@]}"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
  \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n    \
  \    fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    local result=()\n    for i in \"${arr[@]}\"\
  ; do\n        local val=$(echo \"($i - $min) / $range\" | bc -l)\n        result+=($val)\n\
  \    done\n    echo \"${result[@]}\""
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range\n\
  \    local _rescale_to_unit_value\n    local _rescale_to_unit_scaled_value\n   \
  \ for _rescale_to_unit_value in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo\
  \ \"$_rescale_to_unit_value < $_rescale_to_unit_min\" | bc -l) )); then\n      \
  \      _rescale_to_unit_min=$_rescale_to_unit_value\n        fi\n        if (( $(echo\
  \ \"$_rescale_to_unit_value > $_rescale_to_unit_max\" | bc -l) )); then\n      \
  \      _rescale_to_unit_max=$_rescale_to_unit_value\n        fi\n    done\n    _rescale_to_unit_range=$(echo\
  \ \"$_rescale_to_unit_max - $_rescale_to_unit_min\" | bc -l)\n    for _rescale_to_unit_value\
  \ in ${_rescale_to_unit_list[@]}; do\n        _rescale_to_unit_scaled_value=$(echo\
  \ \"($_rescale_to_unit_value - $_rescale_to_unit_min) / $_rescale_to_unit_range\"\
  \ | bc -l)\n        echo $_rescale_to_unit_scaled_value\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local min=`echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 1`\n    local max=`echo\
  \ \"$1\" | tr ' ' '\\n' | sort -n | tail -n 1`\n    local range=$(echo \"$max -\
  \ $min\" | bc)\n    echo \"$1\" | tr ' ' '\\n' | awk -v min=$min -v range=$range\
  \ '{print ($1 - min) / range}'"
- "    local -n list=$1\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in \"${!list[@]}\"; do\n        list[$i]=$(echo \"\
  (${list[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    local\
  \ i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
  \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" |\
  \ bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${!arr[@]}\"; do\n        arr[$i]=$(echo\
  \ \"(${arr[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -n array=$1\n    local min=${array[0]}\n    local max=${array[0]}\n \
  \   for i in \"${array[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${!array[@]}\"; do\n        array[$i]=$(echo\
  \ \"(${array[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local -a arr_sorted\n    local -a arr_rescaled\n    local\
  \ min\n    local max\n    local range\n    local i\n\n    arr_sorted=($(printf \"\
  %s\\n\" \"${arr[@]}\" | sort -n))\n    min=${arr_sorted[0]}\n    max=${arr_sorted[-1]}\n\
  \    range=$(bc <<< \"$max - $min\")\n\n    for i in \"${arr[@]}\"; do\n       \
  \ arr_rescaled+=($(bc <<< \"scale=2; ($i - $min) / $range\"))\n    done\n\n    echo\
  \ \"${arr_rescaled[@]}\""
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if ((\
  \ $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n       \
  \ fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
  \        fi\n    done\n    for number in ${numbers[@]}; do\n        rescaled+=($(echo\
  \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range=0\n\
  \    local _rescale_to_unit_i=0\n    local _rescale_to_unit_result=()\n    for _rescale_to_unit_i\
  \ in ${_rescale_to_unit_list[@]}; do\n        if [[ $_rescale_to_unit_i -lt $_rescale_to_unit_min\
  \ ]]; then\n            _rescale_to_unit_min=$_rescale_to_unit_i\n        fi\n \
  \       if [[ $_rescale_to_unit_i -gt $_rescale_to_unit_max ]]; then\n         \
  \   _rescale_to_unit_max=$_rescale_to_unit_i\n        fi\n    done\n    _rescale_to_unit_range=$(echo\
  \ \"$_rescale_to_unit_max - $_rescale_to_unit_min\" | bc)\n    for _rescale_to_unit_i\
  \ in ${_rescale_to_unit_list[@]}; do\n        _rescale_to_unit_result+=($(echo \"\
  ($_rescale_to_unit_i - $_rescale_to_unit_min) / $_rescale_to_unit_range\" | bc -l))\n\
  \    done\n    echo ${_rescale_to_unit_result[@]}"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    for i in ${list[@]}; do\n\
  \        echo \"$(echo \"($i - $min) / ($max - $min)\" | bc -l)\"\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo $(echo\
  \ \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local -a rescaled_list=()\n    local min=${list[0]}\n\
  \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    for i in \"${list[@]}\"; do\n        rescaled_list+=($(echo \"scale=2; ($i\
  \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled_list[@]}\""
- "  local -n arr=$1\n  local min=${arr[0]}\n  local max=${arr[0]}\n  for i in \"\
  ${arr[@]}\"; do\n    if (( $(echo \"$i < $min\" | bc -l) )); then\n      min=$i\n\
  \    fi\n    if (( $(echo \"$i > $max\" | bc -l) )); then\n      max=$i\n    fi\n\
  \  done\n  local range=$(echo \"$max - $min\" | bc -l)\n  for i in \"${!arr[@]}\"\
  ; do\n    arr[$i]=$(echo \"(${arr[$i]} - $min) / $range\" | bc -l)\n  done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
  \         min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    for i in ${!arr[@]}; do\n       \
  \ arr[$i]=$(echo \"scale=2; (${arr[$i]} - $min) / ($max - $min)\" | bc -l)\n   \
  \ done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range=0\n\
  \    local _rescale_to_unit_i=0\n    local _rescale_to_unit_value=0\n    for _rescale_to_unit_value\
  \ in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo \"$_rescale_to_unit_value\
  \ < $_rescale_to_unit_min\" | bc -l) )); then\n            _rescale_to_unit_min=$_rescale_to_unit_value\n\
  \        fi\n        if (( $(echo \"$_rescale_to_unit_value > $_rescale_to_unit_max\"\
  \ | bc -l) )); then\n            _rescale_to_unit_max=$_rescale_to_unit_value\n\
  \        fi\n    done\n    _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max\
  \ - $_rescale_to_unit_min\" | bc -l)\n    for _rescale_to_unit_i in ${!_rescale_to_unit_list[@]};\
  \ do\n        _rescale_to_unit_list[$_rescale_to_unit_i]=$(echo \"(${_rescale_to_unit_list[$_rescale_to_unit_i]}\
  \ - $_rescale_to_unit_min) / $_rescale_to_unit_range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ x in ${arr[@]}; do\n        if (( $(echo \"$x < $min\" | bc -l) )); then\n   \
  \         min=$x\n        fi\n        if (( $(echo \"$x > $max\" | bc -l) )); then\n\
  \            max=$x\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!arr[@]}; do\n        arr[$i]=$(echo \"(${arr[$i]} -\
  \ $min) / $range\" | bc -l)\n    done"
- "    local -a list\n    local -i i\n    local -i len\n    local -i min\n    local\
  \ -i max\n    local -i range\n    local -i value\n    local -i new_value\n    local\
  \ -i new_min\n    local -i new_max\n    local -i new_range\n    local -i new_value\n\
  \    local -i new_value_scaled\n    local -i new_value_scaled_rounded\n    local\
  \ -i new_value_scaled_rounded_int\n    local -i new_value_scaled_rounded_int_float\n\
  \    local -i new_value_scaled_rounded_int_float_float\n    local -i new_value_scaled_rounded_int_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float\n    local -i\
  \ new_value_scaled_rounded_int_float_float_float_float_float\n    local -i new_value_scaled_rounded_int_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_int_float_float_float_float_float_float_float_float_float_float_float_float_float\n\
  \    local -i new_value_scaled_rounded_"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range=0\n\
  \    local _rescale_to_unit_value=0\n    local _rescale_to_unit_result=()\n    for\
  \ _rescale_to_unit_value in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo\
  \ \"$_rescale_to_unit_value < $_rescale_to_unit_min\" | bc -l) )); then\n      \
  \      _rescale_to_unit_min=$_rescale_to_unit_value\n        fi\n        if (( $(echo\
  \ \"$_rescale_to_unit_value > $_rescale_to_unit_max\" | bc -l) )); then\n      \
  \      _rescale_to_unit_max=$_rescale_to_unit_value\n        fi\n    done\n    _rescale_to_unit_range=$(echo\
  \ \"$_rescale_to_unit_max - $_rescale_to_unit_min\" | bc -l)\n    for _rescale_to_unit_value\
  \ in ${_rescale_to_unit_list[@]}; do\n        _rescale_to_unit_result+=($(echo \"\
  ($_rescale_to_unit_value - $_rescale_to_unit_min) / $_rescale_to_unit_range\" |\
  \ bc -l))\n    done\n    echo ${_rescale_to_unit_result[@]}"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n   \
  \ for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"($number\
  \ - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
  \    echo ${rescaled[@]}"
- "    local -a arr=()\n    for i in $1; do\n        arr+=($i)\n    done\n    local\
  \ min=${arr[0]}\n    local max=${arr[0]}\n    for i in ${arr[@]}; do\n        if\
  \ (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n  \
  \      if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n      \
  \  fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for i in ${arr[@]};\
  \ do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a values=($1)\n    local min=${values[0]}\n    local max=${values[0]}\n\
  \    for v in \"${values[@]}\"; do\n        if (( $(echo \"$v < $min\" | bc -l)\
  \ )); then\n            min=$v\n        fi\n        if (( $(echo \"$v > $max\" |\
  \ bc -l) )); then\n            max=$v\n        fi\n    done\n    local diff=$(echo\
  \ \"$max - $min\" | bc -l)\n    for v in \"${values[@]}\"; do\n        echo $(echo\
  \ \"($v - $min) / $diff\" | bc -l)\n    done"
- "    local -a arr=()\n    local -a arr_rescaled=()\n    local -a arr_rescaled_int=()\n\
  \    local -a arr_rescaled_int_sorted=()\n    local -a arr_rescaled_int_sorted_unique=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts=()\n    local -a arr_rescaled_int_sorted_unique_counts_cumulative=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio=()\n    local\
  \ -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled=()\n    local\
  \ -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int=()\n    local\
  \ -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted_unique=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted_unique_counts=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted_unique_counts_cumulative=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted_unique_counts_cumulative_ratio=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted_unique_counts_cumulative_ratio_scaled=()\n\
  \    local -a arr_rescaled_int_sorted_unique_counts_cumulative_ratio_scaled_int_sorted_unique_counts_cumulative_ratio_sc"
- "    local -a arr=()\n    local min=0\n    local max=0\n    local i=0\n    local\
  \ len=0\n    local val=0\n    local -a res=()\n\n    # Convert input to array\n\
  \    IFS=' ' read -r -a arr <<< \"$1\"\n\n    # Get min and max\n    min=${arr[0]}\n\
  \    max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt $min ]];\
  \ then\n            min=$i\n        fi\n        if [[ $i -gt $max ]]; then\n   \
  \         max=$i\n        fi\n    done\n\n    # Apply linear transform\n    len=${#arr[@]}\n\
  \    for ((i=0; i<len; i++)); do\n        val=$(echo \"scale=2; (${arr[$i]} - $min)\
  \ / ($max - $min)\" | bc)\n        res[$i]=$val\n    done\n\n    # Convert array\
  \ to string\n    echo \"${res[@]}\""
- "    local -a numbers=($1)\n    local -a result=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
  \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n    \
  \    fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        local scaled=$(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l)\n        result+=($scaled)\n\
  \    done\n    echo \"${result[@]}\""
- "    local -a arr=()\n    local min=0\n    local max=0\n    local i=0\n    local\
  \ len=0\n    local val=0\n    local new_val=0\n    local -a new_arr=()\n\n    #\
  \ split the input string into an array\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n\
  \    # find the min and max values\n    min=${arr[0]}\n    max=${arr[0]}\n    for\
  \ i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n\n    # rescale the values\n \
  \   len=${#arr[@]}\n    for (( i=0; i<$len; i++ )); do\n        val=${arr[$i]}\n\
  \        new_val=$(echo \"scale=4; ($val - $min) / ($max - $min)\" | bc -l)\n  \
  \      new_arr[$i]=$new_val\n    done\n\n    # return the new array\n    echo \"\
  ${new_arr[@]}\""
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    for i in ${list[@]}; do\n\
  \        echo $(echo \"($i - $min) / ($max - $min)\" | bc -l)\n    done"
- "    local -n _list=$1\n    local _min=${_list[0]}\n    local _max=${_list[0]}\n\
  \    local _range\n    local _scale\n    local _i\n    local _result=()\n\n    for\
  \ _i in \"${_list[@]}\"; do\n        if (( $(echo \"$_i < $_min\" | bc -l) )); then\n\
  \            _min=$_i\n        fi\n        if (( $(echo \"$_i > $_max\" | bc -l)\
  \ )); then\n            _max=$_i\n        fi\n    done\n\n    _range=$(echo \"$_max\
  \ - $_min\" | bc -l)\n    _scale=$(echo \"1 / $_range\" | bc -l)\n\n    for _i in\
  \ \"${_list[@]}\"; do\n        _result+=($(echo \"($_i - $_min) * $_scale\" | bc\
  \ -l))\n    done\n\n    echo \"${_result[@]}\""
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_value\n\
  \    for _rescale_to_unit_value in ${_rescale_to_unit_list[@]}; do\n        if ((\
  \ $(echo \"$_rescale_to_unit_value < $_rescale_to_unit_min\" | bc -l) )); then\n\
  \            _rescale_to_unit_min=$_rescale_to_unit_value\n        fi\n        if\
  \ (( $(echo \"$_rescale_to_unit_value > $_rescale_to_unit_max\" | bc -l) )); then\n\
  \            _rescale_to_unit_max=$_rescale_to_unit_value\n        fi\n    done\n\
  \    local _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max - $_rescale_to_unit_min\"\
  \ | bc -l)\n    local _rescale_to_unit_result=()\n    for _rescale_to_unit_value\
  \ in ${_rescale_to_unit_list[@]}; do\n        _rescale_to_unit_result+=($(echo \"\
  ($_rescale_to_unit_value - $_rescale_to_unit_min) / $_rescale_to_unit_range\" |\
  \ bc -l))\n    done\n    echo ${_rescale_to_unit_result[@]}"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
  \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" |\
  \ bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        echo \"\
  $(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local -a result=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
  \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n    \
  \    fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        result+=($(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${result[@]}\""
- "    local list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo \"$(echo \"($i\
  \ - $min) / $range\" | bc -l)\"\n    done"
- "  local -a numbers=($1)\n  local -a rescaled=()\n  local min=${numbers[0]}\n  local\
  \ max=${numbers[0]}\n  for n in ${numbers[@]}; do\n    if (( $(echo \"$n < $min\"\
  \ | bc -l) )); then\n      min=$n\n    fi\n    if (( $(echo \"$n > $max\" | bc -l)\
  \ )); then\n      max=$n\n    fi\n  done\n  for n in ${numbers[@]}; do\n    rescaled+=($(echo\
  \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n  done\n  echo ${rescaled[@]}"
- "    local -a arr=()\n    local -a result=()\n    local min=0\n    local max=0\n\
  \    local i=0\n    local n=0\n    local x=0\n    local y=0\n    local -a arr=($1)\n\
  \    min=${arr[0]}\n    max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if\
  \ (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n  \
  \      if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n      \
  \  fi\n    done\n    for i in \"${arr[@]}\"; do\n        x=$i\n        y=$(echo\
  \ \"scale=3; ($x - $min) / ($max - $min)\" | bc -l)\n        result[$n]=$y\n   \
  \     n=$((n+1))\n    done\n    echo \"${result[@]}\""
- "    local -a nums=($1)\n    local min=${nums[0]}\n    local max=${nums[0]}\n  \
  \  for num in ${nums[@]}; do\n        if (( $(echo \"$num < $min\" | bc -l) ));\
  \ then\n            min=$num\n        fi\n        if (( $(echo \"$num > $max\" |\
  \ bc -l) )); then\n            max=$num\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for num in ${nums[@]}; do\n        echo $(echo \"\
  ($num - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a input=($1)\n    local -a output=()\n    local min=${input[0]}\n  \
  \  local max=${input[0]}\n    local i=0\n    for i in \"${input[@]}\"; do\n    \
  \    if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n\
  \        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n    \
  \    fi\n    done\n    for i in \"${input[@]}\"; do\n        output+=($(echo \"\
  scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${output[@]}\""
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( i < min )); then\n  \
  \          min=$i\n        fi\n        if (( i > max )); then\n            max=$i\n\
  \        fi\n    done\n    local range=$(( max - min ))\n    for i in \"${arr[@]}\"\
  ; do\n        local val=$(( i - min ))\n        local rescaled=$(( val * 100 / range\
  \ ))\n        echo -n \"$rescaled \"\n    done\n    echo"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n  \
  \          min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    for i in ${list[@]}; do\n       \
  \ echo $(echo \"($i - $min) / ($max - $min)\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
  \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
  \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo $(echo\
  \ \"($n - $min) / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo \"$(echo\
  \ \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range=0\n\
  \    local _rescale_to_unit_value=0\n    local _rescale_to_unit_result=()\n    for\
  \ _rescale_to_unit_value in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo\
  \ \"$_rescale_to_unit_value < $_rescale_to_unit_min\" | bc -l) )); then\n      \
  \      _rescale_to_unit_min=$_rescale_to_unit_value\n        fi\n        if (( $(echo\
  \ \"$_rescale_to_unit_value > $_rescale_to_unit_max\" | bc -l) )); then\n      \
  \      _rescale_to_unit_max=$_rescale_to_unit_value\n        fi\n    done\n    _rescale_to_unit_range=$(echo\
  \ \"$_rescale_to_unit_max - $_rescale_to_unit_min\" | bc -l)\n    for _rescale_to_unit_value\
  \ in ${_rescale_to_unit_list[@]}; do\n        _rescale_to_unit_result+=($(echo \"\
  ($_rescale_to_unit_value - $_rescale_to_unit_min) / $_rescale_to_unit_range\" |\
  \ bc -l))\n    done\n    echo ${_rescale_to_unit_result[@]}"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo $(echo\
  \ \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local len=${#arr[@]}\n    local i\n    local val\n    for ((i=1; i<len; i++));\
  \ do\n        val=${arr[$i]}\n        if (( val < min )); then\n            min=$val\n\
  \        fi\n        if (( val > max )); then\n            max=$val\n        fi\n\
  \    done\n    for ((i=0; i<len; i++)); do\n        val=${arr[$i]}\n        val=$((\
  \ (val - min) * 100 / (max - min) ))\n        arr[$i]=$val\n    done\n    echo \"\
  ${arr[@]}\""
- "    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n\
  \ | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$list\" | tr ' '\
  \ '\\n' | awk -v min=\"$min\" -v range=\"$range\" '{print ($1 - min) / range}'"
- "    local -a list=($1)\n    local max=${list[0]}\n    local min=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
  \         min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!arr[@]}; do\n        arr[$i]=$(echo \"(${arr[$i]} -\
  \ $min) / $diff\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=$(min ${numbers[@]})\n    local max=$(max\
  \ ${numbers[@]})\n    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled=()\n\
  \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"($number\
  \ - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
  \    echo ${rescaled[@]}"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local -a rescaled\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local number\n    for number in \"${numbers[@]}\"\
  ; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
  \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
  \     max=$number\n        fi\n    done\n    for number in \"${numbers[@]}\"; do\n\
  \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n\
  \    done\n    echo \"${rescaled[@]}\""
- "    local -a numbers\n    IFS=' ' read -r -a numbers <<< \"$1\"\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n        if\
  \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n    \
  \    fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n           \
  \ max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc\
  \ -l)\n    for number in \"${numbers[@]}\"; do\n        echo \"$(echo \"($number\
  \ - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
  \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if ((\
  \ $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n    done\n\
  \    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($n - $min)\
  \ / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range\n\
  \    local _rescale_to_unit_i\n    local _rescale_to_unit_result=()\n    for _rescale_to_unit_i\
  \ in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo \"$_rescale_to_unit_i\
  \ < $_rescale_to_unit_min\" | bc -l) )); then\n            _rescale_to_unit_min=$_rescale_to_unit_i\n\
  \        fi\n        if (( $(echo \"$_rescale_to_unit_i > $_rescale_to_unit_max\"\
  \ | bc -l) )); then\n            _rescale_to_unit_max=$_rescale_to_unit_i\n    \
  \    fi\n    done\n    _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max - $_rescale_to_unit_min\"\
  \ | bc -l)\n    for _rescale_to_unit_i in ${_rescale_to_unit_list[@]}; do\n    \
  \    _rescale_to_unit_result+=($(echo \"($_rescale_to_unit_i - $_rescale_to_unit_min)\
  \ / $_rescale_to_unit_range\" | bc -l))\n    done\n    echo ${_rescale_to_unit_result[@]}"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    local\
  \ i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
  \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" |\
  \ bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${!arr[@]}\"; do\n        arr[$i]=$(echo\
  \ \"(${arr[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo \"$(echo\
  \ \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local max=${numbers[0]}\n    local min=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number > $max\" |\
  \ bc -l) )); then\n            max=$number\n        fi\n        if (( $(echo \"\
  $number < $min\" | bc -l) )); then\n            min=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local len=${#arr[@]}\n    local i\n    for ((i=1; i<len; i++)); do\n       \
  \ if (( $(echo \"${arr[i]} < $min\" | bc -l) )); then\n            min=${arr[i]}\n\
  \        fi\n        if (( $(echo \"${arr[i]} > $max\" | bc -l) )); then\n     \
  \       max=${arr[i]}\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for ((i=0; i<len; i++)); do\n        arr[i]=$(echo \"(${arr[i]}\
  \ - $min) / $range\" | bc -l)\n    done\n    echo \"${arr[@]}\""
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    for i\
  \ in \"${arr[@]}\"; do\n        echo \"$(echo \"scale=2; ($i - $min) / ($max - $min)\"\
  \ | bc -l)\"\n    done"
- "  local -a input=($1)\n  local -a output=()\n  local min=${input[0]}\n  local max=${input[0]}\n\
  \  local i=0\n  local j=0\n  local n=${#input[@]}\n  local value=0.0\n  local scale=0.0\n\
  \  local offset=0.0\n\n  for i in ${input[@]}; do\n    if [[ $i < $min ]]; then\n\
  \      min=$i\n    fi\n    if [[ $i > $max ]]; then\n      max=$i\n    fi\n  done\n\
  \n  scale=$(echo \"scale=10; 1 / ($max - $min)\" | bc)\n  offset=$(echo \"scale=10;\
  \ -1 * $min\" | bc)\n\n  for j in ${input[@]}; do\n    value=$(echo \"scale=10;\
  \ $j * $scale + $offset\" | bc)\n    output+=($value)\n  done\n\n  echo ${output[@]}"
- "    local input=$1\n    local min=$(echo \"$input\" | tr ' ' '\\n' | sort -n |\
  \ head -n 1)\n    local max=$(echo \"$input\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$input\" | tr ' '\
  \ '\\n' | awk -v min=$min -v range=$range '{print ($1 - min) / range}'"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=$(echo \"\
  ${_rescale_to_unit_list[*]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local _rescale_to_unit_max=$(echo\
  \ \"${_rescale_to_unit_list[*]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
  \ _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max - $_rescale_to_unit_min\"\
  \ | bc -l)\n    local _rescale_to_unit_result=()\n    for _rescale_to_unit_item\
  \ in ${_rescale_to_unit_list[*]}; do\n        local _rescale_to_unit_item_scaled=$(echo\
  \ \"($_rescale_to_unit_item - $_rescale_to_unit_min) / $_rescale_to_unit_range\"\
  \ | bc -l)\n        _rescale_to_unit_result+=(\"$_rescale_to_unit_item_scaled\"\
  )\n    done\n    echo \"${_rescale_to_unit_result[*]}\""
- "    local -a numbers=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${numbers[@]}\"\
  \ | sort -n))\n    local min=${sorted[0]}\n    local max=${sorted[-1]}\n    local\
  \ range=$(echo \"$max - $min\" | bc)\n    local -a result=()\n    for number in\
  \ \"${numbers[@]}\"; do\n        local rescaled=$(echo \"($number - $min) / $range\"\
  \ | bc -l)\n        result+=($rescaled)\n    done\n    echo \"${result[@]}\""
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local max=${list[0]}\n    local min=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${list[@]}\"\
  ; do\n        echo \"$(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc -l)\"\n\
  \    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    for i in ${list[@]}; do\n\
  \        echo $(echo \"($i - $min) / ($max - $min)\" | bc -l)\n    done"
- "    local -a arr\n    read -ra arr <<< \"$1\"\n    local min=${arr[0]}\n    local\
  \ max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt $min ]]; then\n\
  \            min=$i\n        fi\n        if [[ $i -gt $max ]]; then\n          \
  \  max=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n\
  \    for i in \"${arr[@]}\"; do\n        echo \"$(echo \"($i - $min) / $range\"\
  \ | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local -a result=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in ${numbers[@]}; do\n    \
  \    if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n\
  \        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n    \
  \    fi\n    done\n    for i in ${numbers[@]}; do\n        result+=($(echo \"scale=4;\
  \ ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${result[@]}"
- "    local numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a arr=()\n    local i\n    for i in $1; do\n        arr+=($i)\n    done\n\
  \    local min=${arr[0]}\n    local max=${arr[0]}\n    for i in ${arr[@]}; do\n\
  \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n    \
  \    fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for\
  \ i in ${arr[@]}; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n  \
  \  done"
- "    local -a arr=()\n    local -a arr_rescaled=()\n    local -a arr_rescaled_str=()\n\
  \    local min=0\n    local max=0\n    local range=0\n    local i=0\n    local j=0\n\
  \    local n=0\n    local rescaled=0\n    local rescaled_str=0\n    local -a arr=($1)\n\
  \    n=${#arr[@]}\n    min=${arr[0]}\n    max=${arr[0]}\n    for ((i=0; i<n; i++));\
  \ do\n        if (( ${arr[$i]} < $min )); then\n            min=${arr[$i]}\n   \
  \     fi\n        if (( ${arr[$i]} > $max )); then\n            max=${arr[$i]}\n\
  \        fi\n    done\n    range=$(( $max - $min ))\n    for ((i=0; i<n; i++));\
  \ do\n        rescaled=$(( (${arr[$i]} - $min) * 100 / $range ))\n        rescaled_str=$(printf\
  \ \"%0.2f\" $rescaled)\n        arr_rescaled[$i]=$rescaled\n        arr_rescaled_str[$i]=$rescaled_str\n\
  \    done\n    echo ${arr_rescaled_str[@]}"
- "    local -a list=($1)\n    local -a result=()\n    local min=${list[0]}\n    local\
  \ max=${list[0]}\n    local i\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    for i in \"${list[@]}\"; do\n        result+=($(echo \"scale=2; ($i - $min)\
  \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${result[@]}\""
- "    local -a arr=()\n    local -a res=()\n    local -i i=0\n    local -i len=0\n\
  \    local -i min=0\n    local -i max=0\n    local -i range=0\n    local -i val=0\n\
  \    local -i res_val=0\n    local -i scale=0\n    local -i offset=0\n\n    IFS='\
  \ ' read -r -a arr <<< \"$1\"\n    len=${#arr[@]}\n    min=${arr[0]}\n    max=${arr[0]}\n\
  \    for ((i=1; i<len; i++)); do\n        if ((${arr[i]} < min)); then\n       \
  \     min=${arr[i]}\n        fi\n        if ((${arr[i]} > max)); then\n        \
  \    max=${arr[i]}\n        fi\n    done\n    range=$((max - min))\n    if ((range\
  \ == 0)); then\n        echo \"Error: range is 0\"\n        exit 1\n    fi\n   \
  \ scale=$((1 << 30))\n    offset=$((-min * scale))\n    for ((i=0; i<len; i++));\
  \ do\n        val=${arr[i]}\n        res_val=$(((val * scale) + offset))\n     \
  \   res_val=$((res_val / range))\n        res[i]=$res_val\n    done\n    echo \"\
  ${res[@]}\""
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${list[@]}\"\
  ; do\n        echo \"$(echo \"($i - $min) / ($max - $min)\" | bc -l)\"\n    done"
- "    local -a data=($1)\n    local -a rescaled\n    local min=${data[0]}\n    local\
  \ max=${data[0]}\n    local i\n    for i in \"${data[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    for i in \"${data[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($i - $min)\
  \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local -a arr=($1)\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
  \         min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${arr[@]}; do\n        echo $(echo \"($i - $min) / $range\"\
  \ | bc -l)\n    done"
- "    local -a values=($1)\n    local min=${values[0]}\n    local max=${values[0]}\n\
  \    for value in ${values[@]}; do\n        if (( $(echo \"$value < $min\" | bc\
  \ -l) )); then\n            min=$value\n        fi\n        if (( $(echo \"$value\
  \ > $max\" | bc -l) )); then\n            max=$value\n        fi\n    done\n   \
  \ local range=$(echo \"$max - $min\" | bc -l)\n    if (( $(echo \"$range == 0\"\
  \ | bc -l) )); then\n        echo \"ERROR: all values are the same ($min)\"\n  \
  \      exit 1\n    fi\n    for value in ${values[@]}; do\n        echo $(echo \"\
  ($value - $min) / $range\" | bc -l)\n    done"
- "    local list=$1\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head\
  \ -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
  \    local range=$(echo \"$max - $min\" | bc)\n    if [ \"$range\" == \"0\" ]; then\n\
  \        echo \"$list\"\n    else\n        echo \"$list\" | tr ' ' '\\n' | awk -v\
  \ min=$min -v range=$range '{print ($1 - min) / range}' | tr '\\n' ' '\n    fi"
- "    local -a numbers=($1)\n    local -a sorted=($(echo \"${numbers[@]}\" | tr '\
  \ ' '\\n' | sort -n))\n    local -a rescaled=()\n    local min=${sorted[0]}\n  \
  \  local max=${sorted[-1]}\n    local range=$(echo \"$max - $min\" | bc -l)\n  \
  \  for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number - $min)\
  \ / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
  \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
  \ -l) )); then\n            max=$n\n        fi\n    done\n    for n in ${numbers[@]};\
  \ do\n        echo $(echo \"($n - $min) / ($max - $min)\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in \"${!arr[@]}\"; do\n        arr[$i]=$(echo \"\
  (${arr[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in ${numbers[@]}; do\n    \
  \    if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n\
  \        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n    \
  \    fi\n    done\n    for i in ${numbers[@]}; do\n        rescaled+=($(echo \"\
  scale=4; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    local\
  \ len=${#arr[@]}\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[i]} -lt $min\
  \ ]]; then\n            min=${arr[i]}\n        fi\n        if [[ ${arr[i]} -gt $max\
  \ ]]; then\n            max=${arr[i]}\n        fi\n    done\n    local diff=$(echo\
  \ \"$max - $min\" | bc -l)\n    for ((i=0; i<len; i++)); do\n        arr[i]=$(echo\
  \ \"(${arr[i]} - $min) / $diff\" | bc -l)\n    done"
- "    local -n list=$1\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n  \
  \          min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!list[@]}; do\n        list[$i]=$(echo \"(${list[$i]}\
  \ - $min) / $range\" | bc -l)\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in \"${arr[@]}\"; do\n        if [[ $i -lt $min ]]; then\n            min=$i\n\
  \        fi\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n\
  \    done\n    local range=$(echo \"$max - $min\" | bc)\n    for i in \"${!arr[@]}\"\
  ; do\n        arr[$i]=$(echo \"(${arr[$i]} - $min) / $range\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range\n\
  \    local _rescale_to_unit_i\n    local _rescale_to_unit_result=()\n    for _rescale_to_unit_i\
  \ in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo \"$_rescale_to_unit_i\
  \ < $_rescale_to_unit_min\" | bc -l) )); then\n            _rescale_to_unit_min=$_rescale_to_unit_i\n\
  \        fi\n        if (( $(echo \"$_rescale_to_unit_i > $_rescale_to_unit_max\"\
  \ | bc -l) )); then\n            _rescale_to_unit_max=$_rescale_to_unit_i\n    \
  \    fi\n    done\n    _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max - $_rescale_to_unit_min\"\
  \ | bc -l)\n    for _rescale_to_unit_i in ${_rescale_to_unit_list[@]}; do\n    \
  \    _rescale_to_unit_result+=($(echo \"($_rescale_to_unit_i - $_rescale_to_unit_min)\
  \ / $_rescale_to_unit_range\" | bc -l))\n    done\n    echo ${_rescale_to_unit_result[@]}"
- "    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n\
  \ | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$list\" | tr ' '\
  \ '\\n' | awk -v min=\"$min\" -v range=\"$range\" '{print ($1 - min) / range}'"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    local\
  \ len=${#arr[@]}\n    local i\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[i]}\
  \ -lt $min ]]; then\n            min=${arr[i]}\n        fi\n        if [[ ${arr[i]}\
  \ -gt $max ]]; then\n            max=${arr[i]}\n        fi\n    done\n    local\
  \ range=$((max - min))\n    for ((i=0; i<len; i++)); do\n        arr[i]=$(((arr[i]\
  \ - min) * 100 / range))\n    done"
- "    local -a arr=(\"$@\")\n    local -a arr_sorted=(\"${arr[@]}\")\n    local -a\
  \ arr_rescaled=(\"${arr[@]}\")\n    local min=0\n    local max=0\n    local range=0\n\
  \    local i=0\n\n    # Sort the array\n    IFS=$'\\n' arr_sorted=($(sort -n <<<\"\
  ${arr[*]}\"))\n    unset IFS\n\n    # Get the min and max\n    min=${arr_sorted[0]}\n\
  \    max=${arr_sorted[-1]}\n\n    # Get the range\n    range=$(echo \"$max - $min\"\
  \ | bc)\n\n    # Rescale the array\n    for i in \"${!arr[@]}\"; do\n        arr_rescaled[$i]=$(echo\
  \ \"scale=2; (${arr[$i]} - $min) / $range\" | bc)\n    done\n\n    echo \"${arr_rescaled[@]}\""
- "    local -a nums\n    IFS=' ' read -r -a nums <<< \"$1\"\n    local min=${nums[0]}\n\
  \    local max=${nums[0]}\n    for num in \"${nums[@]}\"; do\n        if (( $(echo\
  \ \"$num < $min\" | bc -l) )); then\n            min=$num\n        fi\n        if\
  \ (( $(echo \"$num > $max\" | bc -l) )); then\n            max=$num\n        fi\n\
  \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for num in \"${nums[@]}\"\
  ; do\n        echo \"$(echo \"($num - $min) / $range\" | bc -l)\"\n    done"
- "    local -n _list=$1\n    local _min=$(echo \"${_list[*]}\" | tr ' ' '\\n' | sort\
  \ -n | head -n 1)\n    local _max=$(echo \"${_list[*]}\" | tr ' ' '\\n' | sort -n\
  \ | tail -n 1)\n    local _range=$(echo \"$_max - $_min\" | bc)\n    local _output=()\n\
  \    for _item in \"${_list[@]}\"; do\n        local _rescaled=$(echo \"($_item\
  \ - $_min) / $_range\" | bc -l)\n        _output+=(\"$_rescaled\")\n    done\n \
  \   echo \"${_output[@]}\""
- "    local -a nums=($1)\n    local min=${nums[0]}\n    local max=${nums[0]}\n  \
  \  for num in ${nums[@]}; do\n        if (( $(echo \"$num < $min\" | bc -l) ));\
  \ then\n            min=$num\n        fi\n        if (( $(echo \"$num > $max\" |\
  \ bc -l) )); then\n            max=$num\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for num in ${nums[@]}; do\n        echo $(echo \"\
  ($num - $min) / $range\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in ${arr[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n   \
  \         min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n\
  \            max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\"\
  \ | bc -l)\n    for i in ${!arr[@]}; do\n        arr[$i]=$(echo \"(${arr[$i]} -\
  \ $min) / $diff\" | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local min=${arr[0]}\n\
  \    local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"\
  $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
  \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n  \
  \  local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n\
  \        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local -a xs=($1)\n    local -a ys=()\n    local min=${xs[0]}\n    local max=${xs[0]}\n\
  \    for x in ${xs[@]}; do\n        if [[ $x -lt $min ]]; then\n            min=$x\n\
  \        fi\n        if [[ $x -gt $max ]]; then\n            max=$x\n        fi\n\
  \    done\n    for x in ${xs[@]}; do\n        ys+=($(echo \"scale=2; ($x - $min)\
  \ / ($max - $min)\" | bc))\n    done\n    echo ${ys[@]}"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n      \
  \  echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -n _list=$1\n    local _min=${_list[0]}\n    local _max=${_list[0]}\n\
  \    local _range\n    local _rescaled\n    for _elem in ${_list[@]}; do\n     \
  \   if (( $(echo \"$_elem < $_min\" | bc -l) )); then\n            _min=$_elem\n\
  \        fi\n        if (( $(echo \"$_elem > $_max\" | bc -l) )); then\n       \
  \     _max=$_elem\n        fi\n    done\n    _range=$(echo \"$_max - $_min\" | bc\
  \ -l)\n    for _elem in ${_list[@]}; do\n        _rescaled=$(echo \"($_elem - $_min)\
  \ / $_range\" | bc -l)\n        echo $_rescaled\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo \"$(echo\
  \ \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
  \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo $(echo\
  \ \"($i - $min) / $range\" | bc -l)\n    done"
- "  local -a list=($1)\n  local max=${list[0]}\n  local min=${list[0]}\n  for i in\
  \ \"${list[@]}\"; do\n    if (( $(echo \"$i > $max\" | bc -l) )); then\n      max=$i\n\
  \    fi\n    if (( $(echo \"$i < $min\" | bc -l) )); then\n      min=$i\n    fi\n\
  \  done\n  local range=$(echo \"$max - $min\" | bc -l)\n  for i in \"${list[@]}\"\
  ; do\n    echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n  done"
- "    local -a numbers=($1)\n    local -a scaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    local n\n    local s\n    for n in\
  \ \"${numbers[@]}\"; do\n        if [[ $n < $min ]]; then\n            min=$n\n\
  \        fi\n        if [[ $n > $max ]]; then\n            max=$n\n        fi\n\
  \    done\n    for i in \"${!numbers[@]}\"; do\n        s=$(echo \"scale=4; (${numbers[$i]}\
  \ - $min) / ($max - $min)\" | bc)\n        scaled[$i]=$s\n    done\n    echo \"\
  ${scaled[@]}\""
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
  \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\"\
  ; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
  \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n    \
  \    fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local -a values=($1)\n    local -a rescaled=()\n    local min=${values[0]}\n\
  \    local max=${values[0]}\n    local i\n    for i in \"${values[@]}\"; do\n  \
  \      if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n      \
  \  fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
  \        fi\n    done\n    for i in \"${values[@]}\"; do\n        local rescaled_i=$(echo\
  \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l)\n        rescaled+=($rescaled_i)\n\
  \    done\n    echo \"${rescaled[@]}\""
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    local len=${#arr[@]}\n    for ((i=1; i<len; i++)); do\n       \
  \ if (( $(echo \"${arr[i]} < $min\" | bc -l) )); then\n            min=${arr[i]}\n\
  \        fi\n        if (( $(echo \"${arr[i]} > $max\" | bc -l) )); then\n     \
  \       max=${arr[i]}\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for ((i=0; i<len; i++)); do\n        arr[i]=$(echo \"(${arr[i]}\
  \ - $min) / $range\" | bc -l)\n    done\n    echo \"${arr[@]}\""
- "    local -a numbers\n    numbers=($1)\n    local min=${numbers[0]}\n    local\
  \ max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n        if (( $(echo\
  \ \"$number < $min\" | bc -l) )); then\n            min=$number\n        fi\n  \
  \      if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
  \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for\
  \ number in \"${numbers[@]}\"; do\n        echo \"$(echo \"($number - $min) / $range\"\
  \ | bc -l)\"\n    done"
- "    local -a list=($1)\n    local max=${list[0]}\n    local min=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if [[ $i > $max ]]; then\n            max=$i\n\
  \        fi\n        if [[ $i < $min ]]; then\n            min=$i\n        fi\n\
  \    done\n    local range=$(echo \"$max - $min\" | bc)\n    for i in \"${list[@]}\"\
  ; do\n        echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    for i\
  \ in \"${arr[@]}\"; do\n        echo \"$(echo \"scale=4; ($i - $min) / ($max - $min)\"\
  \ | bc -l)\"\n    done"
- "    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for number in ${numbers[@]};\
  \ do\n        local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n   \
  \     echo -n \"$rescaled \"\n    done\n    echo"
- "  local -a list=($1)\n  local min=${list[0]}\n  local max=${list[0]}\n  for i in\
  \ \"${list[@]}\"; do\n    if (( $(echo \"$i < $min\" | bc -l) )); then\n      min=$i\n\
  \    fi\n    if (( $(echo \"$i > $max\" | bc -l) )); then\n      max=$i\n    fi\n\
  \  done\n  local range=$(echo \"$max - $min\" | bc -l)\n  for i in \"${list[@]}\"\
  ; do\n    echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n  done"
- "    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    local number\n    for number in \"${numbers[@]}\"\
  ; do\n        if [[ $number -lt $min ]]; then\n            min=$number\n       \
  \ fi\n        if [[ $number -gt $max ]]; then\n            max=$number\n       \
  \ fi\n    done\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
  \ \"scale=2; ($number - $min) / ($max - $min)\" | bc))\n    done\n    echo \"${rescaled[@]}\""
- "    local numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
  \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\" |\
  \ bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo \"\
  $number > $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n\
  \    local scale=$(echo \"scale=10; 1 / ($max - $min)\" | bc -l)\n    for number\
  \ in ${numbers[@]}; do\n        echo $(echo \"scale=10; ($number - $min) * $scale\"\
  \ | bc -l)\n    done"
- "    local -a list\n    IFS=' ' read -r -a list <<< \"$1\"\n    local min=${list[0]}\n\
  \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n\
  \        echo \"$(echo \"($i - $min) / $range\" | bc -l)\"\n    done"
- "    local -a numbers\n    local -a rescaled\n    local min\n    local max\n   \
  \ local range\n    local i\n\n    numbers=($1)\n    min=${numbers[0]}\n    max=${numbers[0]}\n\
  \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
  \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" |\
  \ bc -l) )); then\n            max=$i\n        fi\n    done\n    range=$(echo \"\
  $max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
  \ \"($i - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local -a list=($1)\n    local -a rescaled_list\n    local min=${list[0]}\n\
  \    local max=${list[0]}\n    local i\n    local n\n    local rescaled_n\n\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
  \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
  \ -l) )); then\n            max=$i\n        fi\n    done\n\n    for i in \"${list[@]}\"\
  ; do\n        n=$(echo \"$i - $min\" | bc -l)\n        rescaled_n=$(echo \"$n /\
  \ ($max - $min)\" | bc -l)\n        rescaled_list+=($rescaled_n)\n    done\n\n \
  \   echo \"${rescaled_list[@]}\""
- "    local -a numbers\n    read -r -a numbers <<< \"$1\"\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n        if\
  \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n    \
  \    fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n           \
  \ max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc\
  \ -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number -\
  \ $min) / $range\" | bc -l)\n    done"
- "    local -a numbers\n    local -a rescaled\n    local min\n    local max\n   \
  \ local range\n    local i\n\n    numbers=($1)\n    min=${numbers[0]}\n    max=${numbers[0]}\n\
  \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
  \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" |\
  \ bc -l) )); then\n            max=$i\n        fi\n    done\n    range=$(echo \"\
  $max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
  \ \"($i - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\""
- "    local -a list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n  \
  \  for i in ${list[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
  \ - $min\" | bc -l)\n    for i in ${list[@]}; do\n        echo $(echo \"($i - $min)\
  \ / $range\" | bc -l)\n    done"
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_diff=0\n\
  \    local _rescale_to_unit_i=0\n    local _rescale_to_unit_value=0\n    local _rescale_to_unit_result=()\n\
  \n    for _rescale_to_unit_i in ${_rescale_to_unit_list[@]}; do\n        if (( $(echo\
  \ \"$_rescale_to_unit_i < $_rescale_to_unit_min\" | bc -l) )); then\n          \
  \  _rescale_to_unit_min=$_rescale_to_unit_i\n        fi\n        if (( $(echo \"\
  $_rescale_to_unit_i > $_rescale_to_unit_max\" | bc -l) )); then\n            _rescale_to_unit_max=$_rescale_to_unit_i\n\
  \        fi\n    done\n\n    _rescale_to_unit_diff=$(echo \"$_rescale_to_unit_max\
  \ - $_rescale_to_unit_min\" | bc -l)\n\n    for _rescale_to_unit_i in ${_rescale_to_unit_list[@]};\
  \ do\n        _rescale_to_unit_value=$(echo \"($_rescale_to_unit_i - $_rescale_to_unit_min)\
  \ / $_rescale_to_unit_diff\" | bc -l)\n        _rescale_to_unit_result+=($_rescale_to_unit_value)\n\
  \    done\n\n    echo \"${_rescale_to_unit_result[@]}\""
- "  local -a list=($1)\n  local min=${list[0]}\n  local max=${list[0]}\n  for i in\
  \ \"${list[@]}\"; do\n    if (( $(echo \"$i < $min\" | bc -l) )); then\n      min=$i\n\
  \    fi\n    if (( $(echo \"$i > $max\" | bc -l) )); then\n      max=$i\n    fi\n\
  \  done\n  local range=$(echo \"$max - $min\" | bc -l)\n  for i in \"${list[@]}\"\
  ; do\n    echo $(echo \"($i - $min) / $range\" | bc -l)\n  done"
- "    local -a numbers\n    local -a rescaled\n    local min\n    local max\n   \
  \ local range\n    local i\n    local n\n\n    numbers=($1)\n    min=${numbers[0]}\n\
  \    max=${numbers[0]}\n    for i in \"${numbers[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n\
  \        n=$(echo \"($i - $min) / $range\" | bc -l)\n        rescaled+=(\"$n\")\n\
  \    done\n    echo \"${rescaled[@]}\""
- "    local -a xs=($1)\n    local min=${xs[0]}\n    local max=${xs[0]}\n    for x\
  \ in ${xs[@]}; do\n        if (( $(echo \"$x < $min\" | bc -l) )); then\n      \
  \      min=$x\n        fi\n        if (( $(echo \"$x > $max\" | bc -l) )); then\n\
  \            max=$x\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
  \ | bc -l)\n    for x in ${xs[@]}; do\n        echo $(echo \"($x - $min) / $range\"\
  \ | bc -l)\n    done"
- "    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n\
  \ | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local result=\"\"\n    for\
  \ x in $list; do\n        local scaled=$(echo \"($x - $min) / $range\" | bc -l)\n\
  \        result=\"$result $scaled\"\n    done\n    echo \"$result\""
- "    local list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    for\
  \ i in ${list[@]}; do\n        if [[ $i -lt $min ]]; then\n            min=$i\n\
  \        fi\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n\
  \    done\n    local range=$(echo \"$max - $min\" | bc)\n    for i in ${list[@]};\
  \ do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done"
- "    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n\
  \ | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local result=\"\"\n    for\
  \ x in $list; do\n        local scaled=$(echo \"($x - $min) / $range\" | bc -l)\n\
  \        result=\"$result $scaled\"\n    done\n    echo \"$result\""
- "    local -n _rescale_to_unit_list=$1\n    local _rescale_to_unit_min=${_rescale_to_unit_list[0]}\n\
  \    local _rescale_to_unit_max=${_rescale_to_unit_list[0]}\n    local _rescale_to_unit_range\n\
  \    local _rescale_to_unit_value\n    local _rescale_to_unit_rescaled_value\n \
  \   for _rescale_to_unit_value in ${_rescale_to_unit_list[@]}; do\n        if ((\
  \ $(echo \"$_rescale_to_unit_value < $_rescale_to_unit_min\" | bc -l) )); then\n\
  \            _rescale_to_unit_min=$_rescale_to_unit_value\n        fi\n        if\
  \ (( $(echo \"$_rescale_to_unit_value > $_rescale_to_unit_max\" | bc -l) )); then\n\
  \            _rescale_to_unit_max=$_rescale_to_unit_value\n        fi\n    done\n\
  \    _rescale_to_unit_range=$(echo \"$_rescale_to_unit_max - $_rescale_to_unit_min\"\
  \ | bc -l)\n    for _rescale_to_unit_value in ${_rescale_to_unit_list[@]}; do\n\
  \        _rescale_to_unit_rescaled_value=$(echo \"($_rescale_to_unit_value - $_rescale_to_unit_min)\
  \ / $_rescale_to_unit_range\" | bc -l)\n        echo $_rescale_to_unit_rescaled_value\n\
  \    done"
- "    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n\
  \ | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n\
  \ 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$list\" | tr ' '\
  \ '\\n' | while read x; do\n        echo \"$x - $min\" | bc | awk -v range=\"$range\"\
  \ '{print $1 / range}'\n    done"
- "    local -a list=($1)\n    local max=${list[0]}\n    local min=${list[0]}\n  \
  \  for i in \"${list[@]}\"; do\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n        if (( $(echo \"$i < $min\" | bc\
  \ -l) )); then\n            min=$i\n        fi\n    done\n    local scale=$(echo\
  \ \"scale=10; 1 / ($max - $min)\" | bc -l)\n    for i in \"${list[@]}\"; do\n  \
  \      echo $(echo \"scale=10; ($i - $min) * $scale\" | bc -l)\n    done"
- "    local -a numbers\n    IFS=' ' read -r -a numbers <<< \"$1\"\n    local min=${numbers[0]}\n\
  \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n        if\
  \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n    \
  \    fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n           \
  \ max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\" | bc\
  \ -l)\n    for number in \"${numbers[@]}\"; do\n        echo \"$(echo \"($number\
  \ - $min) / $range\" | bc -l)\"\n    done"
- "    local -n arr=$1\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for\
  \ i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
  \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
  \ then\n            max=$i\n        fi\n    done\n    for i in \"${!arr[@]}\"; do\n\
  \        arr[$i]=$(echo \"scale=2; (${arr[$i]} - $min) / ($max - $min)\" | bc -l)\n\
  \    done"
- "    local -a list\n    IFS=' ' read -r -a list <<< \"$1\"\n    local min=${list[0]}\n\
  \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
  \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if ((\
  \ $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
  \    local range=$(echo \"$max - $min\" | bc -l)\n    local result=\"\"\n    for\
  \ i in \"${list[@]}\"; do\n        local scaled=$(echo \"($i - $min) / $range\"\
  \ | bc -l)\n        result=\"$result $scaled\"\n    done\n    echo \"$result\""
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local i\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\"\
  \ | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo \"$i >\
  \ $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n    local\
  \ range=$(echo \"$max - $min\" | bc -l)\n    local result=()\n    for i in \"${arr[@]}\"\
  ; do\n        result+=($(echo \"($i - $min) / $range\" | bc -l))\n    done\n   \
  \ echo \"${result[@]}\""
- "    local -n _list=$1\n    local _min=$(echo \"${_list[*]}\" | tr ' ' '\\n' | sort\
  \ -n | head -n 1)\n    local _max=$(echo \"${_list[*]}\" | tr ' ' '\\n' | sort -n\
  \ | tail -n 1)\n    local _diff=$(echo \"$_max - $_min\" | bc -l)\n    for i in\
  \ \"${!_list[@]}\"; do\n        _list[$i]=$(echo \"(${_list[$i]} - $_min) / $_diff\"\
  \ | bc -l)\n    done"
- "    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n \
  \   local n=${#arr[@]}\n    local i\n    for ((i=1; i<n; i++)); do\n        if ((\
  \ $(echo \"${arr[i]} < $min\" | bc -l) )); then\n            min=${arr[i]}\n   \
  \     fi\n        if (( $(echo \"${arr[i]} > $max\" | bc -l) )); then\n        \
  \    max=${arr[i]}\n        fi\n    done\n    for ((i=0; i<n; i++)); do\n      \
  \  arr[i]=$(echo \"scale=4; (${arr[i]} - $min) / ($max - $min)\" | bc -l)\n    done\n\
  \    echo \"${arr[@]}\""
- "    local -a numbers=($1)\n    local -a sorted=($(echo \"${numbers[@]}\" | tr '\
  \ ' '\\n' | sort -n))\n    local min=${sorted[0]}\n    local max=${sorted[-1]}\n\
  \    local -a result=()\n    for number in \"${numbers[@]}\"; do\n        result+=($(echo\
  \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"\
  ${result[@]}\""
language: sh
name: HumanEval_21_rescale_to_unit
prompt: '#!/bin/bash

  # Given list of numbers (of at least two elements), apply a linear transform to
  that list,

  # such that the smallest number will become 0 and the largest will become 1

  # >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])

  # [0.0, 0.25, 0.5, 0.75, 1.0]

  #

  # $1 is a space-separated list

  rescale_to_unit() {

  '
stop_tokens:
- '

  }'
tests: "}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
  ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
  \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5\
  \ 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5\
  \ 0.75\" ]]\n}\n\nrun_test"

name: HumanEval_4_mean_absolute_deviation
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# For a given list of input numbers, calculate Mean Absolute\
  \ Deviation\n# around the mean of this dataset.\n# Mean Absolute Deviation is the\
  \ average absolute difference between each\n# element and a centerpoint (mean in\
  \ this case):\n# MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0,\
  \ 2.0, 3.0, 4.0])\n# 1.0\n#\n# $1 is a space-separated list\nmean_absolute_deviation()\
  \ {\n"
tests: "}\n\ncandidate() {\n    mean_absolute_deviation \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"1.0 2.0\") = \"0.5\" ]]\n    [[ $(candidate \"1.0 2.0\
  \ 3.0 4.0\") = \"1.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"1.2\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local -a x\n    local n\n    local sum\n    local mean\n    local\
    \ sum_abs_dev\n    local abs_dev\n    local mad\n    x=($1)\n    n=${#x[@]}\n\
    \    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$(echo \"$sum + ${x[$i]}\"\
    \ | bc -l)\n    done\n    mean=$(echo \"$sum / $n\" | bc -l)\n    sum_abs_dev=0\n\
    \    for ((i=0; i<n; i++)); do\n        abs_dev=$(echo \"scale=3; ${x[$i]} - $mean\"\
    \ | bc -l)\n        abs_dev=$(echo \"scale=3; $abs_dev < 0 ? -$abs_dev : $abs_dev\"\
    \ | bc -l)\n        sum_abs_dev=$(echo \"$sum_abs_dev + $abs_dev\" | bc -l)\n\
    \    done\n    mad=$(echo \"$sum_abs_dev / $n\" | bc -l)\n    echo $mad", "  \
    \  local x_mean=$(mean $1)\n    local x_deviation=$(echo $1 | sed -e \"s/ / -\
    \ $x_mean + /g\")\n    local x_abs_deviation=$(echo $x_deviation | sed -e \"s/\
    \ / abs(/g\" -e \"s/$/)/g\")\n    echo $x_abs_deviation | bc -l", "    local -a\
    \ numbers=($1)\n    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n\
    \    local -i mean\n    local -i abs_deviation\n    local -i sum_abs_deviation=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        abs_deviation=$((abs_deviation < 0 ? -abs_deviation : abs_deviation))\n\
    \        sum_abs_deviation=$((sum_abs_deviation + abs_deviation))\n    done\n\
    \    echo $((sum_abs_deviation / n))", "    local -a numbers=($1)\n    local -i\
    \ n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local -i mean\n  \
    \  local -i abs_deviation\n    local -i abs_deviation_sum=0\n    for ((i=0; i<n;\
    \ i++)); do\n        sum=$((sum + numbers[i]))\n    done\n    mean=$((sum / n))\n\
    \    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n\
    \        abs_deviation_sum=$((abs_deviation_sum + abs_deviation))\n    done\n\
    \    echo $((abs_deviation_sum / n))", "    local list=\"$1\"\n    local mean=$(mean\
    \ \"$list\")\n    local sum=0\n    for i in $list; do\n        sum=$(echo \"$sum\
    \ + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", " \
    \   local sum=0\n    local count=0\n    local mean=0\n    local abs_dev=0\n  \
    \  local mad=0\n    local num=0\n    for num in $1; do\n        sum=$(echo \"\
    $sum + $num\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n   \
    \ mean=$(echo \"$sum / $count\" | bc -l)\n    for num in $1; do\n        abs_dev=$(echo\
    \ \"scale=2; $num - $mean\" | bc -l)\n        abs_dev=$(echo \"$abs_dev < 0 ?\
    \ -$abs_dev : $abs_dev\" | bc)\n        mad=$(echo \"$mad + $abs_dev\" | bc)\n\
    \    done\n    mad=$(echo \"$mad / $count\" | bc -l)\n    echo $mad", "    local\
    \ mean=$(mean \"$1\")\n    local abs_deviations=$(echo \"$1\" | awk -v mean=$mean\
    \ '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n    echo \"$abs_deviations\"\
    \ | mean", "  local -a x\n  local -i n\n  local -i i\n  local -i sum\n  local\
    \ -i mean\n  local -i abs_dev\n  local -i abs_dev_sum\n  local -i mad\n  x=($1)\n\
    \  n=${#x[@]}\n  for ((i=0; i<n; i++)); do\n    ((sum+=x[i]))\n  done\n  ((mean=sum/n))\n\
    \  for ((i=0; i<n; i++)); do\n    ((abs_dev=x[i]-mean))\n    ((abs_dev=abs_dev<0?-abs_dev:abs_dev))\n\
    \    ((abs_dev_sum+=abs_dev))\n  done\n  ((mad=abs_dev_sum/n))\n  echo $mad",
  "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n    mean=$((sum\
    \ / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((arr[i] - mean))\n \
    \       abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    echo $((abs_dev_sum\
    \ / n))", "  local mean=$(mean $1)\n  local abs_deviations=$(echo $1 | awk '{for\
    \ (i=1; i<=NF; i++) {printf \"%s \", ($i - '$mean')}}')\n  mean $abs_deviations",
  "    local -a numbers\n    local -i i\n    local -i count\n    local -i sum\n  \
    \  local -i mean\n    local -i abs_deviation\n    local -i abs_deviation_sum\n\
    \    local -i abs_deviation_mean\n\n    numbers=($1)\n    count=${#numbers[@]}\n\
    \    sum=0\n    for ((i=0; i<count; i++)); do\n        sum=$((sum + numbers[i]))\n\
    \    done\n    mean=$((sum / count))\n\n    abs_deviation_sum=0\n    for ((i=0;\
    \ i<count; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n    done\n    abs_deviation_mean=$((abs_deviation_sum / count))\n\
    \n    echo $abs_deviation_mean", "    local -a numbers=($1)\n    local -a abs_deviations\n\
    \    local mean\n    local sum=0\n    local i\n    local n\n\n    # Calculate\
    \ mean\n    for i in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + $i\" |\
    \ bc)\n    done\n    mean=$(echo \"$sum / ${#numbers[@]}\" | bc -l)\n\n    # Calculate\
    \ absolute deviations\n    for i in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"scale=2; $i - $mean\" | bc -l | awk '{if ($1>=0) print $1; else print -$1}'))\n\
    \    done\n\n    # Calculate mean absolute deviation\n    sum=0\n    for i in\
    \ \"${abs_deviations[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n\
    \    echo $(echo \"$sum / ${#abs_deviations[@]}\" | bc -l)", "  local -a x\n \
    \ local -i n\n  local -i i\n  local -i sum\n  local -i mean\n  local -i diff\n\
    \  local -i abs_diff\n  local -i abs_diff_sum\n  local -i mad\n  x=($1)\n  n=${#x[@]}\n\
    \  sum=0\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + x[i]))\n  done\n  mean=$((sum\
    \ / n))\n  abs_diff_sum=0\n  for ((i=0; i<n; i++)); do\n    diff=$((x[i] - mean))\n\
    \    abs_diff=$((diff < 0 ? -diff : diff))\n    abs_diff_sum=$((abs_diff_sum +\
    \ abs_diff))\n  done\n  mad=$((abs_diff_sum / n))\n  echo $mad", "    local -a\
    \ x\n    local -i n\n    local -i i\n    local -i sum\n    local -i mean\n   \
    \ local -i abs_dev\n    local -i abs_dev_sum\n    local -i abs_dev_mean\n    x=($1)\n\
    \    n=${#x[@]}\n    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + x[i]))\n    done\n    mean=$((sum / n))\n    abs_dev_sum=0\n    for ((i=0;\
    \ i<n; i++)); do\n        abs_dev=$((x[i] - mean))\n        abs_dev_sum=$((abs_dev_sum\
    \ + abs_dev))\n    done\n    abs_dev_mean=$((abs_dev_sum / n))\n    echo $abs_dev_mean",
  "    local mean=$(mean \"$1\")\n    local abs_diff_sum=0\n    for x in $1; do\n\
    \        local abs_diff=$(echo \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n\
    \        local abs_diff=$(echo \"$abs_diff < 0 ? -$abs_diff : $abs_diff\")\n \
    \       abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc -l)\n    done\n\
    \    echo \"$abs_diff_sum / $#\" | bc -l | awk '{printf \"%f\", $0}'", "    local\
    \ -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local abs_dev=0\n  \
    \  local mad=0\n    local i=0\n    local n=${#arr[@]}\n\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2;\
    \ $sum / $n\" | bc)\n\n    for i in \"${arr[@]}\"; do\n        abs_dev=$(echo\
    \ \"scale=2; $i - $mean\" | bc)\n        abs_dev=$(echo \"scale=2; $abs_dev <\
    \ 0 ? -$abs_dev : $abs_dev\" | bc)\n        mad=$(echo \"scale=2; $mad + $abs_dev\"\
    \ | bc)\n    done\n    mad=$(echo \"scale=2; $mad / $n\" | bc)\n\n    echo $mad",
  "  # Calculate mean\n  local mean=$(echo \"$1\" | awk '{sum=0; for (i=1; i<=NF;\
    \ i++) sum+=$i; print sum/NF}')\n  # Calculate absolute difference between each\
    \ element and mean\n  local abs_diff=$(echo \"$1\" | awk -v mean=$mean '{sum=0;\
    \ for (i=1; i<=NF; i++) sum+=sqrt((($i-mean)*($i-mean))); print sum/NF}')\n  #\
    \ Print result\n  echo $abs_diff", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo\
    \ \"$@\" | awk -v mean=$mean '{print $1 - mean}' | awk '{print $1 < 0 ? -$1 :\
    \ $1}')\n    mean \"$abs_deviations\"", "    local -a arr=(\"$@\")\n    local\
    \ sum=0\n    local mean=0\n    local abs_diff=0\n    local abs_diff_sum=0\n  \
    \  local mad=0\n    local i=0\n\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"$sum / ${#arr[@]}\" | bc -l)\n\
    \n    for i in \"${arr[@]}\"; do\n        abs_diff=$(echo \"scale=2; $i - $mean\"\
    \ | bc -l)\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc)\n\
    \    done\n    mad=$(echo \"$abs_diff_sum / ${#arr[@]}\" | bc -l)\n\n    echo\
    \ \"$mad\"", "    local mean=$(mean $1)\n    local sum=0\n    for x in $1; do\n\
    \        sum=$(echo \"$sum + abs($x - $mean)\" | bc -l)\n    done\n    echo \"\
    $sum / $#\" | bc -l"]
stop_tokens:
- "\n}"

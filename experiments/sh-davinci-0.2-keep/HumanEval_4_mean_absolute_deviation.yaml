name: HumanEval_4_mean_absolute_deviation
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# For a given list of input numbers, calculate Mean Absolute\
  \ Deviation\n# around the mean of this dataset.\n# Mean Absolute Deviation is the\
  \ average absolute difference between each\n# element and a centerpoint (mean in\
  \ this case):\n# MAD = average | x - x_mean |\n# >>> mean_absolute_deviation([1.0,\
  \ 2.0, 3.0, 4.0])\n# 1.0\n#\n# $1 is a space-separated list\nmean_absolute_deviation()\
  \ {\n"
tests: "}\n\ncandidate() {\n    mean_absolute_deviation \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"1.0 2.0\") = \"0.5\" ]]\n    [[ $(candidate \"1.0 2.0\
  \ 3.0 4.0\") = \"1.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"1.2\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local -a x\n    local n\n    local sum\n    local mean\n    local\
    \ sum_abs_dev\n    local abs_dev\n    local mad\n    x=($1)\n    n=${#x[@]}\n\
    \    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$(echo \"$sum + ${x[$i]}\"\
    \ | bc -l)\n    done\n    mean=$(echo \"$sum / $n\" | bc -l)\n    sum_abs_dev=0\n\
    \    for ((i=0; i<n; i++)); do\n        abs_dev=$(echo \"scale=3; ${x[$i]} - $mean\"\
    \ | bc -l)\n        abs_dev=$(echo \"scale=3; $abs_dev < 0 ? -$abs_dev : $abs_dev\"\
    \ | bc -l)\n        sum_abs_dev=$(echo \"$sum_abs_dev + $abs_dev\" | bc -l)\n\
    \    done\n    mad=$(echo \"$sum_abs_dev / $n\" | bc -l)\n    echo $mad", "  \
    \  local x_mean=$(mean $1)\n    local x_deviation=$(echo $1 | sed -e \"s/ / -\
    \ $x_mean + /g\")\n    local x_abs_deviation=$(echo $x_deviation | sed -e \"s/\
    \ / abs(/g\" -e \"s/$/)/g\")\n    echo $x_abs_deviation | bc -l", "    local -a\
    \ numbers=($1)\n    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n\
    \    local -i mean\n    local -i abs_deviation\n    local -i sum_abs_deviation=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        abs_deviation=$((abs_deviation < 0 ? -abs_deviation : abs_deviation))\n\
    \        sum_abs_deviation=$((sum_abs_deviation + abs_deviation))\n    done\n\
    \    echo $((sum_abs_deviation / n))", "    local -a numbers=($1)\n    local -i\
    \ n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local -i mean\n  \
    \  local -i abs_deviation\n    local -i abs_deviation_sum=0\n    for ((i=0; i<n;\
    \ i++)); do\n        sum=$((sum + numbers[i]))\n    done\n    mean=$((sum / n))\n\
    \    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n\
    \        abs_deviation_sum=$((abs_deviation_sum + abs_deviation))\n    done\n\
    \    echo $((abs_deviation_sum / n))", "    local list=\"$1\"\n    local mean=$(mean\
    \ \"$list\")\n    local sum=0\n    for i in $list; do\n        sum=$(echo \"$sum\
    \ + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", " \
    \   local sum=0\n    local count=0\n    local mean=0\n    local abs_dev=0\n  \
    \  local mad=0\n    local num=0\n    for num in $1; do\n        sum=$(echo \"\
    $sum + $num\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n   \
    \ mean=$(echo \"$sum / $count\" | bc -l)\n    for num in $1; do\n        abs_dev=$(echo\
    \ \"scale=2; $num - $mean\" | bc -l)\n        abs_dev=$(echo \"$abs_dev < 0 ?\
    \ -$abs_dev : $abs_dev\" | bc)\n        mad=$(echo \"$mad + $abs_dev\" | bc)\n\
    \    done\n    mad=$(echo \"$mad / $count\" | bc -l)\n    echo $mad", "    local\
    \ mean=$(mean \"$1\")\n    local abs_deviations=$(echo \"$1\" | awk -v mean=$mean\
    \ '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n    echo \"$abs_deviations\"\
    \ | mean", "  local -a x\n  local -i n\n  local -i i\n  local -i sum\n  local\
    \ -i mean\n  local -i abs_dev\n  local -i abs_dev_sum\n  local -i mad\n  x=($1)\n\
    \  n=${#x[@]}\n  for ((i=0; i<n; i++)); do\n    ((sum+=x[i]))\n  done\n  ((mean=sum/n))\n\
    \  for ((i=0; i<n; i++)); do\n    ((abs_dev=x[i]-mean))\n    ((abs_dev=abs_dev<0?-abs_dev:abs_dev))\n\
    \    ((abs_dev_sum+=abs_dev))\n  done\n  ((mad=abs_dev_sum/n))\n  echo $mad",
  "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n    mean=$((sum\
    \ / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((arr[i] - mean))\n \
    \       abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    echo $((abs_dev_sum\
    \ / n))", "  local mean=$(mean $1)\n  local abs_deviations=$(echo $1 | awk '{for\
    \ (i=1; i<=NF; i++) {printf \"%s \", ($i - '$mean')}}')\n  mean $abs_deviations",
  "    local -a numbers\n    local -i i\n    local -i count\n    local -i sum\n  \
    \  local -i mean\n    local -i abs_deviation\n    local -i abs_deviation_sum\n\
    \    local -i abs_deviation_mean\n\n    numbers=($1)\n    count=${#numbers[@]}\n\
    \    sum=0\n    for ((i=0; i<count; i++)); do\n        sum=$((sum + numbers[i]))\n\
    \    done\n    mean=$((sum / count))\n\n    abs_deviation_sum=0\n    for ((i=0;\
    \ i<count; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n    done\n    abs_deviation_mean=$((abs_deviation_sum / count))\n\
    \n    echo $abs_deviation_mean", "    local -a numbers=($1)\n    local -a abs_deviations\n\
    \    local mean\n    local sum=0\n    local i\n    local n\n\n    # Calculate\
    \ mean\n    for i in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + $i\" |\
    \ bc)\n    done\n    mean=$(echo \"$sum / ${#numbers[@]}\" | bc -l)\n\n    # Calculate\
    \ absolute deviations\n    for i in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"scale=2; $i - $mean\" | bc -l | awk '{if ($1>=0) print $1; else print -$1}'))\n\
    \    done\n\n    # Calculate mean absolute deviation\n    sum=0\n    for i in\
    \ \"${abs_deviations[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n\
    \    echo $(echo \"$sum / ${#abs_deviations[@]}\" | bc -l)", "  local -a x\n \
    \ local -i n\n  local -i i\n  local -i sum\n  local -i mean\n  local -i diff\n\
    \  local -i abs_diff\n  local -i abs_diff_sum\n  local -i mad\n  x=($1)\n  n=${#x[@]}\n\
    \  sum=0\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + x[i]))\n  done\n  mean=$((sum\
    \ / n))\n  abs_diff_sum=0\n  for ((i=0; i<n; i++)); do\n    diff=$((x[i] - mean))\n\
    \    abs_diff=$((diff < 0 ? -diff : diff))\n    abs_diff_sum=$((abs_diff_sum +\
    \ abs_diff))\n  done\n  mad=$((abs_diff_sum / n))\n  echo $mad", "    local -a\
    \ x\n    local -i n\n    local -i i\n    local -i sum\n    local -i mean\n   \
    \ local -i abs_dev\n    local -i abs_dev_sum\n    local -i abs_dev_mean\n    x=($1)\n\
    \    n=${#x[@]}\n    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + x[i]))\n    done\n    mean=$((sum / n))\n    abs_dev_sum=0\n    for ((i=0;\
    \ i<n; i++)); do\n        abs_dev=$((x[i] - mean))\n        abs_dev_sum=$((abs_dev_sum\
    \ + abs_dev))\n    done\n    abs_dev_mean=$((abs_dev_sum / n))\n    echo $abs_dev_mean",
  "    local mean=$(mean \"$1\")\n    local abs_diff_sum=0\n    for x in $1; do\n\
    \        local abs_diff=$(echo \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n\
    \        local abs_diff=$(echo \"$abs_diff < 0 ? -$abs_diff : $abs_diff\")\n \
    \       abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc -l)\n    done\n\
    \    echo \"$abs_diff_sum / $#\" | bc -l | awk '{printf \"%f\", $0}'", "    local\
    \ -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local abs_dev=0\n  \
    \  local mad=0\n    local i=0\n    local n=${#arr[@]}\n\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2;\
    \ $sum / $n\" | bc)\n\n    for i in \"${arr[@]}\"; do\n        abs_dev=$(echo\
    \ \"scale=2; $i - $mean\" | bc)\n        abs_dev=$(echo \"scale=2; $abs_dev <\
    \ 0 ? -$abs_dev : $abs_dev\" | bc)\n        mad=$(echo \"scale=2; $mad + $abs_dev\"\
    \ | bc)\n    done\n    mad=$(echo \"scale=2; $mad / $n\" | bc)\n\n    echo $mad",
  "  # Calculate mean\n  local mean=$(echo \"$1\" | awk '{sum=0; for (i=1; i<=NF;\
    \ i++) sum+=$i; print sum/NF}')\n  # Calculate absolute difference between each\
    \ element and mean\n  local abs_diff=$(echo \"$1\" | awk -v mean=$mean '{sum=0;\
    \ for (i=1; i<=NF; i++) sum+=sqrt((($i-mean)*($i-mean))); print sum/NF}')\n  #\
    \ Print result\n  echo $abs_diff", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo\
    \ \"$@\" | awk -v mean=$mean '{print $1 - mean}' | awk '{print $1 < 0 ? -$1 :\
    \ $1}')\n    mean \"$abs_deviations\"", "    local -a arr=(\"$@\")\n    local\
    \ sum=0\n    local mean=0\n    local abs_diff=0\n    local abs_diff_sum=0\n  \
    \  local mad=0\n    local i=0\n\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"$sum / ${#arr[@]}\" | bc -l)\n\
    \n    for i in \"${arr[@]}\"; do\n        abs_diff=$(echo \"scale=2; $i - $mean\"\
    \ | bc -l)\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc)\n\
    \    done\n    mad=$(echo \"$abs_diff_sum / ${#arr[@]}\" | bc -l)\n\n    echo\
    \ \"$mad\"", "    local mean=$(mean $1)\n    local sum=0\n    for x in $1; do\n\
    \        sum=$(echo \"$sum + abs($x - $mean)\" | bc -l)\n    done\n    echo \"\
    $sum / $#\" | bc -l", "    local mean=$(mean \"$1\")\n    local abs_diff_sum=0\n\
    \    for x in $1; do\n        abs_diff_sum=$(echo \"$abs_diff_sum + abs($x - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", "    local mean=$(mean\
    \ $1)\n    local abs_diff_sum=0\n    for i in $1; do\n        abs_diff_sum=$(echo\
    \ \"$abs_diff_sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum\
    \ / $#\" | bc -l", "    local -n arr=$1\n    local sum=0\n    local mean=0\n \
    \   local abs_dev=0\n    local mad=0\n    local i=0\n    local len=${#arr[@]}\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n\
    \    mean=$(echo \"$sum / $len\" | bc -l)\n    for i in \"${arr[@]}\"; do\n  \
    \      abs_dev=$(echo \"scale=2; $i - $mean\" | bc -l)\n        abs_dev=$(echo\
    \ \"scale=2; $abs_dev < 0 ? -$abs_dev : $abs_dev\" | bc -l)\n        mad=$(echo\
    \ \"$mad + $abs_dev\" | bc -l)\n    done\n    echo \"$mad / $len\" | bc -l", " \
    \   local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum=0\n\
    \    local -i abs_dev_mean\n\n    for ((i=0; i<len; i++)); do\n        sum=$((sum\
    \ + array[i]))\n    done\n    mean=$((sum / len))\n\n    for ((i=0; i<len; i++));\
    \ do\n        abs_dev=$((array[i] - mean))\n        abs_dev_sum=$((abs_dev_sum\
    \ + abs_dev))\n    done\n    abs_dev_mean=$((abs_dev_sum / len))\n\n    echo $abs_dev_mean",
  "    local -a arr=(\"$@\")\n    local mean=$(mean \"${arr[@]}\")\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a arr=(\"$@\"\
    )\n    local sum=0\n    local mean=0\n    local count=0\n    local abs_dev=0\n\
    \    local abs_dev_sum=0\n    local mad=0\n\n    for i in \"${arr[@]}\"; do\n\
    \        sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" |\
    \ bc)\n    done\n    mean=$(echo \"scale=2; $sum / $count\" | bc)\n\n    for i\
    \ in \"${arr[@]}\"; do\n        abs_dev=$(echo \"scale=2; $i - $mean\" | bc)\n\
    \        abs_dev=$(echo \"scale=2; $abs_dev < 0 ? -$abs_dev : $abs_dev\" | bc)\n\
    \        abs_dev_sum=$(echo \"scale=2; $abs_dev_sum + $abs_dev\" | bc)\n    done\n\
    \    mad=$(echo \"scale=2; $abs_dev_sum / $count\" | bc)\n    echo $mad", "  \
    \  local -a x=($1)\n    local -a y=()\n    local -i i=0\n    local -i n=${#x[@]}\n\
    \    local -i sum=0\n    local -i mean=0\n    local -i mad=0\n    for ((i=0; i<n;\
    \ i++)); do\n        sum=$((sum + x[i]))\n    done\n    mean=$((sum / n))\n  \
    \  for ((i=0; i<n; i++)); do\n        y[i]=$((x[i] - mean))\n        if ((y[i]\
    \ < 0)); then\n            y[i]=$((-y[i]))\n        fi\n    done\n    sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + y[i]))\n    done\n    mad=$((sum\
    \ / n))\n    echo $mad", "    local mean=$(mean $1)\n    local abs_deviations=$(echo\
    \ $1 | awk -v mean=$mean '{for (i=1; i<=NF; i++) {print $i - mean}}')\n    mean\
    \ $(echo $abs_deviations | sed 's/-//g')", "    local -a x\n    local -i i\n \
    \   local -r n=$#\n    local -r mean=$(mean \"$@\")\n    local -i sum=0\n    x=($@)\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + abs(x[i] - mean)))\n    done\n\
    \    echo $((sum / n))", "    local -a numbers\n    numbers=($1)\n    local mean\n\
    \    mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n    abs_deviations=()\n\
    \    for i in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo \"scale=2;\
    \ $i - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    local -a abs_deviations_abs\n\
    \    abs_deviations_abs=()\n    for i in \"${abs_deviations[@]}\"; do\n      \
    \  abs_deviations_abs+=($(echo \"scale=2; $i < 0 ? -$i : $i\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo \"$(mean \"${abs_deviations_abs[@]}\")\"",
  "    local list=$1\n    local mean=$(mean $list)\n    local abs_deviations=$(echo\
    \ $list | awk '{ for (i=1; i<=NF; i++) print $i - '$mean' }' | awk '{ for (i=1;\
    \ i<=NF; i++) if ($i < 0) print -$i; else print $i }')\n    local abs_deviations_sum=$(echo\
    \ $abs_deviations | awk '{ sum = 0; for (i=1; i<=NF; i++) sum += $i; print sum\
    \ }')\n    local abs_deviations_count=$(echo $abs_deviations | awk '{ print NF\
    \ }')\n    echo $abs_deviations_sum $abs_deviations_count | awk '{ print $1 /\
    \ $2 }'", "    local -a arr=($1)\n    local sum=0\n    local mean=0\n    local\
    \ count=0\n    local abs_diff=0\n    local abs_diff_sum=0\n    local abs_diff_mean=0\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    \
    \    count=$(echo \"$count + 1\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum\
    \ / $count\" | bc)\n    for i in \"${arr[@]}\"; do\n        abs_diff=$(echo \"\
    scale=2; $i - $mean\" | bc)\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\"\
    \ | bc)\n    done\n    abs_diff_mean=$(echo \"scale=2; $abs_diff_sum / $count\"\
    \ | bc)\n    echo $abs_diff_mean", "    local -a numbers\n    local sum=0\n  \
    \  local mean=0\n    local abs_deviation=0\n    local abs_deviation_sum=0\n  \
    \  local mad=0\n\n    numbers=($1)\n    for i in \"${numbers[@]}\"; do\n     \
    \   sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum\
    \ / ${#numbers[@]}\" | bc)\n    for i in \"${numbers[@]}\"; do\n        abs_deviation=$(echo\
    \ \"scale=2; $i - $mean\" | bc)\n        abs_deviation_sum=$(echo \"$abs_deviation_sum\
    \ + $abs_deviation\" | bc)\n    done\n    mad=$(echo \"scale=2; $abs_deviation_sum\
    \ / ${#numbers[@]}\" | bc)\n    echo \"$mad\"", "    local -a x\n    x=($1)\n\
    \    local x_mean=$(mean ${x[@]})\n    local -a x_deviations\n    for i in ${x[@]};\
    \ do\n        x_deviations+=($(echo \"$i - $x_mean\" | bc -l))\n    done\n   \
    \ local -a x_absolute_deviations\n    for i in ${x_deviations[@]}; do\n      \
    \  x_absolute_deviations+=($(echo \"if ($i < 0) $i * -1 else $i\" | bc -l))\n\
    \    done\n    echo $(mean ${x_absolute_deviations[@]})", "    local mean=$(mean\
    \ \"$1\")\n    local abs_deviations=$(echo \"$1\" | awk '{print $1-mean}' mean=$mean)\n\
    \    echo \"$abs_deviations\" | mean", "    local -a arr=(\"$@\")\n    local -a\
    \ abs_diffs\n    local sum_abs_diffs\n    local mean\n    local abs_diff\n   \
    \ local i\n\n    # Calculate mean\n    mean=$(mean \"${arr[@]}\")\n\n    # Calculate\
    \ absolute differences\n    for ((i=0; i<${#arr[@]}; i++)); do\n        abs_diff=$(echo\
    \ \"${arr[$i]} - $mean\" | bc -l)\n        abs_diffs[$i]=$(echo \"if ($abs_diff\
    \ < 0) $abs_diff * -1 else $abs_diff\" | bc -l)\n    done\n\n    # Calculate sum\
    \ of absolute differences\n    sum_abs_diffs=$(sum \"${abs_diffs[@]}\")\n\n  \
    \  # Calculate mean absolute deviation\n    echo \"$sum_abs_diffs / ${#arr[@]}\"\
    \ | bc -l", "    local -a arr\n    arr=($1)\n    local sum=0\n    local count=0\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo $sum + $i | bc)\n        count=$(echo\
    \ $count + 1 | bc)\n    done\n    local mean=$(echo \"scale=2; $sum / $count\"\
    \ | bc)\n    local abs_dev_sum=0\n    for i in \"${arr[@]}\"; do\n        abs_dev_sum=$(echo\
    \ $abs_dev_sum + abs\\($i - $mean\\) | bc)\n    done\n    echo \"scale=2; $abs_dev_sum\
    \ / $count\" | bc", "    local list=$1\n    local mean=$(echo \"$list\" | awk\
    \ '{sum+=$1} END {print sum/NR}')\n    local abs_deviations=$(echo \"$list\" |\
    \ awk -v mean=$mean '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n    local\
    \ sum_abs_deviations=$(echo \"$abs_deviations\" | awk '{sum+=$1} END {print sum}')\n\
    \    local n=$(echo \"$list\" | wc -w)\n    echo \"$sum_abs_deviations / $n\"\
    \ | bc -l", "    local -a array\n    array=($1)\n    local sum=0\n    local count=0\n\
    \    local mean=0\n    local mad=0\n    for i in \"${array[@]}\"\n    do\n   \
    \     sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n\
    \    done\n    mean=$(echo \"scale=2; $sum / $count\" | bc)\n    for i in \"${array[@]}\"\
    \n    do\n        mad=$(echo \"$mad + abs($i - $mean)\" | bc)\n    done\n    mad=$(echo\
    \ \"scale=2; $mad / $count\" | bc)\n    echo $mad", "  local list=$1\n  local\
    \ mean=$(mean $list)\n  local abs_diff_list=$(echo $list | awk -v mean=$mean '{for\
    \ (i=1; i<=NF; i++) {printf(\"%s \", ($i - mean) < 0 ? -($i - mean) : ($i - mean))}}')\n\
    \  local abs_diff_sum=$(sum $abs_diff_list)\n  local abs_diff_count=$(echo $abs_diff_list\
    \ | wc -w)\n  echo $(echo $abs_diff_sum $abs_diff_count | awk '{printf(\"%f\"\
    , $1 / $2)}')", "  local -a x\n  local -i n\n  local -i i\n  local -i sum\n  local\
    \ -i mean\n  local -i abs_dev\n  local -i abs_dev_sum\n  local -i abs_dev_mean\n\
    \  IFS=' ' read -a x <<< \"$1\"\n  n=${#x[@]}\n  for (( i=0; i<n; i++ )); do\n\
    \    (( sum+=x[i] ))\n  done\n  (( mean=sum/n ))\n  for (( i=0; i<n; i++ )); do\n\
    \    (( abs_dev=x[i]-mean ))\n    (( abs_dev=abs_dev<0?-abs_dev:abs_dev ))\n \
    \   (( abs_dev_sum+=abs_dev ))\n  done\n  (( abs_dev_mean=abs_dev_sum/n ))\n \
    \ echo $abs_dev_mean", "    local -a nums=($1)\n    local -i n=${#nums[@]}\n \
    \   local -i i\n    local -i sum=0\n    local -i mean\n    local -i abs_deviation\n\
    \    local -i sum_abs_deviation=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n\
    \        abs_deviation=$((nums[i] - mean))\n        if ((abs_deviation < 0));\
    \ then\n            abs_deviation=$((-abs_deviation))\n        fi\n        sum_abs_deviation=$((sum_abs_deviation\
    \ + abs_deviation))\n    done\n    echo $((sum_abs_deviation / n))", "    local\
    \ x_mean=$(mean \"$1\")\n    local x_abs_diff_sum=0\n    for x in $1; do\n   \
    \     x_abs_diff_sum=$(bc <<< \"$x_abs_diff_sum + abs($x - $x_mean)\")\n    done\n\
    \    bc <<< \"scale=2; $x_abs_diff_sum / $#\"", "  local -a numbers=($1)\n  local\
    \ mean=$(mean \"${numbers[@]}\")\n  local abs_deviations=()\n  for number in \"\
    ${numbers[@]}\"; do\n    abs_deviations+=($(echo \"$number - $mean\" | bc -l |\
    \ awk '{printf \"%f\", $0 < 0 ? -$0 : $0}'))\n  done\n  mean \"${abs_deviations[@]}\"",
  "    local -a arr=(\"$@\")\n    local mean=$(mean \"${arr[@]}\")\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local list=\"$1\"\n\
    \    local mean=$(mean \"$list\")\n    local abs_deviations=$(echo \"$list\" |\
    \ awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print $1 < 0 ? -$1 : $1}')\n\
    \    local sum=$(echo \"$abs_deviations\" | awk '{sum += $1} END {print sum}')\n\
    \    local count=$(echo \"$abs_deviations\" | wc -l)\n    echo \"$sum / $count\"\
    \ | bc -l", "    local -a x\n    local -i n\n    local -i i\n    local -i sum\n\
    \    local -i mean\n    local -i mad\n    local -i diff\n    # Read input into\
    \ array\n    read -a x <<< \"$1\"\n    # Get number of elements\n    n=${#x[@]}\n\
    \    # Calculate sum\n    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + x[i]))\n    done\n    # Calculate mean\n    mean=$((sum / n))\n    # Calculate\
    \ MAD\n    mad=0\n    for ((i=0; i<n; i++)); do\n        diff=$((x[i] - mean))\n\
    \        diff=${diff#-}\n        mad=$((mad + diff))\n    done\n    mad=$((mad\
    \ / n))\n    echo $mad", "    local list=\"$1\"\n    local mean=$(mean \"$list\"\
    )\n    local abs_diff_sum=0\n    for i in $list; do\n        abs_diff_sum=$(echo\
    \ \"$abs_diff_sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum\
    \ / $list_size\" | bc -l", "    local mean=$(mean $1)\n    local sum=0\n    for\
    \ i in $1; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / $#\" | bc -l", "    local -a x\n    IFS=' ' read -r -a x <<<\
    \ \"$1\"\n    local -i n=${#x[@]}\n    local -i i\n    local -i sum=0\n    for\
    \ ((i=0; i<n; i++)); do\n        sum=$((sum + x[i]))\n    done\n    local -i mean=$((sum\
    \ / n))\n    local -i sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + abs(x[i] - mean)))\n    done\n    local -i mad=$((sum / n))\n    echo $mad",
  "  local x_mean=$(echo \"$1\" | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i; print\
    \ sum/NF}')\n  local x_abs_diff=$(echo \"$1\" | awk -v x_mean=$x_mean '{sum=0;\
    \ for (i=1; i<=NF; i++) sum+=sqrt((x_mean-$i)^2); print sum/NF}')\n  echo $x_abs_diff",
  "  local -a array\n  local sum=0\n  local mean=0\n  local abs_diff=0\n  local abs_diff_sum=0\n\
    \  local mad=0\n  local i=0\n\n  # Convert input string to an array\n  IFS=' '\
    \ read -r -a array <<< \"$1\"\n\n  # Calculate mean\n  for i in \"${array[@]}\"\
    ; do\n    sum=$(echo \"$sum + $i\" | bc)\n  done\n  mean=$(echo \"scale=2; $sum\
    \ / ${#array[@]}\" | bc)\n\n  # Calculate absolute difference from mean\n  for\
    \ i in \"${array[@]}\"; do\n    abs_diff=$(echo \"scale=2; $i - $mean\" | bc)\n\
    \    abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc)\n  done\n\n  # Calculate\
    \ mean absolute deviation\n  mad=$(echo \"scale=2; $abs_diff_sum / ${#array[@]}\"\
    \ | bc)\n\n  echo \"$mad\"", "    local -a arr=(\"$@\")\n    local sum=0\n   \
    \ local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local mad=0\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n\
    \    mean=$(echo \"scale=2; $sum / ${#arr[@]}\" | bc)\n    for i in \"${arr[@]}\"\
    ; do\n        abs_dev=$(echo \"scale=2; $i - $mean\" | bc)\n        abs_dev_sum=$(echo\
    \ \"scale=2; $abs_dev_sum + $abs_dev\" | bc)\n    done\n    mad=$(echo \"scale=2;\
    \ $abs_dev_sum / ${#arr[@]}\" | bc)\n    echo $mad", "    local mean=`mean $1`\n\
    \    local abs_devs=`echo $1 | awk '{for (i=1; i<=NF; i++) { print $i - '$mean'\
    \ }}'`\n    mean $abs_devs", "    local -a x\n    local -i i\n    local -r n=$#\n\
    \    local -r x_mean=$(echo \"scale=2; (${*// /+})/$n\" | bc)\n    for i in $*;\
    \ do\n        x[$i]=$(echo \"scale=2; ${x[$i]}+abs($i-$x_mean)\" | bc)\n    done\n\
    \    echo \"scale=2; (${x[*]// /+})/$n\" | bc", "  local -a array\n  local sum\n\
    \  local mean\n  local abs_diff\n  local sum_abs_diff\n  local mean_abs_diff\n\
    \  local i\n\n  # Convert input string to an array\n  IFS=' ' read -r -a array\
    \ <<< \"$1\"\n\n  # Calculate sum\n  sum=0\n  for i in \"${array[@]}\"; do\n \
    \   sum=$(echo \"$sum + $i\" | bc)\n  done\n\n  # Calculate mean\n  mean=$(echo\
    \ \"$sum / ${#array[@]}\" | bc -l)\n\n  # Calculate sum of absolute differences\n\
    \  sum_abs_diff=0\n  for i in \"${array[@]}\"; do\n    abs_diff=$(echo \"scale=2;\
    \ $i - $mean\" | bc -l)\n    abs_diff=$(echo \"scale=2; ${abs_diff#-}\")\n   \
    \ sum_abs_diff=$(echo \"$sum_abs_diff + $abs_diff\" | bc)\n  done\n\n  # Calculate\
    \ mean absolute difference\n  mean_abs_diff=$(echo \"$sum_abs_diff / ${#array[@]}\"\
    \ | bc -l)\n\n  echo \"$mean_abs_diff\"", "    local -a arr=(\"$@\")\n    local\
    \ mean=$(mean \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"; do\n\
    \        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"\
    $sum / $#\" | bc -l", "    local -a x=($1)\n    local n=${#x[@]}\n    local mean=$(echo\
    \ \"scale=2; (${x[*]})/$n\" | bc)\n    local -a diffs\n    for ((i=0; i<n; i++));\
    \ do\n        diffs[i]=$(echo \"scale=2; ${x[i]}-$mean\" | bc)\n    done\n   \
    \ local -a abs_diffs\n    for ((i=0; i<n; i++)); do\n        abs_diffs[i]=$(echo\
    \ \"scale=2; ${diffs[i]}<0?-${diffs[i]}:${diffs[i]}\" | bc)\n    done\n    local\
    \ sum=$(echo \"scale=2; ${abs_diffs[*]}+0\" | bc)\n    echo \"scale=2; $sum/$n\"\
    \ | bc", "    # Calculate mean\n    local mean=$(echo \"$1\" | awk '{sum=0; for\
    \ (i=1; i<=NF; i++) sum+=$i; print sum/NF}')\n    # Calculate absolute difference\
    \ between each element and mean\n    local abs_diff=$(echo \"$1\" | awk -v mean=$mean\
    \ '{for (i=1; i<=NF; i++) print $i-mean}' | awk '{for (i=1; i<=NF; i++) if ($i<0)\
    \ print -$i; else print $i}')\n    # Calculate mean of absolute differences\n\
    \    local mad=$(echo \"$abs_diff\" | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i;\
    \ print sum/NF}')\n    echo $mad", "    local mean=$(mean $1)\n    local sum=0\n\
    \    for i in $1; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n\
    \    done\n    echo \"$sum / $#\" | bc -l", "    local -a arr\n    local -i i\n\
    \    local -i n\n    local -i sum\n    local -i mean\n    local -i abs_dev\n \
    \   local -i sum_abs_dev\n    local -i mad\n    arr=($1)\n    n=${#arr[@]}\n \
    \   sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n    done\n\
    \    mean=$((sum / n))\n    sum_abs_dev=0\n    for ((i=0; i<n; i++)); do\n   \
    \     abs_dev=$((arr[i] - mean))\n        if ((abs_dev < 0)); then\n         \
    \   abs_dev=$((-abs_dev))\n        fi\n        sum_abs_dev=$((sum_abs_dev + abs_dev))\n\
    \    done\n    mad=$((sum_abs_dev / n))\n    echo $mad", "    local -a x\n   \
    \ local -i i\n    local -i n\n    local -i sum\n    local -i mean\n    local -i\
    \ abs_dev\n    local -i sum_abs_dev\n    local -i mad\n    x=($1)\n    n=${#x[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + x[i]))\n    done\n    mean=$((sum\
    \ / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((x[i] - mean))\n   \
    \     abs_dev=${abs_dev#-}\n        sum_abs_dev=$((sum_abs_dev + abs_dev))\n \
    \   done\n    mad=$((sum_abs_dev / n))\n    echo $mad", "    local -a arr=(\"\
    $@\")\n    local sum=0\n    local mean=0\n    local diff=0\n    local abs_diff=0\n\
    \    local mad=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum +\
    \ $i\" | bc)\n    done\n    mean=$(echo \"$sum / ${#arr[@]}\" | bc -l)\n    for\
    \ i in \"${arr[@]}\"; do\n        diff=$(echo \"$i - $mean\" | bc -l)\n      \
    \  abs_diff=$(echo \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n       \
    \ mad=$(echo \"$mad + $abs_diff\" | bc -l)\n    done\n    echo \"$mad / ${#arr[@]}\"\
    \ | bc -l", "    local list=$1\n    local mean=$(mean $list)\n    local abs_diff_list=$(echo\
    \ $list | sed -e \"s/\\([0-9]*\\)/|\\1-$mean|/g\")\n    echo $abs_diff_list |\
    \ sed -e \"s/\\([0-9]*\\)/\\1 /g\" | awk '{sum+=$1} END {print sum/NR}'", "  local\
    \ sum=0\n  local count=0\n  local mean=0\n  local abs_dev=0\n  local abs_dev_sum=0\n\
    \  local abs_dev_mean=0\n  local x=0\n  for x in $1; do\n    sum=$(echo \"$sum\
    \ + $x\" | bc)\n    count=$(echo \"$count + 1\" | bc)\n  done\n  mean=$(echo \"\
    $sum / $count\" | bc -l)\n  for x in $1; do\n    abs_dev=$(echo \"scale=2; $x\
    \ - $mean\" | bc -l)\n    abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" | bc)\n\
    \  done\n  abs_dev_mean=$(echo \"$abs_dev_sum / $count\" | bc -l)\n  echo $abs_dev_mean",
  "    local x_mean=$(mean $1)\n    local x_deviations=$(echo $1 | sed -e \"s/\\([0-9]*\\\
    )/|\\1-$x_mean|/g\")\n    local x_deviations_sum=$(echo $x_deviations | sed -e\
    \ \"s/|/ + /g\")\n    local x_deviations_sum=$(echo $x_deviations_sum | bc)\n\
    \    local x_count=$(echo $1 | wc -w)\n    local x_mad=$(echo \"scale=2; $x_deviations_sum\
    \ / $x_count\" | bc)\n    echo $x_mad", "    local -a arr=(\"$@\")\n    local\
    \ -a arr_abs\n    local sum=0\n    local mean=0\n    local abs_dev=0\n    local\
    \ mad=0\n\n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" |\
    \ bc)\n    done\n    mean=$(echo \"scale=3; $sum / ${#arr[@]}\" | bc)\n\n    for\
    \ i in \"${arr[@]}\"; do\n        abs_dev=$(echo \"scale=3; $i - $mean\" | bc)\n\
    \        arr_abs+=(\"$abs_dev\")\n    done\n\n    for i in \"${arr_abs[@]}\";\
    \ do\n        mad=$(echo \"scale=3; $mad + $i\" | bc)\n    done\n    mad=$(echo\
    \ \"scale=3; $mad / ${#arr_abs[@]}\" | bc)\n\n    echo $mad", "    local x_mean=$(mean\
    \ \"$1\")\n    local x_deviations=$(echo \"$1\" | awk -v mean=$x_mean '{print\
    \ $1 - mean}')\n    local x_abs_deviations=$(echo \"$x_deviations\" | awk '{print\
    \ sqrt($1 * $1)}')\n    local x_sum_abs_deviations=$(echo \"$x_abs_deviations\"\
    \ | awk '{sum += $1} END {print sum}')\n    local x_count=$(echo \"$1\" | wc -w)\n\
    \    echo \"$x_sum_abs_deviations / $x_count\" | bc -l", "    local -a arr\n \
    \   local -i i\n    local -i len\n    local -i sum\n    local -i mean\n    local\
    \ -i mad\n    local -i diff\n    arr=($1)\n    len=${#arr[@]}\n    for ((i=0;\
    \ i<len; i++)); do\n        sum=$((sum + arr[i]))\n    done\n    mean=$((sum /\
    \ len))\n    for ((i=0; i<len; i++)); do\n        diff=$((arr[i] - mean))\n  \
    \      if ((diff < 0)); then\n            diff=$((-diff))\n        fi\n      \
    \  mad=$((mad + diff))\n    done\n    mad=$((mad / len))\n    echo $mad", "  \
    \  local mean=$(mean \"$1\")\n    local abs_deviations=$(echo \"$1\" | awk '{print\
    \ $1-mean}' mean=$mean)\n    echo \"$abs_deviations\" | awk '{sum+=$1} END {print\
    \ sum/NR}'", "    local -a x=($1)\n    local -a x_mean=($(mean \"${x[@]}\"))\n\
    \    local -a x_abs_diff=()\n    local -a x_abs_diff_mean=()\n    local -a x_abs_diff_mean_rounded=()\n\
    \    local -a x_abs_diff_mean_rounded_int=()\n    local -a x_abs_diff_mean_rounded_int_str=()\n\
    \    local -a x_abs_diff_mean_rounded_int_str_len=()\n    local -a x_abs_diff_mean_rounded_int_str_len_max=()\n\
    \    local -a x_abs_diff_mean_rounded_int_str_len_max_str=()\n    local -a x_abs_diff_mean_rounded_int_str_len_max_str_len=()\n\
    \    local -a x_abs_diff_mean_rounded_int_str_len_max_str_len_str=()\n    local\
    \ -a x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len=()\n    local -a\
    \ x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len_str=()\n    local -a\
    \ x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len_str_len=()\n    local\
    \ -a x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len_str_len_str=()\n\
    \    local -a x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len_str_len_str_len=()\n\
    \    local -a x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len_str_len_str_len_str=()\n\
    \    local -a x_abs_diff_mean_rounded_int_str_len_max_str_len_str_len_str_len_str_len_str_len=()\n\
    \    local -a x", "    local list=\"$1\"\n    local mean=$(mean \"$list\")\n \
    \   local sum=0\n    for x in $list; do\n        sum=$(echo \"$sum + abs($x -\
    \ $mean)\" | bc -l)\n    done\n    local count=$(echo \"$list\" | wc -w)\n   \
    \ echo \"$sum / $count\" | bc -l", "    local -a x\n    local -i i\n    local\
    \ -i n\n    local -i sum\n    local -i mean\n    local -i mad\n    local -i tmp\n\
    \    x=($1)\n    n=${#x[@]}\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + x[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n \
    \       tmp=$((x[i] - mean))\n        if ((tmp < 0)); then\n            tmp=$((-tmp))\n\
    \        fi\n        mad=$((mad + tmp))\n    done\n    echo $((mad / n))", " \
    \ local mean=$(mean \"$1\")\n  local abs_diff_sum=0\n  for i in $1; do\n    local\
    \ abs_diff=$(echo \"$i - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n    abs_diff_sum=$(echo\
    \ \"$abs_diff_sum + $abs_diff\" | bc -l)\n  done\n  echo \"$abs_diff_sum / $#\"\
    \ | bc -l | awk '{printf \"%f\", $0}'", "    local -a arr=(\"$@\")\n    local\
    \ sum=0\n    local mean=0\n    local diff=0\n    local abs_diff=0\n    local mad=0\n\
    \    local i=0\n    local n=${#arr[@]}\n\n    for ((i=0; i<n; i++)); do\n    \
    \    sum=$(echo \"$sum + ${arr[$i]}\" | bc -l)\n    done\n    mean=$(echo \"$sum\
    \ / $n\" | bc -l)\n\n    for ((i=0; i<n; i++)); do\n        diff=$(echo \"${arr[$i]}\
    \ - $mean\" | bc -l)\n        abs_diff=$(echo \"if ($diff < 0) $diff * -1 else\
    \ $diff\" | bc -l)\n        mad=$(echo \"$mad + $abs_diff\" | bc -l)\n    done\n\
    \    mad=$(echo \"$mad / $n\" | bc -l)\n    echo $mad", "    local mean=$(mean\
    \ $1)\n    local abs_deviations=$(echo $1 | sed -e \"s/\\([0-9]*\\)/|\\1-$mean|/g\"\
    )\n    echo $abs_deviations | sed -e \"s/\\([0-9]*\\)/\\1 /g\" | awk '{sum=0;\
    \ for (i=1; i<=NF; i++) sum+=$i; print sum/NF}'", "    local -a numbers=($1)\n\
    \    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local\
    \ -i mean\n    local -i absolute_deviation\n    local -i sum_absolute_deviation=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        absolute_deviation=$((numbers[i]\
    \ - mean))\n        if ((absolute_deviation < 0)); then\n            absolute_deviation=$((-absolute_deviation))\n\
    \        fi\n        sum_absolute_deviation=$((sum_absolute_deviation + absolute_deviation))\n\
    \    done\n    echo $((sum_absolute_deviation / n))", "    local -a arr\n    arr=($1)\n\
    \    local mean\n    mean=$(mean ${arr[@]})\n    local -a diffs\n    local i\n\
    \    for i in ${arr[@]}; do\n        diffs+=($(echo \"$i - $mean\" | bc -l))\n\
    \    done\n    local abs_diffs\n    abs_diffs=$(absolute_values ${diffs[@]})\n\
    \    mean ${abs_diffs[@]}", "    local sum=0\n    local mean=0\n    local count=0\n\
    \    local diff=0\n    local abs_diff=0\n    local abs_diff_sum=0\n    local abs_diff_mean=0\n\
    \    local i=0\n    local x=0\n    local input_list=\"$1\"\n    local input_list_length=0\n\
    \    local input_list_array=()\n\n    # Split input list into array\n    IFS='\
    \ ' read -r -a input_list_array <<< \"$input_list\"\n    input_list_length=${#input_list_array[@]}\n\
    \n    # Calculate mean\n    for i in \"${input_list_array[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum / $input_list_length\"\
    \ | bc)\n\n    # Calculate absolute difference from mean\n    for i in \"${input_list_array[@]}\"\
    ; do\n        diff=$(echo \"$i - $mean\" | bc)\n        abs_diff=$(echo \"$diff\
    \ < 0 ? -$diff : $diff\" | bc)\n        abs_diff_sum=$(echo \"$abs_diff_sum +\
    \ $abs_diff\" | bc)\n    done\n\n    # Calculate mean absolute deviation\n   \
    \ abs_diff_mean=$(echo \"scale=2; $abs_diff_sum / $input_list_length\" | bc)\n\
    \    echo \"$abs_diff_mean\"", "    local -a x=($1)\n    local -a x_mean=0\n \
    \   local -a x_dev=0\n    local -a x_abs_dev=0\n    local -a x_abs_dev_sum=0\n\
    \    local -a x_abs_dev_avg=0\n    local -a x_abs_dev_avg_rounded=0\n    local\
    \ -a x_abs_dev_avg_rounded_string=0\n    local -a x_abs_dev_avg_rounded_string_len=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max=0\n    local -a x_abs_dev_avg_rounded_string_len_max_len=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string=0\n    local -a\
    \ x_abs_dev_avg_rounded_string_len_max_len_string_len=0\n    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max_len=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max_len_string=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max_len_string_len=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max_len_string_len_max=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max_len_string_len_max_len=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max_len_string_len_max_len_string_len_max_len_string=0\n\
    \    local -a x_abs_dev_avg_rounded_string_len_max", "  local -a x=($1)\n  local\
    \ n=${#x[@]}\n  local x_mean=$(mean \"${x[@]}\")\n  local sum=0\n  for ((i=0;\
    \ i<n; i++)); do\n    sum=$(echo \"$sum + abs(${x[$i]} - $x_mean)\" | bc -l)\n\
    \  done\n  echo \"$sum / $n\" | bc -l", "    local -a x\n    IFS=' ' read -r -a\
    \ x <<< \"$1\"\n    local sum=0\n    local n=${#x[@]}\n    for i in \"${x[@]}\"\
    ; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n    local mean=$(echo\
    \ \"scale=2; $sum / $n\" | bc)\n    local abs_sum=0\n    for i in \"${x[@]}\"\
    ; do\n        abs_sum=$(echo \"$abs_sum + $(echo \"scale=2; $i - $mean\" | bc\
    \ | awk '{if($0<0) print -$0; else print $0}')\" | bc)\n    done\n    echo \"\
    scale=2; $abs_sum / $n\" | bc", "  local -a input=($1)\n  local mean=$(mean \"\
    ${input[@]}\")\n  local abs_deviations=()\n  for i in \"${input[@]}\"; do\n  \
    \  abs_deviations+=($(echo \"scale=2; $i - $mean\" | bc))\n  done\n  local abs_deviations_abs=()\n\
    \  for i in \"${abs_deviations[@]}\"; do\n    abs_deviations_abs+=($(echo \"scale=2;\
    \ $i < 0 ? -$i : $i\" | bc))\n  done\n  mean \"${abs_deviations_abs[@]}\"", " \
    \   local mean=$(mean \"$1\")\n    local abs_deviations=$(echo \"$1\" | awk -v\
    \ mean=$mean '{print abs($1 - mean)}')\n    mean \"$abs_deviations\"", "  local\
    \ -a data\n  data=($1)\n  local sum=0\n  local n=${#data[@]}\n  local mean=$(mean\
    \ $1)\n  for i in \"${data[@]}\"; do\n    sum=$(echo \"$sum + abs($i - $mean)\"\
    \ | bc -l)\n  done\n  echo \"$sum / $n\" | bc -l", "  local list=\"$1\"\n  local\
    \ mean=$(mean \"$list\")\n  local abs_deviations=$(echo \"$list\" | awk -v mean=\"\
    $mean\" '{print abs($1 - mean)}')\n  local sum=$(sum \"$abs_deviations\")\n  local\
    \ count=$(echo \"$list\" | wc -w)\n  echo \"$sum / $count\" | bc -l", "    local\
    \ -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local mad=0\n    local\
    \ count=0\n    local i=0\n\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n\n\
    \    mean=$(echo \"scale=2; $sum / $count\" | bc)\n\n    for i in \"${arr[@]}\"\
    ; do\n        mad=$(echo \"$mad + abs($i - $mean)\" | bc)\n    done\n\n    echo\
    \ \"scale=2; $mad / $count\" | bc", "    local -a arr=(\"$@\")\n    local mean=$(mean\
    \ \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l",
  "    local list=\"$1\"\n    local mean=$(mean \"$list\")\n    local sum=0\n    for\
    \ x in $list; do\n        sum=$(echo \"$sum + abs($x - $mean)\" | bc -l)\n   \
    \ done\n    echo \"$sum / $#\" | bc -l", "    local list=\"$1\"\n    local mean=$(mean\
    \ \"$list\")\n    local abs_deviations=\"\"\n    for x in $list; do\n        local\
    \ abs_deviation=$(echo \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n \
    \       abs_deviations=\"$abs_deviations $abs_deviation\"\n    done\n    echo\
    \ $(mean \"$abs_deviations\")", "  local -a numbers\n  local -i i\n  local -i\
    \ len\n  local -i sum\n  local -i mean\n  local -i diff\n  local -i abs_diff\n\
    \  local -i abs_diff_sum\n  local -i mad\n\n  numbers=($1)\n  len=${#numbers[@]}\n\
    \  sum=0\n  for ((i=0; i<len; i++)); do\n    sum=$((sum + numbers[i]))\n  done\n\
    \  mean=$((sum / len))\n  abs_diff_sum=0\n  for ((i=0; i<len; i++)); do\n    diff=$((numbers[i]\
    \ - mean))\n    abs_diff=$((diff < 0 ? -diff : diff))\n    abs_diff_sum=$((abs_diff_sum\
    \ + abs_diff))\n  done\n  mad=$((abs_diff_sum / len))\n  echo $mad", "    # Calculate\
    \ mean\n    local mean=$(echo \"$1\" | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i;\
    \ print sum/NF}')\n    # Calculate absolute difference from mean\n    local abs_diff=$(echo\
    \ \"$1\" | awk -v mean=$mean '{sum=0; for (i=1; i<=NF; i++) sum+=abs($i-mean);\
    \ print sum/NF}')\n    echo $abs_diff", "    local mean=$(mean \"$1\")\n    local\
    \ abs_deviations=$(echo \"$1\" | awk '{print $1-mean}' mean=$mean)\n    echo \"\
    $abs_deviations\" | mean", "    local -a array\n    local -i i\n    local -r sum=$(echo\
    \ \"$1\" | tr ' ' '\\n' | awk '{s+=$1} END {print s}')\n    local -r mean=$(echo\
    \ \"$sum / $(echo \"$1\" | wc -w)\" | bc -l)\n    local -r abs_diff_sum=$(echo\
    \ \"$1\" | tr ' ' '\\n' | awk -v mean=\"$mean\" '{s+=($1-mean>0?$1-mean:-($1-mean))}\
    \ END {print s}')\n    echo \"$abs_diff_sum / $(echo \"$1\" | wc -w)\" | bc -l",
  "  local -a array\n  local sum=0\n  local mean=0\n  local abs_diff=0\n  local mad=0\n\
    \  local i=0\n  local n=0\n\n  # Convert input string to an array\n  IFS=' ' read\
    \ -r -a array <<< \"$1\"\n\n  # Calculate mean\n  for i in \"${array[@]}\"; do\n\
    \    sum=$(echo \"$sum + $i\" | bc)\n  done\n  n=${#array[@]}\n  mean=$(echo \"\
    scale=2; $sum / $n\" | bc)\n\n  # Calculate mean absolute deviation\n  for i in\
    \ \"${array[@]}\"; do\n    abs_diff=$(echo \"scale=2; $i - $mean\" | bc)\n   \
    \ abs_diff=$(echo \"scale=2; $abs_diff < 0 ? -$abs_diff : $abs_diff\" | bc)\n\
    \    mad=$(echo \"scale=2; $mad + $abs_diff\" | bc)\n  done\n  mad=$(echo \"scale=2;\
    \ $mad / $n\" | bc)\n\n  echo \"$mad\"", "    local list=\"$1\"\n    local mean=$(echo\
    \ \"$list\" | awk '{sum+=$1} END {print sum/NR}')\n    local abs_deviations=$(echo\
    \ \"$list\" | awk -v mean=$mean '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n\
    \    local abs_deviations_sum=$(echo \"$abs_deviations\" | awk '{sum+=$1} END\
    \ {print sum}')\n    local abs_deviations_count=$(echo \"$abs_deviations\" | wc\
    \ -l)\n    echo \"$abs_deviations_sum / $abs_deviations_count\" | bc -l", "  \
    \  local -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local abs_dev=0\n\
    \    local abs_dev_sum=0\n    local abs_dev_mean=0\n    local len=${#arr[@]}\n\
    \    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n\
    \    mean=$(echo \"scale=2; $sum / $len\" | bc)\n    for i in \"${arr[@]}\"; do\n\
    \        abs_dev=$(echo \"scale=2; $i - $mean\" | bc)\n        abs_dev=$(echo\
    \ \"scale=2; $abs_dev < 0 ? -$abs_dev : $abs_dev\" | bc)\n        abs_dev_sum=$(echo\
    \ \"scale=2; $abs_dev_sum + $abs_dev\" | bc)\n    done\n    abs_dev_mean=$(echo\
    \ \"scale=2; $abs_dev_sum / $len\" | bc)\n    echo \"$abs_dev_mean\"", "    #\
    \ Get the mean\n    local mean=$(echo \"$1\" | awk '{sum=0; for (i=1; i<=NF; i++)\
    \ sum+=$i; print sum/NF}')\n    # Get the absolute difference between each element\
    \ and the mean\n    local abs_diff_from_mean=$(echo \"$1\" | awk -v mean=$mean\
    \ '{for (i=1; i<=NF; i++) print $i-mean}' | awk '{print $1<0?-$1:$1}')\n    #\
    \ Get the mean of the absolute difference\n    local mean_abs_diff_from_mean=$(echo\
    \ \"$abs_diff_from_mean\" | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i; print\
    \ sum/NF}')\n    echo $mean_abs_diff_from_mean", "    local sum=0\n    local count=0\n\
    \    local mean=0\n    local abs_deviation=0\n    local mean_abs_deviation=0\n\
    \    for x in $1; do\n        sum=$(echo \"$sum + $x\" | bc)\n        count=$(echo\
    \ \"$count + 1\" | bc)\n    done\n    mean=$(echo \"$sum / $count\" | bc -l)\n\
    \    for x in $1; do\n        abs_deviation=$(echo \"scale=2; $x - $mean\" | bc\
    \ -l)\n        abs_deviation=$(echo \"scale=2; $abs_deviation < 0 ? -$abs_deviation\
    \ : $abs_deviation\" | bc -l)\n        mean_abs_deviation=$(echo \"scale=2; $mean_abs_deviation\
    \ + $abs_deviation\" | bc -l)\n    done\n    mean_abs_deviation=$(echo \"scale=2;\
    \ $mean_abs_deviation / $count\" | bc -l)\n    echo $mean_abs_deviation", "  \
    \  local -a x=($1)\n    local x_mean=$(mean \"${x[@]}\")\n    local -a x_deviations=()\n\
    \    for ((i=0; i<${#x[@]}; i++)); do\n        x_deviations[$i]=$(echo \"${x[$i]}\
    \ - $x_mean\" | bc -l)\n    done\n    local -a x_abs_deviations=()\n    for ((i=0;\
    \ i<${#x_deviations[@]}; i++)); do\n        x_abs_deviations[$i]=$(echo \"if (${x_deviations[$i]}\
    \ < 0) ${x_deviations[$i]} * -1 else ${x_deviations[$i]}\" | bc -l)\n    done\n\
    \    mean \"${x_abs_deviations[@]}\"", "    local -a array\n    array=($1)\n \
    \   local sum=0\n    local count=0\n    local mean=0\n    local abs_deviation=0\n\
    \    local abs_deviation_sum=0\n    local abs_deviation_mean=0\n    for i in \"\
    ${array[@]}\"\n    do\n        sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo\
    \ \"$count + 1\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum / $count\" |\
    \ bc)\n    for i in \"${array[@]}\"\n    do\n        abs_deviation=$(echo \"scale=2;\
    \ $i - $mean\" | bc)\n        abs_deviation=$(echo \"scale=2; $abs_deviation <\
    \ 0 ? -$abs_deviation : $abs_deviation\" | bc)\n        abs_deviation_sum=$(echo\
    \ \"scale=2; $abs_deviation_sum + $abs_deviation\" | bc)\n    done\n    abs_deviation_mean=$(echo\
    \ \"scale=2; $abs_deviation_sum / $count\" | bc)\n    echo $abs_deviation_mean",
  "    local sum=0\n    local count=0\n    local mean=0\n    local abs_diff=0\n  \
    \  local abs_diff_sum=0\n    local abs_diff_mean=0\n    local input_list=\"$1\"\
    \n    for i in $input_list; do\n        sum=$(echo \"$sum + $i\" | bc)\n     \
    \   count=$(echo \"$count + 1\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum\
    \ / $count\" | bc)\n    for i in $input_list; do\n        abs_diff=$(echo \"scale=2;\
    \ $i - $mean\" | bc)\n        abs_diff_sum=$(echo \"scale=2; $abs_diff_sum + $abs_diff\"\
    \ | bc)\n    done\n    abs_diff_mean=$(echo \"scale=2; $abs_diff_sum / $count\"\
    \ | bc)\n    echo $abs_diff_mean", "    local mean=$(mean \"$1\")\n    local abs_diff_sum=0\n\
    \    for x in $1; do\n        abs_diff_sum=$(echo \"$abs_diff_sum + abs($x - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", "    local -a\
    \ data=($1)\n    local -i n=${#data[@]}\n    local -i i\n    local -i sum=0\n\
    \    local -i mean\n    local -i diff\n    local -i abs_diff\n    local -i sum_abs_diff=0\n\
    \    for ((i=0; i<n; i++)); do\n        ((sum+=data[i]))\n    done\n    ((mean=sum/n))\n\
    \    for ((i=0; i<n; i++)); do\n        ((diff=data[i]-mean))\n        ((abs_diff=diff>0?diff:-diff))\n\
    \        ((sum_abs_diff+=abs_diff))\n    done\n    ((sum_abs_diff/n))", "    local\
    \ mean=$(mean $1)\n    local abs_deviations=$(echo $1 | awk -v mean=$mean '{for\
    \ (i=1; i<=NF; i++) {print $i-mean}}')\n    local abs_deviations_sum=$(echo $abs_deviations\
    \ | awk '{for (i=1; i<=NF; i++) {sum+=$i}} END {print sum}')\n    local abs_deviations_count=$(echo\
    \ $abs_deviations | awk '{print NF}')\n    echo $abs_deviations_sum $abs_deviations_count\
    \ | awk '{print $1/$2}'", "    local -a numbers=($1)\n    local mean=$(mean ${numbers[@]})\n\
    \    local sum=0\n    for i in ${numbers[@]}; do\n        sum=$(echo \"$sum +\
    \ abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc\
    \ -l", "    local mean=$(mean \"$1\")\n    local abs_diff_sum=0\n    for x in\
    \ $1; do\n        local abs_diff=$(echo \"$x - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}')\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc\
    \ -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l | awk '{printf \"%f\"\
    , $0}'", "    local -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local\
    \ n=${#arr[@]}\n    local i=0\n    local abs_diff=0\n    local abs_diff_sum=0\n\
    \    local abs_diff_mean=0\n\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum / $n\" | bc)\n\
    \n    for i in \"${arr[@]}\"; do\n        abs_diff=$(echo \"scale=2; $i - $mean\"\
    \ | bc)\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc)\n   \
    \ done\n    abs_diff_mean=$(echo \"scale=2; $abs_diff_sum / $n\" | bc)\n\n   \
    \ echo \"$abs_diff_mean\"", "    local mean=$(mean $1)\n    local abs_diff_sum=0\n\
    \    for i in $1; do\n        abs_diff_sum=$(echo $abs_diff_sum + $(echo $i -\
    \ $mean | bc -l | sed 's/-//'))\n    done\n    echo $(echo $abs_diff_sum / $(echo\
    \ $1 | wc -w) | bc -l)", "    local -a x\n    IFS=' ' read -r -a x <<< \"$1\"\n\
    \    local n=${#x[@]}\n    local sum=0\n    local mean=0\n    local abs_dev=0\n\
    \    local abs_dev_sum=0\n    local mad=0\n    for i in \"${x[@]}\"; do\n    \
    \    sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum\
    \ / $n\" | bc)\n    for i in \"${x[@]}\"; do\n        abs_dev=$(echo \"scale=2;\
    \ $i - $mean\" | bc)\n        abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" |\
    \ bc)\n    done\n    mad=$(echo \"scale=2; $abs_dev_sum / $n\" | bc)\n    echo\
    \ \"$mad\"", "    local -a array\n    array=($1)\n    local sum=0\n    local count=0\n\
    \    local mean=0\n    local mad=0\n    local i=0\n    for i in \"${array[@]}\"\
    \n    do\n        sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo \"$count\
    \ + 1\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum / $count\" | bc)\n  \
    \  sum=0\n    for i in \"${array[@]}\"\n    do\n        sum=$(echo \"$sum + abs($i\
    \ - $mean)\" | bc)\n    done\n    mad=$(echo \"scale=2; $sum / $count\" | bc)\n\
    \    echo $mad", "    local x_mean=$(mean $1)\n    local x_abs_deviations=$(echo\
    \ $1 | sed \"s/\\([0-9.]*\\)/| \\1 - $x_mean |/g\")\n    local x_abs_deviations_sum=$(echo\
    \ $x_abs_deviations | sed \"s/|/ + /g\")\n    echo \"scale=2; ($x_abs_deviations_sum)\
    \ / $(echo $1 | wc -w)\" | bc", "    local mean=$(mean $1)\n    local abs_deviations=$(echo\
    \ $1 | awk -v mean=$mean '{for (i=1; i<=NF; i++) {print $i - mean}}')\n    local\
    \ abs_deviations_sum=$(sum $abs_deviations)\n    local abs_deviations_count=$(echo\
    \ $abs_deviations | wc -w)\n    echo $abs_deviations_sum / $abs_deviations_count\
    \ | bc -l", "    local sum=0\n    local mean=0\n    local count=0\n    for i in\
    \ $1; do\n        sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo \"$count\
    \ + 1\" | bc)\n    done\n    mean=$(echo \"$sum / $count\" | bc -l)\n    sum=0\n\
    \    for i in $1; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc)\n  \
    \  done\n    echo $(echo \"$sum / $count\" | bc -l)", "    local mean=$(mean $1)\n\
    \    local abs_deviations=$(echo $1 | sed -e \"s/\\([0-9]*\\)/|\\1-$mean|/g\"\
    )\n    local sum_abs_deviations=$(echo $abs_deviations | sed -e \"s/|/ + /g\"\
    )\n    echo \"scale=2; ($sum_abs_deviations) / $(echo $1 | wc -w)\" | bc", " \
    \   local -a x\n    local sum=0\n    local mean=0\n    local abs_dev=0\n    local\
    \ abs_dev_sum=0\n    local mad=0\n    local i=0\n\n    x=($1)\n    for ((i=0;\
    \ i<${#x[@]}; i++)); do\n        sum=$(echo \"$sum + ${x[$i]}\" | bc)\n    done\n\
    \    mean=$(echo \"scale=2; $sum / ${#x[@]}\" | bc)\n    for ((i=0; i<${#x[@]};\
    \ i++)); do\n        abs_dev=$(echo \"scale=2; ${x[$i]} - $mean\" | bc)\n    \
    \    abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" | bc)\n    done\n    mad=$(echo\
    \ \"scale=2; $abs_dev_sum / ${#x[@]}\" | bc)\n    echo $mad", "  # Calculate mean\n\
    \  local mean=$(echo \"$1\" | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i; print\
    \ sum/NF}')\n  # Calculate absolute difference between each element and mean\n\
    \  local abs_diff=$(echo \"$1\" | awk -v mean=$mean '{sum=0; for (i=1; i<=NF;\
    \ i++) sum+=fabs($i-mean); print sum/NF}')\n  echo $abs_diff", "    local -a array\n\
    \    local -i i\n    local -i n\n    local -i sum\n    local -i mean\n    local\
    \ -i diff\n    local -i abs_diff\n    local -i abs_diff_sum\n    local -i mad\n\
    \    array=($1)\n    n=${#array[@]}\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + array[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n\
    \        diff=$((array[i] - mean))\n        abs_diff=$((diff < 0 ? -diff : diff))\n\
    \        abs_diff_sum=$((abs_diff_sum + abs_diff))\n    done\n    mad=$((abs_diff_sum\
    \ / n))\n    echo $mad", "  local -a arr=(\"$@\")\n  local sum=0\n  local mean=0\n\
    \  local abs_dev=0\n  local mad=0\n  local i=0\n  local len=${#arr[@]}\n\n  for\
    \ i in \"${arr[@]}\"; do\n    sum=$(echo \"$sum + $i\" | bc)\n  done\n  mean=$(echo\
    \ \"scale=2; $sum / $len\" | bc)\n\n  for i in \"${arr[@]}\"; do\n    abs_dev=$(echo\
    \ \"scale=2; $i - $mean\" | bc)\n    abs_dev=$(echo \"scale=2; $abs_dev < 0 ?\
    \ -$abs_dev : $abs_dev\" | bc)\n    mad=$(echo \"scale=2; $mad + $abs_dev\" |\
    \ bc)\n  done\n  mad=$(echo \"scale=2; $mad / $len\" | bc)\n\n  echo $mad", " \
    \   local mean=$(mean $1)\n    local abs_deviations=$(echo $1 | awk -v mean=$mean\
    \ '{for (i=1; i<=NF; i++) {print $i-mean}}')\n    echo $abs_deviations | awk '{for\
    \ (i=1; i<=NF; i++) {sum += $i}} END {print sum/NF}'", "    local x_mean=$(mean\
    \ $1)\n    local x_abs_deviations=$(echo $1 | awk -v mean=$x_mean '{ for (i=1;\
    \ i<=NF; i++) { print $i - mean } }')\n    local x_abs_deviations_sum=$(sum $x_abs_deviations)\n\
    \    local x_abs_deviations_count=$(echo $x_abs_deviations | wc -w)\n    echo\
    \ $(echo $x_abs_deviations_sum / $x_abs_deviations_count | bc -l)", "    local\
    \ -a numbers=( $1 )\n    local -i n=${#numbers[@]}\n    local -i i\n    local\
    \ -i sum=0\n    local -i mean\n    local -i abs_diff\n    local -i abs_diff_sum=0\n\
    \    for (( i=0; i<n; i++ )); do\n        sum=$(( sum + numbers[i] ))\n    done\n\
    \    mean=$(( sum / n ))\n    for (( i=0; i<n; i++ )); do\n        abs_diff=$((\
    \ numbers[i] - mean ))\n        abs_diff_sum=$(( abs_diff_sum + abs_diff ))\n\
    \    done\n    echo $(( abs_diff_sum / n ))", "    local mean=$(mean \"$1\")\n\
    \    local abs_diff_sum=0\n    for x in $1; do\n        abs_diff_sum=$(echo \"\
    $abs_diff_sum + abs($x - $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum\
    \ / $#\" | bc -l", "    local -a arr=(\"$@\")\n    local mean=$(mean \"${arr[@]}\"\
    )\n    local abs_diff_sum=0\n    for i in \"${arr[@]}\"; do\n        abs_diff_sum=$(bc\
    \ <<< \"$abs_diff_sum + ${i} - ${mean}\")\n    done\n    bc <<< \"scale=2; ${abs_diff_sum}\
    \ / ${#arr[@]}\"", "    local -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n\
    \    local abs_dev=0\n    local mad=0\n    local i=0\n    local len=${#arr[@]}\n\
    \n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n   \
    \ done\n    mean=$(echo \"scale=2; $sum / $len\" | bc)\n\n    for i in \"${arr[@]}\"\
    ; do\n        abs_dev=$(echo \"scale=2; $abs_dev + abs($i - $mean)\" | bc)\n \
    \   done\n    mad=$(echo \"scale=2; $abs_dev / $len\" | bc)\n\n    echo \"$mad\"",
  "    local x_mean=$(mean $1)\n    local x_deviation=$(echo $1 | awk '{for(i=1;i<=NF;i++)\
    \ print $i - '$x_mean'}')\n    local x_abs_deviation=$(echo $x_deviation | awk\
    \ '{for(i=1;i<=NF;i++) print $i < 0 ? -$i : $i}')\n    mean $x_abs_deviation",
  "    local -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local count=0\n\
    \    local mad=0\n    local i=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n \
    \   mean=$(echo \"$sum / $count\" | bc -l)\n    sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc)\n    done\n    mad=$(echo\
    \ \"$sum / $count\" | bc -l)\n    echo \"$mad\"", "    local input=$1\n    local\
    \ mean=$(mean $input)\n    local abs_diff=$(echo $input | awk '{for (i=1; i<=NF;\
    \ i++) print $i - '$mean'}')\n    local abs_diff_sum=$(echo $abs_diff | awk '{sum=0;\
    \ for (i=1; i<=NF; i++) sum+=$i; print sum}')\n    echo $abs_diff_sum / $(echo\
    \ $input | wc -w) | bc -l", "    local list=$1\n    local mean=$(mean $list)\n\
    \    local abs_deviations=$(echo $list | awk -v mean=$mean '{for (i=1; i<=NF;\
    \ i++) {print $i - mean}}')\n    local abs_deviations_sum=$(echo $abs_deviations\
    \ | awk '{sum=0; for (i=1; i<=NF; i++) {sum += $i}; print sum}')\n    echo $(echo\
    \ $abs_deviations_sum | awk -v n=$(echo $list | wc -w) '{print $1 / n}')", " \
    \ local -a data\n  local -i i\n  local -r mean=$(mean \"$1\")\n  local -r n=$(echo\
    \ \"$1\" | wc -w)\n  local -i sum=0\n  data=($1)\n  for ((i=0; i<n; i++)); do\n\
    \    sum=$((sum + abs(${data[i]} - mean)))\n  done\n  echo $((sum / n))", "  \
    \  local -a input=($1)\n    local mean=$(mean ${input[@]})\n    local -a abs_diff=($(absolute_difference\
    \ ${input[@]} $mean))\n    local sum=$(sum ${abs_diff[@]})\n    echo $((sum /\
    \ ${#input[@]}))", "  local -a values=($1)\n  local mean=$(mean \"${values[@]}\"\
    )\n  local -a abs_deviations=()\n  for value in \"${values[@]}\"; do\n    abs_deviations+=($(echo\
    \ \"${value} - ${mean}\" | bc -l | awk '{printf \"%f\", $0}'))\n  done\n  echo\
    \ \"$(mean \"${abs_deviations[@]}\")\"", "    local -a nums\n    local -i i\n\
    \    local -r mean=$(mean \"$1\")\n    local -r num_nums=$(echo \"$1\" | wc -w)\n\
    \    local -i sum=0\n    nums=($1)\n    for ((i=0; i<num_nums; i++)); do\n   \
    \     sum=$((sum + abs(nums[i] - mean)))\n    done\n    echo $((sum / num_nums))",
  "    local sum=0\n    local mean=$(mean \"$1\")\n    for i in $1; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l",
  "    local mean=$(mean \"$1\")\n    local abs_deviations=$(echo \"$1\" | awk '{print\
    \ $1-mean}' mean=$mean)\n    mean \"$abs_deviations\"", "  local -a arr\n  local\
    \ -i i\n  local -i len\n  local -i sum\n  local -i mean\n  local -i diff\n  local\
    \ -i abs_diff\n  local -i mad\n\n  # Convert string to array\n  arr=($1)\n  len=${#arr[@]}\n\
    \  sum=0\n  for ((i=0; i<len; i++)); do\n    sum=$((sum + arr[i]))\n  done\n \
    \ mean=$((sum / len))\n  sum=0\n  for ((i=0; i<len; i++)); do\n    diff=$((arr[i]\
    \ - mean))\n    abs_diff=$((diff < 0 ? -diff : diff))\n    sum=$((sum + abs_diff))\n\
    \  done\n  mad=$((sum / len))\n  echo $mad", "    local -a x\n    local -i i\n\
    \    local -r x_mean=$(mean \"$1\")\n    local -i n\n    local -i sum=0\n    x=($1)\n\
    \    n=${#x[@]}\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + abs(${x[i]}\
    \ - x_mean)))\n    done\n    echo $((sum / n))", "    local x_mean=$(mean $1)\n\
    \    local abs_diff_sum=0\n    for x in $1; do\n        abs_diff_sum=$(echo \"\
    $abs_diff_sum + abs($x - $x_mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum\
    \ / $#\" | bc -l", "    local mean=$(echo \"$1\" | awk '{sum=0; for(i=1; i<=NF;\
    \ i++) sum+=$i; print sum/NF}')\n    local abs_deviations=$(echo \"$1\" | awk\
    \ -v mean=$mean '{sum=0; for(i=1; i<=NF; i++) sum+=abs($i-mean); print sum/NF}')\n\
    \    echo $abs_deviations", "    local list=\"$1\"\n    local mean=$(echo \"$list\"\
    \ | awk '{sum+=$1} END {print sum/NR}')\n    local abs_deviations=$(echo \"$list\"\
    \ | awk -v mean=$mean '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n    local\
    \ sum_abs_deviations=$(echo \"$abs_deviations\" | awk '{sum+=$1} END {print sum}')\n\
    \    local n=$(echo \"$list\" | wc -w)\n    echo \"$sum_abs_deviations / $n\"\
    \ | bc -l", "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i\
    \ i\n    local -i sum=0\n    local -i mean\n    local -i diff\n    local -i abs_diff\n\
    \    local -i abs_diff_sum=0\n    local -i abs_diff_mean\n\n    for ((i=0; i<n;\
    \ i++)); do\n        sum=$((sum + arr[i]))\n    done\n    mean=$((sum / n))\n\n\
    \    for ((i=0; i<n; i++)); do\n        diff=$((arr[i] - mean))\n        abs_diff=$((diff\
    \ < 0 ? -diff : diff))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n  \
    \  done\n    abs_diff_mean=$((abs_diff_sum / n))\n\n    echo $abs_diff_mean",
  "  local -a arr=(\"$@\")\n  local sum=0\n  local mean=0\n  local abs_diff=0\n  local\
    \ abs_diff_sum=0\n  local mad=0\n  local i=0\n\n  for i in \"${arr[@]}\"; do\n\
    \    sum=$(bc <<< \"$sum + $i\")\n  done\n  mean=$(bc <<< \"scale=2; $sum / ${#arr[@]}\"\
    )\n\n  for i in \"${arr[@]}\"; do\n    abs_diff=$(bc <<< \"scale=2; $i - $mean\"\
    )\n    abs_diff_sum=$(bc <<< \"scale=2; $abs_diff_sum + $abs_diff\")\n  done\n\
    \  mad=$(bc <<< \"scale=2; $abs_diff_sum / ${#arr[@]}\")\n\n  echo \"$mad\"",
  "    local -a array\n    array=($1)\n    local sum=0\n    local count=0\n    local\
    \ mean=0\n    local abs_deviation=0\n    local abs_deviation_sum=0\n    local\
    \ abs_deviation_mean=0\n    for i in \"${array[@]}\"\n    do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n \
    \   mean=$(echo \"scale=2; $sum / $count\" | bc)\n    for i in \"${array[@]}\"\
    \n    do\n        abs_deviation=$(echo \"scale=2; $i - $mean\" | bc)\n       \
    \ abs_deviation=$(echo \"scale=2; $abs_deviation < 0 ? -$abs_deviation : $abs_deviation\"\
    \ | bc)\n        abs_deviation_sum=$(echo \"scale=2; $abs_deviation_sum + $abs_deviation\"\
    \ | bc)\n    done\n    abs_deviation_mean=$(echo \"scale=2; $abs_deviation_sum\
    \ / $count\" | bc)\n    echo $abs_deviation_mean", "    local -a x=($1)\n    local\
    \ -a x_mean=$(mean \"${x[@]}\")\n    local -a x_abs_diff=()\n    for i in \"${x[@]}\"\
    ; do\n        x_abs_diff+=($(echo \"$i - $x_mean\" | bc -l | awk '{printf \"%f\"\
    , $0}'))\n    done\n    echo \"$(mean \"${x_abs_diff[@]}\")\"", "  local -a x\n\
    \  local -a x_mean\n  local -a x_deviation\n  local -a x_abs_deviation\n  local\
    \ -a x_abs_deviation_sum\n  local -a x_abs_deviation_mean\n  local -a x_abs_deviation_mean_rounded\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs\n  local -a x_abs_deviation_mean_rounded_sigfigs_formatted\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final\n  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a x_abs_deviation_mean_rounded_sigfigs_formatted_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a x_abs_", "    local -a input\n    local -i i\n    local -i n\n   \
    \ local -i sum\n    local -i mean\n    local -i mad\n    local -i diff\n    local\
    \ -i abs\n\n    input=($1)\n    n=${#input[@]}\n    sum=0\n    for ((i=0; i<n;\
    \ i++)); do\n        sum=$((sum + input[i]))\n    done\n    mean=$((sum / n))\n\
    \    mad=0\n    for ((i=0; i<n; i++)); do\n        diff=$((input[i] - mean))\n\
    \        abs=$((diff < 0 ? -diff : diff))\n        mad=$((mad + abs))\n    done\n\
    \    echo $((mad / n))", "  local -a arr\n  arr=($1)\n  local mean=$(mean \"${arr[@]}\"\
    )\n  local -a diffs\n  local i\n  for i in \"${arr[@]}\"; do\n    diffs+=($(echo\
    \ \"$i - $mean\" | bc -l))\n  done\n  local -a abs_diffs\n  for i in \"${diffs[@]}\"\
    ; do\n    abs_diffs+=($(echo \"if ($i < 0) $i * -1 else $i\" | bc -l))\n  done\n\
    \  echo \"$(mean \"${abs_diffs[@]}\")\"", "    local sum=0\n    local count=0\n\
    \    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local abs_dev_mean=0\n\
    \    local i=0\n    local x=0\n    local y=0\n    local z=0\n    local num_list=($1)\n\
    \    for i in \"${num_list[@]}\"; do\n        let sum+=i\n        let count+=1\n\
    \    done\n    let mean=sum/count\n    for i in \"${num_list[@]}\"; do\n     \
    \   let x=i-mean\n        let y=x<0?-x:x\n        let abs_dev_sum+=y\n    done\n\
    \    let abs_dev_mean=abs_dev_sum/count\n    echo $abs_dev_mean", "  local -a\
    \ x\n  local -i i\n  local -r x_mean=$(mean \"$1\")\n  local -i n\n  local -i\
    \ sum\n  x=($1)\n  n=${#x[@]}\n  for ((i=0; i<n; i++)); do\n    sum=$((sum + abs(${x[i]}\
    \ - x_mean)))\n  done\n  echo $((sum / n))", "    local -a arr=(\"$@\")\n    local\
    \ sum=0\n    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local\
    \ abs_dev_mean=0\n    local len=${#arr[@]}\n    for i in \"${arr[@]}\"; do\n \
    \       sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2; $sum\
    \ / $len\" | bc)\n    for i in \"${arr[@]}\"; do\n        abs_dev=$(echo \"scale=2;\
    \ $i - $mean\" | bc)\n        abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" |\
    \ bc)\n    done\n    abs_dev_mean=$(echo \"scale=2; $abs_dev_sum / $len\" | bc)\n\
    \    echo \"$abs_dev_mean\"", "    local -a nums=($1)\n    local sum=0\n    local\
    \ count=0\n    for num in ${nums[@]}; do\n        sum=$(echo \"$sum + $num\" |\
    \ bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n    local mean=$(echo\
    \ \"$sum / $count\" | bc -l)\n    local abs_dev_sum=0\n    for num in ${nums[@]};\
    \ do\n        local abs_dev=$(echo \"scale=2; $num - $mean\" | bc -l)\n      \
    \  abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" | bc)\n    done\n    local mean_abs_dev=$(echo\
    \ \"$abs_dev_sum / $count\" | bc -l)\n    echo $mean_abs_dev", "    local mean=$(echo\
    \ $1 | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i; print sum/NF}')\n    local\
    \ abs_deviations=$(echo $1 | awk -v mean=$mean '{sum=0; for (i=1; i<=NF; i++)\
    \ sum+=fabs($i-mean); print sum/NF}')\n    echo $abs_deviations", "    local sum=0\n\
    \    local count=0\n    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n\
    \    local abs_dev_mean=0\n    local x=0\n    local x_mean=0\n    local abs_dev=0\n\
    \    local abs_dev_sum=0\n    local abs_dev_mean=0\n    local x=0\n    local x_mean=0\n\
    \    for x in $1; do\n        sum=$(echo \"$sum + $x\" | bc)\n        count=$(echo\
    \ \"$count + 1\" | bc)\n    done\n    mean=$(echo \"$sum / $count\" | bc -l)\n\
    \    for x in $1; do\n        x_mean=$(echo \"$x - $mean\" | bc -l)\n        abs_dev=$(echo\
    \ \"if ($x_mean < 0) $x_mean * -1 else $x_mean\" | bc -l)\n        abs_dev_sum=$(echo\
    \ \"$abs_dev_sum + $abs_dev\" | bc -l)\n    done\n    abs_dev_mean=$(echo \"$abs_dev_sum\
    \ / $count\" | bc -l)\n    echo $abs_dev_mean", "    local sum=0\n    local count=0\n\
    \    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local abs_dev_mean=0\n\
    \    local i=0\n    local x=0\n    local x_mean=0\n    local abs_dev_sum=0\n \
    \   local abs_dev_mean=0\n    for i in $1; do\n        sum=$(echo \"$sum + $i\"\
    \ | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n    mean=$(echo\
    \ \"scale=2; $sum / $count\" | bc)\n    for i in $1; do\n        x=$i\n      \
    \  x_mean=$(echo \"$x - $mean\" | bc)\n        abs_dev=$(echo \"scale=2; $x_mean\
    \ < 0 ? -$x_mean : $x_mean\" | bc)\n        abs_dev_sum=$(echo \"$abs_dev_sum\
    \ + $abs_dev\" | bc)\n    done\n    abs_dev_mean=$(echo \"scale=2; $abs_dev_sum\
    \ / $count\" | bc)\n    echo $abs_dev_mean", "    local -a x\n    read -a x <<<\
    \ \"$1\"\n    local x_mean=$(mean \"${x[@]}\")\n    local -a x_deviations\n  \
    \  for ((i=0; i<${#x[@]}; i++)); do\n        x_deviations[$i]=$(echo \"${x[$i]}\
    \ - $x_mean\" | bc -l)\n    done\n    local -a x_deviations_abs\n    for ((i=0;\
    \ i<${#x_deviations[@]}; i++)); do\n        x_deviations_abs[$i]=$(echo \"if (${x_deviations[$i]}\
    \ < 0) ${x_deviations[$i]} * -1 else ${x_deviations[$i]}\" | bc -l)\n    done\n\
    \    mean \"${x_deviations_abs[@]}\"", "    local sum=0\n    local count=0\n \
    \   local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    for x in $1;\
    \ do\n        sum=$(echo \"$sum + $x\" | bc)\n        count=$(echo \"$count +\
    \ 1\" | bc)\n    done\n    mean=$(echo \"$sum / $count\" | bc -l)\n    for x in\
    \ $1; do\n        abs_dev=$(echo \"scale=2; $x - $mean\" | bc -l)\n        abs_dev_sum=$(echo\
    \ \"$abs_dev_sum + $abs_dev\" | bc)\n    done\n    echo \"$abs_dev_sum / $count\"\
    \ | bc -l", "    local -a x\n    local -i i\n    local -r x_mean=$(mean \"$@\"\
    )\n    local -i n=$#\n    local -i sum=0\n    for i in \"$@\"; do\n        x[$n]=$i\n\
    \        (( sum += abs(x[$n] - x_mean) ))\n        (( n-- ))\n    done\n    echo\
    \ \"$(bc -l <<< \"scale=2; $sum / $#\")\"", "    local -a arr=(\"$@\")\n    local\
    \ sum=0\n    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local\
    \ abs_dev_mean=0\n    local i=0\n    local len=${#arr[@]}\n\n    # Calculate mean\n\
    \    for ((i=0; i<len; i++)); do\n        sum=$(echo \"$sum + ${arr[$i]}\" | bc)\n\
    \    done\n    mean=$(echo \"scale=2; $sum / $len\" | bc)\n\n    # Calculate absolute\
    \ deviation\n    for ((i=0; i<len; i++)); do\n        abs_dev=$(echo \"scale=2;\
    \ ${arr[$i]} - $mean\" | bc)\n        abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\"\
    \ | bc)\n    done\n    abs_dev_mean=$(echo \"scale=2; $abs_dev_sum / $len\" |\
    \ bc)\n\n    echo \"$abs_dev_mean\"", "  local -a x\n  local -i n\n  local -i\
    \ i\n  local -i sum\n  local -i mean\n  local -i diff\n  local -i abs\n  local\
    \ -i mad\n  x=($1)\n  n=${#x[@]}\n  for ((i=0; i<n; i++)); do\n    ((sum+=x[i]))\n\
    \  done\n  ((mean=sum/n))\n  for ((i=0; i<n; i++)); do\n    ((diff=x[i]-mean))\n\
    \    ((abs=diff<0?-diff:diff))\n    ((mad+=abs))\n  done\n  ((mad/=n))\n  echo\
    \ $mad", "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i\n\
    \    local -i sum=0\n    local -i mean\n    local -i diff\n    local -i abs_diff\n\
    \    local -i abs_diff_sum=0\n    local -i mad\n\n    for ((i=0; i<n; i++)); do\n\
    \        sum=$((sum + array[i]))\n    done\n    mean=$((sum / n))\n\n    for ((i=0;\
    \ i<n; i++)); do\n        diff=$((array[i] - mean))\n        abs_diff=$((diff\
    \ < 0 ? -diff : diff))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n  \
    \  done\n    mad=$((abs_diff_sum / n))\n\n    echo $mad", "    local -a x\n  \
    \  x=($1)\n    local n=${#x[@]}\n    local x_mean=$(echo \"scale=2; ${x[@]} /\
    \ $n\" | bc -l)\n    local x_deviation=()\n    for ((i=0; i<n; i++)); do\n   \
    \     x_deviation[$i]=$(echo \"scale=2; ${x[$i]} - $x_mean\" | bc -l)\n    done\n\
    \    local x_deviation_abs=()\n    for ((i=0; i<n; i++)); do\n        x_deviation_abs[$i]=$(echo\
    \ \"scale=2; ${x_deviation[$i]} < 0 ? 0 - ${x_deviation[$i]} : ${x_deviation[$i]}\"\
    \ | bc -l)\n    done\n    local x_deviation_abs_sum=$(echo \"scale=2; ${x_deviation_abs[@]}\
    \ + 0\" | bc -l)\n    local x_deviation_abs_mean=$(echo \"scale=2; $x_deviation_abs_sum\
    \ / $n\" | bc -l)\n    echo $x_deviation_abs_mean", "    local -a x\n    local\
    \ -i n\n    local -i i\n    local -i sum\n    local -i mean\n    local -i diff\n\
    \    local -i abs_diff\n    local -i mad\n    x=($1)\n    n=${#x[@]}\n    for\
    \ ((i=0; i<n; i++)); do\n        sum=$((sum + x[i]))\n    done\n    mean=$((sum\
    \ / n))\n    for ((i=0; i<n; i++)); do\n        diff=$((x[i] - mean))\n      \
    \  abs_diff=$((diff < 0 ? -diff : diff))\n        mad=$((mad + abs_diff))\n  \
    \  done\n    mad=$((mad / n))\n    echo $mad", "    local -a list\n    local sum=0\n\
    \    local mean=0\n    local abs_deviation=0\n    local abs_deviation_sum=0\n\
    \    local abs_deviation_mean=0\n    local i=0\n\n    list=($1)\n    for i in\
    \ ${list[@]}; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo\
    \ \"scale=2; $sum / ${#list[@]}\" | bc)\n\n    for i in ${list[@]}; do\n     \
    \   abs_deviation=$(echo \"scale=2; $i - $mean\" | bc)\n        abs_deviation=$(echo\
    \ \"scale=2; $abs_deviation < 0 ? -$abs_deviation : $abs_deviation\" | bc)\n \
    \       abs_deviation_sum=$(echo \"scale=2; $abs_deviation_sum + $abs_deviation\"\
    \ | bc)\n    done\n    abs_deviation_mean=$(echo \"scale=2; $abs_deviation_sum\
    \ / ${#list[@]}\" | bc)\n\n    echo $abs_deviation_mean", "    local -a arr=(\"\
    $@\")\n    local sum=0\n    local n=${#arr[@]}\n    local mean=$(mean \"${arr[@]}\"\
    )\n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $n\" | bc -l", "  local -a numbers=($1)\n\
    \  local -i n=${#numbers[@]}\n  local -i i\n  local -i sum=0\n  local -i mean\n\
    \  local -i abs_deviation\n  local -i sum_abs_deviation=0\n  for ((i=0; i<n; i++));\
    \ do\n    sum=$((sum + numbers[i]))\n  done\n  mean=$((sum / n))\n  for ((i=0;\
    \ i<n; i++)); do\n    abs_deviation=$((numbers[i] - mean))\n    if ((abs_deviation\
    \ < 0)); then\n      abs_deviation=$((-abs_deviation))\n    fi\n    sum_abs_deviation=$((sum_abs_deviation\
    \ + abs_deviation))\n  done\n  echo $((sum_abs_deviation / n))", "    local input_list=$1\n\
    \    local mean=$(echo \"$input_list\" | awk '{sum+=$1} END {print sum/NR}')\n\
    \    local abs_deviations=$(echo \"$input_list\" | awk -v mean=$mean '{print $1-mean}'\
    \ | awk '{print $1<0?-$1:$1}')\n    local mean_abs_deviation=$(echo \"$abs_deviations\"\
    \ | awk '{sum+=$1} END {print sum/NR}')\n    echo $mean_abs_deviation", "  local\
    \ list=\"$1\"\n  local mean=$(mean \"$list\")\n  local abs_diff_list=$(echo \"\
    $list\" | awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print $1 < 0 ? -$1\
    \ : $1}')\n  local sum=$(sum \"$abs_diff_list\")\n  local count=$(echo \"$list\"\
    \ | wc -w)\n  echo \"scale=2; $sum / $count\" | bc", "    local -a list\n    list=($1)\n\
    \    local sum=0\n    local count=0\n    local mean=0\n    local abs_diff=0\n\
    \    local abs_diff_sum=0\n    local mad=0\n    for i in \"${list[@]}\"; do\n\
    \        sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" |\
    \ bc)\n    done\n    mean=$(echo \"scale=2; $sum / $count\" | bc)\n    for i in\
    \ \"${list[@]}\"; do\n        abs_diff=$(echo \"scale=2; $i - $mean\" | bc)\n\
    \        abs_diff_sum=$(echo \"scale=2; $abs_diff_sum + $abs_diff\" | bc)\n  \
    \  done\n    mad=$(echo \"scale=2; $abs_diff_sum / $count\" | bc)\n    echo $mad",
  "    local mean=$(mean $1)\n    local abs_diff_sum=0\n    for i in $1; do\n    \
    \    local abs_diff=$(echo \"$i - $mean\" | bc -l | awk '{if($1<0) print -$1;\
    \ else print $1}')\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\"\
    \ | bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", "    local list=\"\
    $1\"\n    local mean=$(mean \"$list\")\n    local sum=0\n    for x in $list; do\n\
    \        sum=$(echo \"$sum + abs($x - $mean)\" | bc -l)\n    done\n    echo \"\
    $sum / $#\" | bc -l", "    local -a arr\n    arr=($1)\n    local sum=0\n    local\
    \ mean=0\n    local count=0\n    local abs_dev=0\n    local mad=0\n    for i in\
    \ \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n        count=$(echo\
    \ \"$count + 1\" | bc)\n    done\n    mean=$(echo \"$sum / $count\" | bc -l)\n\
    \    for i in \"${arr[@]}\"; do\n        abs_dev=$(echo \"scale=2; $i - $mean\"\
    \ | bc -l)\n        abs_dev=$(echo \"$abs_dev < 0 ? -$abs_dev : $abs_dev\" | bc)\n\
    \        mad=$(echo \"$mad + $abs_dev\" | bc)\n    done\n    echo \"$mad / $count\"\
    \ | bc -l", "    local x_mean=$(mean \"$@\")\n    local x_deviations=$(echo \"\
    $@\" | awk -v mean=$x_mean '{print $1 - mean}')\n    local x_absolute_deviations=$(echo\
    \ \"$x_deviations\" | awk '{print $1 < 0 ? -$1 : $1}')\n    local x_absolute_deviations_sum=$(echo\
    \ \"$x_absolute_deviations\" | awk '{sum += $1} END {print sum}')\n    local x_absolute_deviations_count=$(echo\
    \ \"$x_absolute_deviations\" | wc -w)\n    echo \"$x_absolute_deviations_sum /\
    \ $x_absolute_deviations_count\" | bc -l", "  local -a input=($1)\n  local sum=0\n\
    \  local count=0\n  local mean=0\n  local abs_diff=0\n  local abs_diff_sum=0\n\
    \  local abs_diff_mean=0\n\n  for i in \"${input[@]}\"; do\n    sum=$(echo \"\
    $sum + $i\" | bc)\n    count=$(echo \"$count + 1\" | bc)\n  done\n  mean=$(echo\
    \ \"scale=2; $sum / $count\" | bc)\n\n  for i in \"${input[@]}\"; do\n    abs_diff=$(echo\
    \ \"scale=2; $i - $mean\" | bc)\n    abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\"\
    \ | bc)\n  done\n  abs_diff_mean=$(echo \"scale=2; $abs_diff_sum / $count\" |\
    \ bc)\n\n  echo $abs_diff_mean", "    local -a arr=(\"$@\")\n    local sum=0\n\
    \    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local mad=0\n\
    \    local i=0\n\n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum +\
    \ $i\" | bc)\n    done\n    mean=$(echo \"$sum / ${#arr[@]}\" | bc -l)\n\n   \
    \ for i in \"${arr[@]}\"; do\n        abs_dev=$(echo \"scale=2; $i - $mean\" |\
    \ bc -l)\n        abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" | bc)\n    done\n\
    \    mad=$(echo \"$abs_dev_sum / ${#arr[@]}\" | bc -l)\n\n    echo \"$mad\"",
  "    local sum=0\n    local count=0\n    local mean=0\n    local abs_dev=0\n   \
    \ local abs_dev_sum=0\n    local mad=0\n    for i in $1; do\n        sum=$(echo\
    \ \"$sum + $i\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n \
    \   mean=$(echo \"$sum / $count\" | bc -l)\n    for i in $1; do\n        abs_dev=$(echo\
    \ \"scale=2; $i - $mean\" | bc -l)\n        abs_dev_sum=$(echo \"$abs_dev_sum\
    \ + $abs_dev\" | bc)\n    done\n    mad=$(echo \"$abs_dev_sum / $count\" | bc\
    \ -l)\n    echo $mad", "    local mean=$(mean \"$1\")\n    local sum=0\n    for\
    \ i in $1; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / $#\" | bc -l", "    local -a arr=(\"$@\")\n    local sum=0\n\
    \    local mean=0\n    local i=0\n    local n=${#arr[@]}\n    local abs_dev=0\n\
    \    local abs_dev_sum=0\n    local abs_dev_mean=0\n\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n    mean=$(echo \"scale=2;\
    \ $sum / $n\" | bc)\n\n    for i in \"${arr[@]}\"; do\n        abs_dev=$(echo\
    \ \"scale=2; $i - $mean\" | bc)\n        abs_dev=$(echo \"scale=2; $abs_dev <\
    \ 0 ? -$abs_dev : $abs_dev\" | bc)\n        abs_dev_sum=$(echo \"scale=2; $abs_dev_sum\
    \ + $abs_dev\" | bc)\n    done\n    abs_dev_mean=$(echo \"scale=2; $abs_dev_sum\
    \ / $n\" | bc)\n\n    echo $abs_dev_mean", "  local x_mean=$(mean \"$1\")\n  local\
    \ x_minus_x_mean=$(echo \"$1\" | awk -v x_mean=$x_mean '{print $1 - x_mean}')\n\
    \  local abs_x_minus_x_mean=$(echo \"$x_minus_x_mean\" | awk '{print $1 < 0 ?\
    \ -$1 : $1}')\n  local sum_abs_x_minus_x_mean=$(echo \"$abs_x_minus_x_mean\" |\
    \ awk '{sum += $1} END {print sum}')\n  local n=$(echo \"$1\" | wc -w)\n  echo\
    \ \"$sum_abs_x_minus_x_mean / $n\" | bc -l", "  local -a numbers=($1)\n  local\
    \ -i n=${#numbers[@]}\n  local -i i\n  local -i sum=0\n  local -i mean\n  local\
    \ -i abs_deviation\n  local -i abs_deviation_sum=0\n  for ((i=0; i<n; i++)); do\n\
    \    sum=$((sum + numbers[i]))\n  done\n  mean=$((sum / n))\n  for ((i=0; i<n;\
    \ i++)); do\n    abs_deviation=$((numbers[i] - mean))\n    abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n  done\n  echo $((abs_deviation_sum / n))", "    local -a\
    \ data\n    local -i i\n    local -r mean=$(mean \"$1\")\n    local -r n=$(echo\
    \ \"$1\" | wc -w)\n    local -i sum=0\n    data=($1)\n    for ((i=0; i<n; i++));\
    \ do\n        sum=$((sum + abs(${data[i]} - mean)))\n    done\n    echo $((sum\
    \ / n))", "    local -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n    local\
    \ abs_dev=0\n    local abs_dev_sum=0\n    local mad=0\n    local i=0\n\n    for\
    \ i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n \
    \   mean=$(echo \"$sum / ${#arr[@]}\" | bc -l)\n\n    for i in \"${arr[@]}\";\
    \ do\n        abs_dev=$(echo \"scale=2; $i - $mean\" | bc -l)\n        abs_dev_sum=$(echo\
    \ \"$abs_dev_sum + $abs_dev\" | bc)\n    done\n    mad=$(echo \"$abs_dev_sum /\
    \ ${#arr[@]}\" | bc -l)\n\n    echo \"$mad\"", "    local -a x\n    local -i i\n\
    \    local -i n\n    local -i sum\n    local -i mean\n    local -i mad\n    local\
    \ -i diff\n    x=($1)\n    n=${#x[@]}\n    sum=0\n    for ((i=0; i<n; i++)); do\n\
    \        sum=$((sum + x[i]))\n    done\n    mean=$((sum / n))\n    mad=0\n   \
    \ for ((i=0; i<n; i++)); do\n        diff=$((x[i] - mean))\n        if [[ $diff\
    \ -lt 0 ]]; then\n            diff=$((-diff))\n        fi\n        mad=$((mad\
    \ + diff))\n    done\n    echo $((mad / n))", "    local -a x=($1)\n    local\
    \ x_mean=$(mean ${x[@]})\n    local -a x_deviations=()\n    for i in ${x[@]};\
    \ do\n        x_deviations+=($(echo \"$i - $x_mean\" | bc -l))\n    done\n   \
    \ local -a x_abs_deviations=()\n    for i in ${x_deviations[@]}; do\n        x_abs_deviations+=($(echo\
    \ \"if ($i < 0) $i * -1 else $i\" | bc -l))\n    done\n    mean ${x_abs_deviations[@]}",
  "    local -a arr=($1)\n    local -i i\n    local -i len=${#arr[@]}\n    local -i\
    \ sum=0\n    local -i mean=0\n    local -i abs_dev=0\n    local -i abs_dev_sum=0\n\
    \    local -i mad=0\n\n    for ((i=0; i<len; i++)); do\n        sum=$((sum + arr[i]))\n\
    \    done\n    mean=$((sum / len))\n\n    for ((i=0; i<len; i++)); do\n      \
    \  abs_dev=$((arr[i] - mean))\n        abs_dev_sum=$((abs_dev_sum + abs_dev))\n\
    \    done\n    mad=$((abs_dev_sum / len))\n\n    echo $mad", "  local -a x\n \
    \ local -i i\n  local -r n=$(echo \"$1\" | wc -w)\n  local -r x_mean=$(echo \"\
    $1\" | awk '{sum+=$1} END {print sum/NR}')\n  local -r x_sum=$(echo \"$1\" | awk\
    \ '{sum+=$1} END {print sum}')\n  local -r x_sum_abs=$(echo \"$1\" | awk '{sum+=$1}\
    \ END {print sum}')\n  local -r x_sum_abs_dev=$(echo \"$1\" | awk -v x_mean=$x_mean\
    \ '{sum+=$1-x_mean} END {print sum}')\n  local -r x_sum_abs_dev_sq=$(echo \"$1\"\
    \ | awk -v x_mean=$x_mean '{sum+=($1-x_mean)^2} END {print sum}')\n  local -r\
    \ x_sum_abs_dev_sq_mean=$(echo \"$1\" | awk -v x_mean=$x_mean '{sum+=($1-x_mean)^2}\
    \ END {print sum/NR}')\n  local -r x_sum_abs_dev_sq_mean_sqrt=$(echo \"$1\" |\
    \ awk -v x_mean=$x_mean '{sum+=($1-x_mean)^2} END {print sqrt(sum/NR)}')\n  local\
    \ -r x_sum_abs_dev_sq_mean_sqrt_inv=$(echo \"$1\" | awk -v x_mean=$x_mean '{sum+=($1-x_mean)^2}\
    \ END {print 1/sqrt(sum/NR)}')\n  local -r x_sum_abs_dev_sq_mean_sqrt_inv_n=$(echo\
    \ \"$1\" | awk -v x_mean=$x_mean '{sum+=($1-x_mean)^2} END {print NR/sqrt(sum/NR)}')\n\
    \  local -r x_sum_abs_dev_sq_mean_sqrt_inv_n_sqrt=$(echo \"$1\"", "    local numbers=$1\n\
    \    local mean=$(mean $numbers)\n    local absolute_deviations=\"\"\n    for\
    \ number in $numbers; do\n        local absolute_deviation=$(echo \"$number -\
    \ $mean\" | bc -l)\n        absolute_deviations=\"$absolute_deviations $(echo\
    \ $absolute_deviation | sed 's/-//')\"\n    done\n    mean $absolute_deviations",
  "    local -a x\n    local -a x_mean\n    local -a x_abs\n    local -a x_sum\n \
    \   local -a x_sum_abs\n    local -a x_avg\n    local -a x_avg_abs\n    local\
    \ -a x_mad\n    local -a x_mad_sum\n    local -a x_mad_avg\n    local -a x_mad_avg_abs\n\
    \    local -a x_mad_avg_abs_sum\n    local -a x_mad_avg_abs_sum_abs\n    local\
    \ -a x_mad_avg_abs_sum_abs_avg\n    local -a x_mad_avg_abs_sum_abs_avg_abs\n \
    \   local -a x_mad_avg_abs_sum_abs_avg_abs_sum\n    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs\n\
    \    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg\n    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs\n\
    \    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum\n    local -a\
    \ x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum_abs\n    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum_abs_avg\n\
    \    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs\n\
    \    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum\n\
    \    local -a x_mad_avg_abs_sum_abs_avg_abs_sum_abs_avg_abs_sum_abs_avg", "  local\
    \ -a x\n  local -i n\n  local -i i\n  local -i sum\n  local -i mean\n  local -i\
    \ abs_dev\n  local -i abs_dev_sum\n  local -i mad\n  x=($1)\n  n=${#x[@]}\n  sum=0\n\
    \  for ((i=0; i<n; i++)); do\n    sum=$((sum + x[i]))\n  done\n  mean=$((sum /\
    \ n))\n  abs_dev_sum=0\n  for ((i=0; i<n; i++)); do\n    abs_dev=$((x[i] - mean))\n\
    \    abs_dev_sum=$((abs_dev_sum + abs_dev))\n  done\n  mad=$((abs_dev_sum / n))\n\
    \  echo $mad", "    local -a arr=(\"$@\")\n    local sum=0\n    local mean=0\n\
    \    local abs_diff=0\n    local abs_diff_sum=0\n    local mad=0\n    local i=0\n\
    \n    for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + $i\" | bc)\n   \
    \ done\n    mean=$(echo \"scale=2; $sum / ${#arr[@]}\" | bc)\n\n    for i in \"\
    ${arr[@]}\"; do\n        abs_diff=$(echo \"scale=2; $i - $mean\" | bc)\n     \
    \   abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc)\n    done\n    mad=$(echo\
    \ \"scale=2; $abs_diff_sum / ${#arr[@]}\" | bc)\n\n    echo $mad", "    local\
    \ mean=$(mean \"$@\")\n    local sum=0\n    for x in $@; do\n        sum=$(echo\
    \ \"$sum + abs($x - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l",
  "    local -a numbers=($1)\n    local -i i\n    local -i n=${#numbers[@]}\n    local\
    \ -i sum=0\n    local -i mean=0\n    local -i abs_deviation=0\n    local -i sum_abs_deviations=0\n\
    \    local -i mean_abs_deviation=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n\n    for ((i=0; i<n; i++));\
    \ do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation=$((abs_deviation\
    \ < 0 ? -abs_deviation : abs_deviation))\n        sum_abs_deviations=$((sum_abs_deviations\
    \ + abs_deviation))\n    done\n    mean_abs_deviation=$((sum_abs_deviations /\
    \ n))\n\n    echo $mean_abs_deviation", "    local input_list=$1\n    local sum=0\n\
    \    local count=0\n    local mean=0\n    local mad=0\n    local abs_diff=0\n\
    \    local element=0\n\n    for element in $input_list; do\n        sum=$(echo\
    \ \"$sum + $element\" | bc)\n        count=$(echo \"$count + 1\" | bc)\n    done\n\
    \    mean=$(echo \"$sum / $count\" | bc -l)\n\n    for element in $input_list;\
    \ do\n        abs_diff=$(echo \"scale=2; $element - $mean\" | bc -l)\n       \
    \ abs_diff=$(echo \"scale=2; $abs_diff < 0 ? -$abs_diff : $abs_diff\" | bc -l)\n\
    \        mad=$(echo \"$mad + $abs_diff\" | bc -l)\n    done\n    mad=$(echo \"\
    $mad / $count\" | bc -l)\n    echo $mad", "    local mean=$(mean \"$1\")\n   \
    \ local abs_diff_sum=0\n    for x in $1; do\n        abs_diff_sum=$(echo \"$abs_diff_sum\
    \ + abs($x - $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc\
    \ -l", "    local sum=0\n    local mean=0\n    local count=0\n    local abs_dev=0\n\
    \    local abs_dev_sum=0\n    local abs_dev_mean=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev_mean=0\n    local abs_dev_sum=0\n    local abs_dev_count=0\n\
    \    local abs_dev", "    local -a arr\n    local -i i\n    local -i len\n   \
    \ local -i sum\n    local -i mean\n    local -i abs_dev\n    local -i abs_dev_sum\n\
    \    local -i mad\n    arr=($1)\n    len=${#arr[@]}\n    sum=0\n    for ((i=0;\
    \ i<len; i++)); do\n        sum=$((sum + arr[i]))\n    done\n    mean=$((sum /\
    \ len))\n    abs_dev_sum=0\n    for ((i=0; i<len; i++)); do\n        abs_dev=$((arr[i]\
    \ - mean))\n        abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    mad=$((abs_dev_sum\
    \ / len))\n    echo $mad", "  local -a nums=($1)\n  local mean=$(mean ${nums[@]})\n\
    \  local -a abs_diffs=()\n  for num in ${nums[@]}; do\n    abs_diffs+=($(echo\
    \ \"scale=2; ${num} - ${mean}\" | bc | awk '{printf \"%f\", $0}'))\n  done\n \
    \ echo $(mean ${abs_diffs[@]})", "    # Calculate the mean\n    local mean=$(echo\
    \ $1 | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i; print sum/NF}')\n    # Calculate\
    \ the absolute difference between each element and the mean\n    local abs_diff=$(echo\
    \ $1 | awk -v mean=$mean '{sum=0; for (i=1; i<=NF; i++) sum+=abs($i-mean); print\
    \ sum/NF}')\n    echo $abs_diff", "    local -a arr\n    local -i i\n    local\
    \ -i n\n    local -i sum\n    local -i mean\n    local -i diff\n    local -i abs_diff\n\
    \    local -i sum_abs_diff\n    local -i mad\n    arr=($1)\n    n=${#arr[@]}\n\
    \    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + arr[i]))\n   \
    \ done\n    mean=$((sum / n))\n    sum_abs_diff=0\n    for ((i=0; i<n; i++));\
    \ do\n        diff=$((arr[i] - mean))\n        abs_diff=$((diff < 0 ? -diff :\
    \ diff))\n        sum_abs_diff=$((sum_abs_diff + abs_diff))\n    done\n    mad=$((sum_abs_diff\
    \ / n))\n    echo $mad", "  local -a arr=(\"$@\")\n  local -i n=${#arr[@]}\n \
    \ local -i i\n  local -i sum=0\n  local -i mean=0\n  local -i mad=0\n  for ((i=0;\
    \ i<n; i++)); do\n    sum=$((sum + arr[i]))\n  done\n  mean=$((sum / n))\n  for\
    \ ((i=0; i<n; i++)); do\n    mad=$((mad + abs(arr[i] - mean)))\n  done\n  echo\
    \ $((mad / n))", "    local numbers=$1\n    local sum=0\n    local count=0\n \
    \   local mean=0\n    local mad=0\n    local number=0\n    for number in $numbers;\
    \ do\n        sum=$(echo \"$sum + $number\" | bc)\n        count=$(echo \"$count\
    \ + 1\" | bc)\n    done\n    mean=$(echo \"$sum / $count\" | bc -l)\n    sum=0\n\
    \    for number in $numbers; do\n        sum=$(echo \"$sum + abs($number - $mean)\"\
    \ | bc)\n    done\n    mad=$(echo \"$sum / $count\" | bc -l)\n    echo $mad"]
stop_tokens:
- "\n}"

completions:
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n\
  \        fi\n    done\n    echo $max_str"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local max_len=0\n    local max_str=''\n    for str in $1; do\n        if [\
  \ ${#str} -gt $max_len ]; then\n            max_len=${#str}\n            max_str=$str\n\
  \        fi\n    done\n    echo $max_str"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -n -k1,1 | head -n1\n    fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -k1,1 -t' ' | head -n1\n  fi"
- "  local longest=''\n  for word in $1; do\n    if [[ ${#word} -gt ${#longest} ]];\
  \ then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
  \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n      \
  \  fi\n    done\n    echo $longest"
- "    local longest=\n    for word in $1; do\n        if [ -z \"$longest\" ] || [\
  \ ${#word} -gt ${#longest} ]; then\n            longest=$word\n        fi\n    done\n\
  \    echo $longest"
- "  local longest=\n  local current=\n  for current in $1; do\n    if [[ -z $longest\
  \ || ${#current} -gt ${#longest} ]]; then\n      longest=$current\n    fi\n  done\n\
  \  echo $longest"
- "  local longest=\n  local longest_len=0\n  for word in $1; do\n    local len=${#word}\n\
  \    if [[ $len -gt $longest_len ]]; then\n      longest=$word\n      longest_len=$len\n\
  \    fi\n  done\n  echo $longest"
- "    local max_len=0\n    local max_len_str=\n    for str in $1; do\n        if\
  \ [[ ${#str} -gt $max_len ]]; then\n            max_len=${#str}\n            max_len_str=$str\n\
  \        fi\n    done\n    echo $max_len_str"
- "  local longest_so_far=\n  for word in $1; do\n    if [[ -z \"$longest_so_far\"\
  \ || ${#word} -gt ${#longest_so_far} ]]; then\n      longest_so_far=$word\n    fi\n\
  \  done\n  echo \"$longest_so_far\""
- "  if [ $# -eq 0 ]; then\n    echo None\n  else\n    echo \"$*\" | tr ' ' '\\n'\
  \ | sort -r -k1,1 | head -n1\n  fi"
- "  local longest=''\n  for word in $1; do\n    if [[ ${#word} -gt ${#longest} ]];\
  \ then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest=\"\"\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
  \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n      \
  \  fi\n    done\n    echo $longest"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$@\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=\n  for word in $1; do\n    if [[ -z $longest || ${#word} -gt ${#longest}\
  \ ]]; then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "  local longest_word=\n  local longest_length=0\n  for word in $1; do\n    if [[\
  \ ${#word} -gt $longest_length ]]; then\n      longest_word=$word\n      longest_length=${#word}\n\
  \    fi\n  done\n  echo $longest_word"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    local longest_string=\"\
  \"\n    for string in $@; do\n      if [ ${#string} -gt ${#longest_string} ]; then\n\
  \        longest_string=$string\n      fi\n    done\n    echo $longest_string\n\
  \  fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -n -k 1 | head -n 1\n    fi"
- "    local longest_str=\"\"\n    local longest_len=0\n    for str in $1; do\n  \
  \      local len=${#str}\n        if [ $len -gt $longest_len ]; then\n         \
  \   longest_len=$len\n            longest_str=$str\n        fi\n    done\n    echo\
  \ $longest_str"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  local current_string=\"\
  \"\n  local current_string_length=0\n  for current_string in $1; do\n    current_string_length=${#current_string}\n\
  \    if [ $current_string_length -gt $longest_string_length ]; then\n      longest_string=$current_string\n\
  \      longest_string_length=$current_string_length\n    fi\n  done\n  echo $longest_string"
- "    local max=0\n    local max_str=''\n    for str in $1; do\n        if [ ${#str}\
  \ -gt $max ]; then\n            max=${#str}\n            max_str=$str\n        fi\n\
  \    done\n    echo $max_str"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -r -n -k1,1 | head -n 1\n    fi"
- "  local longest=\"\"\n  for word in $1; do\n    if [ ${#word} -gt ${#longest} ];\
  \ then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    [ -z \"$1\" ] && return\n    local longest=''\n    for word in $1; do\n   \
  \     [ ${#word} -gt ${#longest} ] && longest=$word\n    done\n    echo $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -k1,1 -r -n | head -n1\n  fi"
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
  \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n      \
  \  fi\n    done\n    echo $longest"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    local max=0\n    local max_str=\n    for str in $1; do\n        if [ ${#str}\
  \ -gt $max ]; then\n            max=${#str}\n            max_str=$str\n        fi\n\
  \    done\n    echo $max_str"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -k1,1 -t' ' | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 -t' ' | head -n1\n  fi"
- "  local longest_string=\n  local longest_string_length=0\n  for string in $1; do\n\
  \    if [ ${#string} -gt $longest_string_length ]; then\n      longest_string=$string\n\
  \      longest_string_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "    local longest_string=''\n    local longest_string_length=0\n    for string\
  \ in $1; do\n        if [ ${#string} -gt $longest_string_length ]; then\n      \
  \      longest_string=$string\n            longest_string_length=${#string}\n  \
  \      fi\n    done\n    echo $longest_string"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$@\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=\n  local longest_len=0\n  for word in $1; do\n    if [[ ${#word}\
  \ -gt $longest_len ]]; then\n      longest=$word\n      longest_len=${#word}\n \
  \   fi\n  done\n  echo $longest"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  local current_string=\"\
  \"\n  local current_string_length=0\n  for current_string in $1; do\n    current_string_length=${#current_string}\n\
  \    if [[ $current_string_length -gt $longest_string_length ]]; then\n      longest_string=$current_string\n\
  \      longest_string_length=$current_string_length\n    fi\n  done\n  echo $longest_string"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$@\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n\
  \        fi\n    done\n    echo $max_str"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$*\" | tr ' ' '\\\
  n' | sort -r -n -k1,1 | head -n 1\n  fi"
- "  local max_len=0\n  local max_str=\n  for str in $1; do\n    if [ ${#str} -gt\
  \ $max_len ]; then\n      max_len=${#str}\n      max_str=$str\n    fi\n  done\n\
  \  echo $max_str"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  local longest=''\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt\
  \ $len ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo\
  \ $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest_string=\"\"\n    local longest_string_length=0\n    local current_string=\"\
  \"\n    local current_string_length=0\n    for current_string in $1; do\n      \
  \  current_string_length=${#current_string}\n        if [ $current_string_length\
  \ -gt $longest_string_length ]; then\n            longest_string=$current_string\n\
  \            longest_string_length=$current_string_length\n        fi\n    done\n\
  \    echo $longest_string"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    local longest_string\n    longest_string=$(echo \"$1\" | tr ' ' '\\n' | sort\
  \ -r -k1,1 | head -n1)\n    if [ -z \"$longest_string\" ]; then\n        echo \"\
  None\"\n    else\n        echo \"$longest_string\"\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [[ ${#word}\
  \ -gt $len ]]; then\n            longest=$word\n            len=${#word}\n     \
  \   fi\n    done\n    echo $longest"
- "  local longest=''\n  for word in $1; do\n    if [[ ${#word} -gt ${#longest} ]];\
  \ then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    max_length=0\n    longest_string=\"\
  \"\n    for string in $@; do\n      if [ ${#string} -gt $max_length ]; then\n  \
  \      max_length=${#string}\n        longest_string=$string\n      fi\n    done\n\
  \    echo $longest_string\n  fi"
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [[ $len -gt $max_len ]]; then\n            max_len=$len\n          \
  \  max_str=$str\n        fi\n    done\n    echo $max_str"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -n -r -k1,1 | head -n 1\n    fi"
- "    local longest_string=\n    local longest_string_length=0\n    for string in\
  \ $1; do\n        if [ ${#string} -gt $longest_string_length ]; then\n         \
  \   longest_string_length=${#string}\n            longest_string=$string\n     \
  \   fi\n    done\n    echo $longest_string"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  local longest_string=''\n  local longest_string_length=0\n  for string in $1;\
  \ do\n    if [[ ${#string} -gt $longest_string_length ]]; then\n      longest_string=$string\n\
  \      longest_string_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    local longest=\n    for word in $1; do\n        if [ -z \"$longest\" ] || [\
  \ ${#word} -gt ${#longest} ]; then\n            longest=$word\n        fi\n    done\n\
  \    echo $longest"
- "  local longest_string=\n  local longest_string_len=0\n  local string\n  for string\
  \ in $1; do\n    if [[ ${#string} -gt $longest_string_len ]]; then\n      longest_string_len=${#string}\n\
  \      longest_string=$string\n    fi\n  done\n  echo $longest_string"
- "    local longest=''\n    local len=0\n    for word in $1; do\n        if [[ ${#word}\
  \ -gt $len ]]; then\n            longest=$word\n            len=${#word}\n     \
  \   fi\n    done\n    echo $longest"
- "    local longest_string=\"\"\n    local longest_string_length=0\n    local current_string=\"\
  \"\n    local current_string_length=0\n    for current_string in $1; do\n      \
  \  current_string_length=${#current_string}\n        if [ $current_string_length\
  \ -gt $longest_string_length ]; then\n            longest_string=$current_string\n\
  \            longest_string_length=$current_string_length\n        fi\n    done\n\
  \    echo $longest_string"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -n -r -k 1 | head -n 1\n    fi"
- "  local longest_string=\n  local longest_length=0\n  for string in $1; do\n   \
  \ if [[ ${#string} -gt $longest_length ]]; then\n      longest_string=$string\n\
  \      longest_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=''\n  local current=''\n  for current in $1; do\n    if [[ ${#current}\
  \ -gt ${#longest} ]]; then\n      longest=$current\n    fi\n  done\n  echo $longest"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  local longest_string=\"\"\n  local current_string=\"\"\n  for current_string\
  \ in $1; do\n    if [ ${#current_string} -gt ${#longest_string} ]; then\n      longest_string=$current_string\n\
  \    fi\n  done\n  echo $longest_string"
- '  echo "$1" | tr '' '' ''\n'' | sort -r -k1,1 | head -n1'
- "  local longest_string=''\n  local longest_string_length=0\n  for string in $1;\
  \ do\n    local string_length=${#string}\n    if [[ $string_length -gt $longest_string_length\
  \ ]]; then\n      longest_string=$string\n      longest_string_length=$string_length\n\
  \    fi\n  done\n  echo $longest_string"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 -t' ' | head -n1\n  fi"
- "  local longest=\n  local longest_len=0\n  for word in $1; do\n    local len=${#word}\n\
  \    if [[ $len -gt $longest_len ]]; then\n      longest=$word\n      longest_len=$len\n\
  \    fi\n  done\n  echo $longest"
- "    local longest_word\n    for word in $1; do\n        if [ -z \"$longest_word\"\
  \ ] || [ ${#word} -gt ${#longest_word} ]; then\n            longest_word=$word\n\
  \        fi\n    done\n    echo $longest_word"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest_string=\"\"\n    for string in $1; do\n        if [ ${#string}\
  \ -gt ${#longest_string} ]; then\n            longest_string=$string\n        fi\n\
  \    done\n    echo $longest_string"
- "  local longest_string=\"\"\n  local current_string=\"\"\n  for current_string\
  \ in $1; do\n    if [ ${#current_string} -gt ${#longest_string} ]; then\n      longest_string=$current_string\n\
  \    fi\n  done\n  echo $longest_string"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest_word\n  local longest_word_length\n  local word\n  local word_length\n\
  \  for word in $1; do\n    word_length=${#word}\n    if [[ -z $longest_word || $word_length\
  \ -gt $longest_word_length ]]; then\n      longest_word=$word\n      longest_word_length=$word_length\n\
  \    fi\n  done\n  echo $longest_word"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -s | head -n1\n    fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -k1,1 -t' ' | head -n1\n  fi"
- "  local longest=\n  local longest_len=0\n  for word in $1; do\n    local len=${#word}\n\
  \    if [ $len -gt $longest_len ]; then\n      longest=$word\n      longest_len=$len\n\
  \    fi\n  done\n  echo $longest"
- "    if [ -z \"$1\" ]; then\n        echo None\n    else\n        echo \"$1\" |\
  \ tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    local longest=''\n    local current=''\n    for current in $1; do\n       \
  \ if [ ${#current} -gt ${#longest} ]; then\n            longest=$current\n     \
  \   fi\n    done\n    echo $longest"
- "    local longest=''\n    for word in $1; do\n        if [[ ${#word} -gt ${#longest}\
  \ ]]; then\n            longest=$word\n        fi\n    done\n    echo $longest"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n\
  \        fi\n    done\n    echo $max_str"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    local longest=\n    local word=\n    for word in $1; do\n        if [[ -z $longest\
  \ || ${#word} -gt ${#longest} ]]; then\n            longest=$word\n        fi\n\
  \    done\n    echo $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$*\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -n -k1,1 | head -n1\n    fi"
- "  local longest=\n  for word in $1; do\n    if [ -z \"$longest\" ] || [ ${#word}\
  \ -gt ${#longest} ]; then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "    local max_length=0\n    local longest_word=''\n    for word in $1; do\n   \
  \     if [[ ${#word} -gt $max_length ]]; then\n            max_length=${#word}\n\
  \            longest_word=$word\n        fi\n    done\n    echo $longest_word"
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [[ ${#word}\
  \ -gt $len ]]; then\n            longest=$word\n            len=${#word}\n     \
  \   fi\n    done\n    echo $longest"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  local current_string=\"\
  \"\n  local current_string_length=0\n  for current_string in $1; do\n    current_string_length=${#current_string}\n\
  \    if [[ $current_string_length -gt $longest_string_length ]]; then\n      longest_string=$current_string\n\
  \      longest_string_length=$current_string_length\n    fi\n  done\n  echo $longest_string"
- "  local max=0\n  local max_str=''\n  for str in $1; do\n    if [[ ${#str} -gt $max\
  \ ]]; then\n      max=${#str}\n      max_str=$str\n    fi\n  done\n  echo $max_str"
- "    local longest=\n    local longest_len=0\n    local word\n    for word in $1;\
  \ do\n        local len=${#word}\n        if [ $len -gt $longest_len ]; then\n \
  \           longest=$word\n            longest_len=$len\n        fi\n    done\n\
  \    echo $longest"
- "  local longest_string=''\n  local longest_string_length=0\n  for string in $1;\
  \ do\n    if [ ${#string} -gt $longest_string_length ]; then\n      longest_string=$string\n\
  \      longest_string_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest_string\n  local longest_length=0\n  for string in $1; do\n    local\
  \ length=${#string}\n    if [[ $length -gt $longest_length ]]; then\n      longest_length=$length\n\
  \      longest_string=$string\n    fi\n  done\n  echo $longest_string"
- "    local longest_string=\"\"\n    local longest_string_length=0\n    for i in\
  \ $1; do\n        if [ ${#i} -gt $longest_string_length ]; then\n            longest_string_length=${#i}\n\
  \            longest_string=$i\n        fi\n    done\n    echo $longest_string"
- "    local list=$1\n    local longest=\n    local longest_len=0\n    for word in\
  \ $list; do\n        local len=${#word}\n        if [ $len -gt $longest_len ]; then\n\
  \            longest=$word\n            longest_len=$len\n        fi\n    done\n\
  \    echo $longest"
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [[ $len -gt $max_len ]]; then\n            max_len=$len\n          \
  \  max_str=$str\n        fi\n    done\n    echo $max_str"
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n\
  \        fi\n    done\n    echo $max_str"
- "    local longest_string=\n    local longest_length=0\n    for word in $1; do\n\
  \        local length=${#word}\n        if [[ $length -gt $longest_length ]]; then\n\
  \            longest_length=$length\n            longest_string=$word\n        fi\n\
  \    done\n    echo $longest_string"
- "    local longest_string=\"\"\n    for string in $1; do\n        if [[ ${#string}\
  \ -gt ${#longest_string} ]]; then\n            longest_string=$string\n        fi\n\
  \    done\n    echo $longest_string"
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
  \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n      \
  \  fi\n    done\n    echo $longest"
- "    local longest_string=\"\"\n    local longest_string_length=0\n    local current_string=\"\
  \"\n    local current_string_length=0\n    for current_string in $1; do\n      \
  \  current_string_length=${#current_string}\n        if [[ $current_string_length\
  \ -gt $longest_string_length ]]; then\n            longest_string=$current_string\n\
  \            longest_string_length=$current_string_length\n        fi\n    done\n\
  \    if [[ $longest_string_length -gt 0 ]]; then\n        echo $longest_string\n\
  \    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=\n  local str\n  for str in $1; do\n    if [[ -z $longest || ${#str}\
  \ -gt ${#longest} ]]; then\n      longest=$str\n    fi\n  done\n  echo $longest"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -t ' ' -k1,1 -r | head -n 1\n  fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    local longest_str=\"\"\n\
  \    local longest_len=0\n    for str in $@; do\n      if [ ${#str} -gt $longest_len\
  \ ]; then\n        longest_str=$str\n        longest_len=${#str}\n      fi\n   \
  \ done\n    echo $longest_str\n  fi"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$*\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  local longest_string\n  local longest_length=0\n  for string in $1; do\n    if\
  \ [[ ${#string} -gt $longest_length ]]; then\n      longest_string=$string\n   \
  \   longest_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local max_len=0\n  local max_str=''\n  for str in $1; do\n    local len=${#str}\n\
  \    if [[ $len -gt $max_len ]]; then\n      max_len=$len\n      max_str=$str\n\
  \    fi\n  done\n  echo $max_str"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  for string in $1;\
  \ do\n    if [[ ${#string} -gt $longest_string_length ]]; then\n      longest_string=$string\n\
  \      longest_string_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "  local longest=\"\"\n  for word in $1; do\n    if [[ ${#word} -gt ${#longest}\
  \ ]]; then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "  local longest_string\n  longest_string=$(echo \"$1\" | tr ' ' '\\n' | sort -r\
  \ -k1,1 | head -n1)\n  echo \"$longest_string\""
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
  \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n      \
  \  fi\n    done\n    echo $longest"
- "  local longest_str=''\n  local longest_len=0\n  local str\n  for str in $1; do\n\
  \    local len=${#str}\n    if [[ $len -gt $longest_len ]]; then\n      longest_str=$str\n\
  \      longest_len=$len\n    fi\n  done\n  echo $longest_str"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    local longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
  \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n      \
  \  fi\n    done\n    echo $longest"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [ ${#word} -gt $len\
  \ ]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  local longest=\"\"\n  local len=0\n  for word in $1; do\n    if [ ${#word} -gt\
  \ $len ]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo\
  \ $longest"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$@\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  local longest=\n  for word in $1; do\n    if [[ -z $longest || ${#word} -gt ${#longest}\
  \ ]]; then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$*\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest=\n    local longest_len=0\n    for word in $1; do\n        local\
  \ len=${#word}\n        if [[ $len -gt $longest_len ]]; then\n            longest=$word\n\
  \            longest_len=$len\n        fi\n    done\n    echo $longest"
- "  local longest=\n  local longest_len=0\n  for word in $1; do\n    local len=${#word}\n\
  \    if [[ $len -gt $longest_len ]]; then\n      longest=$word\n      longest_len=$len\n\
  \    fi\n  done\n  echo $longest"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    local longest_string=\"\"\n    local longest_length=0\n    for word in $1;\
  \ do\n        if [ ${#word} -gt $longest_length ]; then\n            longest_string=$word\n\
  \            longest_length=${#word}\n        fi\n    done\n    echo $longest_string"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$*\" | tr ' ' '\\\
  n' | sort -r -k1,1 -k2,2n | head -n1\n  fi"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  for string in $1;\
  \ do\n    if [ ${#string} -gt $longest_string_length ]; then\n      longest_string=$string\n\
  \      longest_string_length=${#string}\n    fi\n  done\n  echo $longest_string"
- "  local longest_string=\"\"\n  local current_string=\"\"\n  for current_string\
  \ in $1; do\n    if [ ${#current_string} -gt ${#longest_string} ]; then\n      longest_string=$current_string\n\
  \    fi\n  done\n  echo $longest_string"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  local longest=\"\"\n  for word in $1; do\n    if [[ ${#word} -gt ${#longest}\
  \ ]]; then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest_string=\n    local longest_string_length=0\n    for string in\
  \ $1; do\n        if [[ ${#string} -gt $longest_string_length ]]; then\n       \
  \     longest_string_length=${#string}\n            longest_string=$string\n   \
  \     fi\n    done\n    echo $longest_string"
- "    local longest_string=\n    local longest_string_length=0\n    for string in\
  \ $1; do\n        local string_length=${#string}\n        if [[ $string_length -gt\
  \ $longest_string_length ]]; then\n            longest_string=$string\n        \
  \    longest_string_length=$string_length\n        fi\n    done\n    echo $longest_string"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -k1,1 | head -n1\n  fi"
- "    local longest_string=\"\"\n    local longest_string_length=0\n    for string\
  \ in $1; do\n        if [[ ${#string} -gt $longest_string_length ]]; then\n    \
  \        longest_string=$string\n            longest_string_length=${#string}\n\
  \        fi\n    done\n    echo $longest_string"
- "  local longest_string=\"\"\n  local longest_length=0\n  for string in $1; do\n\
  \    local length=${#string}\n    if [[ $length -gt $longest_length ]]; then\n \
  \     longest_length=$length\n      longest_string=$string\n    fi\n  done\n  echo\
  \ $longest_string"
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "    local longest_string=\n    local longest_length=0\n    for string in $1; do\n\
  \        local length=${#string}\n        if [[ $length -gt $longest_length ]];\
  \ then\n            longest_length=$length\n            longest_string=$string\n\
  \        fi\n    done\n    echo $longest_string"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [ ${#word} -gt $len\
  \ ]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "    if [ -z \"$1\" ]; then\n        echo None\n    else\n        echo \"$1\" |\
  \ tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -n -k1,1 | head -n1\n  fi"
- "  local longest=\n  local str\n  for str in $1; do\n    if [ -z \"$longest\" ]\
  \ || [ ${#str} -gt ${#longest} ]; then\n      longest=\"$str\"\n    fi\n  done\n\
  \  echo \"$longest\""
- "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  for string in $1;\
  \ do\n    local string_length=${#string}\n    if [[ $string_length -gt $longest_string_length\
  \ ]]; then\n      longest_string_length=$string_length\n      longest_string=$string\n\
  \    fi\n  done\n  echo $longest_string"
- "    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$@\"\
  \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  local longest=\n  local len=0\n  for word in $1; do\n    if [[ ${#word} -gt $len\
  \ ]]; then\n      longest=$word\n      len=${#word}\n    fi\n  done\n  echo $longest"
- "  local longest=\"\"\n  for word in $1; do\n    if [[ ${#word} -gt ${#longest}\
  \ ]]; then\n      longest=$word\n    fi\n  done\n  echo $longest"
- "    local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
  \        if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n\
  \        fi\n    done\n    echo $max_str"
- "  local longest=\"\"\n  local current=\"\"\n  for current in $1; do\n    if [[\
  \ ${#current} -gt ${#longest} ]]; then\n      longest=$current\n    fi\n  done\n\
  \  echo $longest"
- "  if [ $# -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$@\" | tr ' ' '\\\
  n' | sort -r -n -k1,1 | head -n 1\n  fi"
- "    local longest_string=\n    local longest_length=0\n    for string in $1; do\n\
  \        local length=${#string}\n        if [[ $length -gt $longest_length ]];\
  \ then\n            longest_length=$length\n            longest_string=$string\n\
  \        fi\n    done\n    echo $longest_string"
- "  local max_len=0\n  local max_str=\n  for str in $1; do\n    if [ ${#str} -gt\
  \ $max_len ]; then\n      max_len=${#str}\n      max_str=$str\n    fi\n  done\n\
  \  echo $max_str"
- "  local longest_string=\"\"\n  for string in $1; do\n    if [ ${#string} -gt ${#longest_string}\
  \ ]; then\n      longest_string=$string\n    fi\n  done\n  echo $longest_string"
- "  local longest_string=\"\"\n  local current_string=\"\"\n  for current_string\
  \ in $1; do\n    if [[ -z \"$longest_string\" ]]; then\n      longest_string=\"\
  $current_string\"\n    else\n      if [[ ${#current_string} -gt ${#longest_string}\
  \ ]]; then\n        longest_string=\"$current_string\"\n      fi\n    fi\n  done\n\
  \  echo \"$longest_string\""
- "    local longest_str\n    local longest_len=0\n    for str in $1; do\n       \
  \ if [ ${#str} -gt $longest_len ]; then\n            longest_str=$str\n        \
  \    longest_len=${#str}\n        fi\n    done\n    echo $longest_str"
- "  local longest_string=\"\"\n  local longest_string_length=0\n  local current_string=\"\
  \"\n  local current_string_length=0\n  for current_string in $1; do\n    current_string_length=${#current_string}\n\
  \    if [[ $current_string_length -gt $longest_string_length ]]; then\n      longest_string=$current_string\n\
  \      longest_string_length=$current_string_length\n    fi\n  done\n  echo $longest_string"
- "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
  n' | sort -r -n -k1,1 | head -n1\n  fi"
language: sh
name: HumanEval_12_longest
prompt: '#!/bin/bash

  # Out of list of strings, return the longest one. Return the first one in case of
  multiple

  # strings of the same length. Return None in case the input list is empty.

  # >>> longest([])

  # >>> longest([''a'', ''b'', ''c''])

  # ''a''

  # >>> longest([''a'', ''bb'', ''ccc''])

  # ''ccc''

  #

  # $1 is a space-separated list

  longest() {

  '
stop_tokens:
- '

  }'
tests: "}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n  \
  \  [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
